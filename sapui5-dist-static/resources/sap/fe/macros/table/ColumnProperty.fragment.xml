<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
	xmlns:mdcTable="sap.ui.mdc.table"
	xmlns:core="sap.ui.core"
	xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	template:require="{
		macroLibrary: 'sap/fe/macros/macroLibrary',
		MODEL: 'sap/ui/model/odata/v4/AnnotationHelper',
		TABLE: 'sap/fe/macros/table/TableHelper',
		FIELD: 'sap/fe/macros/field/FieldHelper',
		ID: 'sap/fe/core/helpers/StableIdHelper'
	}"
>
	<!-- TODO: 1:1 navigations -->
	<!-- for header label, fall-back to property name -->

	<template:if test="{dataField>@com.sap.vocabularies.UI.v1.DataFieldDefault}">
		<template:then>
			<template:with path="dataField>@com.sap.vocabularies.UI.v1.DataFieldDefault" var="dataField">
				<!-- There is a default data field therefore we jump to it and run the same logic again -->
				<core:Fragment fragmentName="sap.fe.macros.table.Column" type="XML" />
			</template:with>
		</template:then>
		<template:else>
			<mdcTable:Column
				unittest:id="MDCTableColumnProperty"
				id="{= ${this>id} ? ID.generate([${this>id}, 'C', ${this>navigationPropertyPath} || ${dataField>@sapui.name}]) : undefined }"
				width="{= TABLE.getColumnWidth(${column>width},${dataField>Value/$Path@},${dataField>$Type},${dataField>Value/$Path/@@FIELD.fieldControl},(${collection>@com.sap.vocabularies.Common.v1.DraftRoot}
				|| ${collection>@com.sap.vocabularies.Common.v1.DraftNode}), ${dataField>Value/$Path/$Type}, ${dataField>@@TABLE.getValueOnRatingField}, ${dataField>}, ${dataField>@@TABLE.getTextOnActionField}) }"
				header="{= ${dataField>@@MODEL.label} || ${dataField>@com.sap.vocabularies.Common.v1.Label} || ${dataField>@sapui.name} }"
				dataProperty="{column>name}"
				hAlign="{= FIELD.getPropertyAlignment(${dataField>$Type}) }"
				headerVisible="{= TABLE.setHeaderLabelVisibility( ${dataField>}, ${dataField>Target/$AnnotationPath/Data}) }"
				minWidth="{= TABLE.getColumnMinWidth(${dataField>Value/$Path@}, ${dataField>Value/$Path/$Type}, ${dataField>Value/$Path/$MaxLength}, ${dataField>$Type},${dataField>Value/$Path/@@FIELD.fieldControl}) }"
			>

				<core:Fragment fragmentName="sap.fe.macros.table.ColumnContent" type="XML" />

			</mdcTable:Column>
		</template:else>
	</template:if>
</core:FragmentDefinition>
