<core:FragmentDefinition
	xmlns="sap.suite.ui.microchart"
	xmlns:core="sap.ui.core"
	xmlns:oDataV4MicroChart="sap.fe.macros.microchart"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
	template:require="{
		MODEL: 'sap/ui/model/odata/v4/AnnotationHelper',
		MICROCHART: 'sap/fe/macros/microchart/MicroChartHelper',
		ID: 'sap/fe/core/helpers/StableIdHelper'
	}"
>
	<!-- MODEL.value is used instead MODEL.format because, MODEL.format adds type as Unit when Currency/Unit annotations exist and the control property expects decimal as type -->
	<template:if test="{= MICROCHART.shouldMicroChartRender('Column', ${DataPoint>}, ${DataPoint>Value/$Path@}, ${chartAnnotation>})}">
		<template:then>
			<template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure">
				<template:with path="chartAnnotation>Dimensions/0/" var="Dimension">
					<oDataV4MicroChart:MicroChartContainer
						unittest:id="ColumnMicroChartContainer"
						id="{= ${this>id} ? ID.generate([${this>id}, 'ColumnMicroChart']) : undefined }"
						renderLabels="{= ${this>renderLabels} !== 'false' ? true : false }"
						chartTitle="{= ${this>title} || ${chartAnnotation>Title}}"
						chartDescription="{= ${this>description} || ${chartAnnotation>Description}}"
						uomPath="{= MICROCHART.getUOMPathForMicrochart(${this>renderLabels}, ${Measure>@}) }"
						measures="{DataPoint>Value/$Path}"
						dimension="{= ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text} ? ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text/$Path} : ${Dimension>$PropertyPath} }"
						measurePrecision="{= ${DataPoint>Value/$Path/$Precision} ? ${DataPoint>Value/$Path/$Precision} : undefined }"
						measureScale="{= MICROCHART.getMeasureScaleForMicroChart(${DataPoint>}) }"
						dimensionPrecision="{= ${Dimension>$PropertyPath/$Precision} ? ${Dimension>$PropertyPath/$Precision} : undefined }"
						dataPointQualifiers="{= MICROCHART.getdataPointQualifiersForMicroChart(${DataPoint>./@sapui.name}) }"
						binding="{= ${this>groupId} ? ('{path:\'\', parameters : { $$groupId: \'' + ${this>groupId} + '\'} }') : undefined }"
						onTitlePressed="{this>onTitlePressed}"
						navigationType="{this>navigationType}"
						chartTitleDescribedBy="{this>chartTitleDescribedBy}"
					>
					<template:if test="{= ${this>renderLabels} !== 'false' ? true : false }">
						<core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" />
					</template:if>
						<ColumnMicroChart
							unittest:id="ColumnMicroChart"
							hideOnNoData="{this>hideOnNoData}"
							columns="{= MICROCHART.getAggregationForMicrochart('Columns', ${collection>}, ${DataPoint>}, ${collection>@sapui.name}, ${Dimension>}, ${Measure>@}) }"
							size="{this>size}"
						>
							<columns>
								<template:if test="{= ${DataPoint>Criticality} || (!${DataPoint>Criticality} &amp;&amp; !${DataPoint>CriticalityCalculation}) }">
									<template:then>
										<ColumnMicroChartData
											unittest:id="ColumnMicroChartData"
											value="{path:'DataPoint>Value@@MODEL.value', type:'sap.ui.model.odata.type.Decimal'}"
											color="{= ${DataPoint>Criticality} ? MICROCHART.getCriticalityBinding(${DataPoint>}) : undefined }"
										/>
									</template:then>
									<template:else>
										<template:with path="DataPoint>CriticalityCalculation" var="CriticalityCalculation">
											<template:with path="DataPoint>CriticalityCalculation/ImprovementDirection/$EnumMember" var="Direction">
												<ColumnMicroChartData
													value="{path:'DataPoint>Value@@MODEL.value', type:'sap.ui.model.odata.type.Decimal'}"
													color="{= MICROCHART.getCriticalityCalculationBinding(${Direction>},
												${DataPoint>Value@@MODEL.value},
												${CriticalityCalculation>DeviationRangeLowValue@@MODEL.format},
												${CriticalityCalculation>ToleranceRangeLowValue@@MODEL.format},
												${CriticalityCalculation>AcceptanceRangeLowValue@@MODEL.format},
												${CriticalityCalculation>AcceptanceRangeHighValue@@MODEL.format},
												${CriticalityCalculation>ToleranceRangeHighValue@@MODEL.format},
												${CriticalityCalculation>DeviationRangeHighValue@@MODEL.format}) }"
												/>
											</template:with>
										</template:with>
									</template:else>
								</template:if>
							</columns>
							<template:if test="{= ${this>renderLabels} !== 'false' }">
								<leftBottomLabel>
									<ColumnMicroChartLabel />
								</leftBottomLabel>
								<leftTopLabel>
									<ColumnMicroChartLabel />
								</leftTopLabel>
								<rightBottomLabel>
									<ColumnMicroChartLabel />
								</rightBottomLabel>
								<rightTopLabel>
									<ColumnMicroChartLabel />
								</rightTopLabel>
							</template:if>
						</ColumnMicroChart>
					</oDataV4MicroChart:MicroChartContainer>
				</template:with>
			</template:with>
		</template:then>
		<template:elseif
			test="{= MICROCHART.logWarning('Column', { DataPoint_Value : ${DataPoint>Value}, Dimension : ${chartAnnotation>Dimensions/0/$PropertyPath} }) }"
		>
		</template:elseif>
	</template:if>
</core:FragmentDefinition>
