<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:core="sap.ui.core"
	xmlns:mdc="sap.ui.mdc"
	xmlns="sap.m"
	xmlns:macro="sap.fe.macros"
	xmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:macroData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	template:require="{
		ID: 'sap/fe/core/helpers/StableIdHelper',
		FB: 'sap/fe/macros/FilterBarHelper',
		COMMON: 'sap/fe/macros/CommonHelper'
	}"
>
	<template:with path="entityType>" helper="COMMON.getEntitySet" var="entitySet">
		<!--
			By using @FE we introduce a dependency between macro and sap fe converters.
			This dependency will be removed after FilterBar refactoring
		-->
		<mdc:FilterBar
			id="{this>id}"
			liveMode="{this>liveMode}"
			delegate="{= '{name:\'sap/fe/macros/FilterBarDelegate\', payload: { entityType: \'/' + ${entityType>@@COMMON.getContextPath} + '\'}}'}"
			variantBackreference="{this>variantBackreference}"
			showAdaptFiltersButton="{this>showAdaptFiltersButton}"
			p13nMode="{this>p13nMode}"
			search="{this>search}"
			filtersChanged="{this>filtersChanged}"
			filterConditions="{this>filterConditions}"
			suspendSelection="{this>suspendSelection}"
			macroData:localId="{this>id}"
			macroData:hideBasicSearch="{this>hideBasicSearch}"
			macroData:showDraftEditState="{this>showDraftEditState}"
			macroData:valueHelpRequestGroupId="{this>valueHelpRequestGroupId}"
			macroData:useSemanticDateRange="{this>useSemanticDateRange}"
			macroData:selectionFields="{= COMMON.stringifyCustomData(${this>selectionFields}) }"
			macroData:entityType="{entityType>@@COMMON.getContextPath}"
		>
			<mdc:dependents>
				<!-- Create the value help dialogs for the FilterBar as dependents of the FilterBar -->
				<template:repeat list="{path:'selectionFields>'}" var="item">
					<template:if test="{= ${item>availability} === 'Default' &amp;&amp; ${item>template} === undefined}">
						<macro:ValueHelp
							idPrefix="{= ID.generate([${this>id}, 'FilterFieldValueHelp']) }"
							conditionModel="$filters"
							property="{item>annotationPath}"
							filterFieldValueHelp="true"
							requestGroupId="{this>valueHelpRequestGroupId}"
							useSemanticDateRange="{this>useSemanticDateRange}"
						/>
					</template:if>
				</template:repeat>
				<!-- TODO filter on properties here and in similar places -->
				<template:if test="{= !${entityType>@com.sap.vocabularies.UI.v1.SelectionFields}  &amp;&amp; (${this>enableFallback} === 'true')}">
					<template:repeat list="{path:'entityType>', filters: {path: '$kind', operator: 'EQ', value1:'Property'}}" var="selectionField">
						<template:with path="selectionField>" var="item">
							<macro:ValueHelp
								idPrefix="{= ID.generate([${this>id}, 'FilterFieldValueHelp']) }"
								conditionModel="$filters"
								property="{item>}"
								filterFieldValueHelp="true"
								requestGroupId="{this>valueHelpRequestGroupId}"
								useSemanticDateRange="{this>useSemanticDateRange}"
							/>
						</template:with>
					</template:repeat>
				</template:if>
			</mdc:dependents>
			<!--
			The search field is enabled when
			* it is not hidden using the property hideBasisSearch
			* there is no SearchRestrictions
			* the SearchRestrictions has Searchable === true
			-->
			<template:if
				test="{= FB.checkIfBasicSearchIsVisible( ${this>hideBasicSearch}, ${entitySet>@Org.OData.Capabilities.V1.SearchRestrictions} )}"
			>
				<mdc:basicSearchField>
					<mdc:FilterField
						placeholder="{this.i18n>M_FILTERBAR_SEARCH}"
						conditions="{$filters>/conditions/$search}"
						dataType="Edm.String"
						maxConditions="1"
					/>
				</mdc:basicSearchField>
			</template:if>
			<mdc:filterItems>
				<template:if test="{this>showDraftEditState}">
					<!-- TODO if I don't put that into the condition model how can it be part of variants? Talk to filter bar team -->
					<core:Fragment fragmentName="sap.fe.macros.filter.DraftEditState" type="XML" />
				</template:if>
				<template:repeat list="{path:'selectionFields>'}" var="item">
					<template:if test="{= ${item>availability} === 'Default'}">
						<template:if test="{= ${item>template} === undefined}">
							<template:then>
								<macro:FilterField
									idPrefix="{= ID.generate([${this>id}, 'FilterField', COMMON.getNavigationPath(${item>annotationPath})]) }"
									vhIdPrefix="{= ID.generate([${this>id}, 'FilterFieldValueHelp', COMMON.getNavigationPath(${item>annotationPath})]) }"
									property="{item>annotationPath}"
									_valueList="{_valueList>}"
									entityType="{entityType>}"
									useSemanticDateRange="{this>useSemanticDateRange}"
									settings="{= COMMON.stringifyCustomData(${item>settings}) }"
								/>
							</template:then>
							<template:else>
								<core:Fragment fragmentName="sap.fe.macros.filter.CustomFilter" type="XML" />
							</template:else>
						</template:if>
					</template:if>
				</template:repeat>
				<template:if test="{= !${entityType>@com.sap.vocabularies.UI.v1.SelectionFields} &amp;&amp; (${this>enableFallback} === 'true') }">
					<template:repeat list="{path:'entityType>', filters: {path: '$kind', operator: 'EQ', value1:'Property'}}" var="selectionField">
						<macro:FilterField
							property="{selectionField>}"
							_valueList="{_valueList>}"
							entityType="{entityType>}"
							idPrefix="{= ID.generate([${this>id}, 'FilterField']) }"
							vhIdPrefix="{= ID.generate([${this>id}, 'FilterFieldValueHelp']) }"
							useSemanticDateRange="{this>useSemanticDateRange}"
							log:comment="Taken from Properties"
						/>
					</template:repeat>
				</template:if>
			</mdc:filterItems>
		</mdc:FilterBar>
	</template:with>
</core:FragmentDefinition>
