sap.ui.define(["sap/fe/core/helpers/BindingExpression", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/UIFormatters"], function (BindingExpression, StableIdHelper, PropertyHelper, DataModelPathHelper, UIFormatters) {
  "use strict";

  var _exports = {};
  var getDisplayMode = UIFormatters.getDisplayMode;
  var checkFilterExpressionRestrictions = DataModelPathHelper.checkFilterExpressionRestrictions;
  var hasDateType = PropertyHelper.hasDateType;
  var isCurrency = PropertyHelper.isCurrency;
  var isUnit = PropertyHelper.isUnit;
  var hasValueHelp = PropertyHelper.hasValueHelp;
  var hasValueListForValidation = PropertyHelper.hasValueListForValidation;
  var hasValueHelpWithFixedValues = PropertyHelper.hasValueHelpWithFixedValues;
  var compileBinding = BindingExpression.compileBinding;

  /**
   * Retrieve the displayMode for the value help.
   * The main rule is that if a property is used in a VHTable then we don't want to display the text arrangement directly.
   *
   * @param propertyPath the current property
   * @returns the target displayMode
   */
  var getValueHelpTableDisplayMode = function (propertyPath) {
    var sDisplayMode = getDisplayMode(propertyPath.targetObject, propertyPath); // if the property is used in a VHTable consider only #TextOnly else show the value

    return sDisplayMode === "Description" ? "Description" : "Value";
  };
  /**
   * Method to return delegate property of Value Help.
   *
   * @function
   * @name getDelegateConfiguration
   * @memberof sap.fe.macros.internal.valuehelp.ValueHelpTemplating.js
   * @param propertyPath property name
   * @param conditionModelName Condition model of the Value Help
   * @returns returns an expression
   */


  _exports.getValueHelpTableDisplayMode = getValueHelpTableDisplayMode;

  var getDelegateConfiguration = function (propertyPath, conditionModelName) {
    var delegateConfiguration = {
      name: "sap/fe/macros/FieldValueHelpDelegate",
      payload: {
        propertyPath: propertyPath,
        conditionModel: conditionModelName
      }
    };
    return compileBinding(delegateConfiguration);
  };
  /**
   * Method to generate the ID for Value Help.
   *
   * @function
   * @name generateID
   * @memberof sap.fe.macros.internal.valuehelp.ValueHelpTemplating.js
   * @param {string} sFlexId Flex ID of the current object
   * @param {string} sIdPrefix Prefix for the ValueHelp ID
   * @param {string} sOriginalPropertyName Name of the property
   * @param {string} sPropertyName Name of the ValueHelp Property
   * @returns {string} returns the Id generated for the ValueHelp
   */


  _exports.getDelegateConfiguration = getDelegateConfiguration;

  var generateID = function (sFlexId, sIdPrefix, sOriginalPropertyName, sPropertyName) {
    if (sFlexId) {
      return sFlexId;
    }

    var sProperty = sPropertyName;

    if (sOriginalPropertyName !== sPropertyName) {
      sProperty = sOriginalPropertyName + "::" + sPropertyName;
    }

    return StableIdHelper.generate([sIdPrefix, sProperty]);
  };
  /**
   * Method to check if a property needs to be validated or not when used in the valuehelp.
   *
   * @function
   * @name requiresValidation
   * @memberof sap.fe.macros.internal.valuehelp.ValueHelpTemplating.js
   * @param  oProperty value help property type annotations
   * @returns returns true if the value help need to be validated
   */


  _exports.generateID = generateID;

  var requiresValidation = function (oProperty) {
    return hasValueHelpWithFixedValues(oProperty) || hasValueListForValidation(oProperty) || hasValueHelp(oProperty) && (isUnit(oProperty) || isCurrency(oProperty));
  };

  _exports.requiresValidation = requiresValidation;

  var isSemanticDateRange = function (oDataModelPath) {
    var targetProperty = oDataModelPath.targetObject;
    var targetRestrictions = checkFilterExpressionRestrictions(oDataModelPath, ["SingleRange"]);
    return hasDateType(targetProperty) && compileBinding(targetRestrictions);
  };

  _exports.isSemanticDateRange = isSemanticDateRange;

  var shouldShowConditionPanel = function (oDataModelPath) {
    return compileBinding(checkFilterExpressionRestrictions(oDataModelPath, ["SingleValue", "MultiValue"])) === "false";
  };

  _exports.shouldShowConditionPanel = shouldShowConditionPanel;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,