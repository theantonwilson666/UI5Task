<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:core="sap.ui.core"
	xmlns="sap.m"
	xmlns:mdc="sap.ui.mdc"
	xmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
	template:require="{
							MODEL: 'sap/ui/model/odata/v4/AnnotationHelper',
							COMMON: 'sap/fe/macros/CommonHelper',
							FIELD: 'sap/fe/macros/field/FieldHelper',
							ID: 'sap/fe/core/helpers/StableIdHelper',
							Property: 'sap/fe/core/templating/PropertyFormatters',
							FilterField: 'sap/fe/macros/filter/FilterFieldTemplating'
						 }"
>
	<template:if test="{property>@@COMMON.isPropertyFilterable}">
		<template:with path="property>" helper="FIELD.valueHelpPropertyForFilterField" var="valueHelpProperty">
			<mdc:FilterField
				unittest:id="UnitTest::FilterField"
				log:sourcePath="{property>@@Property.getPropertyPath}"
				id="{= ID.generate([${this>idPrefix},${property>@@FIELD.propertyName}]) }"
				delegate="{name: 'sap/ui/mdc/odata/v4/FieldBaseDelegate'}"
				label="{= ${property>@com.sap.vocabularies.Common.v1.Label} || ${property>@@FIELD.propertyName} }"
				dataType="{property>$Type}"
				display="{property>@@FilterField.getDisplayProperty}"
				maxConditions="{property>@@FIELD.maxConditions}"
				fieldHelp="{= FIELD.getFieldHelpPropertyForFilterField(${property>$Type},${this>vhIdPrefix},${property>@@FIELD.propertyName},${valueHelpProperty>@@FIELD.propertyName},${property>@com.sap.vocabularies.Common.v1.ValueListWithFixedValues})}"
				conditions="{parts : [{path: 'property>'}, {path: 'entityType>'}], formatter: 'FIELD.getConditionsBinding'}"
				dataTypeConstraints="{property>@@FIELD.constraints}"
				dataTypeFormatOptions="{property>@@FIELD.formatOptions}"
				required="{property>@@FIELD.isRequiredInFilter}"
				editMode="{= ${_valueList>Parameters} ? FIELD.getFieldEditModeInValueHelp(${_valueList>}, ${property>@@FIELD.propertyName}) : undefined}"
				operators="{parts : [{path: 'property>'}, {path: 'this>useSemanticDateRange'}, {path: 'this>settings'}], formatter: 'FIELD.operators'}"
			/>
		</template:with>
	</template:if>
</core:FragmentDefinition>
