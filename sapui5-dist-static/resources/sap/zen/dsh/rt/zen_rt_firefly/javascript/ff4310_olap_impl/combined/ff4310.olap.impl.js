(function(oFF) {
	oFF.QChangedListenerPair = function() {
	};
	oFF.QChangedListenerPair.prototype = new oFF.XObject();
	oFF.QChangedListenerPair.create = function(listener, customIdentifier) {
		var element = new oFF.QChangedListenerPair();
		element.setupExt(listener, customIdentifier);
		return element;
	};
	oFF.QChangedListenerPair.prototype.m_listenerWeakReference = null;
	oFF.QChangedListenerPair.prototype.m_customIdentifier = null;
	oFF.QChangedListenerPair.prototype.setupExt = function(listener,
			customIdentifier) {
		this.m_listenerWeakReference = oFF.XWeakReferenceUtil
				.getWeakRef(listener);
		this.m_customIdentifier = customIdentifier;
	};
	oFF.QChangedListenerPair.prototype.releaseObject = function() {
		this.m_listenerWeakReference = oFF.XObjectExt
				.release(this.m_listenerWeakReference);
		this.m_customIdentifier = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.QChangedListenerPair.prototype.getListener = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_listenerWeakReference);
	};
	oFF.QChangedListenerPair.prototype.hasWeakReference = function() {
		return oFF.notNull(this.m_listenerWeakReference);
	};
	oFF.QChangedListenerPair.prototype.getCustomIdentifier = function() {
		return this.m_customIdentifier;
	};
	oFF.QChangedListenerPair.prototype.setCustomIdentifier = function(
			customIdentifier) {
		this.m_customIdentifier = customIdentifier;
	};
	oFF.QChangedListenerPair.prototype.toString = function() {
		if (oFF.isNull(this.m_listenerWeakReference)) {
			return "[Empty]";
		}
		return this.m_listenerWeakReference.toString();
	};
	oFF.QDeserializeListenerPair = function() {
	};
	oFF.QDeserializeListenerPair.prototype = new oFF.XObject();
	oFF.QDeserializeListenerPair.create = function(listener, customIdentifier) {
		var element = new oFF.QDeserializeListenerPair();
		element.setupExt(listener, customIdentifier);
		return element;
	};
	oFF.QDeserializeListenerPair.prototype.m_listenerWeakReference = null;
	oFF.QDeserializeListenerPair.prototype.m_customIdentifier = null;
	oFF.QDeserializeListenerPair.prototype.setupExt = function(listener,
			customIdentifier) {
		this.m_listenerWeakReference = oFF.XWeakReferenceUtil
				.getWeakRef(listener);
		this.m_customIdentifier = customIdentifier;
	};
	oFF.QDeserializeListenerPair.prototype.releaseObject = function() {
		this.m_listenerWeakReference = oFF.XObjectExt
				.release(this.m_listenerWeakReference);
		this.m_customIdentifier = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.QDeserializeListenerPair.prototype.getListener = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_listenerWeakReference);
	};
	oFF.QDeserializeListenerPair.prototype.hasWeakReference = function() {
		return oFF.notNull(this.m_listenerWeakReference);
	};
	oFF.QDeserializeListenerPair.prototype.getCustomIdentifier = function() {
		return this.m_customIdentifier;
	};
	oFF.QDeserializeListenerPair.prototype.setCustomIdentifier = function(
			customIdentifier) {
		this.m_customIdentifier = customIdentifier;
	};
	oFF.QDeserializeListenerPair.prototype.toString = function() {
		if (oFF.isNull(this.m_listenerWeakReference)) {
			return "[Empty]";
		}
		return this.m_listenerWeakReference.toString();
	};
	oFF.QDimensionReadMode = function() {
	};
	oFF.QDimensionReadMode.prototype = new oFF.XObject();
	oFF.QDimensionReadMode.create = function() {
		var object = new oFF.QDimensionReadMode();
		object.m_supportedReadModes = oFF.XSetOfNameObject.create();
		return object;
	};
	oFF.QDimensionReadMode.prototype.m_supportedReadModes = null;
	oFF.QDimensionReadMode.prototype.m_defaultReadMode = null;
	oFF.QDimensionReadMode.prototype.m_activeReadMode = null;
	oFF.QDimensionReadMode.prototype.m_dimensionName = null;
	oFF.QDimensionReadMode.prototype.copyDimensionReadMode = function(origin) {
		this.m_activeReadMode = origin.m_activeReadMode;
		this.m_defaultReadMode = origin.m_defaultReadMode;
		this.m_supportedReadModes = origin.m_supportedReadModes.createSetCopy();
	};
	oFF.QDimensionReadMode.prototype.setDimensionName = function(dimensionName) {
		this.m_dimensionName = dimensionName;
	};
	oFF.QDimensionReadMode.prototype.releaseObject = function() {
		this.m_supportedReadModes = oFF.XObjectExt
				.release(this.m_supportedReadModes);
		this.m_defaultReadMode = null;
		this.m_activeReadMode = null;
		this.m_dimensionName = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.QDimensionReadMode.prototype.clearReadmode = function() {
		this.m_supportedReadModes.clear();
		this.m_defaultReadMode = null;
		this.m_activeReadMode = null;
	};
	oFF.QDimensionReadMode.prototype.setActiveReadMode = function(
			activeReadMode) {
		var readMode = activeReadMode;
		if (activeReadMode === oFF.QMemberReadMode.DEFAULT_VALUE) {
			readMode = this.m_defaultReadMode;
		}
		this.assertSupportsReadMode(readMode);
		this.m_activeReadMode = readMode;
	};
	oFF.QDimensionReadMode.prototype.getActiveReadMode = function() {
		return this.m_activeReadMode;
	};
	oFF.QDimensionReadMode.prototype.getDefaultReadMode = function() {
		return this.m_defaultReadMode;
	};
	oFF.QDimensionReadMode.prototype.setDefaultReadMode = function(
			defaultReadMode) {
		this.assertSupportsReadMode(defaultReadMode);
		this.m_defaultReadMode = defaultReadMode;
	};
	oFF.QDimensionReadMode.prototype.assertSupportsReadMode = function(readMode) {
		if (oFF.notNull(readMode)
				&& !this.m_supportedReadModes.contains(readMode)) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate5("Unsupported read mode '", readMode
									.getName(), "' for dimension '",
									this.m_dimensionName, "'"));
		}
	};
	oFF.QDimensionReadMode.prototype.determineBestReadMode = function(mode) {
		var matchingMode = this.determineBestReadModeSingleSide(mode);
		if (oFF.isNull(matchingMode)) {
			matchingMode = this.determineBestReadModeSingleSide(mode
					.getSibling());
		}
		return oFF.isNull(matchingMode) ? oFF.QMemberReadMode.DEFAULT_VALUE
				: matchingMode;
	};
	oFF.QDimensionReadMode.prototype.determineBestReadModeSingleSide = function(
			mode) {
		var current = mode;
		while (oFF.notNull(current)) {
			if (this.m_supportedReadModes.contains(current)) {
				return current;
			}
			current = current.getParent();
		}
		if (oFF.notNull(mode)) {
			current = mode.getChild();
			while (oFF.notNull(current)) {
				if (this.m_supportedReadModes.contains(current)) {
					return current;
				}
				current = current.getChild();
			}
		}
		return null;
	};
	oFF.QDimensionReadMode.prototype.getSupportedReadModes = function() {
		return this.m_supportedReadModes;
	};
	oFF.QDimensionReadMode.prototype.addSupportedReadMode = function(readMode) {
		this.m_supportedReadModes.add(readMode);
	};
	oFF.CommandSpaceFactory = {
		s_factory : null,
		setInstance : function(factory) {
			oFF.CommandSpaceFactory.s_factory = factory;
		},
		createCommandSpaceWithSelection : function(application,
				sigSelExpression) {
			return oFF.CommandSpaceFactory.s_factory
					.createCommandSpaceWithSelection(application,
							sigSelExpression);
		},
		createCommandSpaceWithElement : function(application, modelComponent) {
			return oFF.CommandSpaceFactory.s_factory
					.createCommandSpaceWithElement(application, modelComponent);
		}
	};
	oFF.CommandSpaceFactoryDummyImpl = function() {
	};
	oFF.CommandSpaceFactoryDummyImpl.prototype = new oFF.XObject();
	oFF.CommandSpaceFactoryDummyImpl.create = function() {
		return new oFF.CommandSpaceFactoryDummyImpl();
	};
	oFF.CommandSpaceFactoryDummyImpl.prototype.createCommandSpaceWithSelection = function(
			application, sigSelExpression) {
		return null;
	};
	oFF.CommandSpaceFactoryDummyImpl.prototype.createCommandSpaceWithElement = function(
			application, modelComponent) {
		return null;
	};
	oFF.RemoteBlendingCacheEntry = function() {
	};
	oFF.RemoteBlendingCacheEntry.prototype = new oFF.XObject();
	oFF.RemoteBlendingCacheEntry.create = function(view, cube) {
		var entry = new oFF.RemoteBlendingCacheEntry();
		entry.m_view = view;
		entry.m_cube = cube;
		return entry;
	};
	oFF.RemoteBlendingCacheEntry.prototype.m_view = null;
	oFF.RemoteBlendingCacheEntry.prototype.m_cube = null;
	oFF.RemoteBlendingCacheEntry.prototype.releaseObject = function() {
		oFF.XObject.prototype.releaseObject.call(this);
		this.m_view = null;
		this.m_cube = null;
	};
	oFF.RemoteBlendingCacheEntry.prototype.getView = function() {
		return this.m_view;
	};
	oFF.RemoteBlendingCacheEntry.prototype.getCube = function() {
		return this.m_cube;
	};
	oFF.QMetadata = function() {
	};
	oFF.QMetadata.prototype = new oFF.XObject();
	oFF.QMetadata.prototype.m_cacheKey = null;
	oFF.QMetadata.prototype.setupMetadata = function(systemName, queryName,
			fieldName, providerType) {
		this.m_cacheKey = oFF.XStringUtils.concatenate5(systemName, "~",
				queryName, "~", fieldName);
		if (oFF.notNull(providerType)) {
			this.m_cacheKey = oFF.XStringUtils.concatenate3(this.m_cacheKey,
					"~", providerType);
		}
	};
	oFF.QMetadata.prototype.getCacheKey = function() {
		return this.m_cacheKey;
	};
	oFF.QMetadata.prototype.releaseObject = function() {
		this.m_cacheKey = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.XFieldNamePair = function() {
	};
	oFF.XFieldNamePair.prototype = new oFF.XObject();
	oFF.XFieldNamePair.create = function(localeFieldName, referencedFieldName) {
		var fieldNamePair = new oFF.XFieldNamePair();
		fieldNamePair.m_localeFieldName = localeFieldName;
		fieldNamePair.m_referencedFieldName = referencedFieldName;
		return fieldNamePair;
	};
	oFF.XFieldNamePair.prototype.m_localeFieldName = null;
	oFF.XFieldNamePair.prototype.m_referencedFieldName = null;
	oFF.XFieldNamePair.prototype.releaseObject = function() {
		this.m_localeFieldName = null;
		this.m_referencedFieldName = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.XFieldNamePair.prototype.setLocaleFieldName = function(localeFieldName) {
		this.m_localeFieldName = localeFieldName;
	};
	oFF.XFieldNamePair.prototype.getLocaleFieldName = function() {
		return this.m_localeFieldName;
	};
	oFF.XFieldNamePair.prototype.setReferencedFieldName = function(
			referencedFieldName) {
		this.m_referencedFieldName = referencedFieldName;
	};
	oFF.XFieldNamePair.prototype.getReferencedFieldName = function() {
		return this.m_referencedFieldName;
	};
	oFF.QFilterUtil = {
		convertComplexFilterToCartesian : function(complexSelection) {
			var selectionComponentType;
			if (oFF.isNull(complexSelection)) {
				return null;
			}
			selectionComponentType = complexSelection.getComponentType();
			if (selectionComponentType === oFF.FilterComponentType.AND) {
				return oFF.QFilterUtil.convertAnd(complexSelection);
			} else {
				if (selectionComponentType === oFF.FilterComponentType.OR) {
					return oFF.QFilterUtil.convertOr(complexSelection);
				} else {
					if (selectionComponentType === oFF.FilterComponentType.CARTESIAN_LIST) {
						return oFF.QFilterUtil
								.wrapCartesianList(complexSelection);
					} else {
						if (selectionComponentType === oFF.FilterComponentType.OPERATION) {
							return oFF.QFilterUtil
									.wrapFilterOperation(complexSelection);
						}
					}
				}
			}
			return null;
		},
		wrapFilterOperation : function(complexSelection) {
			var operation = complexSelection;
			var cartesianProduct;
			if (operation.getComparisonOperator().isTypeOf(
					oFF.SpatialComparisonOperator._SPATIAL)) {
				return null;
			}
			cartesianProduct = oFF.QFactory
					.newFilterCartesianProduct(complexSelection
							.getFilterExpression());
			oFF.QFilterUtil.addOperationToCartesian(cartesianProduct,
					operation, false);
			return cartesianProduct;
		},
		wrapCartesianList : function(complexSelection) {
			var cartesianProduct = oFF.QFactory
					.newFilterCartesianProduct(complexSelection
							.getFilterExpression());
			var signedSetComplex = complexSelection;
			cartesianProduct.add(signedSetComplex);
			return cartesianProduct;
		},
		convertAnd : function(complexSelection) {
			var cartesianProduct = oFF.QFactory
					.newFilterCartesianProduct(complexSelection
							.getFilterExpression());
			var andFilters = complexSelection;
			var sizeAnd = andFilters.size();
			var idxAnd;
			var andFilter;
			var typeAnd;
			var operation;
			for (idxAnd = 0; idxAnd < sizeAnd; idxAnd++) {
				andFilter = andFilters.get(idxAnd);
				typeAnd = andFilter.getComponentType();
				if (typeAnd === oFF.FilterComponentType.CARTESIAN_LIST) {
					cartesianProduct.add(andFilter);
				} else {
					if (typeAnd === oFF.FilterComponentType.OPERATION) {
						operation = andFilter;
						if (operation.getComparisonOperator().isTypeOf(
								oFF.SpatialComparisonOperator._SPATIAL)) {
							return null;
						}
						if (!oFF.QFilterUtil.addOperationToCartesian(
								cartesianProduct, operation, true)) {
							return null;
						}
					} else {
						cartesianProduct = null;
						break;
					}
				}
			}
			return cartesianProduct;
		},
		convertOr : function(complexSelection) {
			var cartesianProduct = oFF.QFactory
					.newFilterCartesianProduct(complexSelection
							.getFilterExpression());
			var orFilters = complexSelection;
			var sizeOr = orFilters.size();
			var idxOr;
			var orFilter;
			var typeOr;
			var newCartesianList;
			var oldCartesianList;
			var idxNewList;
			for (idxOr = 0; idxOr < sizeOr; idxOr++) {
				orFilter = orFilters.get(idxOr);
				typeOr = orFilter.getComponentType();
				if (typeOr === oFF.FilterComponentType.CARTESIAN_LIST) {
					newCartesianList = orFilter;
					oldCartesianList = cartesianProduct
							.getCartesianList(newCartesianList.getDimension());
					if (oFF.isNull(oldCartesianList)) {
						cartesianProduct.add(newCartesianList);
					} else {
						for (idxNewList = 0; idxNewList < newCartesianList
								.size(); idxNewList++) {
							oldCartesianList.add(newCartesianList
									.get(idxNewList));
						}
					}
				} else {
					cartesianProduct = null;
					break;
				}
			}
			return cartesianProduct;
		},
		addOperationToCartesian : function(cartesianProduct, operation,
				checkExistance) {
			var cartesianElement = oFF.QFactory
					.newFilterCartesianElement(cartesianProduct);
			var field;
			var cartesianList;
			cartesianElement.getLow().setValue(operation.getLow().getValue());
			if (operation.getHigh() !== null) {
				cartesianElement.getHigh().setValue(
						operation.getHigh().getValue());
			}
			if (operation.getThird() !== null) {
				cartesianElement.getThird().setValue(
						operation.getThird().getValue());
			}
			cartesianElement.setComparisonOperator(operation
					.getComparisonOperator());
			field = operation.getField();
			cartesianList = cartesianProduct.getCartesianListByField(field);
			if (oFF.isNull(cartesianList)) {
				cartesianList = oFF.QFactory.newFilterCartesianListWithField(
						cartesianProduct.getFilterExpression(), field);
				cartesianProduct.add(cartesianList);
			} else {
				if (checkExistance && cartesianList.hasElements()) {
					return false;
				}
			}
			cartesianList.add(cartesianElement);
			return true;
		}
	};
	oFF.QMemberNavigation = function() {
	};
	oFF.QMemberNavigation.prototype = new oFF.XObject();
	oFF.QMemberNavigation.prototype.m_memberFunction = null;
	oFF.QMemberNavigation.prototype.m_parameters = null;
	oFF.QMemberNavigation.prototype.m_navigations = null;
	oFF.QMemberNavigation.prototype.releaseObject = function() {
		this.m_parameters = oFF.XObjectExt.release(this.m_parameters);
		this.m_navigations = oFF.XObjectExt.release(this.m_navigations);
		this.m_memberFunction = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.QMemberNavigation.prototype.getMemberFunction = function() {
		return this.m_memberFunction;
	};
	oFF.QMemberNavigation.prototype.setMemberFunction = function(memberfunction) {
		this.m_memberFunction = memberfunction;
	};
	oFF.QMemberNavigation.prototype.getParameters = function() {
		return this.m_parameters;
	};
	oFF.QMemberNavigation.prototype.addParameter = function(parameter) {
		if (oFF.isNull(this.m_parameters)) {
			this.m_parameters = oFF.XList.create();
		}
		this.m_parameters.add(parameter);
	};
	oFF.QMemberNavigation.prototype.getNavigations = function() {
		return this.m_navigations;
	};
	oFF.QMemberNavigation.prototype.addNavigation = function(navigation) {
		if (oFF.isNull(this.m_navigations)) {
			this.m_navigations = oFF.XList.create();
		}
		this.m_navigations.add(navigation);
	};
	oFF.QMemberNavigationParameter = function() {
	};
	oFF.QMemberNavigationParameter.prototype = new oFF.XObject();
	oFF.QMemberNavigationParameter.create = function() {
		var parameter = new oFF.QMemberNavigationParameter();
		parameter.m_values = oFF.XHashMapByString.create();
		return parameter;
	};
	oFF.QMemberNavigationParameter.prototype.m_type = null;
	oFF.QMemberNavigationParameter.prototype.m_values = null;
	oFF.QMemberNavigationParameter.prototype.releaseObject = function() {
		this.m_type = null;
		this.m_values = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_values);
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.QMemberNavigationParameter.prototype.getParameterType = function() {
		return this.m_type;
	};
	oFF.QMemberNavigationParameter.prototype.getValue = function() {
		return this.m_values.getByKey(this.m_type);
	};
	oFF.QMemberNavigationParameter.prototype.getValues = function() {
		return this.m_values;
	};
	oFF.QMemberNavigationParameter.prototype.setConstantValue = function(
			constantValue) {
		this.m_type = "Constant";
		this.m_values.put(this.m_type, oFF.XValueAccess
				.createWithValue(constantValue));
	};
	oFF.QMemberNavigationParameter.prototype.setLevelValue = function(
			levelValue) {
		this.m_type = "Level";
		this.m_values.put(this.m_type, oFF.XValueAccess
				.createWithValue(levelValue));
	};
	oFF.QMemberNavigationParameter.prototype.setMemberValue = function(fqnName) {
		this.m_type = "Member";
		this.m_values.put(this.m_type, oFF.XValueAccess
				.createWithValue(oFF.XStringValue.create(fqnName)));
	};
	oFF.QMemberNavigationParameter.prototype.setNoValuesAboveLevel = function(
			level) {
		this.m_type = "NoValuesAboveLevel";
		this.m_values.put(this.m_type, oFF.XValueAccess
				.createWithValue(oFF.XStringValue.create(level)));
	};
	oFF.QMemberNavigationParameter.prototype.setShift = function(levelValue,
			constantValue) {
		this.m_type = "Shift";
		this.m_values
				.put("Level", oFF.XValueAccess.createWithValue(levelValue));
		this.m_values.put("Constant", oFF.XValueAccess
				.createWithValue(constantValue));
	};
	oFF.QMemberNavigationParameter.prototype.setRange = function(levelValue,
			offsetLow, offsetHigh) {
		this.m_type = "Range";
		this.m_values
				.put("Level", oFF.XValueAccess.createWithValue(levelValue));
		this.m_values.put("OffsetLow", oFF.XValueAccess
				.createWithValue(oFF.XIntegerValue.create(offsetLow)));
		this.m_values.put("OffsetHigh", oFF.XValueAccess
				.createWithValue(oFF.XIntegerValue.create(offsetHigh)));
	};
	oFF.HierarchyCatalogLevel = function() {
	};
	oFF.HierarchyCatalogLevel.prototype = new oFF.XObject();
	oFF.HierarchyCatalogLevel.createCatalogLevel = function() {
		return new oFF.HierarchyCatalogLevel();
	};
	oFF.HierarchyCatalogLevel.createCopy = function(item) {
		var copy;
		if (oFF.isNull(item)) {
			return null;
		}
		copy = oFF.HierarchyCatalogLevel.createCatalogLevel();
		copy.setLevel(item.getLevel());
		copy.setLevelName(item.getLevelName());
		copy.setLevelDescription(item.getLevelDescription());
		copy.setLevelUniqueName(item.getLevelUniqueName());
		copy.setLevelDimensionName(item.getLevelDimensionName());
		copy.setLevelType(item.getLevelType());
		return copy;
	};
	oFF.HierarchyCatalogLevel.prototype.m_level = 0;
	oFF.HierarchyCatalogLevel.prototype.m_levelName = null;
	oFF.HierarchyCatalogLevel.prototype.m_levelDescription = null;
	oFF.HierarchyCatalogLevel.prototype.m_levelUniqueName = null;
	oFF.HierarchyCatalogLevel.prototype.m_levelDimensionName = null;
	oFF.HierarchyCatalogLevel.prototype.m_levelType = null;
	oFF.HierarchyCatalogLevel.prototype.setLevel = function(level) {
		this.m_level = level;
	};
	oFF.HierarchyCatalogLevel.prototype.releaseObject = function() {
		this.m_levelName = null;
		this.m_levelDescription = null;
		this.m_levelUniqueName = null;
		this.m_levelDimensionName = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.HierarchyCatalogLevel.prototype.getLevel = function() {
		return this.m_level;
	};
	oFF.HierarchyCatalogLevel.prototype.setLevelName = function(levelName) {
		this.m_levelName = levelName;
	};
	oFF.HierarchyCatalogLevel.prototype.getLevelName = function() {
		return this.m_levelName;
	};
	oFF.HierarchyCatalogLevel.prototype.setLevelDescription = function(
			levelDescription) {
		this.m_levelDescription = levelDescription;
	};
	oFF.HierarchyCatalogLevel.prototype.getLevelDescription = function() {
		return this.m_levelDescription;
	};
	oFF.HierarchyCatalogLevel.prototype.setLevelUniqueName = function(
			levelUniqueName) {
		this.m_levelUniqueName = levelUniqueName;
	};
	oFF.HierarchyCatalogLevel.prototype.getLevelUniqueName = function() {
		return this.m_levelUniqueName;
	};
	oFF.HierarchyCatalogLevel.prototype.setLevelDimensionName = function(
			levelDimensionName) {
		this.m_levelDimensionName = levelDimensionName;
	};
	oFF.HierarchyCatalogLevel.prototype.getLevelDimensionName = function() {
		return this.m_levelDimensionName;
	};
	oFF.HierarchyCatalogLevel.prototype.toString = function() {
		var sb = oFF.XStringBuffer.create();
		sb.append("Level[");
		sb.appendInt(this.m_level);
		sb.append("]");
		sb.append(" Name[");
		sb.append(this.m_levelName);
		sb.append("]");
		sb.append(" Description[");
		sb.append(this.m_levelDescription);
		sb.append("]");
		sb.append(" UniqueName[");
		sb.append(this.m_levelUniqueName);
		sb.append("]");
		sb.append(" DimensionName[");
		sb.append(this.m_levelDimensionName);
		sb.append("]");
		return sb.toString();
	};
	oFF.HierarchyCatalogLevel.prototype.getLevelType = function() {
		return this.m_levelType;
	};
	oFF.HierarchyCatalogLevel.prototype.setLevelType = function(levelType) {
		this.m_levelType = levelType;
	};
	oFF.HierarchyCatalogResult = function() {
	};
	oFF.HierarchyCatalogResult.prototype = new oFF.XObject();
	oFF.HierarchyCatalogResult.create = function(resultSet, dimensionName) {
		var object = new oFF.HierarchyCatalogResult();
		object.setupExt(resultSet, dimensionName);
		return object;
	};
	oFF.HierarchyCatalogResult.createEmpty = function() {
		var object = new oFF.HierarchyCatalogResult();
		object.m_items = oFF.XList.create();
		return object;
	};
	oFF.HierarchyCatalogResult.createFromDimensionMetadata = function(
			hierarchiesList, dimensionName) {
		var catalogResult = new oFF.HierarchyCatalogResult();
		catalogResult.m_items = oFF.XList.create();
		oFF.HierarchyCatalogResult.appendItemsToCatalogResult(catalogResult,
				hierarchiesList, dimensionName);
		return catalogResult;
	};
	oFF.HierarchyCatalogResult.appendItemsToCatalogResult = function(
			catalogResult, hierarchiesList, dimensionName) {
		var len = oFF.PrUtils.getListSize(hierarchiesList, 0);
		var i;
		var hierarchyStructure;
		var item;
		var hierarchyName;
		var hierarchyDescription;
		var version;
		var structure;
		var isModeled;
		var dateTo;
		var dateToString;
		var levels;
		var levelList;
		var lenLevel;
		var levelIndex;
		var levelStructure;
		var catalogLevel;
		var level;
		var levelName;
		var levelCaption;
		var levelUniqueName;
		var levelDimensionName;
		var levelType;
		var restNode;
		var virtualRootNode;
		for (i = 0; i < len; i++) {
			hierarchyStructure = oFF.PrUtils.getStructureElement(
					hierarchiesList, i);
			item = oFF.HierarchyCatalogItem.createCatalogItem();
			item.setDimensionName(dimensionName);
			if (hierarchyStructure.hasStringByKey("Name")) {
				hierarchyName = hierarchyStructure.getStringByKey("Name");
			} else {
				hierarchyName = hierarchyStructure
						.getStringByKey("HierarchyName");
			}
			if (oFF.XStringUtils.isNullOrEmpty(hierarchyName)
					|| catalogResult.containsHierarchy(hierarchyName)) {
				continue;
			}
			item.setHierarchyName(hierarchyName);
			hierarchyDescription = oFF.PrUtils.getStringProperty(
					hierarchyStructure, "Description");
			if (oFF.notNull(hierarchyDescription)) {
				item.setHierarchyLongText(hierarchyDescription.getString());
			}
			version = oFF.PrUtils.getStringProperty(hierarchyStructure,
					"Version");
			if (oFF.notNull(version)) {
				item.setVersionName(version.getString());
			}
			structure = oFF.PrUtils.getStringProperty(hierarchyStructure,
					"Structure");
			if (oFF.notNull(structure)) {
				item.setHierarchyType(oFF.HierarchyType.lookup(structure
						.getString()));
			}
			isModeled = oFF.PrUtils.getBooleanValueProperty(hierarchyStructure,
					"IsModeled", false);
			item.setIsModeled(isModeled);
			dateTo = oFF.PrUtils
					.getStringProperty(hierarchyStructure, "DateTo");
			if (oFF.notNull(dateTo)) {
				dateToString = dateTo.getString();
				if (oFF.XStringUtils.isNotNullAndNotEmpty(dateToString)) {
					item.setDateTo(oFF.XDate
							.createDateFromIsoFormat(dateToString));
				}
			}
			levels = oFF.PrUtils.getListProperty(hierarchyStructure, "Levels");
			if (oFF.notNull(levels)) {
				item.setSupportsHierarchyLevels(true);
				levelList = oFF.XList.create();
				lenLevel = oFF.PrUtils.getListSize(levels, 0);
				for (levelIndex = 0; levelIndex < lenLevel; levelIndex++) {
					levelStructure = oFF.PrUtils.getStructureElement(levels,
							levelIndex);
					if (oFF.isNull(levelStructure)) {
						continue;
					}
					catalogLevel = oFF.HierarchyCatalogLevel
							.createCatalogLevel();
					level = oFF.PrUtils.getIntegerValueProperty(levelStructure,
							"Level", -1);
					if (level > -1) {
						catalogLevel.setLevel(level);
					}
					levelName = oFF.PrUtils.getStringProperty(levelStructure,
							"LevelName");
					if (oFF.notNull(levelName)) {
						catalogLevel.setLevelName(levelName.getString());
					}
					levelCaption = oFF.PrUtils.getStringProperty(
							levelStructure, "LevelCaption");
					if (oFF.notNull(levelCaption)) {
						catalogLevel.setLevelDescription(levelCaption
								.getString());
					}
					levelUniqueName = oFF.PrUtils.getStringProperty(
							levelStructure, "LevelUniqueName");
					if (oFF.notNull(levelUniqueName)) {
						catalogLevel.setLevelUniqueName(levelUniqueName
								.getString());
					}
					levelDimensionName = oFF.PrUtils.getStringProperty(
							levelStructure, "DimensionName");
					if (oFF.notNull(levelDimensionName)) {
						catalogLevel.setLevelDimensionName(levelDimensionName
								.getString());
					}
					levelType = oFF.PrUtils.getIntegerProperty(levelStructure,
							"LevelType");
					if (oFF.notNull(levelType)) {
						catalogLevel.setLevelType(oFF.QInAConverter
								.lookupHierarchyLevelType(levelType
										.getInteger()));
					}
					levelList.add(catalogLevel);
				}
				item.setHierarchyLevels(levelList);
			}
			restNode = hierarchyStructure.getStringByKey("RestNode");
			if (oFF.notNull(restNode)) {
				item.setRestNode(restNode);
			}
			virtualRootNode = hierarchyStructure
					.getStringByKey("VirtualRootNode");
			if (oFF.notNull(virtualRootNode)) {
				item.setVirtualRootNode(virtualRootNode);
			}
			catalogResult.m_items.add(item);
		}
		return catalogResult;
	};
	oFF.HierarchyCatalogResult.prototype.m_items = null;
	oFF.HierarchyCatalogResult.prototype.releaseObject = function() {
		this.m_items = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_items);
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.HierarchyCatalogResult.prototype.containsHierarchy = function(name) {
		var size = this.m_items.size();
		var i;
		for (i = 0; i < size; i++) {
			if (oFF.XString.isEqual(this.m_items.get(i).getHierarchyName(),
					name)) {
				return true;
			}
		}
		return false;
	};
	oFF.HierarchyCatalogResult.prototype.setupExt = function(resultSet,
			dimensionName) {
		this.m_items = oFF.XList.create();
		if (resultSet.getQueryModel().getSystemType() === oFF.SystemType.HANA) {
			this.setupHana(resultSet);
		} else {
			this.setupBW(resultSet, dimensionName);
		}
	};
	oFF.HierarchyCatalogResult.prototype.setupHana = function(resultSet) {
		var queryModel = resultSet.getQueryModel();
		var dimensionNameField = queryModel.getDimensionByName("Dimension")
				.getFieldByName("KeyDimension");
		var hierarchyNameField = queryModel.getDimensionByName("Name")
				.getFieldByName("KeyName");
		var hierarchyDescriptionField = queryModel.getDimensionByName(
				"Description").getFieldByName("KeyDescription");
		var versionNameField = queryModel.getDimensionByName("Version")
				.getFieldByName("KeyVersion");
		var dataToField = queryModel.getDimensionByName("DateTo")
				.getFieldByName("KeyDateTo");
		var rowsAxis = resultSet.getRowsAxis();
		var tuplesCount = rowsAxis.getTuplesCount();
		var i;
		var tuple;
		var item;
		var dateToFieldString;
		for (i = 0; i < tuplesCount; i++) {
			tuple = rowsAxis.getTupleAt(i);
			item = oFF.HierarchyCatalogItem.createCatalogItem();
			if (oFF.notNull(dimensionNameField)) {
				item.setDimensionName(tuple
						.getStringByField(dimensionNameField));
			}
			if (oFF.notNull(hierarchyNameField)) {
				item.setHierarchyName(tuple
						.getStringByField(hierarchyNameField));
			}
			if (oFF.notNull(hierarchyDescriptionField)) {
				item.setHierarchyLongText(tuple
						.getStringByField(hierarchyDescriptionField));
			}
			if (oFF.notNull(versionNameField)) {
				item.setVersionName(tuple.getStringByField(versionNameField));
			}
			if (oFF.notNull(dataToField)) {
				dateToFieldString = tuple.getStringByField(dataToField);
				if (oFF.XStringUtils.isNotNullAndNotEmpty(dateToFieldString)) {
					item.setDateTo(oFF.XDate
							.createDateFromIsoFormat(dateToFieldString));
				}
			}
			this.m_items.add(item);
		}
	};
	oFF.HierarchyCatalogResult.prototype.getFieldIfPresent = function(commands,
			queryModel, dimensionName, fieldName) {
		if (commands.containsResultSetField(dimensionName, fieldName)) {
			return queryModel.getDimensionByName(dimensionName).getFieldByName(
					fieldName);
		}
		return null;
	};
	oFF.HierarchyCatalogResult.prototype.setupBW = function(resultSet,
			dimensionName) {
		var queryModel = resultSet.getQueryModel();
		var commands = queryModel.getConvenienceCommands();
		var hierarchyNameField = queryModel.getDimensionByName("Name")
				.getFieldByName(oFF.HierarchyCatalogManager.BW_NAME_KEY);
		var hierarchyShortTextField = this.getFieldIfPresent(commands,
				queryModel, "Text",
				oFF.HierarchyCatalogManager.BW_TEXT_SHORT_TEXT);
		var hierarchyMediumTextField = this.getFieldIfPresent(commands,
				queryModel, "Text",
				oFF.HierarchyCatalogManager.BW_TEXT_MEDIUM_TEXT);
		var hierarchyLongTextField = this.getFieldIfPresent(commands,
				queryModel, "Text",
				oFF.HierarchyCatalogManager.BW_TEXT_LONG_TEXT);
		var versionDimension = queryModel.getDimensionByName("Version");
		var versionDisplayKeyField = versionDimension
				.getFieldByName(oFF.HierarchyCatalogManager.BW_VERSION_DISPLAY_KEY);
		var versionNameField = versionDimension
				.getFieldByName(oFF.HierarchyCatalogManager.BW_VERSION_KEY);
		var versionLongTextField = versionDimension
				.getFieldByName(oFF.HierarchyCatalogManager.BW_VERSION_LONG_TEXT);
		var dataToField = queryModel.getDimensionByName("DateTo")
				.getFieldByName(oFF.HierarchyCatalogManager.BW_DATE_TO_KEY);
		var dataFromField = this.getFieldIfPresent(commands, queryModel,
				oFF.HierarchyCatalogManager.BW_DATE_FROM,
				oFF.HierarchyCatalogManager.BW_DATE_FROM_KEY);
		var ownerField = this.getFieldIfPresent(commands, queryModel, "Owner",
				oFF.HierarchyCatalogManager.BW_OWNER_KEY);
		var idField = this.getFieldIfPresent(commands, queryModel,
				oFF.HierarchyCatalogManager.BW_HIEID,
				oFF.HierarchyCatalogManager.BW_HIEID_KEY);
		var typeField = this.getFieldIfPresent(commands, queryModel,
				oFF.HierarchyCatalogManager.BW_HIETYPE,
				oFF.HierarchyCatalogManager.BW_HIETYPE_KEY);
		var objVersField = this.getFieldIfPresent(commands, queryModel,
				oFF.HierarchyCatalogManager.BW_OBJVERS,
				oFF.HierarchyCatalogManager.BW_OBJVERS_KEY);
		var isRemoteField = this.getFieldIfPresent(commands, queryModel,
				oFF.HierarchyCatalogManager.BW_IS_REMOTE,
				oFF.HierarchyCatalogManager.BW_IS_REMOTE_KEY);
		var rowsAxis = resultSet.getRowsAxis();
		var tuplesCount = rowsAxis.getTuplesCount();
		var i;
		var tuple;
		var item;
		var dateToValue;
		var dateFromValue;
		var isRemote;
		for (i = 0; i < tuplesCount; i++) {
			tuple = rowsAxis.getTupleAt(i);
			item = oFF.HierarchyCatalogItem.createCatalogItem();
			item.setDimensionName(dimensionName);
			if (oFF.notNull(hierarchyNameField)) {
				item.setHierarchyName(tuple
						.getStringByField(hierarchyNameField));
			}
			if (oFF.notNull(hierarchyShortTextField)) {
				item.setHierarchyShortText(tuple
						.getStringByField(hierarchyShortTextField));
			}
			if (oFF.notNull(hierarchyMediumTextField)) {
				item.setHierarchyMediumText(tuple
						.getStringByField(hierarchyMediumTextField));
			}
			if (oFF.notNull(hierarchyLongTextField)) {
				item.setHierarchyLongText(tuple
						.getStringByField(hierarchyLongTextField));
			}
			if (oFF.notNull(versionNameField)) {
				item.setVersionName(tuple.getStringByField(versionNameField));
			}
			if (oFF.notNull(versionDisplayKeyField)) {
				item.setVersionDisplayKey(tuple
						.getStringByField(versionDisplayKeyField));
			}
			if (oFF.notNull(versionLongTextField)) {
				item.setVersionDescription(tuple
						.getStringByField(versionLongTextField));
			}
			if (oFF.notNull(dataToField)) {
				dateToValue = tuple.getStringByField(dataToField);
				if (oFF.XStringUtils.isNotNullAndNotEmpty(dateToValue)) {
					item.setDateTo(oFF.XDate
							.createDateFromSAPFormat(dateToValue));
				}
			}
			if (oFF.notNull(dataFromField)) {
				dateFromValue = tuple.getStringByField(dataFromField);
				if (oFF.XStringUtils.isNotNullAndNotEmpty(dateFromValue)) {
					item.setDateFrom(oFF.XDate
							.createDateFromSAPFormat(dateFromValue));
				}
			}
			if (oFF.notNull(ownerField)) {
				item.setOwner(tuple.getStringByField(ownerField));
			}
			if (oFF.notNull(idField)) {
				item.setHierId(tuple.getStringByField(idField));
			}
			if (oFF.notNull(typeField)) {
				item.setHierType(tuple.getStringByField(typeField));
			}
			if (oFF.notNull(objVersField)) {
				item.setObjectVersion(tuple.getStringByField(objVersField));
			}
			if (oFF.notNull(isRemoteField)) {
				isRemote = false;
				if (isRemoteField.getValueType() === oFF.XValueType.STRING) {
					if (oFF.XString.isEqual(tuple
							.getStringByField(isRemoteField), "X")) {
						isRemote = true;
					}
				} else {
					if (isRemoteField.getValueType() === oFF.XValueType.BOOLEAN) {
						isRemote = tuple.getBooleanByField(isRemoteField);
					}
				}
				item.setIsRemote(isRemote);
			}
			this.m_items.add(item);
		}
	};
	oFF.HierarchyCatalogResult.prototype.getObjectsIterator = function() {
		return this.m_items.getIterator();
	};
	oFF.HierarchyCatalogResult.prototype.getObjects = function() {
		return this.m_items;
	};
	oFF.HierarchyCatalogResult.prototype.toString = function() {
		var sb = oFF.XStringBuffer.create();
		var i;
		if (oFF.notNull(this.m_items)) {
			for (i = 0; i < this.m_items.size(); i++) {
				if (i > 0) {
					sb.appendNewLine();
				}
				sb.append(this.m_items.get(i).toString());
			}
		}
		return sb.toString();
	};
	oFF.HierarchyCatalogResult.prototype.clone = function() {
		var copy = new oFF.HierarchyCatalogResult();
		var i;
		var item;
		copy.m_items = oFF.XList.create();
		for (i = 0; i < this.m_items.size(); i++) {
			item = this.m_items.get(i);
			copy.m_items.add(item.clone());
		}
		return copy;
	};
	oFF.QHierarchyLevel = function() {
	};
	oFF.QHierarchyLevel.prototype = new oFF.XObject();
	oFF.QHierarchyLevel.create = function(hierarchy, uniqueName, level) {
		var object = new oFF.QHierarchyLevel();
		object.setupHierarchyLevel(hierarchy, uniqueName, level);
		return object;
	};
	oFF.QHierarchyLevel.prototype.m_level = 0;
	oFF.QHierarchyLevel.prototype.m_levelText = null;
	oFF.QHierarchyLevel.prototype.m_levelName = null;
	oFF.QHierarchyLevel.prototype.m_levelUniqueName = null;
	oFF.QHierarchyLevel.prototype.m_hierarchy = null;
	oFF.QHierarchyLevel.prototype.m_levelType = null;
	oFF.QHierarchyLevel.prototype.m_levelDimensionName = null;
	oFF.QHierarchyLevel.prototype.setupHierarchyLevel = function(hierarchy,
			uniqueName, level) {
		this.m_level = level;
		this.m_levelName = uniqueName;
		this.m_levelUniqueName = uniqueName;
		this.m_hierarchy = oFF.XWeakReferenceUtil.getWeakRef(hierarchy);
		if (level === 0) {
			this.m_levelType = oFF.HierarchyLevelType.ALL;
		} else {
			this.m_levelType = oFF.HierarchyLevelType.REGULAR;
		}
	};
	oFF.QHierarchyLevel.prototype.clone = function() {
		var clone = oFF.QHierarchyLevel.create(this.getHierarchy(), this
				.getLevelUniqueName(), this.getLevelNumber());
		clone.setLevelName(this.getLevelName());
		clone.setLevelText(this.getLevelText());
		clone.setLevelType(this.getLevelType());
		clone.setLevelDimensionName(this.getLevelDimensionName());
		return clone;
	};
	oFF.QHierarchyLevel.prototype.releaseObject = function() {
		this.m_levelText = null;
		this.m_levelName = null;
		this.m_levelUniqueName = null;
		this.m_hierarchy = null;
		this.m_levelType = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.QHierarchyLevel.prototype.toString = function() {
		var sb = oFF.XStringBuffer.create();
		sb.append(this.m_levelUniqueName);
		sb.append(": ");
		sb.append(this.m_levelText);
		return sb.toString();
	};
	oFF.QHierarchyLevel.prototype.getLevelNumber = function() {
		return this.m_level;
	};
	oFF.QHierarchyLevel.prototype.getLevelText = function() {
		return this.m_levelText;
	};
	oFF.QHierarchyLevel.prototype.getHierarchy = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchy);
	};
	oFF.QHierarchyLevel.prototype.getLevelName = function() {
		return this.m_levelName;
	};
	oFF.QHierarchyLevel.prototype.getLevelUniqueName = function() {
		return this.m_levelUniqueName;
	};
	oFF.QHierarchyLevel.prototype.setLevelText = function(text) {
		this.m_levelText = text;
	};
	oFF.QHierarchyLevel.prototype.setLevelName = function(levelName) {
		this.m_levelName = levelName;
	};
	oFF.QHierarchyLevel.prototype.getLevelType = function() {
		return this.m_levelType;
	};
	oFF.QHierarchyLevel.prototype.setLevelType = function(levelType) {
		this.m_levelType = levelType;
	};
	oFF.QHierarchyLevel.prototype.getLevelDimensionName = function() {
		return this.m_levelDimensionName;
	};
	oFF.QHierarchyLevel.prototype.setLevelDimensionName = function(
			levelDimensionName) {
		this.m_levelDimensionName = levelDimensionName;
	};
	oFF.PlanningFactory = {
		s_factory : null,
		setInstance : function(factory) {
			oFF.PlanningFactory.s_factory = factory;
		},
		createPlanningManager : function(queryManager) {
			return oFF.PlanningFactory.s_factory
					.createPlanningManager(queryManager);
		}
	};
	oFF.PlanningManagerFactoryDummyImpl = function() {
	};
	oFF.PlanningManagerFactoryDummyImpl.prototype = new oFF.XObject();
	oFF.PlanningManagerFactoryDummyImpl.create = function() {
		return new oFF.PlanningManagerFactoryDummyImpl();
	};
	oFF.PlanningManagerFactoryDummyImpl.prototype.createPlanningManager = function(
			queryManager) {
		return null;
	};
	oFF.StateStackEntry = function() {
	};
	oFF.StateStackEntry.prototype = new oFF.XObject();
	oFF.StateStackEntry.create = function(uuid, state) {
		var entry = new oFF.StateStackEntry();
		entry.uuid = uuid;
		entry.state = state;
		return entry;
	};
	oFF.StateStackEntry.prototype.uuid = null;
	oFF.StateStackEntry.prototype.state = null;
	oFF.StateStackEntry.prototype.getState = function() {
		return this.state;
	};
	oFF.StateStackEntry.prototype.getName = function() {
		return this.uuid;
	};
	oFF.QImExFlag = {
		DEFAULT_ALL : 3,
		DATASOURCE : 1,
		VARIABLES : 2,
		RUN_AS_USER : 4,
		HIDE : 8,
		DRILL_CONTEXT : 16
	};
	oFF.QInAConverter = {
		s_lookupComparison : null,
		s_lookupComparisonIna : null,
		s_lookupPresentationType : null,
		s_lookupPresentationTypeIna : null,
		s_lookupInfoObjectType : null,
		s_lookupInfoObjectTypeIna : null,
		s_lookupVisibilityType : null,
		s_lookupVisibilityTypeIna : null,
		s_lookupReadMode : null,
		s_lookupReadModeIna : null,
		s_lookupEncoding : null,
		s_lookupSortType : null,
		s_lookupSortTypeIna : null,
		s_lookupAggregationType : null,
		s_lookupAggregationTypeIna : null,
		s_lookupComponentType : null,
		s_lookupComponentTypeIna : null,
		s_lookupValueType : null,
		s_lookupValueTypeIna : null,
		s_lookupCellValueType : null,
		s_textTransformation : null,
		s_textTransformationIna : null,
		s_lookupAlertLevelInt : null,
		s_lookupDimensionTypeInt : null,
		s_lookupResultsetState : null,
		s_lookupValueException : null,
		s_lookupAxisType : null,
		s_lookupAxisTypeIna : null,
		s_lookupSingleValueCalculation : null,
		s_lookupResultCalculation : null,
		staticSetup : function() {
			oFF.QInAConverter.setupAxisType();
			oFF.QInAConverter.setupDimensionType();
			oFF.QInAConverter.setupAlertLevel();
			oFF.QInAConverter.setupTextTransformation();
			oFF.QInAConverter.setupValueTypeMap();
			oFF.QInAConverter.setupComparisonMapping();
			oFF.QInAConverter.setupAggregationTypeMapping();
			oFF.QInAConverter.setupPresentationMapping();
			oFF.QInAConverter.s_lookupInfoObjectType = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_lookupInfoObjectTypeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapInfoObjectType("CHA", oFF.InfoObjectType.CHA);
			oFF.QInAConverter.mapInfoObjectType("KYF", oFF.InfoObjectType.KYF);
			oFF.QInAConverter.mapInfoObjectType("TIM", oFF.InfoObjectType.TIM);
			oFF.QInAConverter.mapInfoObjectType("UNI", oFF.InfoObjectType.UNI);
			oFF.QInAConverter.mapInfoObjectType("DPA", oFF.InfoObjectType.DPA);
			oFF.QInAConverter.mapInfoObjectType("ATR", oFF.InfoObjectType.ATR);
			oFF.QInAConverter.mapInfoObjectType("MTA", oFF.InfoObjectType.MTA);
			oFF.QInAConverter.mapInfoObjectType("XXL", oFF.InfoObjectType.XXL);
			oFF.QInAConverter.mapInfoObjectType("ALL", oFF.InfoObjectType.ALL);
			oFF.QInAConverter.setupVisibilityMapping();
			oFF.QInAConverter.setupReadmodeMapping();
			oFF.QInAConverter.s_lookupEncoding = oFF.XHashMapByString.create();
			oFF.QInAConverter.s_lookupEncoding.put("None",
					oFF.ResultSetEncoding.NONE);
			oFF.QInAConverter.s_lookupEncoding.put("Auto",
					oFF.ResultSetEncoding.AUTO);
			oFF.QInAConverter.s_lookupEncoding.put("DeltaRunLength",
					oFF.ResultSetEncoding.DELTA_RUN_LENGTH);
			oFF.QInAConverter.setupSortingMapping();
			oFF.QInAConverter.setupComponentTypeMapping();
			oFF.QInAConverter.s_lookupResultsetState = oFF.XArray.create(7);
			oFF.QInAConverter.s_lookupResultsetState.set(0,
					oFF.ResultSetState.DATA_AVAILABLE);
			oFF.QInAConverter.s_lookupResultsetState.set(1,
					oFF.ResultSetState.NO_DATA_AVAILABLE);
			oFF.QInAConverter.s_lookupResultsetState.set(2,
					oFF.ResultSetState.NO_DATA_AVAILABLE);
			oFF.QInAConverter.s_lookupResultsetState.set(3,
					oFF.ResultSetState.ERROR);
			oFF.QInAConverter.s_lookupResultsetState.set(4,
					oFF.ResultSetState.SIZE_LIMIT_EXCEEDED);
			oFF.QInAConverter.s_lookupResultsetState.set(5,
					oFF.ResultSetState.SUCCESSFUL_PERSISTED);
			oFF.QInAConverter.s_lookupResultsetState.set(6,
					oFF.ResultSetState.EMPTY_JSON);
			oFF.QInAConverter.s_lookupValueException = oFF.XArray.create(11);
			oFF.QInAConverter.s_lookupValueException.set(0,
					oFF.ValueException.NORMAL);
			oFF.QInAConverter.s_lookupValueException.set(1,
					oFF.ValueException.NULL_VALUE);
			oFF.QInAConverter.s_lookupValueException.set(2,
					oFF.ValueException.ZERO);
			oFF.QInAConverter.s_lookupValueException.set(3,
					oFF.ValueException.UNDEFINED);
			oFF.QInAConverter.s_lookupValueException.set(4,
					oFF.ValueException.OVERFLOW);
			oFF.QInAConverter.s_lookupValueException.set(5,
					oFF.ValueException.NO_PRESENTATION);
			oFF.QInAConverter.s_lookupValueException.set(6,
					oFF.ValueException.DIFF0);
			oFF.QInAConverter.s_lookupValueException.set(7,
					oFF.ValueException.ERROR);
			oFF.QInAConverter.s_lookupValueException.set(8,
					oFF.ValueException.NO_AUTHORITY);
			oFF.QInAConverter.s_lookupValueException.set(9,
					oFF.ValueException.MIXED_CURRENCIES_OR_UNITS);
			oFF.QInAConverter.s_lookupValueException.set(10,
					oFF.ValueException.UNDEFINED_NOP);
			oFF.QInAConverter.s_lookupSingleValueCalculation = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_lookupSingleValueCalculation.put(" ",
					oFF.SingleValueCalculation.NOT_DEFINED);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("1",
					oFF.SingleValueCalculation.SUM);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("2",
					oFF.SingleValueCalculation.MAXIMUM);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("3",
					oFF.SingleValueCalculation.MINIMUM);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("4",
					oFF.SingleValueCalculation.COUNTER_FOR_ALL_DETAILED_VALUES);
			oFF.QInAConverter.s_lookupSingleValueCalculation
					.put(
							"5",
							oFF.SingleValueCalculation.COUNTER_FOR_ALL_DETAILED_VALUES_NZ_NULL_ERROR);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("6",
					oFF.SingleValueCalculation.AVERAGE);
			oFF.QInAConverter.s_lookupSingleValueCalculation
					.put(
							"7",
							oFF.SingleValueCalculation.AVERAGE_DETAILED_VALUES_NOT_ZERO_NULL_ERROR);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("0",
					oFF.SingleValueCalculation.HIDE);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("O",
					oFF.SingleValueCalculation.OLYMPIC_RANK_NUMBER);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("B",
					oFF.SingleValueCalculation.MOVING_MIN_VALUE);
			oFF.QInAConverter.s_lookupSingleValueCalculation
					.put(
							"C",
							oFF.SingleValueCalculation.NORMALIZED_NEXT_GROUP_LEVEL_RESULT);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("D",
					oFF.SingleValueCalculation.MAX_VALUE_NOT_ZERO_NULL_ERROR);
			oFF.QInAConverter.s_lookupSingleValueCalculation
					.put(
							"E",
							oFF.SingleValueCalculation.MINIMUM_VALUES_NOT_ZERO_NULL_ERROR);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("G",
					oFF.SingleValueCalculation.NORMALIZED_OVERALL_RESULT);
			oFF.QInAConverter.s_lookupSingleValueCalculation
					.put(
							"R",
							oFF.SingleValueCalculation.NORMALIZED_UNRESTRICTED_OVERALL_RESULT);
			oFF.QInAConverter.s_lookupSingleValueCalculation.put("S",
					oFF.SingleValueCalculation.RANK_NUMBER);
			oFF.QInAConverter.s_lookupResultCalculation = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_lookupResultCalculation.put("00",
					oFF.ResultCalculation.NOT_DEFINED);
			oFF.QInAConverter.s_lookupResultCalculation.put("01",
					oFF.ResultCalculation.SUM);
			oFF.QInAConverter.s_lookupResultCalculation.put("02",
					oFF.ResultCalculation.MAXIMUM);
			oFF.QInAConverter.s_lookupResultCalculation.put("03",
					oFF.ResultCalculation.MINIMUM);
			oFF.QInAConverter.s_lookupResultCalculation.put("04",
					oFF.ResultCalculation.COUNTER_FOR_ALL_DETAILED_VALUES);
			oFF.QInAConverter.s_lookupResultCalculation
					.put(
							"05",
							oFF.ResultCalculation.COUNTER_FOR_ALL_DETAILED_VALUES_NZ_NULL_ERROR);
			oFF.QInAConverter.s_lookupResultCalculation.put("06",
					oFF.ResultCalculation.AVERAGE);
			oFF.QInAConverter.s_lookupResultCalculation
					.put(
							"07",
							oFF.ResultCalculation.AVERAGE_DETAILED_VALUES_NOT_ZERO_NULL_ERROR);
			oFF.QInAConverter.s_lookupResultCalculation.put("08",
					oFF.ResultCalculation.STANDARD_DEVIATION);
			oFF.QInAConverter.s_lookupResultCalculation.put("09",
					oFF.ResultCalculation.VARIANCE);
			oFF.QInAConverter.s_lookupResultCalculation.put("11",
					oFF.ResultCalculation.FIRST_VALUE);
			oFF.QInAConverter.s_lookupResultCalculation.put("12",
					oFF.ResultCalculation.LAST_VALUE);
			oFF.QInAConverter.s_lookupResultCalculation.put("13",
					oFF.ResultCalculation.SUMMATION_OF_ROUNDED_VALUES);
			oFF.QInAConverter.s_lookupResultCalculation.put("14",
					oFF.ResultCalculation.HIDE);
		},
		setupAxisType : function() {
			oFF.QInAConverter.s_lookupAxisType = oFF.XHashMapByString.create();
			oFF.QInAConverter.s_lookupAxisTypeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna,
					oFF.AxisType.COLUMNS, "Columns");
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna, oFF.AxisType.ROWS,
					"Rows");
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna, oFF.AxisType.FREE,
					"Free");
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna, oFF.AxisType.FREE,
					"None");
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna,
					oFF.AxisType.DYNAMIC, "Dynamic");
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna, oFF.AxisType.FILTER,
					"Filter");
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna,
					oFF.AxisType.REPOSITORY, "Technical");
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna,
					oFF.AxisType.REPOSITORY, "Repository");
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupAxisType,
					oFF.QInAConverter.s_lookupAxisTypeIna,
					oFF.AxisType.VIRTUAL, "Virtual");
		},
		setupDimensionType : function() {
			oFF.QInAConverter.s_lookupDimensionTypeInt = oFF.XArray.create(13);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(1,
					oFF.DimensionType.TIME);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(2,
					oFF.DimensionType.MEASURE_STRUCTURE);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(3,
					oFF.DimensionType.DIMENSION);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(4,
					oFF.DimensionType.CURRENCY);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(5,
					oFF.DimensionType.UNIT);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(6,
					oFF.DimensionType.SECONDARY_STRUCTURE);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(7,
					oFF.DimensionType.DATE);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(8,
					oFF.DimensionType.HIERARCHY_VERSION);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(9,
					oFF.DimensionType.HIERARCHY_NAME);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(10,
					oFF.DimensionType.GIS_DIMENSION);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(11,
					oFF.DimensionType.VERSION);
			oFF.QInAConverter.s_lookupDimensionTypeInt.set(12,
					oFF.DimensionType.ACCOUNT);
		},
		setupAlertLevel : function() {
			oFF.QInAConverter.s_lookupAlertLevelInt = oFF.XArray.create(10);
			oFF.QInAConverter.s_lookupAlertLevelInt.set(0,
					oFF.AlertLevel.NORMAL);
			oFF.QInAConverter.s_lookupAlertLevelInt.set(1,
					oFF.AlertLevel.GOOD_1);
			oFF.QInAConverter.s_lookupAlertLevelInt.set(2,
					oFF.AlertLevel.GOOD_2);
			oFF.QInAConverter.s_lookupAlertLevelInt.set(3,
					oFF.AlertLevel.GOOD_3);
			oFF.QInAConverter.s_lookupAlertLevelInt.set(4,
					oFF.AlertLevel.CRITICAL_1);
			oFF.QInAConverter.s_lookupAlertLevelInt.set(5,
					oFF.AlertLevel.CRITICAL_2);
			oFF.QInAConverter.s_lookupAlertLevelInt.set(6,
					oFF.AlertLevel.CRITICAL_3);
			oFF.QInAConverter.s_lookupAlertLevelInt
					.set(7, oFF.AlertLevel.BAD_1);
			oFF.QInAConverter.s_lookupAlertLevelInt
					.set(8, oFF.AlertLevel.BAD_2);
			oFF.QInAConverter.s_lookupAlertLevelInt
					.set(9, oFF.AlertLevel.BAD_3);
		},
		setupTextTransformation : function() {
			oFF.QInAConverter.s_textTransformation = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_textTransformationIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapTextTransformation("Capitalize",
					oFF.TextTransformationType.CAPITALIZE);
			oFF.QInAConverter.mapTextTransformation("Lowercase",
					oFF.TextTransformationType.LOWERCASE);
			oFF.QInAConverter.mapTextTransformation("Uppercase",
					oFF.TextTransformationType.UPPERCASE);
			oFF.QInAConverter.mapTextTransformation("StringTransformation",
					oFF.TextTransformationType.STRING_TRANSFORMATION);
			oFF.QInAConverter.mapTextTransformation("SpatialAsBinary",
					oFF.TextTransformationType.SPATIAL_AS_BINARY);
			oFF.QInAConverter.mapTextTransformation("SpatialAsEWKB",
					oFF.TextTransformationType.SPATIAL_AS_EWKB);
			oFF.QInAConverter.mapTextTransformation("SpatialAsEWKT",
					oFF.TextTransformationType.SPATIAL_AS_EWKT);
			oFF.QInAConverter.mapTextTransformation("SpatialAsGeoJSON",
					oFF.TextTransformationType.SPATIAL_AS_GEOJSON);
			oFF.QInAConverter.mapTextTransformation("SpatialAsSVG",
					oFF.TextTransformationType.SPATIAL_AS_SVG);
			oFF.QInAConverter.mapTextTransformation("SpatialAsText",
					oFF.TextTransformationType.SPATIAL_AS_TEXT);
			oFF.QInAConverter.mapTextTransformation("SpatialAsWKB",
					oFF.TextTransformationType.SPATIAL_AS_WKB);
			oFF.QInAConverter.mapTextTransformation("SpatialAsWKT",
					oFF.TextTransformationType.SPATIAL_AS_WKT);
		},
		mapTextTransformation : function(inaString, ffConstant) {
			oFF.QInAConverter.s_textTransformation.put(inaString, ffConstant);
			oFF.QInAConverter.s_textTransformationIna.put(ffConstant.getName(),
					inaString);
		},
		setupComparisonMapping : function() {
			oFF.QInAConverter.s_lookupComparison = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_lookupComparisonIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapComparison("=", oFF.ComparisonOperator.EQUAL);
			oFF.QInAConverter.mapComparison("EQ", oFF.ComparisonOperator.EQUAL);
			oFF.QInAConverter.mapComparison("EQUAL",
					oFF.ComparisonOperator.EQUAL);
			oFF.QInAConverter.mapComparison("EQUALS",
					oFF.ComparisonOperator.EQUAL);
			oFF.QInAConverter.mapComparison("<>",
					oFF.ComparisonOperator.NOT_EQUAL);
			oFF.QInAConverter.mapComparison(">",
					oFF.ComparisonOperator.GREATER_THAN);
			oFF.QInAConverter.mapComparison("<",
					oFF.ComparisonOperator.LESS_THAN);
			oFF.QInAConverter.mapComparison(">=",
					oFF.ComparisonOperator.GREATER_EQUAL);
			oFF.QInAConverter.mapComparison("<=",
					oFF.ComparisonOperator.LESS_EQUAL);
			oFF.QInAConverter
					.mapComparison("LIKE", oFF.ComparisonOperator.LIKE);
			oFF.QInAConverter.mapComparison("MATCH",
					oFF.ComparisonOperator.MATCH);
			oFF.QInAConverter.mapComparison("NOT_MATCH",
					oFF.ComparisonOperator.NOT_MATCH);
			oFF.QInAConverter.mapComparison("IS_NULL",
					oFF.ComparisonOperator.IS_NULL);
			oFF.QInAConverter.mapComparison("IS NULL",
					oFF.ComparisonOperator.IS_NULL);
			oFF.QInAConverter.mapComparison("BETWEEN",
					oFF.ComparisonOperator.BETWEEN);
			oFF.QInAConverter.mapComparison("NOT_BETWEEN",
					oFF.ComparisonOperator.NOT_BETWEEN);
			oFF.QInAConverter.mapComparison("NOTBETWEEN",
					oFF.ComparisonOperator.NOT_BETWEEN);
			oFF.QInAConverter.mapComparison("BETWEEN_EXCLUDING",
					oFF.ComparisonOperator.BETWEEN_EXCLUDING);
			oFF.QInAConverter.mapComparison("NOT_BETWEEN_EXCLUDING",
					oFF.ComparisonOperator.NOT_BETWEEN_EXCLUDING);
			oFF.QInAConverter.mapComparison("FUZZY",
					oFF.ComparisonOperator.FUZZY);
			oFF.QInAConverter.mapComparison("SEARCH",
					oFF.ComparisonOperator.SEARCH);
			oFF.QInAConverter.mapComparison("ALL", oFF.ComparisonOperator.ALL);
			oFF.QInAConverter.mapComparison("AGGREGATED",
					oFF.ComparisonOperator.AGGREGATED);
			oFF.QInAConverter.mapComparison("NON-AGGREGATED",
					oFF.ComparisonOperator.NON_AGGREGATED);
			oFF.QInAConverter.mapComparison("CONTAINS",
					oFF.SpatialComparisonOperator.CONTAINS);
			oFF.QInAConverter.mapComparison("COVERS",
					oFF.SpatialComparisonOperator.COVERS);
			oFF.QInAConverter.mapComparison("CROSSES",
					oFF.SpatialComparisonOperator.CROSSES);
			oFF.QInAConverter.mapComparison("DISJOINT",
					oFF.SpatialComparisonOperator.DISJOINT);
			oFF.QInAConverter.mapComparison("OVERLAPS",
					oFF.SpatialComparisonOperator.OVERLAPS);
			oFF.QInAConverter.mapComparison("TOUCHES",
					oFF.SpatialComparisonOperator.TOUCHES);
			oFF.QInAConverter.mapComparison("INTERSECTS_RECT",
					oFF.SpatialComparisonOperator.INTERSECTS_RECT);
			oFF.QInAConverter.mapComparison("INTERSECT_RECT",
					oFF.SpatialComparisonOperator.INTERSECTS_RECT);
			oFF.QInAConverter.mapComparison("INTERSECTS",
					oFF.SpatialComparisonOperator.INTERSECTS);
			oFF.QInAConverter.mapComparison("WITHIN",
					oFF.SpatialComparisonOperator.WITHIN);
			oFF.QInAConverter.mapComparison("WITHIN_DISTANCE",
					oFF.SpatialComparisonOperator.WITHIN_DISTANCE);
		},
		setupAggregationTypeMapping : function() {
			oFF.QInAConverter.s_lookupAggregationType = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_lookupAggregationTypeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter
					.mapAggregationType("SUM", oFF.AggregationType.SUM);
			oFF.QInAConverter.mapAggregationType("COUNT",
					oFF.AggregationType.COUNT);
			oFF.QInAConverter
					.mapAggregationType("MAX", oFF.AggregationType.MAX);
			oFF.QInAConverter
					.mapAggregationType("MIN", oFF.AggregationType.MIN);
			oFF.QInAConverter.mapAggregationType("AVERAGE",
					oFF.AggregationType.AVERAGE);
			oFF.QInAConverter.mapAggregationType("COUNT_DISTINCT",
					oFF.AggregationType.COUNT_DISTINCT);
			oFF.QInAConverter.mapAggregationType("LAST",
					oFF.AggregationType.LAST);
			oFF.QInAConverter.mapAggregationType("FIRST",
					oFF.AggregationType.FIRST);
			oFF.QInAConverter.mapAggregationType("VARIANCE",
					oFF.AggregationType.VARIANCE);
			oFF.QInAConverter.mapAggregationType("STANDARD_DEVIATION",
					oFF.AggregationType.STANDARD_DEVIATION);
			oFF.QInAConverter.mapAggregationType("NOPNULL",
					oFF.AggregationType.NOP_NULL);
			oFF.QInAConverter.mapAggregationType("NOPNULLZERO",
					oFF.AggregationType.NOP_NULL_ZERO);
			oFF.QInAConverter.mapAggregationType("RANK",
					oFF.AggregationType.RANK);
			oFF.QInAConverter.mapAggregationType("RANK_DENSE",
					oFF.AggregationType.RANK_DENSE);
			oFF.QInAConverter.mapAggregationType("RANK_OLYMPIC",
					oFF.AggregationType.RANK_OLYMPIC);
			oFF.QInAConverter.mapAggregationType("RANK_PERCENT",
					oFF.AggregationType.RANK_PERCENT);
			oFF.QInAConverter.mapAggregationType("RANK_PERCENTILE",
					oFF.AggregationType.RANK_PERCENTILE);
			oFF.QInAConverter.mapAggregationType("AVERAGENULL",
					oFF.AggregationType.AVERAGE_NULL);
			oFF.QInAConverter.mapAggregationType("AVERAGENULLZERO",
					oFF.AggregationType.AVERAGE_NULL_ZERO);
			oFF.QInAConverter.mapAggregationType("COUNTNULL",
					oFF.AggregationType.COUNT_NULL);
			oFF.QInAConverter.mapAggregationType("COUNTNULLZERO",
					oFF.AggregationType.COUNT_NULL_ZERO);
			oFF.QInAConverter.mapAggregationType("MEDIAN",
					oFF.AggregationType.MEDIAN);
			oFF.QInAConverter.mapAggregationType("MEDIANNULL",
					oFF.AggregationType.MEDIAN_NULL);
			oFF.QInAConverter.mapAggregationType("MEDIANNULLZERO",
					oFF.AggregationType.MEDIAN_NULL_ZERO);
			oFF.QInAConverter.mapAggregationType("1STQUARTILE",
					oFF.AggregationType.FIRST_QUARTILE);
			oFF.QInAConverter.mapAggregationType("1STQUARTILENULL",
					oFF.AggregationType.FIRST_QUARTILE_NULL);
			oFF.QInAConverter.mapAggregationType("1STQUARTILENULLZERO",
					oFF.AggregationType.FIRST_QUARTILE_NULL_ZERO);
			oFF.QInAConverter.mapAggregationType("3RDQUARTILE",
					oFF.AggregationType.THIRD_QUARTILE);
			oFF.QInAConverter.mapAggregationType("3RDQUARTILENULL",
					oFF.AggregationType.THIRD_QUARTILE_NULL);
			oFF.QInAConverter.mapAggregationType("3RDQUARTILENULLZERO",
					oFF.AggregationType.THIRD_QUARTILE_NULL_ZERO);
			oFF.QInAConverter.mapAggregationType("OUTLIERS",
					oFF.AggregationType.OUTLIERS);
			oFF.QInAConverter.mapAggregationType("OUTLIERSNULL",
					oFF.AggregationType.OUTLIERS_NULL);
			oFF.QInAConverter.mapAggregationType("OUTLIERSNULLZERO",
					oFF.AggregationType.OUTLIERS_NULL_ZERO);
		},
		setupPresentationMapping : function() {
			oFF.QInAConverter.s_lookupPresentationType = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_lookupPresentationTypeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapPresentationType("Undefined",
					oFF.PresentationType.UNDEFINED);
			oFF.QInAConverter.mapPresentationType("Key",
					oFF.PresentationType.KEY);
			oFF.QInAConverter.mapPresentationType("KeyNotCompound",
					oFF.PresentationType.KEY_NOT_COMPOUND);
			oFF.QInAConverter.mapPresentationType("DisplayKey",
					oFF.PresentationType.DISPLAY_KEY);
			oFF.QInAConverter.mapPresentationType(
					"DisplayKeyMixedCompoundment",
					oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT);
			oFF.QInAConverter.mapPresentationType("DisplayKeyNotCompound",
					oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND);
			oFF.QInAConverter
					.mapPresentationType("Id", oFF.PresentationType.ID);
			oFF.QInAConverter.mapPresentationType("Text",
					oFF.PresentationType.TEXT);
			oFF.QInAConverter.mapPresentationType("ShortText",
					oFF.PresentationType.SHORT_TEXT);
			oFF.QInAConverter.mapPresentationType("MediumText",
					oFF.PresentationType.MEDIUM_TEXT);
			oFF.QInAConverter.mapPresentationType("LongText",
					oFF.PresentationType.LONG_TEXT);
			oFF.QInAConverter.mapPresentationType("XLLongText",
					oFF.PresentationType.XL_LONG_TEXT);
			oFF.QInAConverter.mapPresentationType("HierarchyKey",
					oFF.PresentationType.HIERARCHY_KEY);
			oFF.QInAConverter.mapPresentationType("HierarchyText",
					oFF.PresentationType.HIERARCHY_TEXT);
			oFF.QInAConverter.mapPresentationType("HierarchyDisplayKey",
					oFF.PresentationType.HIERARCHY_DISPLAY_KEY);
			oFF.QInAConverter.mapPresentationType("WhyFound",
					oFF.PresentationType.WHY_FOUND);
			oFF.QInAConverter.mapPresentationType("RelatedActions",
					oFF.PresentationType.RELATED_ACTIONS);
			oFF.QInAConverter.mapPresentationType("URL",
					oFF.PresentationType.URL);
			oFF.QInAConverter.mapPresentationType("XXL",
					oFF.PresentationType.BLOB);
		},
		setupVisibilityMapping : function() {
			oFF.QInAConverter.s_lookupVisibilityType = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_lookupVisibilityTypeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter
					.mapVisibilityType("C", oFF.VisibilityType.CENTRAL);
			oFF.QInAConverter.mapVisibilityType("C/I",
					oFF.VisibilityType.CENTRAL_NOT_VISIBLE);
			oFF.QInAConverter.mapVisibilityType("C/D",
					oFF.VisibilityType.CENTRAL_DISPLAY_ONLY);
			oFF.QInAConverter.mapVisibilityType("C/C",
					oFF.VisibilityType.CENTRAL_CHANGE_TO_EXISTING);
			oFF.QInAConverter.mapVisibilityType("C/A",
					oFF.VisibilityType.CENTRAL_ADD_NEW);
			oFF.QInAConverter.mapVisibilityType("L", oFF.VisibilityType.LOCAL);
			oFF.QInAConverter.mapVisibilityType("L/I",
					oFF.VisibilityType.LOCAL_NOT_VISIBLE);
			oFF.QInAConverter.mapVisibilityType("L/D",
					oFF.VisibilityType.LOCAL_DISPLAY_ONLY);
			oFF.QInAConverter.mapVisibilityType("L/C",
					oFF.VisibilityType.LOCAL_CHANGE_TO_EXISTING);
			oFF.QInAConverter.mapVisibilityType("L/A",
					oFF.VisibilityType.LOCAL_ADD_NEW);
		},
		setupReadmodeMapping : function() {
			oFF.QInAConverter.s_lookupReadMode = oFF.XHashMapByString.create();
			oFF.QInAConverter.s_lookupReadModeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapReadMode("Default",
					oFF.QMemberReadMode.DEFAULT_VALUE);
			oFF.QInAConverter.mapReadMode("Undefined",
					oFF.QMemberReadMode.UNDEFINED);
			oFF.QInAConverter
					.mapReadMode("None", oFF.QMemberReadMode.UNDEFINED);
			oFF.QInAConverter.mapReadMode("Master", oFF.QMemberReadMode.MASTER);
			oFF.QInAConverter.mapReadMode("MasterAndSpace",
					oFF.QMemberReadMode.MASTER_AND_SPACE);
			oFF.QInAConverter.mapReadMode("MasterAndSpaceAndState",
					oFF.QMemberReadMode.MASTER_AND_SPACE_AND_STATE);
			oFF.QInAConverter.mapReadMode("RelatedMaster",
					oFF.QMemberReadMode.REL_MASTER);
			oFF.QInAConverter.mapReadMode("RelatedMasterAndSpace",
					oFF.QMemberReadMode.REL_MASTER_AND_SPACE);
			oFF.QInAConverter.mapReadMode("RelatedMasterAndSpaceAndState",
					oFF.QMemberReadMode.REL_MASTER_AND_SPACE_AND_STATE);
			oFF.QInAConverter.mapReadMode("Booked", oFF.QMemberReadMode.BOOKED);
			oFF.QInAConverter.mapReadMode("BookedAndSpace",
					oFF.QMemberReadMode.BOOKED_AND_SPACE);
			oFF.QInAConverter.mapReadMode("BookedAndSpaceAndState",
					oFF.QMemberReadMode.BOOKED_AND_SPACE_AND_STATE);
			oFF.QInAConverter.mapReadMode("RelatedBooked",
					oFF.QMemberReadMode.REL_BOOKED);
			oFF.QInAConverter.mapReadMode("RelatedBookedAndSpace",
					oFF.QMemberReadMode.REL_BOOKED_AND_SPACE);
			oFF.QInAConverter.mapReadMode("RelatedBookedAndSpaceAndState",
					oFF.QMemberReadMode.REL_BOOKED_AND_SPACE_AND_STATE);
		},
		setupSortingMapping : function() {
			oFF.QInAConverter.s_lookupSortType = oFF.XHashMapByString.create();
			oFF.QInAConverter.s_lookupSortTypeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapSortType("Member", oFF.SortType.MEMBER_KEY);
			oFF.QInAConverter.mapSortType("MemberKey", oFF.SortType.MEMBER_KEY);
			oFF.QInAConverter.mapSortType("MemberText",
					oFF.SortType.MEMBER_TEXT);
			oFF.QInAConverter.mapSortType("Field", oFF.SortType.FIELD);
			oFF.QInAConverter.mapSortType("Selection", oFF.SortType.FILTER);
			oFF.QInAConverter.mapSortType("Filter", oFF.SortType.FILTER);
			oFF.QInAConverter.mapSortType("Datacell",
					oFF.SortType.DATA_CELL_VALUE);
			oFF.QInAConverter.mapSortType("Hierarchy", oFF.SortType.HIERARCHY);
			oFF.QInAConverter.mapSortType("Measure", oFF.SortType.MEASURE);
			oFF.QInAConverter.mapSortType("Complex", oFF.SortType.COMPLEX);
		},
		setupComponentTypeMapping : function() {
			oFF.QInAConverter.s_lookupComponentType = oFF.XHashMapByString
					.create();
			oFF.QInAConverter.s_lookupComponentTypeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapComponentType("Axis",
					oFF.OlapComponentType.AXIS);
			oFF.QInAConverter.mapComponentType("Condition",
					oFF.OlapComponentType.CONDITION);
			oFF.QInAConverter.mapComponentType("QueryModel",
					oFF.OlapComponentType.QUERY_MODEL);
			oFF.QInAConverter.mapComponentType("Filter",
					oFF.OlapComponentType.SELECTOR);
			oFF.QInAConverter.mapComponentType("FilterExpression",
					oFF.OlapComponentType.FILTER_EXPRESSION);
			oFF.QInAConverter.mapComponentType("FilterCartesianProduct",
					oFF.FilterComponentType.CARTESIAN_PRODUCT);
			oFF.QInAConverter.mapComponentType("FilterCartesianList",
					oFF.FilterComponentType.CARTESIAN_LIST);
			oFF.QInAConverter.mapComponentType("FilterOperation",
					oFF.FilterComponentType.OPERATION);
			oFF.QInAConverter.mapComponentType("FilterAlgebra",
					oFF.FilterComponentType.BOOLEAN_ALGEBRA);
			oFF.QInAConverter.mapComponentType("MemberRestricted",
					oFF.MemberType.RESTRICTED_MEASURE);
			oFF.QInAConverter.mapComponentType("DimensionMemberVariable",
					oFF.VariableType.DIMENSION_MEMBER_VARIABLE);
			oFF.QInAConverter.mapComponentType("HierarchyNodeVariable",
					oFF.VariableType.HIERARCHY_NODE_VARIABLE);
			oFF.QInAConverter.mapComponentType("CellValueOperand",
					oFF.OlapComponentType.FILTER_CELL_VALUE_OPERAND);
			oFF.QInAConverter.mapComponentType("Sorting",
					oFF.OlapComponentType.SORT_MANAGER);
			oFF.QInAConverter.mapComponentType("SortOperation",
					oFF.OlapComponentType.GENERIC_SORTING);
			oFF.QInAConverter.mapComponentType("Totals",
					oFF.OlapComponentType.TOTALS);
			oFF.QInAConverter.mapComponentType("Field",
					oFF.OlapComponentType.FIELD);
			oFF.QInAConverter.mapComponentType("DimensionManager",
					oFF.OlapComponentType.DIMENSION_MANAGER);
			oFF.QInAConverter.mapComponentType("Dimension",
					oFF.OlapComponentType.ABSTRACT_DIMENSION);
			oFF.QInAConverter.mapComponentType("BasicMeasure",
					oFF.MemberType.BASIC_MEASURE);
			oFF.QInAConverter.mapComponentType("Formula",
					oFF.MemberType.FORMULA);
			oFF.QInAConverter.mapComponentType("Members",
					oFF.OlapComponentType.MEMBERS);
			oFF.QInAConverter.mapComponentType("DrillManager",
					oFF.OlapComponentType.DRILL_MANAGER);
			oFF.QInAConverter.mapComponentType("Tuple",
					oFF.FilterComponentType.TUPLE);
		},
		setupValueTypeMap : function() {
			oFF.QInAConverter.s_lookupValueType = oFF.XHashMapByString.create();
			oFF.QInAConverter.s_lookupValueTypeIna = oFF.XHashMapOfStringByString
					.create();
			oFF.QInAConverter.mapValueType("String", oFF.XValueType.STRING);
			oFF.QInAConverter.mapValueType("Numc", oFF.XValueType.NUMC);
			oFF.QInAConverter.mapValueType("Char", oFF.XValueType.CHAR);
			oFF.QInAConverter.mapValueType("Double", oFF.XValueType.DOUBLE);
			oFF.QInAConverter.mapValueType("Long", oFF.XValueType.LONG);
			oFF.QInAConverter.mapValueType("Int", oFF.XValueType.INTEGER);
			oFF.QInAConverter.mapValueType("Bool", oFF.XValueType.BOOLEAN);
			oFF.QInAConverter.mapValueType("Amount", oFF.XValueType.AMOUNT);
			oFF.QInAConverter.mapValueType("Date", oFF.XValueType.DATE);
			oFF.QInAConverter.mapValueType("Time", oFF.XValueType.TIME);
			oFF.QInAConverter.mapValueType("Timestamp",
					oFF.XValueType.DATE_TIME);
			oFF.QInAConverter.mapValueType("Timespan", oFF.XValueType.TIMESPAN);
			oFF.QInAConverter.mapValueType("Properties",
					oFF.XValueType.PROPERTIES);
			oFF.QInAConverter.mapValueType("Structure",
					oFF.XValueType.STRUCTURE);
			oFF.QInAConverter.mapValueType("StructureList",
					oFF.XValueType.STRUCTURE_LIST);
			oFF.QInAConverter.mapValueType("Point", oFF.XValueType.POINT);
			oFF.QInAConverter.mapValueType("Geometry", oFF.XValueType.POLYGON);
			oFF.QInAConverter.mapValueType("LineString",
					oFF.XValueType.LINE_STRING);
			oFF.QInAConverter.mapValueType("Language", oFF.XValueType.LANGUAGE);
			oFF.QInAConverter.mapValueType("DecimalFloat",
					oFF.XValueType.DECIMAL_FLOAT);
			oFF.QInAConverter.mapValueType("Variable", oFF.XValueType.VARIABLE);
			oFF.QInAConverter.mapValueType("CurrentMember",
					oFF.XValueType.CURRENT_MEMBER);
			oFF.QInAConverter.mapValueType("Unit", oFF.XValueType.UNIT);
			oFF.QInAConverter.mapValueType("Cuky", oFF.XValueType.CUKY);
			oFF.QInAConverter.s_lookupCellValueType = oFF.XArray.create(15);
			oFF.QInAConverter.s_lookupCellValueType.set(0,
					oFF.XValueType.DOUBLE);
			oFF.QInAConverter.s_lookupCellValueType.set(1,
					oFF.XValueType.PERCENT);
			oFF.QInAConverter.s_lookupCellValueType.set(2, oFF.XValueType.DATE);
			oFF.QInAConverter.s_lookupCellValueType.set(3, oFF.XValueType.TIME);
			oFF.QInAConverter.s_lookupCellValueType.set(4,
					oFF.XValueType.STRING);
			oFF.QInAConverter.s_lookupCellValueType.set(5,
					oFF.XValueType.AMOUNT);
			oFF.QInAConverter.s_lookupCellValueType.set(6,
					oFF.XValueType.QUANTITY);
			oFF.QInAConverter.s_lookupCellValueType
					.set(7, oFF.XValueType.PRICE);
			oFF.QInAConverter.s_lookupCellValueType.set(8,
					oFF.XValueType.DIMENSION_MEMBER);
			oFF.QInAConverter.s_lookupCellValueType.set(9,
					oFF.XValueType.INTEGER);
			oFF.QInAConverter.s_lookupCellValueType.set(10,
					oFF.XValueType.DECIMAL_FLOAT);
			oFF.QInAConverter.s_lookupCellValueType.set(11,
					oFF.XValueType.DATE_TIME);
			oFF.QInAConverter.s_lookupCellValueType.set(12,
					oFF.XValueType.DATE_TIME);
			oFF.QInAConverter.s_lookupCellValueType.set(13,
					oFF.XValueType.BOOLEAN);
			oFF.QInAConverter.s_lookupCellValueType.set(14,
					oFF.XValueType.POLYGON);
		},
		mapConstant : function(mapToEnum, mapToIna, ffConstant, inaConstant) {
			mapToEnum.put(inaConstant, ffConstant);
			mapToIna.put(ffConstant.getName(), inaConstant);
		},
		mapValueType : function(inaConstant, ffConstant) {
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupValueType,
					oFF.QInAConverter.s_lookupValueTypeIna, ffConstant,
					inaConstant);
			oFF.QInAConverter.s_lookupValueType.put(oFF.XString
					.toUpperCase(inaConstant), ffConstant);
		},
		mapAggregationType : function(inaConstant, ffConstant) {
			oFF.QInAConverter.mapConstant(
					oFF.QInAConverter.s_lookupAggregationType,
					oFF.QInAConverter.s_lookupAggregationTypeIna, ffConstant,
					inaConstant);
		},
		mapComponentType : function(inaConstant, ffConstant) {
			oFF.QInAConverter.mapConstant(
					oFF.QInAConverter.s_lookupComponentType,
					oFF.QInAConverter.s_lookupComponentTypeIna, ffConstant,
					inaConstant);
		},
		mapSortType : function(inaConstant, ffConstant) {
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupSortType,
					oFF.QInAConverter.s_lookupSortTypeIna, ffConstant,
					inaConstant);
		},
		mapComparison : function(inaConstant, ffConstant) {
			oFF.QInAConverter.s_lookupComparison.put(inaConstant, ffConstant);
			if (!oFF.QInAConverter.s_lookupComparisonIna.containsKey(ffConstant
					.getName())) {
				oFF.QInAConverter.s_lookupComparisonIna.put(ffConstant
						.getName(), inaConstant);
			}
		},
		mapPresentationType : function(inaConstant, ffConstant) {
			oFF.QInAConverter.mapConstant(
					oFF.QInAConverter.s_lookupPresentationType,
					oFF.QInAConverter.s_lookupPresentationTypeIna, ffConstant,
					inaConstant);
		},
		mapInfoObjectType : function(inaConstant, ffConstant) {
			oFF.QInAConverter.mapConstant(
					oFF.QInAConverter.s_lookupInfoObjectType,
					oFF.QInAConverter.s_lookupInfoObjectTypeIna, ffConstant,
					inaConstant);
		},
		mapVisibilityType : function(inaConstant, ffConstant) {
			oFF.QInAConverter.mapConstant(
					oFF.QInAConverter.s_lookupVisibilityType,
					oFF.QInAConverter.s_lookupVisibilityTypeIna, ffConstant,
					inaConstant);
		},
		mapReadMode : function(inaConstant, ffConstant) {
			oFF.QInAConverter.mapConstant(oFF.QInAConverter.s_lookupReadMode,
					oFF.QInAConverter.s_lookupReadModeIna, ffConstant,
					inaConstant);
		},
		lookupInAString : function(map, constant) {
			return oFF.isNull(constant) ? null : map.getByKey(constant
					.getName());
		},
		lookupMeasureStructureMemberTypeIna : function(memberType) {
			if (oFF.isNull(memberType)) {
				return null;
			}
			if (memberType.isEqualTo(oFF.MemberType.RESTRICTED_MEASURE)) {
				return "SelectionMeasure";
			}
			if (memberType.isEqualTo(oFF.MemberType.FORMULA)) {
				return "FormulaMeasure";
			}
			return "Measure";
		},
		lookupAggregationTypeInA : function(ffConstant) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupAggregationTypeIna, ffConstant);
		},
		lookupAggregationType : function(inaConstant) {
			return oFF.QInAConverter.s_lookupAggregationType
					.getByKey(inaConstant);
		},
		lookupAggregationType2 : function(inaAggregationType) {
			switch (inaAggregationType) {
			case 1:
				return oFF.AggregationType.SUM;
			case 2:
				return oFF.AggregationType.COUNT;
			case 3:
				return oFF.AggregationType.MIN;
			case 4:
				return oFF.AggregationType.MAX;
			case 5:
				return oFF.AggregationType.AVERAGE;
			case 6:
				return oFF.AggregationType.COUNT_DISTINCT;
			case 7:
				return oFF.AggregationType.LAST;
			case 8:
				return oFF.AggregationType.FIRST;
			case 9:
				return oFF.AggregationType.VARIANCE;
			case 10:
				return oFF.AggregationType.STANDARD_DEVIATION;
			case 11:
				return oFF.AggregationType.NOP_NULL;
			case 12:
				return oFF.AggregationType.NOP_NULL_ZERO;
			default:
				return null;
			}
		},
		lookupComparisonInA : function(ffConstant) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupComparisonIna, ffConstant);
		},
		lookupComparison : function(inaConstant) {
			return oFF.QInAConverter.s_lookupComparison.getByKey(inaConstant);
		},
		lookupConstantWithDefault : function(map, key, defaultConstant) {
			var ffConstant = map.getByKey(key);
			return oFF.isNull(ffConstant) ? defaultConstant : ffConstant;
		},
		lookupPresentationType : function(inaConstant) {
			return oFF.QInAConverter.lookupConstantWithDefault(
					oFF.QInAConverter.s_lookupPresentationType, inaConstant,
					oFF.PresentationType.VALUE);
		},
		lookupPresentationTypeInA : function(ffConstant) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupPresentationTypeIna, ffConstant);
		},
		lookupInfoObjectType : function(inaConstant) {
			return oFF.QInAConverter.s_lookupInfoObjectType
					.getByKey(inaConstant);
		},
		lookupInfoObjectTypeInA : function(ffConstant) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupInfoObjectTypeIna, ffConstant);
		},
		lookupVisibilityType : function(inaConstant) {
			return oFF.QInAConverter.s_lookupVisibilityType
					.getByKey(inaConstant);
		},
		lookupVisibilityTypeInA : function(ffConstant) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupVisibilityTypeIna, ffConstant);
		},
		lookupSortDirectionInA : function(sortDirection) {
			if (sortDirection === oFF.XSortDirection.ASCENDING) {
				return 1;
			}
			if (sortDirection === oFF.XSortDirection.DESCENDING) {
				return 2;
			}
			if (sortDirection === oFF.XSortDirection.NONE) {
				return 3;
			}
			return 0;
		},
		lookupSortDirectionInA2 : function(sortDirection) {
			if (sortDirection === oFF.XSortDirection.ASCENDING) {
				return "Asc";
			}
			if (sortDirection === oFF.XSortDirection.DESCENDING) {
				return "Desc";
			}
			return "None";
		},
		lookupSortDirection : function(inaSortDirection) {
			switch (inaSortDirection) {
			case 1:
				return oFF.XSortDirection.ASCENDING;
			case 2:
				return oFF.XSortDirection.DESCENDING;
			case 3:
				return oFF.XSortDirection.NONE;
			default:
				return oFF.XSortDirection.DEFAULT_VALUE;
			}
		},
		lookupSortDirection2 : function(inaSortDirection) {
			if (oFF.XString.isEqual("Asc", inaSortDirection)) {
				return oFF.XSortDirection.ASCENDING;
			}
			if (oFF.XString.isEqual("Desc", inaSortDirection)) {
				return oFF.XSortDirection.DESCENDING;
			}
			return oFF.XSortDirection.NONE;
		},
		lookupDimensionType : function(inaDimType) {
			if (inaDimType < 1 || inaDimType === 3) {
				return oFF.DimensionType.DIMENSION;
			}
			if (inaDimType > 12) {
				throw oFF.XException
						.createIllegalStateException("Unknown dimension type");
			}
			return oFF.QInAConverter.s_lookupDimensionTypeInt.get(inaDimType);
		},
		indexOf : function(array, ffConstant) {
			var size = array.size();
			var i;
			for (i = 1; i < size; i++) {
				if (array.get(i) === ffConstant) {
					return i;
				}
			}
			return -1;
		},
		lookupDimensionTypeInA : function(dimType) {
			var inaEncoded;
			if (dimType === oFF.DimensionType.CALCULATED_DIMENSION) {
				return 3;
			}
			inaEncoded = oFF.QInAConverter.indexOf(
					oFF.QInAConverter.s_lookupDimensionTypeInt, dimType);
			if (inaEncoded === -1) {
				throw oFF.XException
						.createIllegalStateException("Unknown dimension type");
			}
			return inaEncoded;
		},
		lookupValidOrDefault : function(actual, max, defaultConstant, constants) {
			return actual < 0 || actual > max ? defaultConstant : constants
					.get(actual);
		},
		lookupResultSetState : function(inaResultSetState) {
			return oFF.QInAConverter.lookupValidOrDefault(inaResultSetState, 6,
					oFF.ResultSetState.ERROR,
					oFF.QInAConverter.s_lookupResultsetState);
		},
		lookupReadModeInA : function(readMode) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupReadModeIna, readMode);
		},
		lookupReadMode : function(readMode) {
			return oFF.QInAConverter.s_lookupReadMode.getByKey(readMode);
		},
		lookupDrillState : function(drillState, convertUdhDrillStates) {
			switch (drillState) {
			case 2:
				return oFF.DrillState.COLLAPSED;
			case 3:
				return oFF.DrillState.EXPANDED;
			case 1:
				return oFF.DrillState.LEAF;
			case 4:
				return convertUdhDrillStates ? oFF.DrillState.EXPANDED
						: oFF.DrillState.DRILLED;
			case 100:
				return convertUdhDrillStates ? oFF.DrillState.EXPANDED
						: oFF.DrillState.LEAF_DRILLDOWN_ALLOWED;
			case 101:
				return convertUdhDrillStates ? oFF.DrillState.EXPANDED
						: oFF.DrillState.LEAF_UDH_EXPAND_ALLOWED;
			case 102:
				return convertUdhDrillStates ? oFF.DrillState.LEAF
						: oFF.DrillState.LEAF_UDH;
			case 103:
				return convertUdhDrillStates ? oFF.DrillState.COLLAPSED
						: oFF.DrillState.COLLAPSED_EXPAND_AND_DRILLDOWN_ALLOWED;
			default:
				return null;
			}
		},
		lookupDrillStateOp : function(drillState) {
			if (oFF.isNull(drillState)) {
				return null;
			}
			switch (drillState) {
			case "Collapsed":
				return oFF.DrillState.COLLAPSED;
			case "Expanded":
				return oFF.DrillState.EXPANDED;
			case "Drilled":
				return oFF.DrillState.DRILLED;
			default:
				return null;
			}
		},
		lookupDrillStateInA : function(drillState) {
			if (drillState === oFF.DrillState.COLLAPSED) {
				return "Collapsed";
			}
			if (drillState === oFF.DrillState.EXPANDED) {
				return "Expanded";
			}
			if (drillState === oFF.DrillState.DRILLED) {
				return "Drilled";
			}
			return null;
		},
		lookupEncoding : function(encoding) {
			return oFF.QInAConverter.s_lookupEncoding.getByKey(encoding);
		},
		lookupHierarchyLevelTypeIna : function(hierarchyLevelType) {
			if (hierarchyLevelType === oFF.HierarchyLevelType.ALL) {
				return 1;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_YEAR) {
				return 20;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_HALF_YEAR) {
				return 36;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_QUARTER) {
				return 68;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_MONTH) {
				return 132;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_WEEK) {
				return 260;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_DAY) {
				return 516;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_HOUR) {
				return 772;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_MINUTE) {
				return 1028;
			}
			if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_SECOND) {
				return 2052;
			}
			return 0;
		},
		lookupHierarchyLevelType : function(intType) {
			switch (intType) {
			case 1:
				return oFF.HierarchyLevelType.ALL;
			case 20:
				return oFF.HierarchyLevelType.TIME_YEAR;
			case 36:
				return oFF.HierarchyLevelType.TIME_HALF_YEAR;
			case 68:
				return oFF.HierarchyLevelType.TIME_QUARTER;
			case 132:
				return oFF.HierarchyLevelType.TIME_MONTH;
			case 260:
				return oFF.HierarchyLevelType.TIME_WEEK;
			case 516:
				return oFF.HierarchyLevelType.TIME_DAY;
			case 772:
				return oFF.HierarchyLevelType.TIME_HOUR;
			case 1028:
				return oFF.HierarchyLevelType.TIME_MINUTE;
			case 2052:
				return oFF.HierarchyLevelType.TIME_SECOND;
			default:
				return oFF.HierarchyLevelType.REGULAR;
			}
		},
		lookupException : function(inaException) {
			return oFF.QInAConverter.lookupValidOrDefault(inaException, 10,
					oFF.ValueException.ERROR,
					oFF.QInAConverter.s_lookupValueException);
		},
		lookupSingleValueCalculation : function(inaType) {
			return oFF.QInAConverter.s_lookupSingleValueCalculation
					.getByKey(inaType);
		},
		lookupResultCalculation : function(inaType) {
			return oFF.QInAConverter.s_lookupResultCalculation
					.getByKey(inaType);
		},
		lookupMemberType : function(inaType) {
			switch (inaType) {
			case 1:
				return oFF.MemberType.RESULT;
			case 2:
				return oFF.MemberType.CONDITION_RESULT;
			case 3:
				return oFF.MemberType.CONDITION_OTHERS_RESULT;
			default:
				return oFF.MemberType.MEMBER;
			}
		},
		lookupMeasureStructureMemberType : function(inaMemberType) {
			if (oFF.isNull(inaMemberType)) {
				return null;
			}
			switch (inaMemberType) {
			case "Measure":
				return oFF.MemberType.MEASURE;
			case "SelectionMeasure":
				return oFF.MemberType.RESTRICTED_MEASURE;
			case "FormulaMeasure":
				return oFF.MemberType.FORMULA;
			default:
				return null;
			}
		},
		lookupValueTypeByInt : function(cellValueType) {
			return oFF.QInAConverter.lookupValidOrDefault(cellValueType, 14,
					oFF.XValueType.DOUBLE,
					oFF.QInAConverter.s_lookupCellValueType);
		},
		lookupIntByValueType : function(valueType) {
			var inaEncoded = oFF.QInAConverter.indexOf(
					oFF.QInAConverter.s_lookupCellValueType, valueType);
			return inaEncoded === -1 ? 0 : inaEncoded;
		},
		lookupValueTypeInA : function(dataType) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupValueTypeIna, dataType);
		},
		lookupValueType : function(dataType) {
			return oFF.QInAConverter.lookupConstantWithDefault(
					oFF.QInAConverter.s_lookupValueType, dataType,
					oFF.XValueType.UNSUPPORTED);
		},
		lookupAlignment : function(inaAlignment) {
			if (oFF.isNull(inaAlignment)) {
				return oFF.ResultAlignment.NONE;
			}
			switch (inaAlignment) {
			case "Top":
				return oFF.ResultAlignment.TOP;
			case "Bottom":
				return oFF.ResultAlignment.BOTTOM;
			case "TopBottom":
				return oFF.ResultAlignment.TOPBOTTOM;
			case "Structure":
				return oFF.ResultAlignment.STRUCTURE;
			default:
				return oFF.ResultAlignment.NONE;
			}
		},
		lookupAlignmentInA : function(alignment) {
			if (alignment === oFF.ResultAlignment.TOP) {
				return "Top";
			}
			if (alignment === oFF.ResultAlignment.BOTTOM) {
				return "Bottom";
			}
			if (alignment === oFF.ResultAlignment.TOPBOTTOM) {
				return "TopBottom";
			}
			if (alignment === oFF.ResultAlignment.STRUCTURE) {
				return "Structure";
			}
			return "None";
		},
		lookupReordering : function(inaReordering) {
			if (oFF.isNull(inaReordering)) {
				return oFF.ReorderingCapability.NONE;
			}
			switch (inaReordering) {
			case "Full":
				return oFF.ReorderingCapability.FULL;
			case "Restricted":
				return oFF.ReorderingCapability.RESTRICTED;
			default:
				return oFF.ReorderingCapability.NONE;
			}
		},
		lookupReorderingInA : function(reorderingCapability) {
			if (reorderingCapability === oFF.ReorderingCapability.FULL) {
				return "Full";
			}
			if (reorderingCapability === oFF.ReorderingCapability.RESTRICTED) {
				return "Restricted";
			}
			return "None";
		},
		lookupAxisType : function(inaAxisType) {
			return oFF.QInAConverter.lookupConstantWithDefault(
					oFF.QInAConverter.s_lookupAxisType, inaAxisType,
					oFF.AxisType.FREE);
		},
		lookupAxisTypeInA : function(axisType) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupAxisTypeIna, axisType);
		},
		lookupAxisTypeInt : function(inaAxisType) {
			switch (inaAxisType) {
			case 1:
				return oFF.AxisType.ROWS;
			case 2:
				return oFF.AxisType.COLUMNS;
			default:
				return oFF.AxisType.FREE;
			}
		},
		lookupAxisTypeInAInt : function(axisType) {
			if (axisType === oFF.AxisType.ROWS) {
				return 1;
			}
			if (axisType === oFF.AxisType.COLUMNS) {
				return 2;
			}
			if (axisType === oFF.AxisType.FREE) {
				return 3;
			}
			return 0;
		},
		lookupSuppressionType : function(suppressionTypeInA) {
			switch (suppressionTypeInA) {
			case 1:
				return oFF.ZeroSuppressionType.TOTAL_IS_ZERO;
			case 2:
				return oFF.ZeroSuppressionType.ALL_CELLS_ARE_ZERO;
			default:
				return oFF.ZeroSuppressionType.NONE;
			}
		},
		lookupSuppressionTypeInA : function(suppressionType) {
			if (suppressionType === oFF.ZeroSuppressionType.TOTAL_IS_ZERO) {
				return 1;
			}
			if (suppressionType === oFF.ZeroSuppressionType.ALL_CELLS_ARE_ZERO) {
				return 2;
			}
			return 0;
		},
		lookupFieldLayoutType : function(inaFieldLayoutType) {
			if (oFF.isNull(inaFieldLayoutType)) {
				return oFF.FieldLayoutType.FIELD_BASED;
			}
			switch (inaFieldLayoutType) {
			case "AttributeBased":
				return oFF.FieldLayoutType.ATTRIBUTE_BASED;
			case "AttributesAndPresentations":
				return oFF.FieldLayoutType.ATTRIBUTES_AND_PRESENTATIONS;
			default:
				return oFF.FieldLayoutType.FIELD_BASED;
			}
		},
		lookupFieldLayoutTypeInA : function(fieldLayoutType) {
			if (fieldLayoutType === oFF.FieldLayoutType.ATTRIBUTE_BASED) {
				return "AttributeBased";
			}
			if (fieldLayoutType === oFF.FieldLayoutType.ATTRIBUTES_AND_PRESENTATIONS) {
				return "AttributesAndPresentations";
			}
			return "FieldBased";
		},
		lookupLowerLevelNodeAlignment : function(inaAlignment) {
			if (oFF.isNull(inaAlignment)) {
				return oFF.Alignment.DEFAULT_VALUE;
			}
			switch (inaAlignment) {
			case "Above":
				return oFF.Alignment.CHILDREN_ABOVE_PARENT;
			case "Below":
				return oFF.Alignment.CHILDREN_BELOW_PARENT;
			default:
				return oFF.Alignment.DEFAULT_VALUE;
			}
		},
		lookupLowerLevelNodeAlignmentInA : function(alignment) {
			if (alignment === oFF.Alignment.CHILDREN_ABOVE_PARENT) {
				return "Above";
			}
			if (alignment === oFF.Alignment.CHILDREN_BELOW_PARENT) {
				return "Below";
			}
			return "Default";
		},
		lookupLowerLevelNodeAlignmentInA2 : function(alignment) {
			if (alignment === oFF.Alignment.CHILDREN_ABOVE_PARENT) {
				return "Below";
			}
			if (alignment === oFF.Alignment.CHILDREN_BELOW_PARENT) {
				return "Above";
			}
			return "Default";
		},
		lookupResultSetVisibility : function(visibility) {
			if (oFF.isNull(visibility)) {
				return oFF.ResultVisibility.HIDDEN;
			}
			switch (visibility) {
			case "Visible":
				return oFF.ResultVisibility.VISIBLE;
			case "Conditional":
				return oFF.ResultVisibility.CONDITIONAL;
			case "Always":
				return oFF.ResultVisibility.ALWAYS;
			default:
				return oFF.ResultVisibility.HIDDEN;
			}
		},
		lookupResultSetVisibilityInA : function(visibility) {
			if (visibility === oFF.ResultVisibility.VISIBLE) {
				return "Visible";
			}
			if (visibility === oFF.ResultVisibility.CONDITIONAL) {
				return "Conditional";
			}
			if (visibility === oFF.ResultVisibility.ALWAYS) {
				return "Always";
			}
			return "Hidden";
		},
		lookupAlertLevel : function(inaAlertLevel) {
			return oFF.QInAConverter.lookupValidOrDefault(inaAlertLevel, 9,
					null, oFF.QInAConverter.s_lookupAlertLevelInt);
		},
		lookupOperatorInA : function(theOperator) {
			if (oFF.isNull(theOperator)) {
				return null;
			}
			return theOperator === oFF.ComparisonOperator.EQUAL ? "="
					: theOperator.getDisplayString();
		},
		lookupSortType : function(sortType) {
			return oFF.QInAConverter.s_lookupSortType.getByKey(sortType);
		},
		lookupSortTypeInA : function(sortType) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupSortTypeIna, sortType);
		},
		lookupConfigLevel : function(inaConfigLevel) {
			if (oFF.isNull(inaConfigLevel)) {
				return oFF.QModelLevel.NONE;
			}
			switch (inaConfigLevel) {
			case "Query":
				return oFF.QModelLevel.QUERY;
			case "Axis":
				return oFF.QModelLevel.AXES;
			case "Dimension":
				return oFF.QModelLevel.DIMENSIONS;
			default:
				return oFF.QModelLevel.NONE;
			}
		},
		lookupConfigLevelInA : function(configLevel) {
			if (configLevel === oFF.QModelLevel.QUERY) {
				return "Query";
			}
			if (configLevel === oFF.QModelLevel.AXES) {
				return "Axis";
			}
			if (configLevel === oFF.QModelLevel.DIMENSIONS) {
				return "Dimension";
			}
			return "None";
		},
		lookupComparisonGroup : function(inaComparisonGroup) {
			if (oFF.isNull(inaComparisonGroup)) {
				return null;
			}
			switch (inaComparisonGroup) {
			case "SingleValue":
				return oFF.QSetSignComparisonOperatorGroup.SINGLE_VALUE;
			case "Interval":
				return oFF.QSetSignComparisonOperatorGroup.INTERVAL;
			case "Range":
				return oFF.QSetSignComparisonOperatorGroup.RANGE;
			default:
				return null;
			}
		},
		lookupComparisonGroupInA : function(comparisonGroup) {
			if (oFF.notNull(comparisonGroup)) {
				if (comparisonGroup
						.isTypeOf(oFF.QSetSignComparisonOperatorGroup.INTERVAL)) {
					return "Interval";
				}
				if (comparisonGroup
						.isTypeOf(oFF.QSetSignComparisonOperatorGroup.RANGE)) {
					return "Range";
				}
				if (comparisonGroup
						.isTypeOf(oFF.QSetSignComparisonOperatorGroup.SINGLE_VALUE)) {
					return "SingleValue";
				}
			}
			return null;
		},
		switchComparisonGroupToIncludeOnly : function(comparisonGroup) {
			if (comparisonGroup === oFF.QSetSignComparisonOperatorGroup.INTERVAL) {
				return oFF.QSetSignComparisonOperatorGroup.INTERVAL_INCLUDE_ONLY;
			}
			if (comparisonGroup === oFF.QSetSignComparisonOperatorGroup.RANGE) {
				return oFF.QSetSignComparisonOperatorGroup.RANGE_INCLUDE_ONLY;
			}
			if (comparisonGroup === oFF.QSetSignComparisonOperatorGroup.SINGLE_VALUE) {
				return oFF.QSetSignComparisonOperatorGroup.SINGLE_VALUE_INCLUDE_ONLY;
			}
			return comparisonGroup;
		},
		lookupComponentTypeInA : function(componentType) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_lookupComponentTypeIna, componentType);
		},
		lookupComponentType : function(inaComponentType) {
			return oFF.QInAConverter.s_lookupComponentType
					.getByKey(inaComponentType);
		},
		lookupResultStructureElementInA : function(ffConstant) {
			if (ffConstant === oFF.ResultStructureElement.MEMBERS) {
				return "Members";
			}
			if (ffConstant === oFF.ResultStructureElement.TOTAL) {
				return "Total";
			}
			if (ffConstant === oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS) {
				return "TotalIncludedMembers";
			}
			if (ffConstant === oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS) {
				return "TotalRemainingMembers";
			}
			return null;
		},
		lookupResultStructureElement : function(inaConstant) {
			if (oFF.isNull(inaConstant)) {
				return null;
			}
			switch (inaConstant) {
			case "Members":
				return oFF.ResultStructureElement.MEMBERS;
			case "Total":
				return oFF.ResultStructureElement.TOTAL;
			case "TotalIncludedMembers":
				return oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS;
			case "TotalRemainingMembers":
				return oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS;
			default:
				return null;
			}
		},
		lookupTextTransformationInA : function(ffConstant) {
			return oFF.QInAConverter.lookupInAString(
					oFF.QInAConverter.s_textTransformationIna, ffConstant);
		},
		lookupTextTransformation : function(inaConstant) {
			return oFF.QInAConverter.s_textTransformation.getByKey(inaConstant);
		}
	};
	oFF.QInAExportFactory = function() {
	};
	oFF.QInAExportFactory.prototype = new oFF.XObject();
	oFF.QInAExportFactory.s_factories = null;
	oFF.QInAExportFactory.staticSetup = function() {
		oFF.QInAExportFactory.s_factories = oFF.XHashMapByString.create();
	};
	oFF.QInAExportFactory.put = function(modelFormat, factory) {
		oFF.QInAExportFactory.s_factories.put(modelFormat.getName(), factory);
	};
	oFF.QInAExportFactory.create = function(application, modelFormat,
			capabilities, memberReadModeContext) {
		var factory = oFF.QInAExportFactory.s_factories.getByKey(modelFormat
				.getName());
		if (oFF.isNull(factory)) {
			return null;
		}
		return factory.createExporter(application, modelFormat, capabilities,
				memberReadModeContext);
	};
	oFF.QInAExportFactory.createForValueHelp = function(application,
			capabilities) {
		return oFF.QInAExportFactory.create(application,
				oFF.QModelFormat.INA_VALUE_HELP, capabilities,
				oFF.QContextType.SELECTOR);
	};
	oFF.QInAExportFactory.createForData = function(application, capabilities) {
		return oFF.QInAExportFactory.create(application,
				oFF.QModelFormat.INA_DATA, capabilities,
				oFF.QContextType.RESULT_SET);
	};
	oFF.QInAExportFactory.createForRepository = function(application,
			capabilities) {
		return oFF.QInAExportFactory.create(application,
				oFF.QModelFormat.INA_REPOSITORY, capabilities, null);
	};
	oFF.QInAExportFactory.createForLayer = function(application, capabilities) {
		return oFF.QInAExportFactory.create(application,
				oFF.QModelFormat.LAYER, capabilities, null);
	};
	oFF.QInAExportFactory.createForCloning = function(application, capabilities) {
		return oFF.QInAExportFactory.create(application,
				oFF.QModelFormat.INA_CLONE, capabilities, null);
	};
	oFF.QInAExportFactory.createForBlending = function(application) {
		return oFF.QInAExportFactory.create(application,
				oFF.QModelFormat.INA_METADATA_BLENDING, null, null);
	};
	oFF.QInAImportFactory = function() {
	};
	oFF.QInAImportFactory.prototype = new oFF.XObject();
	oFF.QInAImportFactory.s_factories = null;
	oFF.QInAImportFactory.staticSetup = function() {
		oFF.QInAImportFactory.s_factories = oFF.XHashMapByString.create();
	};
	oFF.QInAImportFactory.put = function(modelFormat, factory) {
		oFF.QInAImportFactory.s_factories.put(modelFormat.getName(), factory);
	};
	oFF.QInAImportFactory.create = function(application, modelFormat,
			capabilities) {
		var factory = oFF.QInAImportFactory.s_factories.getByKey(modelFormat
				.getName());
		if (oFF.isNull(factory)) {
			return null;
		}
		return factory.createImporter(application, modelFormat, capabilities);
	};
	oFF.QInAImportFactory.createWithQueryManagerCapabilities = function(
			application, modelFormat, queryManager) {
		var factory = oFF.QInAImportFactory.s_factories.getByKey(modelFormat
				.getName());
		if (oFF.isNull(factory)) {
			return null;
		}
		return factory.createImporterWithQueryManagerCapabilities(application,
				modelFormat, queryManager);
	};
	oFF.QInAImportFactory.createForData = function(application, capabilities) {
		return oFF.QInAImportFactory.create(application,
				oFF.QModelFormat.INA_DATA, capabilities);
	};
	oFF.QInAImportFactory.createForDataReinit = function(application,
			capabilities) {
		return oFF.QInAImportFactory.create(application,
				oFF.QModelFormat.INA_DATA_REINIT, capabilities);
	};
	oFF.QInAImportFactory.createForRepository = function(application,
			capabilities) {
		return oFF.QInAImportFactory.create(application,
				oFF.QModelFormat.INA_REPOSITORY, capabilities);
	};
	oFF.QInAImportFactory.createForMetadata = function(application,
			capabilities) {
		return oFF.QInAImportFactory.create(application,
				oFF.QModelFormat.INA_METADATA, capabilities);
	};
	oFF.QInAImportFactory.createForMetadataCore = function(application,
			capabilities) {
		return oFF.QInAImportFactory.create(application,
				oFF.QModelFormat.INA_METADATA_CORE, capabilities);
	};
	oFF.QInAImportFactory.createForCloning = function(application, capabilities) {
		return oFF.QInAImportFactory.create(application,
				oFF.QModelFormat.INA_CLONE, capabilities);
	};
	oFF.QInAImportFactory.createForLayer = function(application, capabilities) {
		return oFF.QInAImportFactory.create(application,
				oFF.QModelFormat.LAYER, capabilities);
	};
	oFF.QRriTarget = function() {
	};
	oFF.QRriTarget.prototype = new oFF.XObject();
	oFF.QRriTarget.create = function() {
		var target = new oFF.QRriTarget();
		target.m_parameters = oFF.XHashMapOfStringByString.create();
		target.m_customProperties = oFF.XHashMapOfStringByString.create();
		return target;
	};
	oFF.QRriTarget.prototype.m_parameters = null;
	oFF.QRriTarget.prototype.m_customProperties = null;
	oFF.QRriTarget.prototype.releaseObject = function() {
		this.m_parameters = oFF.XObjectExt.release(this.m_parameters);
		this.m_customProperties = oFF.XObjectExt
				.release(this.m_customProperties);
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.QRriTarget.prototype.getParameters = function() {
		return this.m_parameters;
	};
	oFF.QRriTarget.prototype.getCustomProperties = function() {
		return this.m_customProperties;
	};
	oFF.QRriTarget.prototype.getDataSource = function() {
		var receiverApplicationType = this.m_parameters
				.getByKey("ReceiverApplicationType");
		var query;
		var rriName;
		var rriValue;
		var dataSource;
		if (!oFF.XString.isEqual(receiverApplicationType, "QURY")) {
			return null;
		}
		query = this.m_customProperties.getByKey("QUERY");
		if (oFF.XStringUtils.isNullOrEmpty(query)) {
			return null;
		}
		rriName = this.m_customProperties.getByKey("RRI_PARAMETER_NAME");
		if (oFF.XStringUtils.isNullOrEmpty(rriName)) {
			return null;
		}
		rriValue = this.m_customProperties.getByKey("RRI_PARAMETER_VALUE");
		if (oFF.XStringUtils.isNullOrEmpty(rriValue)) {
			return null;
		}
		dataSource = oFF.QFactory.newDataSource();
		dataSource.setType(oFF.MetaObjectType.QUERY);
		dataSource.setObjectName(query);
		dataSource.setRriName(rriName);
		dataSource.setRriValue(rriValue);
		return dataSource;
	};
	oFF.QRriTarget.prototype.canBeExecutedLocally = function() {
		var logicalDestination;
		if (this.m_parameters.containsKey("LogicalDestination")) {
			logicalDestination = this.m_parameters
					.getByKey("LogicalDestination");
			if (oFF.XStringUtils.isNullOrEmpty(logicalDestination)) {
				return true;
			}
			return oFF.XString.isEqual(logicalDestination, "*");
		}
		return false;
	};
	oFF.QRriTargetCallbackIdentifier = function() {
	};
	oFF.QRriTargetCallbackIdentifier.prototype = new oFF.XObject();
	oFF.QRriTargetCallbackIdentifier.prototype.manager = null;
	oFF.QRriTargetCallbackIdentifier.prototype.row = 0;
	oFF.QRriTargetCallbackIdentifier.prototype.column = 0;
	oFF.QRriTargetCallbackIdentifier.prototype.listener = null;
	oFF.QRriTargetCallbackIdentifier.prototype.customIdentifier = null;
	oFF.QRriTargetManager = function() {
	};
	oFF.QRriTargetManager.prototype = new oFF.XObject();
	oFF.QRriTargetManager.create = function(queryManager) {
		var rriTargetManager = new oFF.QRriTargetManager();
		rriTargetManager.setupInstance(queryManager);
		return rriTargetManager;
	};
	oFF.QRriTargetManager.prototype.m_resultSetRow = 0;
	oFF.QRriTargetManager.prototype.m_resultSetColumn = 0;
	oFF.QRriTargetManager.prototype.m_queryManager = null;
	oFF.QRriTargetManager.prototype.m_extResult = null;
	oFF.QRriTargetManager.prototype.setupInstance = function(queryManager) {
		this.m_queryManager = oFF.XWeakReferenceUtil.getWeakRef(queryManager);
	};
	oFF.QRriTargetManager.prototype.releaseObject = function() {
		this.m_queryManager = oFF.XObjectExt.release(this.m_queryManager);
		this.m_extResult = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.QRriTargetManager.prototype.setResult = function(extResult, identifier) {
		var rriTargets;
		this.m_extResult = extResult;
		if (oFF.notNull(identifier.listener)) {
			rriTargets = null;
			if (extResult.isValid()) {
				rriTargets = extResult.getData();
			}
			identifier.listener.onRriTargetResolution(extResult, rriTargets,
					identifier.customIdentifier);
		}
	};
	oFF.QRriTargetManager.prototype.setResultSetContext = function(
			resultSetRow, resultSetColumn) {
		this.m_resultSetRow = resultSetRow;
		this.m_resultSetColumn = resultSetColumn;
	};
	oFF.QRriTargetManager.prototype.getResultSetRow = function() {
		return this.m_resultSetRow;
	};
	oFF.QRriTargetManager.prototype.getResultSetColumn = function() {
		return this.m_resultSetColumn;
	};
	oFF.QRriTargetManager.prototype.processRriTargetResolution = function(
			syncType, listener, customIdentifier) {
		var identifier = new oFF.QRriTargetCallbackIdentifier();
		var queryManager;
		var result;
		identifier.row = this.m_resultSetRow;
		identifier.column = this.m_resultSetColumn;
		identifier.manager = this;
		identifier.customIdentifier = customIdentifier;
		identifier.listener = listener;
		this.m_extResult = null;
		queryManager = oFF.XWeakReferenceUtil.getHardRef(this.m_queryManager);
		queryManager.processRriTargetSync(syncType, identifier);
		result = this.m_extResult;
		this.m_extResult = null;
		return result;
	};
	oFF.QRequestSettings = function() {
	};
	oFF.QRequestSettings.prototype = new oFF.XObject();
	oFF.QRequestSettings.create = function(offset, windowSize, isHierarchyShot) {
		var newObj = new oFF.QRequestSettings();
		newObj.m_offset = offset;
		newObj.m_windowSize = windowSize;
		newObj.m_isHierarchyShot = isHierarchyShot;
		return newObj;
	};
	oFF.QRequestSettings.prototype.m_offset = 0;
	oFF.QRequestSettings.prototype.m_windowSize = 0;
	oFF.QRequestSettings.prototype.m_isHierarchyShot = false;
	oFF.QRequestSettings.prototype.m_isDeltaDrill = false;
	oFF.QVariableUtils = function() {
	};
	oFF.QVariableUtils.prototype = new oFF.XObject();
	oFF.QVariableUtils.getInputEnabledVariable = function(variables, name) {
		var variable = variables.getByKey(name);
		if (oFF.notNull(variable) && variable.isInputEnabled()) {
			return variable;
		}
		return null;
	};
	oFF.QVariableUtils.getVariablesByType = function(variables, type) {
		var variablesByType = oFF.XListOfNameObject.create();
		var variablesSize = variables.size();
		var i;
		var variable;
		for (i = 0; i < variablesSize; i++) {
			variable = variables.get(i);
			if (variable.getVariableType().isTypeOf(type)) {
				variablesByType.add(variable);
			}
		}
		return variablesByType;
	};
	oFF.QVariableUtils.getHierarchyNameVariables = function(variables) {
		return oFF.QVariableUtils.getVariablesByType(variables,
				oFF.VariableType.HIERARCHY_NAME_VARIABLE);
	};
	oFF.QVariableUtils.getDimensionMemberVariables = function(variables) {
		return oFF.QVariableUtils.getVariablesByType(variables,
				oFF.VariableType.DIMENSION_MEMBER_VARIABLE);
	};
	oFF.QVariableUtils.getVariableByType = function(variables, name, type) {
		var variable = variables.getByKey(name);
		if (oFF.notNull(variable) && variable.getVariableType() === type) {
			return variable;
		}
		return null;
	};
	oFF.QVariableUtils.getInputEnabledVariables = function(variables) {
		var inputEnabledVariables = oFF.XListOfNameObject.create();
		var variablesSize = variables.size();
		var i;
		var variable;
		for (i = 0; i < variablesSize; i++) {
			variable = variables.get(i);
			if (variable.isInputEnabled()) {
				inputEnabledVariables.add(variable);
			}
		}
		return inputEnabledVariables;
	};
	oFF.QVariableUtils.hasInputEnabledVariables = function(variables) {
		var variablesSize;
		var i;
		if (oFF.isNull(variables)) {
			return false;
		}
		variablesSize = variables.size();
		for (i = 0; i < variablesSize; i++) {
			if (variables.get(i).isInputEnabled()) {
				return true;
			}
		}
		return false;
	};
	oFF.QVariableUtils.hasMandatoryVariables = function(variables) {
		var variablesSize;
		var i;
		if (oFF.isNull(variables)) {
			return false;
		}
		variablesSize = variables.size();
		for (i = 0; i < variablesSize; i++) {
			if (variables.get(i).isMandatory()) {
				return true;
			}
		}
		return false;
	};
	oFF.QVariableUtils.clearExternalVariablesRepresentations = function(
			variables) {
		var variablesSize;
		var i;
		if (oFF.notNull(variables)) {
			variablesSize = variables.size();
			for (i = 0; i < variablesSize; i++) {
				variables.get(i).setExternalRepresentation(null);
			}
		}
	};
	oFF.QBindingFactory = function() {
	};
	oFF.QBindingFactory.prototype = new oFF.DpBindingFactory();
	oFF.QBindingFactory.staticSetupOlapBindingFactory = function() {
		oFF.DpBindingFactory.registerFactory(
				oFF.OlapComponentType.OLAP_DATA_PROVIDER,
				new oFF.QBindingFactory());
	};
	oFF.QBindingFactory.prototype.newBindingProvider = function(component, path) {
		return new oFF.QBindingProvider();
	};
	oFF.QBindingProvider = function() {
	};
	oFF.QBindingProvider.prototype = new oFF.XObject();
	oFF.QBindingProvider.create = function(component, path) {
		var newObj = new oFF.QBindingProvider();
		newObj.m_component = component;
		newObj.m_path = path;
		return newObj;
	};
	oFF.QBindingProvider.prototype.m_component = null;
	oFF.QBindingProvider.prototype.m_path = null;
	oFF.QBindingProvider.prototype.getSenderBindings = function() {
		var list = oFF.XList.create();
		list.add(oFF.SemanticBindingType.PIE);
		list.add(oFF.SemanticBindingType.LINE);
		list.add(oFF.SemanticBindingType.COLUMN);
		list.add(oFF.SemanticBindingType.BAR);
		list.add(oFF.SemanticBindingType.TIMESERIES);
		list.add(oFF.SemanticBindingType.BOXPLOT);
		list.add(oFF.SemanticBindingType.COMBBCL);
		list.add(oFF.SemanticBindingType.TABLE);
		list.add(oFF.SemanticBindingType.AREA);
		list.add(oFF.SemanticBindingType.SCATTER);
		list.add(oFF.SemanticBindingType.BUBBLE);
		list.add(oFF.SemanticBindingType.SPLINE);
		list.add(oFF.SemanticBindingType.VARIABLEPIE);
		list.add(oFF.SemanticBindingType.HEATMAP);
		list.add(oFF.SemanticBindingType.TREEMAP);
		list.add(oFF.SemanticBindingType.VARIWIDE);
		list.add(oFF.SemanticBindingType.WORDCLOUD);
		list.add(oFF.SemanticBindingType.BELLCURVE);
		list.add(oFF.SemanticBindingType.SCATTER);
		list.add(oFF.SemanticBindingType.BUBBLE);
		list.add(oFF.SemanticBindingType.CHART);
		list.add(oFF.SemanticBindingType.JSON);
		list.add(oFF.SemanticBindingType.STRING);
		return list;
	};
	oFF.QBindingProvider.prototype.getReceiverBindings = function() {
		return oFF.XList.create();
	};
	oFF.QBindingProvider.prototype.getSenderProtocolBindings = function(type) {
		var list = oFF.XList.create();
		list.add(oFF.ProtocolBindingType.GOOGLE_CHART_PROTOCOL);
		list.add(oFF.ProtocolBindingType.HIGH_CHART_PROTOCOL);
		list.add(oFF.ProtocolBindingType.STRING);
		return list;
	};
	oFF.QBindingProvider.prototype.getReceiverProtocolBindings = function(type) {
		return oFF.XList.create();
	};
	oFF.QBindingProvider.prototype.newSenderBinding = function(type, protocol) {
		var dp = this.m_component;
		var senderBinding = oFF.QBindingResultset.create(dp, type, protocol);
		return senderBinding;
	};
	oFF.QBindingProvider.prototype.newReceiverBinding = function(type, protocol) {
		return null;
	};
	oFF.QBindingProvider.prototype.toString = function() {
		return this.m_path;
	};
	oFF.OlapEnvironmentFactoryImpl = function() {
	};
	oFF.OlapEnvironmentFactoryImpl.prototype = new oFF.OlapEnvironmentFactory();
	oFF.OlapEnvironmentFactoryImpl.staticSetupImpl = function() {
		var theFactory = new oFF.OlapEnvironmentFactoryImpl();
		oFF.OlapEnvironmentFactory.registerFactory(theFactory);
	};
	oFF.OlapEnvironmentFactoryImpl.prototype.newOlapEnvironmentInstance = function(
			application) {
		return oFF.OlapEnvironment.create(application);
	};
	oFF.OlapEnvironmentQMCreationListener = function() {
	};
	oFF.OlapEnvironmentQMCreationListener.prototype = new oFF.XObject();
	oFF.OlapEnvironmentQMCreationListener.create = function(olapEnvironment) {
		var newObj = new oFF.OlapEnvironmentQMCreationListener();
		newObj.m_olapEnvironment = oFF.XWeakReferenceUtil
				.getWeakRef(olapEnvironment);
		return newObj;
	};
	oFF.OlapEnvironmentQMCreationListener.prototype.m_olapEnvironment = null;
	oFF.OlapEnvironmentQMCreationListener.prototype.releaseObject = function() {
		this.m_olapEnvironment = oFF.XObjectExt.release(this.m_olapEnvironment);
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.OlapEnvironmentQMCreationListener.prototype.getOlapEnvironment = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_olapEnvironment);
	};
	oFF.OlapEnvironmentQMCreationListener.prototype.onQueryManagerCreated = function(
			extResult, queryManager, customIdentifier) {
		var queryManagerVirtualDs = queryManager;
		var customIdWithDetails = customIdentifier;
		var systemName = customIdWithDetails.getByKey(
				oFF.OlapEnvironment.SYSTEM_NAME).getString();
		var syncType;
		var listener;
		var customIdentifierOfListener;
		var targetQueryManager;
		var queryModelVirtualDs;
		var targetQueryModel;
		var virtualDatasource;
		var response;
		var resultSetContainer;
		var classicResultSet;
		this.getOlapEnvironment().putQueryManagerBySystemName(systemName,
				queryManagerVirtualDs);
		syncType = customIdWithDetails.getByKey(oFF.OlapEnvironment.SYNC_TYPE);
		listener = customIdWithDetails.getByKey(oFF.OlapEnvironment.LISTENER);
		customIdentifierOfListener = customIdWithDetails
				.getByKey(oFF.OlapEnvironment.CUSTOM_IDENTIFIER);
		targetQueryManager = customIdWithDetails
				.getByKey(oFF.OlapEnvironment.QUERY_MANAGER);
		queryModelVirtualDs = queryManagerVirtualDs.getQueryModel();
		targetQueryModel = targetQueryManager.getQueryModel();
		virtualDatasource = oFF.QFactory.newFilterDynamicVariables(
				queryModelVirtualDs, targetQueryModel.getDataSource());
		queryModelVirtualDs.getFilter().getDynamicFilter().setComplexRoot(
				virtualDatasource);
		queryModelVirtualDs.getConvenienceCommands().addAllDimensions();
		if (syncType === oFF.SyncType.BLOCKING) {
			response = queryManagerVirtualDs.processQueryExecution(syncType,
					listener, customIdentifierOfListener);
			resultSetContainer = response.getData();
			classicResultSet = resultSetContainer.getClassicResultSet();
			this.updateVariablesInQueryManager(targetQueryModel,
					queryModelVirtualDs, classicResultSet);
		} else {
			customIdWithDetails.put("QueryModelVirtualDatasource",
					queryModelVirtualDs);
			queryManagerVirtualDs.processQueryExecution(syncType, this,
					customIdWithDetails);
		}
	};
	oFF.OlapEnvironmentQMCreationListener.prototype.onQueryExecuted = function(
			extResult, resultSetContainer, customIdentifier) {
		var resultSet;
		var classicResultSet;
		var customIdWithDetails;
		var queryModelVirtualDs;
		var targetQueryManager;
		var targetQueryModel;
		var listener;
		var customIdentifierOfListener;
		if (extResult.hasErrors()) {
			throw oFF.XException.createRuntimeException(extResult.getSummary());
		}
		resultSet = extResult.getData();
		classicResultSet = resultSet.getClassicResultSet();
		customIdWithDetails = customIdentifier;
		queryModelVirtualDs = customIdWithDetails
				.getByKey("QueryModelVirtualDatasource");
		targetQueryManager = customIdWithDetails
				.getByKey(oFF.OlapEnvironment.QUERY_MANAGER);
		targetQueryModel = targetQueryManager.getQueryModel();
		this.updateVariablesInQueryManager(targetQueryModel,
				queryModelVirtualDs, classicResultSet);
		listener = customIdWithDetails.getByKey(oFF.OlapEnvironment.LISTENER);
		customIdentifierOfListener = customIdWithDetails
				.getByKey(oFF.OlapEnvironment.CUSTOM_IDENTIFIER);
		listener.onQueryExecuted(extResult, resultSetContainer,
				customIdentifierOfListener);
	};
	oFF.OlapEnvironmentQMCreationListener.prototype.updateVariablesInQueryManager = function(
			targetQueryModel, virtualDatasourceQueryModel, classicResultSet) {
		var rowsAxis = classicResultSet.getRowsAxis();
		var names = rowsAxis.getAllMembers(virtualDatasourceQueryModel
				.getDimensionByName("Name"));
		var lowValues = rowsAxis.getAllMembers(virtualDatasourceQueryModel
				.getDimensionByName("Low"));
		var highValues = rowsAxis.getAllMembers(virtualDatasourceQueryModel
				.getDimensionByName("High"));
		var sizeNames = names.size();
		var variables = targetQueryModel.getVariables();
		var numberOfVariables = variables.size();
		var variableIndex;
		var variable;
		var memberIndex;
		var dimensionMemberVariable;
		var memberFilter;
		var filterOperation;
		for (variableIndex = 0; variableIndex < numberOfVariables; variableIndex++) {
			variable = variables.get(variableIndex);
			if (!variable.isDynamicVariable()) {
				continue;
			}
			for (memberIndex = 0; memberIndex < sizeNames; memberIndex++) {
				if (oFF.XString.isEqual(names.get(memberIndex).getName(),
						variable.getName())) {
					variable.setValueByString(lowValues.get(memberIndex)
							.getName());
					if (variable.getVariableType() === oFF.VariableType.DIMENSION_MEMBER_VARIABLE
							&& oFF.XStringUtils.isNotNullAndNotEmpty(highValues
									.get(memberIndex).getName())) {
						dimensionMemberVariable = variable;
						memberFilter = dimensionMemberVariable
								.getMemberFilter();
						filterOperation = memberFilter.getCartesianElement(0);
						filterOperation.getHigh().setString(
								highValues.get(memberIndex).getName());
					}
				}
			}
		}
	};
	oFF.HierarchyCatalogItem = function() {
	};
	oFF.HierarchyCatalogItem.prototype = new oFF.XObject();
	oFF.HierarchyCatalogItem.createCatalogItem = function() {
		var catalogItem = new oFF.HierarchyCatalogItem();
		catalogItem.setHierarchyType(oFF.HierarchyType.UNKNOWN);
		return catalogItem;
	};
	oFF.HierarchyCatalogItem.createCopy = function(item) {
		var copy;
		var hierarchyLevelsCopy;
		var hierarchyLevels;
		var levelIndex;
		var hierarchyLevel;
		if (oFF.isNull(item)) {
			return null;
		}
		copy = oFF.HierarchyCatalogItem.createCatalogItem();
		copy.setHierarchyName(item.getHierarchyName());
		copy.setDimensionName(item.getDimensionName());
		if (item.hasHierarchyLongText()) {
			copy.setHierarchyLongText(item.getHierarchyLongText());
		}
		if (item.hasHierarchyMediumText()) {
			copy.setHierarchyMediumText(item.getHierarchyMediumText());
		}
		if (item.hasHierarchyShortText()) {
			copy.setHierarchyShortText(item.getHierarchyShortText());
		}
		if (item.hasVersionName()) {
			copy.setVersionName(item.getVersionName());
		}
		if (item.hasVersionDisplayKey()) {
			copy.setVersionDisplayKey(item.getVersionDisplayKey());
		}
		if (item.hasVersionDescription()) {
			copy.setVersionDescription(item.getVersionDescription());
		}
		copy.setDateTo(oFF.XObjectExt.cloneIfNotNull(item.getDateTo()));
		copy.setDateFrom(oFF.XObjectExt.cloneIfNotNull(item.getDateFrom()));
		if (item.hasOwner()) {
			copy.setOwner(item.getOwner());
		}
		if (item.hasHierId()) {
			copy.setHierId(item.getHierId());
		}
		if (item.hasHierType()) {
			copy.setHierType(item.getHierType());
		}
		if (item.hasObjectVersion()) {
			copy.setObjectVersion(item.getObjectVersion());
		}
		copy.setIsRemote(item.isRemote());
		copy.setIsModeled(item.isModeled());
		if (item.supportsHierarchyLevels()) {
			copy.setSupportsHierarchyLevels(true);
			hierarchyLevelsCopy = oFF.XList.create();
			hierarchyLevels = item.getHierarchyLevels();
			if (oFF.notNull(hierarchyLevels)) {
				for (levelIndex = 0; levelIndex < hierarchyLevels.size(); levelIndex++) {
					hierarchyLevel = hierarchyLevels.get(levelIndex);
					hierarchyLevelsCopy.add(oFF.HierarchyCatalogLevel
							.createCopy(hierarchyLevel));
				}
			}
			copy.setHierarchyLevels(hierarchyLevelsCopy);
		}
		copy.setHierarchyType(item.getHierarchyType());
		copy.setRestNode(item.getRestNode());
		copy.setVirtualRootNode(item.getVirtualRootNode());
		return copy;
	};
	oFF.HierarchyCatalogItem.prototype.m_hierarchyName = null;
	oFF.HierarchyCatalogItem.prototype.m_dimensionName = null;
	oFF.HierarchyCatalogItem.prototype.m_hierarchyShortText = null;
	oFF.HierarchyCatalogItem.prototype.m_hasHierarchyShortText = false;
	oFF.HierarchyCatalogItem.prototype.m_hierarchyMediumText = null;
	oFF.HierarchyCatalogItem.prototype.m_hasHierarchyMediumText = false;
	oFF.HierarchyCatalogItem.prototype.m_hierarchyLongText = null;
	oFF.HierarchyCatalogItem.prototype.m_hasHierarchyLongText = false;
	oFF.HierarchyCatalogItem.prototype.m_versionName = null;
	oFF.HierarchyCatalogItem.prototype.m_hasVersionName = false;
	oFF.HierarchyCatalogItem.prototype.m_versionDisplayKey = null;
	oFF.HierarchyCatalogItem.prototype.m_hasVersionDisplayKey = false;
	oFF.HierarchyCatalogItem.prototype.m_versionDescription = null;
	oFF.HierarchyCatalogItem.prototype.m_hasVersionDescription = false;
	oFF.HierarchyCatalogItem.prototype.m_dateTo = null;
	oFF.HierarchyCatalogItem.prototype.m_dateFrom = null;
	oFF.HierarchyCatalogItem.prototype.m_owner = null;
	oFF.HierarchyCatalogItem.prototype.m_hasOwner = false;
	oFF.HierarchyCatalogItem.prototype.m_hierId = null;
	oFF.HierarchyCatalogItem.prototype.m_hasHierId = false;
	oFF.HierarchyCatalogItem.prototype.m_hierType = null;
	oFF.HierarchyCatalogItem.prototype.m_hasHierType = false;
	oFF.HierarchyCatalogItem.prototype.m_objectVersion = null;
	oFF.HierarchyCatalogItem.prototype.m_hasObjectVersion = false;
	oFF.HierarchyCatalogItem.prototype.m_isRemote = false;
	oFF.HierarchyCatalogItem.prototype.m_isModeled = false;
	oFF.HierarchyCatalogItem.prototype.m_supportsHierarchyLevels = false;
	oFF.HierarchyCatalogItem.prototype.m_hierarchyLevels = null;
	oFF.HierarchyCatalogItem.prototype.m_hierarchyType = null;
	oFF.HierarchyCatalogItem.prototype.m_restNode = null;
	oFF.HierarchyCatalogItem.prototype.m_virtualRootNode = null;
	oFF.HierarchyCatalogItem.prototype.releaseObject = function() {
		this.m_hierarchyName = null;
		this.m_dimensionName = null;
		this.m_hierarchyShortText = null;
		this.m_hierarchyMediumText = null;
		this.m_hierarchyLongText = null;
		this.m_versionName = null;
		this.m_versionDisplayKey = null;
		this.m_versionDescription = null;
		this.m_dateTo = oFF.XObjectExt.release(this.m_dateTo);
		this.m_dateFrom = oFF.XObjectExt.release(this.m_dateFrom);
		this.m_owner = null;
		this.m_hierId = null;
		this.m_hierType = null;
		this.m_objectVersion = null;
		this.m_hierarchyLevels = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_hierarchyLevels);
		this.m_hierarchyType = null;
		this.m_restNode = null;
		this.m_virtualRootNode = null;
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.HierarchyCatalogItem.prototype.setHierarchyName = function(
			hierarchyName) {
		this.m_hierarchyName = hierarchyName;
	};
	oFF.HierarchyCatalogItem.prototype.getHierarchyName = function() {
		return this.m_hierarchyName;
	};
	oFF.HierarchyCatalogItem.prototype.setDimensionName = function(
			dimensionName) {
		this.m_dimensionName = dimensionName;
	};
	oFF.HierarchyCatalogItem.prototype.getDimensionName = function() {
		return this.m_dimensionName;
	};
	oFF.HierarchyCatalogItem.prototype.setVersionName = function(versionName) {
		this.m_versionName = versionName;
		this.m_hasVersionName = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasVersionName = function() {
		return this.m_hasVersionName;
	};
	oFF.HierarchyCatalogItem.prototype.getVersionName = function() {
		return this.m_versionName;
	};
	oFF.HierarchyCatalogItem.prototype.setVersionDisplayKey = function(
			versionDisplayKey) {
		this.m_versionDisplayKey = versionDisplayKey;
		this.m_hasVersionDisplayKey = true;
	};
	oFF.HierarchyCatalogItem.prototype.setVersionDescription = function(
			versionDescription) {
		this.m_versionDescription = versionDescription;
		this.m_hasVersionDescription = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasVersionDescription = function() {
		return this.m_hasVersionDescription;
	};
	oFF.HierarchyCatalogItem.prototype.getVersionDescription = function() {
		return this.m_versionDescription;
	};
	oFF.HierarchyCatalogItem.prototype.setHierarchyShortText = function(
			hierarchyShortText) {
		this.m_hierarchyShortText = hierarchyShortText;
		this.m_hasHierarchyShortText = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasHierarchyShortText = function() {
		return this.m_hasHierarchyShortText;
	};
	oFF.HierarchyCatalogItem.prototype.getHierarchyShortText = function() {
		return this.m_hierarchyShortText;
	};
	oFF.HierarchyCatalogItem.prototype.setHierarchyMediumText = function(
			hierarchyMediumText) {
		this.m_hierarchyMediumText = hierarchyMediumText;
		this.m_hasHierarchyMediumText = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasHierarchyMediumText = function() {
		return this.m_hasHierarchyMediumText;
	};
	oFF.HierarchyCatalogItem.prototype.getHierarchyMediumText = function() {
		return this.m_hierarchyMediumText;
	};
	oFF.HierarchyCatalogItem.prototype.setHierarchyLongText = function(
			hierarchyLongText) {
		this.m_hierarchyLongText = hierarchyLongText;
		this.m_hasHierarchyLongText = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasHierarchyLongText = function() {
		return this.m_hasHierarchyLongText;
	};
	oFF.HierarchyCatalogItem.prototype.getHierarchyLongText = function() {
		return this.m_hierarchyLongText;
	};
	oFF.HierarchyCatalogItem.prototype.getHierarchyDescription = function() {
		if (this.hasHierarchyShortText()
				&& oFF.XStringUtils
						.isNotNullAndNotEmpty(this.m_hierarchyShortText)) {
			return this.m_hierarchyShortText;
		} else {
			if (this.hasHierarchyMediumText()
					&& oFF.XStringUtils
							.isNotNullAndNotEmpty(this.m_hierarchyMediumText)) {
				return this.m_hierarchyMediumText;
			} else {
				if (this.hasHierarchyLongText()
						&& oFF.XStringUtils
								.isNotNullAndNotEmpty(this.m_hierarchyLongText)) {
					return this.m_hierarchyLongText;
				}
			}
		}
		return null;
	};
	oFF.HierarchyCatalogItem.prototype.setDateTo = function(dateTo) {
		this.m_dateTo = dateTo;
	};
	oFF.HierarchyCatalogItem.prototype.getDateTo = function() {
		return this.m_dateTo;
	};
	oFF.HierarchyCatalogItem.prototype.setDateFrom = function(dateFrom) {
		this.m_dateFrom = dateFrom;
	};
	oFF.HierarchyCatalogItem.prototype.getDateFrom = function() {
		return this.m_dateFrom;
	};
	oFF.HierarchyCatalogItem.prototype.setOwner = function(owner) {
		this.m_owner = owner;
		this.m_hasOwner = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasOwner = function() {
		return this.m_hasOwner;
	};
	oFF.HierarchyCatalogItem.prototype.getOwner = function() {
		return this.m_owner;
	};
	oFF.HierarchyCatalogItem.prototype.setHierId = function(hierId) {
		this.m_hierId = hierId;
		this.m_hasHierId = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasHierId = function() {
		return this.m_hasHierId;
	};
	oFF.HierarchyCatalogItem.prototype.getHierId = function() {
		return this.m_hierId;
	};
	oFF.HierarchyCatalogItem.prototype.setHierType = function(hierType) {
		this.m_hierType = hierType;
		this.m_hasHierType = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasHierType = function() {
		return this.m_hasHierType;
	};
	oFF.HierarchyCatalogItem.prototype.getHierType = function() {
		return this.m_hierType;
	};
	oFF.HierarchyCatalogItem.prototype.setObjectVersion = function(
			objectVersion) {
		this.m_objectVersion = objectVersion;
		this.m_hasObjectVersion = true;
	};
	oFF.HierarchyCatalogItem.prototype.hasObjectVersion = function() {
		return this.m_hasObjectVersion;
	};
	oFF.HierarchyCatalogItem.prototype.getObjectVersion = function() {
		return this.m_objectVersion;
	};
	oFF.HierarchyCatalogItem.prototype.setIsRemote = function(isRemote) {
		this.m_isRemote = isRemote;
	};
	oFF.HierarchyCatalogItem.prototype.isRemote = function() {
		return this.m_isRemote;
	};
	oFF.HierarchyCatalogItem.prototype.setIsModeled = function(isModeled) {
		this.m_isModeled = isModeled;
	};
	oFF.HierarchyCatalogItem.prototype.isModeled = function() {
		return this.m_isModeled;
	};
	oFF.HierarchyCatalogItem.prototype.clone = function() {
		return oFF.HierarchyCatalogItem.createCopy(this);
	};
	oFF.HierarchyCatalogItem.prototype.appendDecoratedString = function(buffer,
			value) {
		buffer.append("[");
		if (oFF.notNull(value)) {
			buffer.append(value);
		}
		buffer.append("]");
	};
	oFF.HierarchyCatalogItem.prototype.appendDecoratedStringIfTrue = function(
			buffer, value, condition) {
		if (condition) {
			this.appendDecoratedString(buffer, value);
		} else {
			this.appendDecoratedString(buffer, null);
		}
	};
	oFF.HierarchyCatalogItem.prototype.appendDecoratedObject = function(buffer,
			object) {
		if (oFF.isNull(object)) {
			this.appendDecoratedString(buffer, null);
		} else {
			this.appendDecoratedString(buffer, object.toString());
		}
	};
	oFF.HierarchyCatalogItem.prototype.toString = function() {
		var sb = oFF.XStringBuffer.create();
		var levels;
		var i;
		this.appendDecoratedString(sb, this.m_dimensionName);
		sb.append(" - ");
		this.appendDecoratedString(sb, this.m_hierarchyName);
		sb.append("[");
		if (this.hasHierarchyLongText()) {
			sb.append(this.getHierarchyLongText());
		} else {
			sb.append("<null>");
		}
		sb.append("|");
		if (this.hasHierarchyMediumText()) {
			sb.append(this.getHierarchyMediumText());
		} else {
			sb.append("<null>");
		}
		sb.append("|");
		if (this.hasHierarchyShortText()) {
			sb.append(this.getHierarchyShortText());
		} else {
			sb.append("<null>");
		}
		sb.append("]");
		this.appendDecoratedStringIfTrue(sb, this.m_versionName, this
				.hasVersionName());
		this.appendDecoratedStringIfTrue(sb, this.m_versionDescription, this
				.hasVersionDescription());
		this.appendDecoratedObject(sb, this.m_dateTo);
		this.appendDecoratedObject(sb, this.m_dateFrom);
		this.appendDecoratedStringIfTrue(sb, this.m_owner, this.hasOwner());
		this.appendDecoratedStringIfTrue(sb, this.m_hierId, this.hasHierId());
		sb.append("[").appendBoolean(this.m_isRemote).append("]");
		sb.append("[").appendBoolean(this.m_isModeled).append("]");
		if (oFF.notNull(this.m_hierarchyType)
				&& this.m_hierarchyType !== oFF.HierarchyType.UNKNOWN) {
			this.appendDecoratedObject(sb, this.m_hierarchyType);
			if (this.m_hierarchyType.isLeveledHierarchy()) {
				sb.append("[Is Leveled Hierarchy]");
			}
		}
		if (this.supportsHierarchyLevels()) {
			levels = this.getHierarchyLevels();
			if (oFF.XCollectionUtils.hasElements(levels)) {
				for (i = 0; i < levels.size(); i++) {
					sb.appendNewLine().append(levels.get(i).toString());
				}
			}
		}
		return sb.toString();
	};
	oFF.HierarchyCatalogItem.prototype.getVersionDisplayKey = function() {
		return this.m_versionDisplayKey;
	};
	oFF.HierarchyCatalogItem.prototype.hasVersionDisplayKey = function() {
		return this.m_hasVersionDisplayKey;
	};
	oFF.HierarchyCatalogItem.prototype.setSupportsHierarchyLevels = function(
			supportsHierarchyLevels) {
		this.m_supportsHierarchyLevels = supportsHierarchyLevels;
	};
	oFF.HierarchyCatalogItem.prototype.supportsHierarchyLevels = function() {
		return this.m_supportsHierarchyLevels;
	};
	oFF.HierarchyCatalogItem.prototype.assertSupportsHierarchyLevels = function() {
		if (!this.supportsHierarchyLevels()) {
			return;
		}
	};
	oFF.HierarchyCatalogItem.prototype.setHierarchyLevels = function(
			hierarchyLevels) {
		this.assertSupportsHierarchyLevels();
		this.m_hierarchyLevels = hierarchyLevels;
	};
	oFF.HierarchyCatalogItem.prototype.getHierarchyLevels = function() {
		this.assertSupportsHierarchyLevels();
		return this.m_hierarchyLevels;
	};
	oFF.HierarchyCatalogItem.prototype.setHierarchyType = function(
			hierarchyType) {
		this.m_hierarchyType = hierarchyType;
	};
	oFF.HierarchyCatalogItem.prototype.getHierarchyType = function() {
		return this.m_hierarchyType;
	};
	oFF.HierarchyCatalogItem.prototype.getRestNode = function() {
		return this.m_restNode;
	};
	oFF.HierarchyCatalogItem.prototype.setRestNode = function(restNode) {
		this.m_restNode = restNode;
	};
	oFF.HierarchyCatalogItem.prototype.setVirtualRootNode = function(
			virtualRootNode) {
		this.m_virtualRootNode = virtualRootNode;
	};
	oFF.HierarchyCatalogItem.prototype.getVirtualRootNode = function() {
		return this.m_virtualRootNode;
	};
	oFF.QFactoryImpl = function() {
	};
	oFF.QFactoryImpl.prototype = new oFF.XObject();
	oFF.QFactoryImpl.create = function() {
		return new oFF.QFactoryImpl();
	};
	oFF.QFactoryImpl.prototype.createMemberNavigation = function(memberFunction) {
		var memberNavigation = new oFF.QMemberNavigation();
		memberNavigation.setMemberFunction(memberFunction);
		return memberNavigation;
	};
	oFF.QFactoryImpl.prototype.createNavigationParameterWithStringConstant = function(
			constantValue) {
		var parameter = oFF.QMemberNavigationParameter.create();
		parameter.setConstantValue(oFF.XStringValue.create(constantValue));
		return parameter;
	};
	oFF.QFactoryImpl.prototype.createNavigationParameterWithIntegerConstant = function(
			constantValue) {
		var parameter = oFF.QMemberNavigationParameter.create();
		parameter.setConstantValue(oFF.XIntegerValue.create(constantValue));
		return parameter;
	};
	oFF.QFactoryImpl.prototype.createNavigationParameterWithLevelLiteral = function(
			levelValue) {
		var parameter = oFF.QMemberNavigationParameter.create();
		parameter.setLevelValue(oFF.XStringValue.create(levelValue));
		return parameter;
	};
	oFF.QFactoryImpl.prototype.createNavigationParameterWithLevelNumber = function(
			levelValue) {
		var parameter = oFF.QMemberNavigationParameter.create();
		parameter.setLevelValue(oFF.XIntegerValue.create(levelValue));
		return parameter;
	};
	oFF.QFactoryImpl.prototype.createNavigationParameterWithMemberName = function(
			fqnName) {
		var parameter = oFF.QMemberNavigationParameter.create();
		parameter.setMemberValue(fqnName);
		return parameter;
	};
	oFF.QFactoryImpl.prototype.createNavigationParameterWithShift = function(
			levelValue, constantValue) {
		var parameter = oFF.QMemberNavigationParameter.create();
		parameter.setShift(oFF.XStringValue.create(levelValue),
				oFF.XIntegerValue.create(constantValue));
		return parameter;
	};
	oFF.QFactoryImpl.prototype.createNavigationParameterWithRange = function(
			levelValue, offsetLow, offsetHigh) {
		var parameter = oFF.QMemberNavigationParameter.create();
		parameter.setRange(oFF.XStringValue.create(levelValue), offsetLow,
				offsetHigh);
		return parameter;
	};
	oFF.QFactoryImpl.prototype.createNavigationParameterWithNoValuesAboveLevel = function(
			levelValue) {
		var parameter = oFF.QMemberNavigationParameter.create();
		parameter.setNoValuesAboveLevel(levelValue);
		return parameter;
	};
	oFF.QFactoryImpl.prototype.newDimensionElement = function(selectField,
			hierarchyName, value) {
		return oFF.QSelectValue._createDimensionElement2(selectField
				.getContext(), selectField, hierarchyName, value);
	};
	oFF.QFactoryImpl.prototype.newDataSource = function(context) {
		return oFF.QDataSource.createWithContext(context);
	};
	oFF.QFactoryImpl.prototype.newFormulaAttributeExt = function(context) {
		return oFF.QFormulaItemAttribute._createMember(context, null);
	};
	oFF.QFactoryImpl.prototype.newFormulaConstant = function(context) {
		return oFF.QFormulaItemConstant._createConstant(context, null);
	};
	oFF.QFactoryImpl.prototype.newFormulaOperationExt = function(context) {
		return oFF.QFormulaItemOperation._createOperation(context, null);
	};
	oFF.QFactoryImpl.prototype.newFormulaFunction = function(context) {
		return oFF.QFormulaItemFunction._createFunction(context, null);
	};
	oFF.QFactoryImpl.prototype.newFormulaMember = function(context) {
		return oFF.QFormulaItemMember._createMember(context, null);
	};
	oFF.QFactoryImpl.prototype.newFilterAnd = function(context) {
		return oFF.QFilterAnd._create(context, null);
	};
	oFF.QFactoryImpl.prototype.newFilterTupleExt = function(context) {
		return oFF.QFilterTuple._create(context, null);
	};
	oFF.QFactoryImpl.prototype.newFilterOr = function(context) {
		return oFF.QFilterOr._create(context, null);
	};
	oFF.QFactoryImpl.prototype.newFilterNot = function(context) {
		return oFF.QFilterNot._create(context, null);
	};
	oFF.QFactoryImpl.prototype.newFilterOperation = function(context,
			filterExpression) {
		return oFF.QFilterOperation._create(context, filterExpression, null);
	};
	oFF.QFactoryImpl.prototype.newCellValueOperand = function(context,
			filterExpression) {
		return oFF.QFilterCellValueOperand.createWithExpression(context,
				filterExpression, null);
	};
	oFF.QFactoryImpl.prototype.newFilterCartesianProduct = function(context,
			filterExpression) {
		return oFF.QFilterCartesianProduct._create(context, filterExpression);
	};
	oFF.QFactoryImpl.prototype.newFilterCartesianList = function(context,
			filterExpression) {
		return oFF.QFilterCartesianList._create(context, filterExpression,
				null, null);
	};
	oFF.QFactoryImpl.prototype.newFilterCartesianElement = function(context) {
		return oFF.QFilterOperation._create(context, null, null);
	};
	oFF.QFactoryImpl.prototype.newFilterVirtualDatasource = function(context) {
		return oFF.QFilterVirtualDatasource._create(context, null);
	};
	oFF.QFactoryImpl.prototype.newDrillPathElementExt = function(context) {
		return oFF.QDrillPathElement._create(context);
	};
	oFF.QFactoryImpl.prototype.createNewAggregationLevel = function(name) {
		var registrationService = oFF.RegistrationService.getInstance();
		var factoryClass = registrationService.getFirstReference(
				oFF.OlapApiModule.AGGREGATION_LEVEL_FACTORY, null);
		var factory;
		if (oFF.isNull(factoryClass)) {
			oFF.noSupport();
		}
		factory = factoryClass.newInstance(this);
		return factory.createIAggregationLevel(name);
	};
	oFF.QFactoryImpl.prototype.newAggregationLevelExt = function(context, name) {
		return this.createNewAggregationLevel(name);
	};
	oFF.QFactoryImpl.prototype.newDrillManager = function(context) {
		var queryModel = null;
		if (oFF.notNull(context)) {
			queryModel = context.getQueryModel();
		}
		return oFF.QDrillManager.create(context, queryModel);
	};
	oFF.QFactoryImpl.prototype.newUniversalDisplayHierarchies = function(
			context) {
		var queryModel;
		if (oFF.notNull(context)) {
			queryModel = context.getQueryModel();
			if (queryModel.supportsUniversalDisplayHierarchies()) {
				return oFF.QUniversalDisplayHierarchies.create(context,
						queryModel);
			}
		}
		return null;
	};
	oFF.QFactoryImpl.prototype.newVizDef = function(context) {
		return oFF.QVizDef.create(context);
	};
	oFF.QFactoryImpl.prototype.newFieldValueEmpty = function(field,
			valueException) {
		var fieldValue = oFF.QFieldValue
				.create(field.getContext(), field, null);
		fieldValue.setValueException(valueException);
		return fieldValue;
	};
	oFF.QFactoryImpl.prototype.newFieldValue = function(field, valueException,
			value, formattedValue) {
		var fieldValue = oFF.QFieldValue
				.create(field.getContext(), field, null);
		fieldValue.setValueException(valueException);
		fieldValue.setValue(value);
		fieldValue.setFormattedValue(formattedValue);
		return fieldValue;
	};
	oFF.QFactoryImpl.prototype.newField = function(context, fieldName) {
		var field = oFF.QField._createField(context, null, null);
		field.setName(fieldName);
		return field;
	};
	oFF.QFactoryImpl.prototype.newDimensionMemberFromTupleElement = function(
			tupleElement) {
		var newMember;
		var textField = null;
		var dimension = tupleElement
				.getDimensionAtCurrentPositionFromQueryModel();
		var fieldValues;
		var size;
		var idxField;
		var cursorFieldValue;
		var fieldValue;
		var textFieldValue;
		if (oFF.isNull(dimension)) {
			newMember = oFF.QDimensionMember.createDimensionMember(null, null);
		} else {
			if (dimension.isMeasureStructure()) {
				newMember = oFF.QStructureMember.createStructureMember(
						dimension.getContext(), dimension,
						oFF.MemberType.MEASURE);
			} else {
				newMember = oFF.QDimensionMember.createDimensionMember(
						dimension.getContext(), dimension);
			}
			textField = dimension.getTextField();
		}
		newMember.setType(tupleElement.getDimensionMemberType());
		newMember.setName(tupleElement.getDimensionMemberName());
		newMember.setDimensionMemberNameValueException(tupleElement
				.getDimensionMemberNameValueException());
		fieldValues = tupleElement.getFieldValueList();
		size = fieldValues.size();
		for (idxField = 0; idxField < size; idxField++) {
			cursorFieldValue = fieldValues.get(idxField);
			fieldValue = cursorFieldValue.createFieldValueFromCurrentPosition();
			fieldValue.setDimensionMember(newMember);
			newMember.addFieldValue(fieldValue);
		}
		if (oFF.notNull(textField)) {
			textFieldValue = newMember.getFieldValue(textField);
			if (oFF.notNull(textFieldValue)) {
				newMember.setText(textFieldValue.getFormattedValue());
			}
		}
		return newMember;
	};
	oFF.ValueHelpListenerDecorator = function() {
	};
	oFF.ValueHelpListenerDecorator.prototype = new oFF.XObject();
	oFF.ValueHelpListenerDecorator.create = function(originalListener) {
		var wrapper = new oFF.ValueHelpListenerDecorator();
		wrapper.m_originalListener = originalListener;
		return wrapper;
	};
	oFF.ValueHelpListenerDecorator.prototype.m_originalListener = null;
	oFF.ValueHelpListenerDecorator.prototype.m_result = null;
	oFF.ValueHelpListenerDecorator.prototype.releaseObject = function() {
		this.m_originalListener = null;
		this.m_result = null;
	};
	oFF.ValueHelpListenerDecorator.prototype.getResult = function() {
		return this.m_result;
	};
	oFF.ValueHelpListenerDecorator.prototype.onValuehelpExecuted = function(
			extResult, resultSetContainer, customIdentifier) {
		this.m_result = this.rewriteToNodeResponse(extResult);
		if (oFF.notNull(this.m_originalListener)) {
			this.m_originalListener.onValuehelpExecuted(this.m_result,
					resultSetContainer, customIdentifier);
		}
	};
	oFF.ValueHelpListenerDecorator.prototype.rewriteToNodeResponse = function(
			result) {
		var nodes = null;
		var data = result.getData();
		var size;
		var i;
		if (oFF.notNull(data)) {
			nodes = oFF.XList.create();
			size = data.size();
			for (i = 0; i < size; i++) {
				nodes.add(data.get(i));
			}
		}
		return oFF.ExtResult.create(nodes, result);
	};
	oFF.QBindingResultset = function() {
	};
	oFF.QBindingResultset.prototype = new oFF.XObjectExt();
	oFF.QBindingResultset.create = function(cmds, type, protocol) {
		var newObj = new oFF.QBindingResultset();
		newObj.setupBind(cmds, type, protocol);
		return newObj;
	};
	oFF.QBindingResultset.prototype.m_dataManifest = null;
	oFF.QBindingResultset.prototype.m_cmds = null;
	oFF.QBindingResultset.prototype.m_type = null;
	oFF.QBindingResultset.prototype.m_protocol = null;
	oFF.QBindingResultset.prototype.m_listener = null;
	oFF.QBindingResultset.prototype.m_customIdentifier = null;
	oFF.QBindingResultset.prototype.m_requestCounter = 0;
	oFF.QBindingResultset.prototype.m_isAttachedToServiceConfig = false;
	oFF.QBindingResultset.prototype.m_isProcessingServiceConfig = false;
	oFF.QBindingResultset.prototype.m_isAttachedToQueryManager = false;
	oFF.QBindingResultset.prototype.m_tryProcessingQueryManager = false;
	oFF.QBindingResultset.prototype.setupBind = function(cmds, type, protocol) {
		this.m_cmds = cmds;
		this.m_type = type;
		this.m_protocol = protocol;
		this.tryAttachingToServiceConfig();
		this.tryAttachingToQueryExecution();
	};
	oFF.QBindingResultset.prototype.releaseObject = function() {
		this.m_cmds = null;
		this.m_listener = null;
		this.m_customIdentifier = null;
		oFF.XObjectExt.prototype.releaseObject.call(this);
	};
	oFF.QBindingResultset.prototype.getComponentType = function() {
		return oFF.IoComponentType.BINDING_SENDER;
	};
	oFF.QBindingResultset.prototype.getSession = function() {
		if (oFF.notNull(this.m_cmds)) {
			return this.m_cmds.getSession();
		} else {
			return null;
		}
	};
	oFF.QBindingResultset.prototype.processSenderUpdate = function() {
		this.log("processSenderUpdate");
		if (oFF.notNull(this.m_cmds)) {
			this.tryAttachingToServiceConfig();
			this.tryProcessingServiceConfig();
			this.tryAttachingToQueryExecution();
			this.tryProcessingQueryManager();
		}
	};
	oFF.QBindingResultset.prototype.tryAttachingToServiceConfig = function() {
		var serviceConfig;
		this.log("tryAttachingToServiceConfig()");
		if (oFF.notNull(this.m_cmds)) {
			if (!this.m_isAttachedToServiceConfig) {
				serviceConfig = this.m_cmds.getQueryServiceConfig();
				if (oFF.notNull(serviceConfig)) {
					this.m_isAttachedToServiceConfig = true;
					serviceConfig.processQueryManagerCreation(
							oFF.SyncType.REGISTER, this, null);
				}
			}
		}
	};
	oFF.QBindingResultset.prototype.tryProcessingServiceConfig = function() {
		var serviceConfig;
		this.log("tryProcessingServiceConfig");
		if (oFF.notNull(this.m_cmds)) {
			if (this.m_isAttachedToServiceConfig
					&& !this.m_isProcessingServiceConfig) {
				serviceConfig = this.m_cmds.getQueryServiceConfig();
				if (oFF.notNull(serviceConfig)) {
					this.m_isProcessingServiceConfig = true;
					serviceConfig.processQueryManagerCreation(null, null, null);
				}
			}
		}
	};
	oFF.QBindingResultset.prototype.onQueryManagerCreated = function(extResult,
			queryManager, customIdentifier) {
		this.log("onQueryManagerCreated");
		this.m_dataManifest = oFF.DpDataManifestFactory
				.createByMessages(extResult);
		this.tryAttachingToQueryExecution();
	};
	oFF.QBindingResultset.prototype.tryAttachingToQueryExecution = function() {
		var queryManager;
		this.log("tryAttachingToQueryManager");
		if (oFF.notNull(this.m_cmds)) {
			if (this.m_isAttachedToServiceConfig
					&& !this.m_isAttachedToQueryManager) {
				queryManager = this.m_cmds.getQueryManager();
				if (oFF.notNull(queryManager)) {
					this.m_isAttachedToQueryManager = true;
					queryManager.processQueryExecution(oFF.SyncType.REGISTER,
							this, null);
					if (this.m_tryProcessingQueryManager) {
						this.tryProcessingQueryManager();
					}
				}
			}
		}
	};
	oFF.QBindingResultset.prototype.tryProcessingQueryManager = function() {
		var queryManager;
		this.log("tryProcessingQueryManager");
		this.m_tryProcessingQueryManager = true;
		if (oFF.notNull(this.m_cmds)) {
			if (this.m_isAttachedToServiceConfig
					&& this.m_isAttachedToQueryManager) {
				queryManager = this.m_cmds.getQueryManager();
				if (oFF.notNull(queryManager)) {
					this.m_tryProcessingQueryManager = false;
					this.m_requestCounter++;
					this.log(oFF.XStringBuffer.create().append(
							"Request Counter: ").appendInt(
							this.m_requestCounter).toString());
					queryManager.processQueryExecution(null, null, null);
				}
			}
		}
	};
	oFF.QBindingResultset.prototype.onQueryExecuted = function(extResult,
			resultSetContainer, customIdentifier) {
		this.m_dataManifest = oFF.DpDataManifestFactory
				.createByMessages(extResult);
		this.log("onQueryExecuted");
		if (oFF.notNull(this.m_listener)) {
			this.m_listener.onSenderValueChanged(this, this.m_customIdentifier);
		}
	};
	oFF.QBindingResultset.prototype.onCmdContextChanged = function() {
		this.log("onCmdContextChanged");
	};
	oFF.QBindingResultset.prototype.isSenderValueReady = function() {
		var isSenderValueReady;
		var queryManager;
		var syncState;
		this.log("isSenderValueReady");
		isSenderValueReady = false;
		if (oFF.notNull(this.m_cmds)) {
			queryManager = this.m_cmds.getQueryManager();
			if (oFF.notNull(queryManager)) {
				syncState = queryManager.getResultSetSyncState();
				isSenderValueReady = syncState.isInSync();
			}
		}
		return isSenderValueReady;
	};
	oFF.QBindingResultset.prototype.getString = function() {
		var grid;
		var queryManager;
		var rs;
		var gridValue;
		if (oFF.notNull(this.m_cmds)) {
			grid = null;
			queryManager = this.m_cmds.getQueryManager();
			if (oFF.notNull(queryManager)) {
				rs = queryManager.getClassicResultSet();
				grid = oFF.ReferenceGridFactory.createReferenceGridSimple(rs);
			}
			if (oFF.notNull(grid)) {
				gridValue = grid.exportToAscii(50);
				this.log(gridValue);
				return gridValue;
			}
		}
		return null;
	};
	oFF.QBindingResultset.prototype.getElement = function() {
		var result = null;
		var queryManager;
		if (oFF.notNull(this.m_cmds)) {
			queryManager = this.m_cmds.getQueryManager();
			if (oFF.notNull(queryManager)) {
				result = queryManager.getAbstractRendering(this.m_type,
						this.m_protocol);
			}
		}
		return result;
	};
	oFF.QBindingResultset.prototype.getDataManifest = function() {
		return this.m_dataManifest;
	};
	oFF.QBindingResultset.prototype.registerValueChangedListener = function(
			listener, customIdentifier) {
		this.log("registerValueChangedListener");
		this.m_listener = listener;
		this.m_customIdentifier = customIdentifier;
	};
	oFF.QBindingResultset.prototype.unregisterValueChangedListener = function(
			listener) {
		this.log("unregisterValueChangedListener");
		this.m_listener = null;
		this.m_customIdentifier = null;
	};
	oFF.QDimensionMetadata = function() {
	};
	oFF.QDimensionMetadata.prototype = new oFF.QMetadata();
	oFF.QDimensionMetadata.create = function(systemName, queryName,
			dimensionName, providerType, validationHash) {
		var dimensionMetadata = new oFF.QDimensionMetadata();
		dimensionMetadata.setupMetadata(systemName, queryName, dimensionName,
				providerType);
		dimensionMetadata.m_validationHash = validationHash;
		dimensionMetadata.m_supportedAxesTypes = oFF.XSetOfNameObject.create();
		dimensionMetadata.m_supportedFieldLayoutType = oFF.XHashSetOfString
				.create();
		dimensionMetadata.m_supportedFieldLayoutType
				.add(oFF.FieldLayoutType.FIELD_BASED.getName());
		dimensionMetadata.m_selectionCapabilities = oFF.QFilterCapabilityList
				.createFilterCapabilitiesForDimension();
		dimensionMetadata.m_isCompound = oFF.TriStateBool._DEFAULT;
		return dimensionMetadata;
	};
	oFF.QDimensionMetadata.prototype.m_externalName = null;
	oFF.QDimensionMetadata.prototype.m_attributeViewName = null;
	oFF.QDimensionMetadata.prototype.m_supportedAxesTypes = null;
	oFF.QDimensionMetadata.prototype.m_defaultAxisType = null;
	oFF.QDimensionMetadata.prototype.m_defaultFieldLayoutType = null;
	oFF.QDimensionMetadata.prototype.m_supportedFieldLayoutType = null;
	oFF.QDimensionMetadata.prototype.m_supportsCalculatedBeforeAggregation = false;
	oFF.QDimensionMetadata.prototype.m_supportsLowerCase = false;
	oFF.QDimensionMetadata.prototype.m_isOwnerDimension = false;
	oFF.QDimensionMetadata.prototype.m_isPrivate = false;
	oFF.QDimensionMetadata.prototype.m_type = null;
	oFF.QDimensionMetadata.prototype.m_selectionCapabilities = null;
	oFF.QDimensionMetadata.prototype.m_supportsCumulative = false;
	oFF.QDimensionMetadata.prototype.m_isGroupingDimension = false;
	oFF.QDimensionMetadata.prototype.m_groupingDimensions = null;
	oFF.QDimensionMetadata.prototype.m_canBeAggregated = false;
	oFF.QDimensionMetadata.prototype.m_isCompound = null;
	oFF.QDimensionMetadata.prototype.m_isEnforcedDynamicValue = false;
	oFF.QDimensionMetadata.prototype.m_validationHash = null;
	oFF.QDimensionMetadata.prototype.m_valueType = null;
	oFF.QDimensionMetadata.prototype.m_incompleteDimensionMetadata = false;
	oFF.QDimensionMetadata.prototype.m_isHierarchyMandatory = false;
	oFF.QDimensionMetadata.prototype.isIncompleteDimensionMetadata = function() {
		return this.m_incompleteDimensionMetadata;
	};
	oFF.QDimensionMetadata.prototype.setIncompleteDimensionMetadata = function(
			incompleteDimensionMetadata) {
		this.m_incompleteDimensionMetadata = incompleteDimensionMetadata;
	};
	oFF.QDimensionMetadata.prototype.releaseObject = function() {
		this.m_externalName = null;
		this.m_defaultAxisType = null;
		this.m_defaultFieldLayoutType = null;
		this.m_type = null;
		this.m_attributeViewName = null;
		this.m_isCompound = null;
		this.m_supportedAxesTypes = oFF.XObjectExt
				.release(this.m_supportedAxesTypes);
		this.m_supportedFieldLayoutType = oFF.XObjectExt
				.release(this.m_supportedFieldLayoutType);
		this.m_selectionCapabilities = oFF.XObjectExt
				.release(this.m_selectionCapabilities);
		this.m_groupingDimensions = oFF.XObjectExt
				.release(this.m_groupingDimensions);
		this.m_validationHash = null;
		this.m_valueType = null;
		oFF.QMetadata.prototype.releaseObject.call(this);
	};
	oFF.QDimensionMetadata.prototype.getCacheKey = function() {
		return oFF.XStringUtils.concatenate3(
				oFF.QMetadata.prototype.getCacheKey.call(this), "~",
				this.m_validationHash);
	};
	oFF.QDimensionMetadata.prototype.addSupportedAxis = function(axisType) {
		this.m_supportedAxesTypes.add(axisType);
	};
	oFF.QDimensionMetadata.prototype.canBeAggregated = function() {
		return this.m_canBeAggregated;
	};
	oFF.QDimensionMetadata.prototype.setExternalName = function(externalName) {
		this.m_externalName = externalName;
	};
	oFF.QDimensionMetadata.prototype.setCanBeAggregated = function(
			canBeAggregated) {
		this.m_canBeAggregated = canBeAggregated;
	};
	oFF.QDimensionMetadata.prototype.getAttributeViewName = function() {
		return this.m_attributeViewName;
	};
	oFF.QDimensionMetadata.prototype.getDefaultAxisType = function() {
		return this.m_defaultAxisType;
	};
	oFF.QDimensionMetadata.prototype.getDimensionType = function() {
		return this.m_type;
	};
	oFF.QDimensionMetadata.prototype.getExternalName = function() {
		return this.m_externalName;
	};
	oFF.QDimensionMetadata.prototype.setSupportsLowerCase = function(
			supportsLowerCase) {
		this.m_supportsLowerCase = supportsLowerCase;
	};
	oFF.QDimensionMetadata.prototype.getGroupedDimensions = function(
			dimensionAccessor, caller) {
		var groupedDimensions = oFF.XList.create();
		var dimensions;
		var i;
		var dimension;
		var groupingDimensions;
		var j;
		var groupingDimension;
		if (this.isGroupingDimension()) {
			dimensions = dimensionAccessor.getDimensions();
			for (i = 0; i < dimensions.size(); i++) {
				dimension = dimensions.get(i);
				if (dimension === caller) {
					continue;
				}
				groupingDimensions = dimension.getGroupingDimensions();
				if (oFF.notNull(groupingDimensions)) {
					for (j = 0; j < groupingDimensions.size(); j++) {
						groupingDimension = groupingDimensions.get(j);
						if (groupingDimension !== caller) {
							continue;
						}
						if (!groupedDimensions.contains(dimension)) {
							groupedDimensions.add(dimension);
						}
					}
				}
			}
		}
		return groupedDimensions;
	};
	oFF.QDimensionMetadata.prototype.addGroupingDimension = function(
			groupingDimension) {
		if (oFF.isNull(this.m_groupingDimensions)) {
			this.m_groupingDimensions = oFF.XHashSetOfString.create();
		}
		if (!this.m_groupingDimensions.contains(groupingDimension)) {
			this.m_groupingDimensions.add(groupingDimension);
		}
	};
	oFF.QDimensionMetadata.prototype.getGroupingDimensions = function(
			dimensionAccessor) {
		var groupingDimensions = oFF.XList.create();
		var dimensionNames;
		var dimension;
		if (oFF.notNull(dimensionAccessor)
				&& oFF.notNull(this.m_groupingDimensions)) {
			dimensionNames = this.m_groupingDimensions.getIterator();
			while (dimensionNames.hasNext()) {
				dimension = dimensionAccessor.getDimensionByName(dimensionNames
						.next());
				if (oFF.notNull(dimension)) {
					groupingDimensions.add(dimension);
				}
			}
		}
		return groupingDimensions;
	};
	oFF.QDimensionMetadata.prototype.getGroupingDimensionNames = function(
			dimensionAccessor) {
		var groupingDimensionNames = oFF.XListOfString.create();
		var dimensionNames;
		var dimensionName;
		if (oFF.notNull(dimensionAccessor)
				&& oFF.notNull(this.m_groupingDimensions)) {
			dimensionNames = this.m_groupingDimensions.getIterator();
			while (dimensionNames.hasNext()) {
				dimensionName = dimensionNames.next();
				if (dimensionAccessor.getDimensionNames().contains(
						dimensionName)) {
					groupingDimensionNames.add(dimensionName);
				}
			}
		}
		return groupingDimensionNames;
	};
	oFF.QDimensionMetadata.prototype.getFilterCapabilities = function() {
		return this.m_selectionCapabilities;
	};
	oFF.QDimensionMetadata.prototype.getSupportedAxesTypes = function() {
		return this.m_supportedAxesTypes;
	};
	oFF.QDimensionMetadata.prototype.supportsAxis = function(axisType) {
		return this.m_supportedAxesTypes.contains(axisType);
	};
	oFF.QDimensionMetadata.prototype.isCompound = function() {
		return this.m_isCompound.getBoolean();
	};
	oFF.QDimensionMetadata.prototype.isGroupingDimension = function() {
		return this.m_isGroupingDimension;
	};
	oFF.QDimensionMetadata.prototype.isMeasureStructure = function() {
		return this.m_type === oFF.DimensionType.MEASURE_STRUCTURE;
	};
	oFF.QDimensionMetadata.prototype.isOwnerDimension = function() {
		return this.m_isOwnerDimension;
	};
	oFF.QDimensionMetadata.prototype.isSelectable = function(axisType) {
		var supportedAxesTypes;
		if (oFF.XCollectionUtils.hasElements(this.m_supportedAxesTypes)) {
			supportedAxesTypes = this.m_supportedAxesTypes.createSetCopy();
			supportedAxesTypes.removeElement(oFF.AxisType.REPOSITORY);
			supportedAxesTypes.removeElement(oFF.AxisType.VIRTUAL);
			return supportedAxesTypes.hasElements();
		}
		return axisType !== oFF.AxisType.REPOSITORY
				&& axisType !== oFF.AxisType.VIRTUAL;
	};
	oFF.QDimensionMetadata.prototype.isStructure = function() {
		return oFF.isNull(this.m_type) ? false : this.m_type
				.isTypeOf(oFF.DimensionType.ABSTRACT_STRUCTURE);
	};
	oFF.QDimensionMetadata.prototype.supportsBasicStructureMembers = function() {
		return this.isStructure() || this.m_type === oFF.DimensionType.ACCOUNT;
	};
	oFF.QDimensionMetadata.prototype.supportsCalculatedBeforeAggregation = function() {
		return this.m_supportsCalculatedBeforeAggregation;
	};
	oFF.QDimensionMetadata.prototype.setSupportsCalculatedBeforeAggregation = function(
			supportsCalculatedBeforeAggregation) {
		this.m_supportsCalculatedBeforeAggregation = supportsCalculatedBeforeAggregation;
	};
	oFF.QDimensionMetadata.prototype.supportsCumulative = function() {
		return this.m_supportsCumulative;
	};
	oFF.QDimensionMetadata.prototype.setSupportsCumulative = function(
			supportsCumulative) {
		this.m_supportsCumulative = supportsCumulative;
	};
	oFF.QDimensionMetadata.prototype.supportsCustomMembers = function() {
		return this.isStructure() || oFF.DimensionType.ACCOUNT === this.m_type;
	};
	oFF.QDimensionMetadata.prototype.supportsFieldLayoutType = function(type) {
		return this.m_supportedFieldLayoutType.contains(type.getName());
	};
	oFF.QDimensionMetadata.prototype.supportsLowerCase = function() {
		return this.m_supportsLowerCase;
	};
	oFF.QDimensionMetadata.prototype.setDefaultAxisType = function(axisType) {
		this.m_defaultAxisType = axisType;
	};
	oFF.QDimensionMetadata.prototype.isCompoundBase = function() {
		return this.m_isCompound;
	};
	oFF.QDimensionMetadata.prototype.setIsCompoundBase = function(isCompound) {
		this.m_isCompound = isCompound;
	};
	oFF.QDimensionMetadata.prototype.setDimensionType = function(type) {
		this.m_type = type;
	};
	oFF.QDimensionMetadata.prototype.getFilterCapabilitiesBase = function() {
		return this.m_selectionCapabilities;
	};
	oFF.QDimensionMetadata.prototype.setIsOwnerDimension = function(
			isOwnerDimension) {
		this.m_isOwnerDimension = isOwnerDimension;
	};
	oFF.QDimensionMetadata.prototype.setDefaultFieldLayoutType = function(type) {
		this.m_defaultFieldLayoutType = type;
	};
	oFF.QDimensionMetadata.prototype.getDefaultFieldLayoutType = function() {
		return this.m_defaultFieldLayoutType;
	};
	oFF.QDimensionMetadata.prototype.addSupportedFieldLayoutType = function(
			type) {
		this.m_supportedFieldLayoutType.add(type.getName());
	};
	oFF.QDimensionMetadata.prototype.setIsGroupingDimension = function(
			isGroupingDimension) {
		this.m_isGroupingDimension = isGroupingDimension;
	};
	oFF.QDimensionMetadata.prototype.isEnforcedDynamicValue = function() {
		return this.m_isEnforcedDynamicValue;
	};
	oFF.QDimensionMetadata.prototype.setEnforceDynamicValue = function(
			enforceDynamicValue) {
		this.m_isEnforcedDynamicValue = enforceDynamicValue;
	};
	oFF.QDimensionMetadata.prototype.setAttributeViewName = function(
			attributeViewName) {
		this.m_attributeViewName = attributeViewName;
	};
	oFF.QDimensionMetadata.prototype.setValueType = function(valueType) {
		this.m_valueType = valueType;
	};
	oFF.QDimensionMetadata.prototype.getValueType = function() {
		return this.m_valueType;
	};
	oFF.QDimensionMetadata.prototype.isPrivate = function() {
		return this.m_isPrivate;
	};
	oFF.QDimensionMetadata.prototype.setIsPrivate = function(isPrivate) {
		this.m_isPrivate = isPrivate;
	};
	oFF.QDimensionMetadata.prototype.isHierarchyMandatory = function() {
		return this.m_isHierarchyMandatory;
	};
	oFF.QDimensionMetadata.prototype.setIsHierarchyMandatory = function(
			isHierarchyMandatory) {
		this.m_isHierarchyMandatory = isHierarchyMandatory;
	};
	oFF.QFieldMetadata = function() {
	};
	oFF.QFieldMetadata.prototype = new oFF.QMetadata();
	oFF.QFieldMetadata.create = function(systemName, queryName, fieldName,
			providerType, dimensionName, validationHash) {
		var fieldMetadata = new oFF.QFieldMetadata();
		fieldMetadata.setupMetadata(systemName, queryName, fieldName,
				providerType);
		fieldMetadata.m_dimensionName = dimensionName;
		fieldMetadata.m_validationHash = validationHash;
		fieldMetadata.m_usageType = oFF.FieldUsageType.ALL;
		return fieldMetadata;
	};
	oFF.QFieldMetadata.prototype.m_aliasName = null;
	oFF.QFieldMetadata.prototype.m_mappedColumnName = null;
	oFF.QFieldMetadata.prototype.m_isLowerCaseEnabled = false;
	oFF.QFieldMetadata.prototype.m_dependencyFields = null;
	oFF.QFieldMetadata.prototype.m_attributeType = null;
	oFF.QFieldMetadata.prototype.m_sqlType = null;
	oFF.QFieldMetadata.prototype.m_semanticType = null;
	oFF.QFieldMetadata.prototype.m_valueType = null;
	oFF.QFieldMetadata.prototype.m_initialValue = null;
	oFF.QFieldMetadata.prototype.m_isCubeBlendingPropertiesField = false;
	oFF.QFieldMetadata.prototype.m_isDisplayAttributeField = false;
	oFF.QFieldMetadata.prototype.m_isFilterable = false;
	oFF.QFieldMetadata.prototype.m_isFlatKeyField = false;
	oFF.QFieldMetadata.prototype.m_isDefaultTextField = false;
	oFF.QFieldMetadata.prototype.m_isHierarchyKeyField = false;
	oFF.QFieldMetadata.prototype.m_isHierarchyPathField = false;
	oFF.QFieldMetadata.prototype.m_isHierarchyNavigationField = false;
	oFF.QFieldMetadata.prototype.m_usageType = null;
	oFF.QFieldMetadata.prototype.m_presentationType = null;
	oFF.QFieldMetadata.prototype.m_navigationalAttributeDescription = null;
	oFF.QFieldMetadata.prototype.m_lowerBound = null;
	oFF.QFieldMetadata.prototype.m_upperBound = null;
	oFF.QFieldMetadata.prototype.m_precision = 0;
	oFF.QFieldMetadata.prototype.m_length = 0;
	oFF.QFieldMetadata.prototype.m_decimals = 0;
	oFF.QFieldMetadata.prototype.m_infoObjectType = null;
	oFF.QFieldMetadata.prototype.m_visibilityType = null;
	oFF.QFieldMetadata.prototype.m_conversionRoutine = null;
	oFF.QFieldMetadata.prototype.m_dimensionName = null;
	oFF.QFieldMetadata.prototype.m_validationHash = null;
	oFF.QFieldMetadata.prototype.m_mimeType = null;
	oFF.QFieldMetadata.prototype.getCacheKey = function() {
		return oFF.XStringUtils.concatenate5(
				oFF.QMetadata.prototype.getCacheKey.call(this), "~",
				this.m_dimensionName, "~", this.m_validationHash);
	};
	oFF.QFieldMetadata.prototype.releaseObject = function() {
		this.m_aliasName = null;
		this.m_mappedColumnName = null;
		this.m_attributeType = null;
		this.m_sqlType = null;
		this.m_valueType = null;
		this.m_initialValue = null;
		this.m_usageType = null;
		this.m_presentationType = null;
		this.m_navigationalAttributeDescription = null;
		this.m_lowerBound = null;
		this.m_upperBound = null;
		this.m_infoObjectType = null;
		this.m_visibilityType = null;
		this.m_conversionRoutine = null;
		this.m_dependencyFields = oFF.XObjectExt
				.release(this.m_dependencyFields);
		this.m_dimensionName = null;
		this.m_validationHash = null;
		this.m_mimeType = null;
		oFF.QMetadata.prototype.releaseObject.call(this);
	};
	oFF.QFieldMetadata.prototype.addDependencyField = function(
			dependentFieldName) {
		if (oFF.isNull(this.m_dependencyFields)) {
			this.m_dependencyFields = oFF.XListOfString.create();
		}
		this.m_dependencyFields.add(dependentFieldName);
	};
	oFF.QFieldMetadata.prototype.getAliasName = function() {
		return this.m_aliasName;
	};
	oFF.QFieldMetadata.prototype.getAttributeType = function() {
		return this.m_attributeType;
	};
	oFF.QFieldMetadata.prototype.getDecimals = function() {
		return this.m_decimals;
	};
	oFF.QFieldMetadata.prototype.getDependencyFields = function() {
		if (oFF.isNull(this.m_dependencyFields)) {
			return oFF.XListOfString.create();
		}
		return this.m_dependencyFields;
	};
	oFF.QFieldMetadata.prototype.getInitialValue = function() {
		return this.m_initialValue;
	};
	oFF.QFieldMetadata.prototype.getIsLowerCaseEnabled = function() {
		return this.m_isLowerCaseEnabled;
	};
	oFF.QFieldMetadata.prototype.getLength = function() {
		return this.m_length;
	};
	oFF.QFieldMetadata.prototype.getLowerBound = function() {
		return this.m_lowerBound;
	};
	oFF.QFieldMetadata.prototype.getMappedColumnName = function() {
		return this.m_mappedColumnName;
	};
	oFF.QFieldMetadata.prototype.getNavigationalAttributeDescription = function() {
		return this.m_navigationalAttributeDescription;
	};
	oFF.QFieldMetadata.prototype.getPrecision = function() {
		return this.m_precision;
	};
	oFF.QFieldMetadata.prototype.getPresentationType = function() {
		return this.m_presentationType;
	};
	oFF.QFieldMetadata.prototype.getSqlType = function() {
		return this.m_sqlType;
	};
	oFF.QFieldMetadata.prototype.getSemanticType = function() {
		return this.m_semanticType;
	};
	oFF.QFieldMetadata.prototype.getUpperBound = function() {
		return this.m_upperBound;
	};
	oFF.QFieldMetadata.prototype.getUsageType = function() {
		return this.m_usageType;
	};
	oFF.QFieldMetadata.prototype.getValueType = function() {
		return this.m_valueType;
	};
	oFF.QFieldMetadata.prototype.isCubeBlendingPropertiesField = function() {
		return this.m_isCubeBlendingPropertiesField;
	};
	oFF.QFieldMetadata.prototype.isDefaultTextField = function() {
		return this.m_isDefaultTextField;
	};
	oFF.QFieldMetadata.prototype.isDisplayAttributeField = function() {
		return this.m_isDisplayAttributeField;
	};
	oFF.QFieldMetadata.prototype.isFilterable = function() {
		return this.m_isFilterable;
	};
	oFF.QFieldMetadata.prototype.isFlatKeyField = function() {
		return this.m_isFlatKeyField;
	};
	oFF.QFieldMetadata.prototype.isHierarchyKeyField = function() {
		return this.m_isHierarchyKeyField;
	};
	oFF.QFieldMetadata.prototype.isHierarchyPathField = function() {
		return this.m_isHierarchyPathField;
	};
	oFF.QFieldMetadata.prototype.isKeyField = function() {
		return this.m_isHierarchyKeyField
				|| this.m_isFlatKeyField
				|| this.m_isHierarchyNavigationField
				|| this.m_presentationType === oFF.PresentationType.KEY_NOT_COMPOUND;
	};
	oFF.QFieldMetadata.prototype.setAliasName = function(aliasName) {
		this.m_aliasName = aliasName;
	};
	oFF.QFieldMetadata.prototype.setAttributeType = function(attributeType) {
		this.m_attributeType = attributeType;
	};
	oFF.QFieldMetadata.prototype.setDecimals = function(decimals) {
		this.m_decimals = decimals;
	};
	oFF.QFieldMetadata.prototype.setInitialValue = function(initialValue) {
		this.m_initialValue = initialValue;
	};
	oFF.QFieldMetadata.prototype.setIsCubeBlendingPropertiesField = function(
			isBlendingPropertiesField) {
		this.m_isCubeBlendingPropertiesField = isBlendingPropertiesField;
	};
	oFF.QFieldMetadata.prototype.setIsDisplayAttributeField = function(
			isDisplayAttributeField) {
		this.m_isDisplayAttributeField = isDisplayAttributeField;
	};
	oFF.QFieldMetadata.prototype.setIsFilterable = function(isFilterable) {
		this.m_isFilterable = isFilterable;
	};
	oFF.QFieldMetadata.prototype.setIsFlatKeyField = function(isFlatKeyField) {
		this.m_isFlatKeyField = isFlatKeyField;
	};
	oFF.QFieldMetadata.prototype.setIsFlatTextField = function(
			isDefaultTextField) {
		this.m_isDefaultTextField = isDefaultTextField;
	};
	oFF.QFieldMetadata.prototype.setIsHierarchyKeyField = function(
			isHierarchyKeyField) {
		this.m_isHierarchyKeyField = isHierarchyKeyField;
	};
	oFF.QFieldMetadata.prototype.setIsHierarchyPathField = function(
			isHierarchyPathField) {
		this.m_isHierarchyPathField = isHierarchyPathField;
	};
	oFF.QFieldMetadata.prototype.setIsLowerCaseEnabled = function(
			lowerCaseEnabled) {
		this.m_isLowerCaseEnabled = lowerCaseEnabled;
	};
	oFF.QFieldMetadata.prototype.setLength = function(length) {
		this.m_length = length;
	};
	oFF.QFieldMetadata.prototype.setLowerBound = function(lowerBound) {
		this.m_lowerBound = lowerBound;
	};
	oFF.QFieldMetadata.prototype.setMappedColumnName = function(columnName) {
		this.m_mappedColumnName = columnName;
	};
	oFF.QFieldMetadata.prototype.setNavigationalAttributeDescription = function(
			navigationalAttributeDescription) {
		this.m_navigationalAttributeDescription = navigationalAttributeDescription;
	};
	oFF.QFieldMetadata.prototype.setPrecision = function(precision) {
		this.m_precision = precision;
	};
	oFF.QFieldMetadata.prototype.setPresentationType = function(
			presentationType) {
		this.m_presentationType = presentationType;
	};
	oFF.QFieldMetadata.prototype.setSqlType = function(sqlType) {
		this.m_sqlType = sqlType;
	};
	oFF.QFieldMetadata.prototype.setSemanticType = function(semanticType) {
		this.m_semanticType = semanticType;
	};
	oFF.QFieldMetadata.prototype.setUpperBound = function(upperBound) {
		this.m_upperBound = upperBound;
	};
	oFF.QFieldMetadata.prototype.setUsageType = function(usageType) {
		if (oFF.isNull(this.m_usageType)) {
			this.m_usageType = usageType;
		}
	};
	oFF.QFieldMetadata.prototype.setValueType = function(valueType) {
		this.m_valueType = valueType;
	};
	oFF.QFieldMetadata.prototype.setConversionRoutine = function(
			conversionRoutine) {
		this.m_conversionRoutine = conversionRoutine;
	};
	oFF.QFieldMetadata.prototype.setVisibilityType = function(visibilityType) {
		this.m_visibilityType = visibilityType;
	};
	oFF.QFieldMetadata.prototype.setInfoObjectType = function(infoObjectType) {
		this.m_infoObjectType = infoObjectType;
	};
	oFF.QFieldMetadata.prototype.getInfoObjectType = function() {
		return this.m_infoObjectType;
	};
	oFF.QFieldMetadata.prototype.getVisibilityType = function() {
		return this.m_visibilityType;
	};
	oFF.QFieldMetadata.prototype.getConversionRoutine = function() {
		return this.m_conversionRoutine;
	};
	oFF.QFieldMetadata.prototype.isHierarchyNavigationField = function() {
		return this.m_isHierarchyNavigationField;
	};
	oFF.QFieldMetadata.prototype.setIsHierarchyNavigationField = function(
			isHierarchyNavigationField) {
		this.m_isHierarchyNavigationField = isHierarchyNavigationField;
	};
	oFF.QFieldMetadata.prototype.setMimeType = function(mimeType) {
		this.m_mimeType = mimeType;
	};
	oFF.QFieldMetadata.prototype.getMimeType = function() {
		return this.m_mimeType;
	};
	oFF.QueryModelStateManager = function() {
	};
	oFF.QueryModelStateManager.prototype = new oFF.XObjectExt();
	oFF.QueryModelStateManager.create = function(queryManager) {
		var manager = new oFF.QueryModelStateManager();
		manager.m_queryManager = queryManager;
		manager.m_stateCache = oFF.XLinkedMap.create();
		return manager;
	};
	oFF.QueryModelStateManager.prototype.m_queryManager = null;
	oFF.QueryModelStateManager.prototype.m_stateCache = null;
	oFF.QueryModelStateManager.prototype.recordState = function() {
		var currentState = this.m_queryManager.getQueryModel().serialize(
				oFF.QModelFormat.INA_REPOSITORY_DATA, null);
		var stateId = oFF.XGuid.getGuid();
		this.m_stateCache
				.add(oFF.StateStackEntry.create(stateId, currentState));
		return stateId;
	};
	oFF.QueryModelStateManager.prototype.applyState = function(stateId) {
		var stateStackEntry = this.m_stateCache.getByKey(stateId);
		var result;
		if (oFF.isNull(stateStackEntry)) {
			return oFF.ExtResult.createWithErrorMessage(oFF.XStringUtils
					.concatenate3("State Id ", stateId, " not found"));
		}
		result = this.m_queryManager.getQueryModel().deserializeExt(
				oFF.QModelFormat.INA_REPOSITORY_DATA,
				stateStackEntry.getState());
		return oFF.ExtResult.create(this.m_queryManager, result);
	};
	oFF.QueryModelStateManager.prototype.releaseObject = function() {
		this.m_stateCache = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_stateCache);
		this.m_queryManager = null;
		oFF.XObjectExt.prototype.releaseObject.call(this);
	};
	oFF.QCapabilities = function() {
	};
	oFF.QCapabilities.prototype = new oFF.XObject();
	oFF.QCapabilities.create = function() {
		var newObj = new oFF.QCapabilities();
		newObj.m_supportedResultAlignmentLevel = oFF.QModelLevel.NONE;
		newObj.m_supportedVisibilityLocation = oFF.QModelLevel.NONE;
		newObj.m_supportedReorderingCapability = oFF.ReorderingCapability.NONE;
		newObj.m_supportedResultAlignment = oFF.XList.create();
		newObj.m_supportedConditionalResults = oFF.XList.create();
		return newObj;
	};
	oFF.QCapabilities.prototype.m_systemType = null;
	oFF.QCapabilities.prototype.m_supportsExtendedVariableDefinition = false;
	oFF.QCapabilities.prototype.m_supportsCustomDimensionFilterCapability = false;
	oFF.QCapabilities.prototype.m_supportsFormulaMeasures = false;
	oFF.QCapabilities.prototype.m_supportsRestrictedMeasures = false;
	oFF.QCapabilities.prototype.m_supportsResultsetFacets = false;
	oFF.QCapabilities.prototype.m_supportsConditionalResultVisibility = false;
	oFF.QCapabilities.prototype.m_supportsConditionalResults = false;
	oFF.QCapabilities.prototype.m_supportsHierarchyLevelOffsetFilter = false;
	oFF.QCapabilities.prototype.m_supportsCartesianFilterIntersect = false;
	oFF.QCapabilities.prototype.m_supportsCheckVariables = false;
	oFF.QCapabilities.prototype.m_supportsDirectVariableTransfer = false;
	oFF.QCapabilities.prototype.m_supportsShutdown = false;
	oFF.QCapabilities.prototype.m_supportsCellValueOperands = false;
	oFF.QCapabilities.prototype.m_supportsIntersectLayers = false;
	oFF.QCapabilities.prototype.m_supportsComplexFilter = false;
	oFF.QCapabilities.prototype.m_supportsVisibilityFilter = false;
	oFF.QCapabilities.prototype.m_supportsDataCellMixedValues = false;
	oFF.QCapabilities.prototype.m_supportsSetOperand = false;
	oFF.QCapabilities.prototype.m_supportsConvertToFlatFilter = false;
	oFF.QCapabilities.prototype.m_supportsCummulative = false;
	oFF.QCapabilities.prototype.m_supportsHierNavCounter = false;
	oFF.QCapabilities.prototype.m_supportsHierAttHierFields = false;
	oFF.QCapabilities.prototype.m_supportsHierCarryingDim = false;
	oFF.QCapabilities.prototype.m_supportsSortType = false;
	oFF.QCapabilities.prototype.m_supportsSpatialFilter = false;
	oFF.QCapabilities.prototype.m_supportsSpatialFilterSrid = false;
	oFF.QCapabilities.prototype.m_supportsExtendedDimensions = false;
	oFF.QCapabilities.prototype.m_supportsSortNewValues = false;
	oFF.QCapabilities.prototype.m_supportsIgnoreUnitOfZeroValueInAggregation = false;
	oFF.QCapabilities.prototype.m_supportsCubeBlendingWithNSubqueries = false;
	oFF.QCapabilities.prototype.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription = false;
	oFF.QCapabilities.prototype.m_supportsExtendedDimensionsCopyAllHierarchies = false;
	oFF.QCapabilities.prototype.m_supportsFixMetadataHierarchyAttributes = false;
	oFF.QCapabilities.prototype.m_supportsUniversalDisplayHierarchies = false;
	oFF.QCapabilities.prototype.m_supportsUniversalDisplayHierarchiesCustomDimensions = false;
	oFF.QCapabilities.prototype.m_supportsRemoteBlending = false;
	oFF.QCapabilities.prototype.m_supportsCubeCache = false;
	oFF.QCapabilities.prototype.m_supportsCatalogServiceV2 = false;
	oFF.QCapabilities.prototype.m_supportsCustomSort = false;
	oFF.QCapabilities.prototype.m_supportsDataRefreshAndDataTopicality = false;
	oFF.QCapabilities.prototype.m_supportsRemoteBlendingBW = false;
	oFF.QCapabilities.prototype.m_supportsTuplesOperand = false;
	oFF.QCapabilities.prototype.m_supportsCustomMeasureSortOrder = false;
	oFF.QCapabilities.prototype.m_supportsComplexTupleFilter = false;
	oFF.QCapabilities.prototype.m_supportsF4FilterForTextField = false;
	oFF.QCapabilities.prototype.m_supportsHierarchyNavigationField = false;
	oFF.QCapabilities.prototype.m_supportsExcepAggAvgNullSelMember = false;
	oFF.QCapabilities.prototype.m_supportsExcepAggCountNullSelMember = false;
	oFF.QCapabilities.prototype.m_supportStatisticalAggregations = false;
	oFF.QCapabilities.prototype.m_supportsVarianceOperator = false;
	oFF.QCapabilities.prototype.m_supportsAsyncRemoteModelValidation = false;
	oFF.QCapabilities.prototype.m_supportsExtendedKeyFigureProperties = false;
	oFF.QCapabilities.prototype.m_supportsDetailedResponseExpansion = false;
	oFF.QCapabilities.prototype.m_supportsDynamicVariableRefresh = false;
	oFF.QCapabilities.prototype.m_supportsExpandQueryAxis = false;
	oFF.QCapabilities.prototype.m_supportsQueryCurrencyTranslation = false;
	oFF.QCapabilities.prototype.m_supportsStructureRestrictionsInValueHelp = false;
	oFF.QCapabilities.prototype.m_supportsSpatialChoropleth = false;
	oFF.QCapabilities.prototype.m_inaCurrentMember = false;
	oFF.QCapabilities.prototype.m_supportsDimensionVisibility = false;
	oFF.QCapabilities.prototype.m_supportsDimensionDefaultMember = false;
	oFF.QCapabilities.prototype.m_supportedResultAlignmentLevel = null;
	oFF.QCapabilities.prototype.m_supportedVisibilityLocation = null;
	oFF.QCapabilities.prototype.m_supportedReorderingCapability = null;
	oFF.QCapabilities.prototype.m_supportedResultAlignment = null;
	oFF.QCapabilities.prototype.m_supportedConditionalResults = null;
	oFF.QCapabilities.prototype.clone = function() {
		var source = this;
		var target = new oFF.QCapabilities();
		target.m_systemType = source.getSystemType();
		target.m_supportsCustomDimensionFilterCapability = source.m_supportsCustomDimensionFilterCapability;
		target.m_supportsFormulaMeasures = source.m_supportsFormulaMeasures;
		target.m_supportsRestrictedMeasures = source.m_supportsRestrictedMeasures;
		target.m_supportsResultsetFacets = source.m_supportsResultsetFacets;
		target.m_supportsConditionalResultVisibility = source.m_supportsConditionalResultVisibility;
		target.m_supportsConditionalResults = source.m_supportsConditionalResults;
		target.m_supportsHierarchyLevelOffsetFilter = source.m_supportsHierarchyLevelOffsetFilter;
		target.m_supportsCartesianFilterIntersect = source.m_supportsCartesianFilterIntersect;
		target.m_supportedResultAlignmentLevel = source.m_supportedResultAlignmentLevel;
		target.m_supportedVisibilityLocation = source.m_supportedVisibilityLocation;
		target.m_supportedReorderingCapability = source.m_supportedReorderingCapability;
		target.m_supportedResultAlignment = oFF.XList.create();
		target.m_supportedResultAlignment.addAll(source
				.getSupportedResultAlignments());
		target.m_supportedConditionalResults = oFF.XList.create();
		target.m_supportedConditionalResults.addAll(source
				.getSupportedConditionalResults());
		target.m_supportsCheckVariables = source.m_supportsCheckVariables;
		target.m_supportsDirectVariableTransfer = source.m_supportsDirectVariableTransfer;
		target.m_supportsShutdown = source.m_supportsShutdown;
		target.m_supportsCellValueOperands = source.m_supportsCellValueOperands;
		target.m_supportsIntersectLayers = source.m_supportsIntersectLayers;
		target.m_supportsComplexFilter = source.m_supportsComplexFilter;
		target.m_supportsVisibilityFilter = source.m_supportsVisibilityFilter;
		target.m_supportsDataCellMixedValues = source.m_supportsDataCellMixedValues;
		target.m_supportsSetOperand = source.m_supportsSetOperand;
		target.m_supportsConvertToFlatFilter = source.m_supportsConvertToFlatFilter;
		target.m_supportsCummulative = source.m_supportsCummulative;
		target.m_supportsHierNavCounter = source.m_supportsHierNavCounter;
		target.m_supportsHierAttHierFields = source.m_supportsHierAttHierFields;
		target.m_supportsHierCarryingDim = source.m_supportsHierCarryingDim;
		target.m_supportsSortType = source.m_supportsSortType;
		target.m_supportsSpatialFilter = source.m_supportsSpatialFilter;
		target.m_supportsSpatialFilterSrid = source.m_supportsSpatialFilterSrid;
		target.m_supportsExtendedDimensions = source.m_supportsExtendedDimensions;
		target.m_supportsSortNewValues = source.m_supportsSortNewValues;
		target.m_supportsIgnoreUnitOfZeroValueInAggregation = source.m_supportsIgnoreUnitOfZeroValueInAggregation;
		target.m_supportsCubeBlendingWithNSubqueries = source.m_supportsCubeBlendingWithNSubqueries;
		target.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription = source.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription;
		target.m_supportsExtendedDimensionsCopyAllHierarchies = source.m_supportsExtendedDimensionsCopyAllHierarchies;
		target.m_supportsFixMetadataHierarchyAttributes = source.m_supportsFixMetadataHierarchyAttributes;
		target.m_supportsUniversalDisplayHierarchies = source.m_supportsUniversalDisplayHierarchies;
		target.m_supportsUniversalDisplayHierarchiesCustomDimensions = source.m_supportsUniversalDisplayHierarchiesCustomDimensions;
		target.m_supportsRemoteBlending = source.m_supportsRemoteBlending;
		target.m_supportsCubeCache = source.m_supportsCubeCache;
		target.m_supportsCatalogServiceV2 = source.m_supportsCatalogServiceV2;
		target.m_supportsExtendedVariableDefinition = source.m_supportsExtendedVariableDefinition;
		target.m_supportsCustomSort = source.m_supportsCustomSort;
		target.m_supportsTuplesOperand = source.m_supportsTuplesOperand;
		target.m_supportsDataRefreshAndDataTopicality = source.m_supportsDataRefreshAndDataTopicality;
		target.m_supportsRemoteBlendingBW = source.m_supportsRemoteBlendingBW;
		target.m_supportsCustomMeasureSortOrder = source.m_supportsCustomMeasureSortOrder;
		target.m_supportsComplexTupleFilter = source.m_supportsComplexTupleFilter;
		target.m_supportsF4FilterForTextField = source.m_supportsF4FilterForTextField;
		target.m_supportsHierarchyNavigationField = source.m_supportsHierarchyNavigationField;
		target.m_supportsExcepAggAvgNullSelMember = source.m_supportsExcepAggAvgNullSelMember;
		target.m_supportsExcepAggCountNullSelMember = source.m_supportsExcepAggCountNullSelMember;
		target.m_supportStatisticalAggregations = source.m_supportStatisticalAggregations;
		target.m_supportsVarianceOperator = source.m_supportsVarianceOperator;
		target.m_supportsAsyncRemoteModelValidation = source.m_supportsAsyncRemoteModelValidation;
		target.m_supportsExtendedKeyFigureProperties = source.m_supportsExtendedKeyFigureProperties;
		target.m_supportsDetailedResponseExpansion = source.m_supportsDetailedResponseExpansion;
		target.m_supportsDynamicVariableRefresh = source.m_supportsDynamicVariableRefresh;
		target.m_supportsExpandQueryAxis = source.m_supportsExpandQueryAxis;
		target.m_supportsQueryCurrencyTranslation = source.m_supportsQueryCurrencyTranslation;
		target.m_supportsStructureRestrictionsInValueHelp = source.m_supportsStructureRestrictionsInValueHelp;
		target.m_supportsSpatialChoropleth = source.m_supportsSpatialChoropleth;
		target.m_inaCurrentMember = source.m_inaCurrentMember;
		target.m_supportsDimensionDefaultMember = source.m_supportsDimensionDefaultMember;
		target.m_supportsDimensionVisibility = source.m_supportsDimensionVisibility;
		return target;
	};
	oFF.QCapabilities.prototype.configureForModelFormat = function(modelFormat) {
		if (!modelFormat.isTypeOf(oFF.QModelFormat.INA_DATA)
				&& modelFormat !== oFF.QModelFormat.INA_VALUE_HELP
				&& modelFormat !== oFF.QModelFormat.INA_METADATA) {
			this.setSupportsExtendedDimensions(true);
			this.setSupportsSpatialFilterSrid(true);
			this.setSupportsCummulative(true);
		}
	};
	oFF.QCapabilities.prototype.supportsExtendedVariableDefinition = function() {
		return this.m_supportsExtendedVariableDefinition;
	};
	oFF.QCapabilities.prototype.setSupportsExtendedVariableDefinition = function(
			supportsExtendedVariableDefinition) {
		this.m_supportsExtendedVariableDefinition = supportsExtendedVariableDefinition;
	};
	oFF.QCapabilities.prototype.supportsCartesianFilterIntersect = function() {
		return this.m_supportsCartesianFilterIntersect;
	};
	oFF.QCapabilities.prototype.setSupportsCartesianFilterIntersect = function(
			supportsCartesianFilterIntersect) {
		this.m_supportsCartesianFilterIntersect = supportsCartesianFilterIntersect;
	};
	oFF.QCapabilities.prototype.supportsCustomDimensionFilterCapability = function() {
		return this.m_supportsCustomDimensionFilterCapability;
	};
	oFF.QCapabilities.prototype.setSupportsCustomDimensionFilterCapability = function(
			supportsCustomDimensionFilter) {
		this.m_supportsCustomDimensionFilterCapability = supportsCustomDimensionFilter;
	};
	oFF.QCapabilities.prototype.supportsLocaleSorting = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsResultsetFacets = function() {
		return this.m_supportsResultsetFacets;
	};
	oFF.QCapabilities.prototype.setSupportsResultsetFacets = function(
			supportsResultsetFacets) {
		this.m_supportsResultsetFacets = supportsResultsetFacets;
	};
	oFF.QCapabilities.prototype.supportsDataCells = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsExtendedSort = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsConditions = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsExpandBottomUp = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsCubeBlending = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsHierarchyTrapezoidFilter = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsSpatialClustering = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsAverageCountNullZero = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsCeScenarioParams = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsHierarchyLevelOffsetFilter = function() {
		return false;
	};
	oFF.QCapabilities.prototype.getSupportsMetadataDataCategory = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsSpatialTransformation = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsMemberVisibility = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsUniqueHierarchyPath = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsCubeBlendingProperties = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsExceptionAggregationDimsFormulas = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsIgnoreExternalDimensions = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsHierarchyNavigationDeltaMode = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsHierarchyMetadata = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsExceptions = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsExceptionsV2 = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsHierarchyLevelMetadata = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsDimensionHierarchyLevels = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsExceptionSettings = function() {
		return false;
	};
	oFF.QCapabilities.prototype.setSupportsConditionalResult = function(
			supportsConditionalResults) {
		this.m_supportsConditionalResults = supportsConditionalResults;
	};
	oFF.QCapabilities.prototype.supportsConditionalResults = function() {
		return this.m_supportsConditionalResults;
	};
	oFF.QCapabilities.prototype.setSupportsConditionalResultVisibility = function(
			supportsConditionalResultVisibility) {
		this.m_supportsConditionalResultVisibility = supportsConditionalResultVisibility;
	};
	oFF.QCapabilities.prototype.supportsConditionalResultVisibility = function() {
		return this.m_supportsConditionalResultVisibility;
	};
	oFF.QCapabilities.prototype.supportsRestrictedMeasures = function() {
		return this.m_supportsRestrictedMeasures;
	};
	oFF.QCapabilities.prototype.setSupportsRestrictedMeasures = function(
			supportsRestrictedMeasures) {
		this.m_supportsRestrictedMeasures = supportsRestrictedMeasures;
	};
	oFF.QCapabilities.prototype.supportsFormulaMeasures = function() {
		return this.m_supportsFormulaMeasures;
	};
	oFF.QCapabilities.prototype.setSupportsFormulaMeasures = function(
			supportsFormulaMeasures) {
		this.m_supportsFormulaMeasures = supportsFormulaMeasures;
	};
	oFF.QCapabilities.prototype.supportsKeepOriginalTexts = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsUnifiedDataCells = function() {
		return false;
	};
	oFF.QCapabilities.prototype.getSupportedResultAlignmentLevel = function() {
		return this.m_supportedResultAlignmentLevel;
	};
	oFF.QCapabilities.prototype.setSupportedResultAlignmentLevel = function(
			supportedAlignmentLocation) {
		this.m_supportedResultAlignmentLevel = supportedAlignmentLocation;
	};
	oFF.QCapabilities.prototype.getSupportedResultVisibilityLevel = function() {
		return this.m_supportedVisibilityLocation;
	};
	oFF.QCapabilities.prototype.setSupportedVisibilityLocation = function(
			supportedVisibilityLocation) {
		this.m_supportedVisibilityLocation = supportedVisibilityLocation;
	};
	oFF.QCapabilities.prototype.getResultStructureReorderingCapability = function() {
		return this.m_supportedReorderingCapability;
	};
	oFF.QCapabilities.prototype.setResultStructureReorderingCapability = function(
			supportedReorderingCapability) {
		this.m_supportedReorderingCapability = supportedReorderingCapability;
	};
	oFF.QCapabilities.prototype.getSupportedResultAlignments = function() {
		return this.m_supportedResultAlignment;
	};
	oFF.QCapabilities.prototype.supportsResultAlignmentType = function(
			resultAlignment) {
		return this.m_supportedResultAlignment.contains(resultAlignment);
	};
	oFF.QCapabilities.prototype.addSupportedResultAlignment = function(
			supportedResultAlignment) {
		this.m_supportedResultAlignment.add(supportedResultAlignment);
	};
	oFF.QCapabilities.prototype.clearSupportedResultAlignment = function() {
		this.m_supportedResultAlignment.clear();
	};
	oFF.QCapabilities.prototype.addSupportedConditionalElement = function(
			element) {
		this.m_supportedConditionalResults.add(element);
	};
	oFF.QCapabilities.prototype.getSupportedConditionalResults = function() {
		return this.m_supportedConditionalResults;
	};
	oFF.QCapabilities.prototype.getSystemType = function() {
		return this.m_systemType;
	};
	oFF.QCapabilities.prototype.setSystemType = function(systemType) {
		this.m_systemType = systemType;
	};
	oFF.QCapabilities.prototype.supportsCheckVariables = function() {
		return this.m_supportsCheckVariables;
	};
	oFF.QCapabilities.prototype.setSupportsCheckVariables = function(
			supportsCheckVariables) {
		this.m_supportsCheckVariables = supportsCheckVariables;
	};
	oFF.QCapabilities.prototype.supportsReInitVariables = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsDirectVariableTransfer = function() {
		return this.m_supportsDirectVariableTransfer;
	};
	oFF.QCapabilities.prototype.setSupportsDirectVariableTransfer = function(
			supportsDirectVariableTransfer) {
		this.m_supportsDirectVariableTransfer = supportsDirectVariableTransfer;
	};
	oFF.QCapabilities.prototype.supportsHierarchyPath = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsReturnedDataSelection = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsShutdown = function() {
		return this.m_supportsShutdown;
	};
	oFF.QCapabilities.prototype.setSupportsShutdown = function(supportsShutdown) {
		this.m_supportsShutdown = supportsShutdown;
	};
	oFF.QCapabilities.prototype.supportsComplexFilter = function() {
		return this.m_supportsComplexFilter;
	};
	oFF.QCapabilities.prototype.setSupportsComplexFilter = function(
			supportsComplexFilter) {
		this.m_supportsComplexFilter = supportsComplexFilter;
	};
	oFF.QCapabilities.prototype.supportsCellValueOperand = function() {
		return this.m_supportsCellValueOperands;
	};
	oFF.QCapabilities.prototype.setSupportsCellValueOperands = function(
			supportsCellValueOperands) {
		this.m_supportsCellValueOperands = supportsCellValueOperands;
	};
	oFF.QCapabilities.prototype.supportsIntersectLayers = function() {
		return this.m_supportsIntersectLayers;
	};
	oFF.QCapabilities.prototype.setSupportsIntersectLayers = function(
			supportsIntersectLayers) {
		this.m_supportsIntersectLayers = supportsIntersectLayers;
	};
	oFF.QCapabilities.prototype.supportsVisibilityFilter = function() {
		return this.m_supportsVisibilityFilter;
	};
	oFF.QCapabilities.prototype.setSupportsVisibilityFilter = function(
			supportsVisibilityFilter) {
		this.m_supportsVisibilityFilter = supportsVisibilityFilter;
	};
	oFF.QCapabilities.prototype.supportsObtainability = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsDataCellMixedValues = function() {
		return this.m_supportsDataCellMixedValues;
	};
	oFF.QCapabilities.prototype.setSupportsDataCellMixedValues = function(
			supportsDataCellMixedValues) {
		this.m_supportsDataCellMixedValues = supportsDataCellMixedValues;
	};
	oFF.QCapabilities.prototype.supportsSetOperand = function() {
		return this.m_supportsSetOperand;
	};
	oFF.QCapabilities.prototype.setSupportsSetOperand = function(
			supportsSetOperand) {
		this.m_supportsSetOperand = supportsSetOperand;
	};
	oFF.QCapabilities.prototype.supportsConvertToFlatFilter = function() {
		return this.m_supportsConvertToFlatFilter;
	};
	oFF.QCapabilities.prototype.setSupportsConvertToFlatFilter = function(
			supportsConvertToFlatFilter) {
		this.m_supportsConvertToFlatFilter = supportsConvertToFlatFilter;
	};
	oFF.QCapabilities.prototype.supportsCummulative = function() {
		return this.m_supportsCummulative;
	};
	oFF.QCapabilities.prototype.setSupportsCummulative = function(
			supportsCummulative) {
		this.m_supportsCummulative = supportsCummulative;
	};
	oFF.QCapabilities.prototype.supportsHierarchyNavCounter = function() {
		return this.m_supportsHierNavCounter;
	};
	oFF.QCapabilities.prototype.setSupportsHierarchyNavCounter = function(
			supportsHierarchyNavCounter) {
		this.m_supportsHierNavCounter = supportsHierarchyNavCounter;
	};
	oFF.QCapabilities.prototype.supportsHierarchyAttHierFields = function() {
		return this.m_supportsHierAttHierFields;
	};
	oFF.QCapabilities.prototype.setSupportsHierarchyAttHierFields = function(
			supportsHierAttHierFields) {
		this.m_supportsHierAttHierFields = supportsHierAttHierFields;
	};
	oFF.QCapabilities.prototype.supportsHierarchyCarryingDim = function() {
		return this.m_supportsHierCarryingDim;
	};
	oFF.QCapabilities.prototype.setSupportsHierarchyCarryingDim = function(
			supportsHierCarryingDim) {
		this.m_supportsHierCarryingDim = supportsHierCarryingDim;
	};
	oFF.QCapabilities.prototype.supportsSortType = function() {
		return this.m_supportsSortType;
	};
	oFF.QCapabilities.prototype.setSupportsSortType = function(supportsSortType) {
		this.m_supportsSortType = supportsSortType;
	};
	oFF.QCapabilities.prototype.supportsSpatialFilter = function() {
		return this.m_supportsSpatialFilter;
	};
	oFF.QCapabilities.prototype.setSupportsSpatialFilter = function(
			supportsSpatialFilter) {
		this.m_supportsSpatialFilter = supportsSpatialFilter;
	};
	oFF.QCapabilities.prototype.supportsSpatialFilterSrid = function() {
		return this.m_supportsSpatialFilterSrid;
	};
	oFF.QCapabilities.prototype.setSupportsSpatialFilterSrid = function(
			supportsSpatialFilterSrid) {
		this.m_supportsSpatialFilterSrid = supportsSpatialFilterSrid;
	};
	oFF.QCapabilities.prototype.supportsExtendedDimensions = function() {
		return this.m_supportsExtendedDimensions;
	};
	oFF.QCapabilities.prototype.setSupportsExtendedDimensions = function(
			supportsExtendedDimensions) {
		this.m_supportsExtendedDimensions = supportsExtendedDimensions;
	};
	oFF.QCapabilities.prototype.supportsCubeBlendingOutOfContext = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsInputReadinessStates = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsSortNewValues = function() {
		return this.m_supportsSortNewValues;
	};
	oFF.QCapabilities.prototype.setSupportsSortNewValues = function(
			supportsSortNewValues) {
		this.m_supportsSortNewValues = supportsSortNewValues;
	};
	oFF.QCapabilities.prototype.supportsIgnoreUnitOfZeroValueInAggregation = function() {
		return this.m_supportsIgnoreUnitOfZeroValueInAggregation;
	};
	oFF.QCapabilities.prototype.setSupportsIgnoreUnitOfZeroValueInAggregation = function(
			supportsIgnoreUnitOfZeroValueInAggregation) {
		this.m_supportsIgnoreUnitOfZeroValueInAggregation = supportsIgnoreUnitOfZeroValueInAggregation;
	};
	oFF.QCapabilities.prototype.supportsCubeBlendingWithNSubqueries = function() {
		return this.m_supportsCubeBlendingWithNSubqueries;
	};
	oFF.QCapabilities.prototype.setSupportsCubeBlendingWithNSubqueries = function(
			supportsCubeBlendingWithNSubqueries) {
		this.m_supportsCubeBlendingWithNSubqueries = supportsCubeBlendingWithNSubqueries;
	};
	oFF.QCapabilities.prototype.supportsExtendedDimensionsChangeDefaultRenamingAndDescription = function() {
		return this.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription;
	};
	oFF.QCapabilities.prototype.setSupportsExtendedDimensionsChangeDefaultRenamingAndDescription = function(
			supportsExtDimChangeDefaultRenamingAndDesc) {
		this.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription = supportsExtDimChangeDefaultRenamingAndDesc;
	};
	oFF.QCapabilities.prototype.supportsExtendedDimensionsCopyAllHierarchies = function() {
		return this.m_supportsExtendedDimensionsCopyAllHierarchies;
	};
	oFF.QCapabilities.prototype.setSupportsExtendedDimensionsCopyAllHierarchies = function(
			supportsExtDimCopyAllHierarchies) {
		this.m_supportsExtendedDimensionsCopyAllHierarchies = supportsExtDimCopyAllHierarchies;
	};
	oFF.QCapabilities.prototype.supportsFixMetadataHierarchyAttributes = function() {
		return this.m_supportsFixMetadataHierarchyAttributes;
	};
	oFF.QCapabilities.prototype.setSupportsFixMetadataHierarchyAttributes = function(
			supportsFixMetadataHierarchyAttributes) {
		this.m_supportsFixMetadataHierarchyAttributes = supportsFixMetadataHierarchyAttributes;
	};
	oFF.QCapabilities.prototype.setSupportsUniversalDisplayHierarchies = function(
			supportsUniversalDisplayHierarchies) {
		this.m_supportsUniversalDisplayHierarchies = supportsUniversalDisplayHierarchies;
	};
	oFF.QCapabilities.prototype.setSupportsUniversalDisplayHierarchiesCustomDimensions = function(
			supportsUniversalDisplayHierarchiesCustomDimensions) {
		this.m_supportsUniversalDisplayHierarchiesCustomDimensions = supportsUniversalDisplayHierarchiesCustomDimensions;
	};
	oFF.QCapabilities.prototype.supportsUniversalDisplayHierarchies = function() {
		return this.m_supportsUniversalDisplayHierarchies;
	};
	oFF.QCapabilities.prototype.supportsUniversalDisplayHierarchiesCustomDimensions = function() {
		return this.m_supportsUniversalDisplayHierarchiesCustomDimensions;
	};
	oFF.QCapabilities.prototype.setSupportsRemoteBlending = function(
			supportsRemoteBlending) {
		this.m_supportsRemoteBlending = supportsRemoteBlending;
	};
	oFF.QCapabilities.prototype.supportsRemoteBlending = function() {
		return this.m_supportsRemoteBlending;
	};
	oFF.QCapabilities.prototype.setSupportsCubeCache = function(
			supportsCubeCache) {
		this.m_supportsCubeCache = supportsCubeCache;
	};
	oFF.QCapabilities.prototype.supportsCubeCache = function() {
		return this.m_supportsCubeCache;
	};
	oFF.QCapabilities.prototype.setSupportsCatalogServiceV2 = function(
			supportsCatalogServiceV2) {
		this.m_supportsCatalogServiceV2 = supportsCatalogServiceV2;
	};
	oFF.QCapabilities.prototype.supportsCatalogServiceV2 = function() {
		return this.m_supportsCatalogServiceV2;
	};
	oFF.QCapabilities.prototype.supportsCustomSort = function() {
		return this.m_supportsCustomSort;
	};
	oFF.QCapabilities.prototype.setSupportsCustomSort = function(
			supportsCustomSort) {
		this.m_supportsCustomSort = supportsCustomSort;
	};
	oFF.QCapabilities.prototype.supportsTuplesOperand = function() {
		return this.m_supportsTuplesOperand;
	};
	oFF.QCapabilities.prototype.setSupportsTuplesOperand = function(
			supportsTuplesOperand) {
		this.m_supportsTuplesOperand = supportsTuplesOperand;
	};
	oFF.QCapabilities.prototype.supportsDataRefreshAndDataTopicality = function() {
		return this.m_supportsDataRefreshAndDataTopicality;
	};
	oFF.QCapabilities.prototype.setSupportsDataRefreshAndDataTopicality = function(
			supportsDataRefreshAndDataTopicality) {
		this.m_supportsDataRefreshAndDataTopicality = supportsDataRefreshAndDataTopicality;
	};
	oFF.QCapabilities.prototype.setSupportsRemoteBlendingBW = function(
			supportsRemoteBlendingBW) {
		this.m_supportsRemoteBlendingBW = supportsRemoteBlendingBW;
	};
	oFF.QCapabilities.prototype.supportsRemoteBlendingBW = function() {
		return this.m_supportsRemoteBlendingBW;
	};
	oFF.QCapabilities.prototype.supportsResultSetUnitIndex = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsCustomMeasureSortOrder = function() {
		return this.m_supportsCustomMeasureSortOrder;
	};
	oFF.QCapabilities.prototype.setSupportsComplexTupleFilter = function(
			supportsComplexTupleFilter) {
		this.m_supportsComplexTupleFilter = supportsComplexTupleFilter;
	};
	oFF.QCapabilities.prototype.supportsComplexTupleFilter = function() {
		return this.m_supportsComplexTupleFilter;
	};
	oFF.QCapabilities.prototype.setSupportsCustomMeasureSortOrder = function(
			supportsCustomMeasureSortOrder) {
		this.m_supportsCustomMeasureSortOrder = supportsCustomMeasureSortOrder;
	};
	oFF.QCapabilities.prototype.supportsF4FilterForTextField = function() {
		return this.m_supportsF4FilterForTextField;
	};
	oFF.QCapabilities.prototype.setSupportsF4FilterForTextField = function(
			supportsF4FilterForTextField) {
		this.m_supportsF4FilterForTextField = supportsF4FilterForTextField;
	};
	oFF.QCapabilities.prototype.supportsHierarchyNavigationField = function() {
		return this.m_supportsHierarchyNavigationField;
	};
	oFF.QCapabilities.prototype.setSupportsHierarchyNavigationField = function(
			supportsHierarchyNavigationField) {
		this.m_supportsHierarchyNavigationField = supportsHierarchyNavigationField;
	};
	oFF.QCapabilities.prototype.supportsExceptionAggregationAvgNullSelectionMember = function() {
		return this.m_supportsExcepAggAvgNullSelMember;
	};
	oFF.QCapabilities.prototype.setSupportsExceptionAggregationAvgNullSelectionMember = function(
			supportExcepAggAvgNullSelMember) {
		this.m_supportsExcepAggAvgNullSelMember = supportExcepAggAvgNullSelMember;
	};
	oFF.QCapabilities.prototype.supportsExceptionAggregationCountNullSelectionMember = function() {
		return this.m_supportsExcepAggCountNullSelMember;
	};
	oFF.QCapabilities.prototype.setSupportsExceptionAggregationCountNullSelectionMember = function(
			supportExcepAggCountNullSelMember) {
		this.m_supportsExcepAggCountNullSelMember = supportExcepAggCountNullSelMember;
	};
	oFF.QCapabilities.prototype.supportsStatisticalAggregations = function() {
		return this.m_supportStatisticalAggregations;
	};
	oFF.QCapabilities.prototype.setSupportsStatisticalAggregations = function(
			supportStatisticalAggregations) {
		this.m_supportStatisticalAggregations = supportStatisticalAggregations;
	};
	oFF.QCapabilities.prototype.setSupportsVarianceOperator = function(
			supportsVarianceOperator) {
		this.m_supportsVarianceOperator = supportsVarianceOperator;
	};
	oFF.QCapabilities.prototype.supportsVarianceOperator = function() {
		return this.m_supportsVarianceOperator;
	};
	oFF.QCapabilities.prototype.setSupportsAsyncRemoteModelValidation = function(
			supportsAsyncRemoteModelValidation) {
		this.m_supportsAsyncRemoteModelValidation = supportsAsyncRemoteModelValidation;
	};
	oFF.QCapabilities.prototype.supportsAsyncRemoteModelValidation = function() {
		return this.m_supportsAsyncRemoteModelValidation;
	};
	oFF.QCapabilities.prototype.setSupportsExtendedKeyFigureProperties = function(
			supportsExtendedKeyFigureProperties) {
		this.m_supportsExtendedKeyFigureProperties = supportsExtendedKeyFigureProperties;
	};
	oFF.QCapabilities.prototype.supportsExtendedKeyFigureProperties = function() {
		return this.m_supportsExtendedKeyFigureProperties;
	};
	oFF.QCapabilities.prototype.setSupportsDetailedResponseExpansion = function(
			supportsDetailedResponseExpansion) {
		this.m_supportsDetailedResponseExpansion = supportsDetailedResponseExpansion;
	};
	oFF.QCapabilities.prototype.supportsDetailedResponseExpansion = function() {
		return this.m_supportsDetailedResponseExpansion;
	};
	oFF.QCapabilities.prototype.setSupportsDynamicVariableRefresh = function(
			supportsDynamicVariableRefresh) {
		this.m_supportsDynamicVariableRefresh = supportsDynamicVariableRefresh;
	};
	oFF.QCapabilities.prototype.supportsDynamicVariableRefresh = function() {
		return this.m_supportsDynamicVariableRefresh;
	};
	oFF.QCapabilities.prototype.setSupportsExpandQueryAxis = function(
			supportsExpandQueryAxis) {
		this.m_supportsExpandQueryAxis = supportsExpandQueryAxis;
	};
	oFF.QCapabilities.prototype.supportsExpandQueryAxis = function() {
		return this.m_supportsExpandQueryAxis;
	};
	oFF.QCapabilities.prototype.setSupportsQueryCurrencyTranslation = function(
			supportsQueryCurrencyTranslation) {
		this.m_supportsQueryCurrencyTranslation = supportsQueryCurrencyTranslation;
	};
	oFF.QCapabilities.prototype.supportsQueryCurrencyTranslation = function() {
		return this.m_supportsQueryCurrencyTranslation;
	};
	oFF.QCapabilities.prototype.supportsHierarchyRestNode = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsHierarchyVirtualRootNode = function() {
		return false;
	};
	oFF.QCapabilities.prototype.supportsStructureRestrictionsInValueHelp = function() {
		return this.m_supportsStructureRestrictionsInValueHelp;
	};
	oFF.QCapabilities.prototype.setSupportsStructureRestrictionsInValueHelp = function(
			supportsStructureRestrictionsInValueHelp) {
		this.m_supportsStructureRestrictionsInValueHelp = supportsStructureRestrictionsInValueHelp;
	};
	oFF.QCapabilities.prototype.supportsSpatialChoropleth = function() {
		return this.m_supportsSpatialChoropleth;
	};
	oFF.QCapabilities.prototype.setSupportsSpatialChoropleth = function(
			supportsSpatialChoropleth) {
		this.m_supportsSpatialChoropleth = supportsSpatialChoropleth;
	};
	oFF.QCapabilities.prototype.setSupportsInaCurrentMember = function(
			supportsInaCurrentMember) {
		this.m_inaCurrentMember = supportsInaCurrentMember;
	};
	oFF.QCapabilities.prototype.supportsInaCurrentMember = function() {
		return this.m_inaCurrentMember;
	};
	oFF.QCapabilities.prototype.supportsDimensionDefaultMember = function() {
		return this.m_supportsDimensionDefaultMember;
	};
	oFF.QCapabilities.prototype.setSupportsDimensionDefaultMember = function(
			supportsDimensionDefaultMember) {
		this.m_supportsDimensionDefaultMember = supportsDimensionDefaultMember;
	};
	oFF.QCapabilities.prototype.supportsDimensionVisibility = function() {
		return this.m_supportsDimensionVisibility;
	};
	oFF.QCapabilities.prototype.setSupportsDimensionVisibility = function(
			supportsDimensionVisibility) {
		this.m_supportsDimensionVisibility = supportsDimensionVisibility;
	};
	oFF.OlapEnvVariable = function() {
	};
	oFF.OlapEnvVariable.prototype = new oFF.DfNameObject();
	oFF.OlapEnvVariable.create = function(key, master) {
		var newObj = new oFF.OlapEnvVariable();
		newObj.setName(key);
		newObj.m_master = master;
		newObj.m_slaves = oFF.XList.create();
		return newObj;
	};
	oFF.OlapEnvVariable.prototype.m_master = null;
	oFF.OlapEnvVariable.prototype.m_slaves = null;
	oFF.OlapEnvVariable.prototype.releaseObject = function() {
		this.m_master = null;
		this.m_slaves = oFF.XObjectExt.release(this.m_slaves);
		oFF.DfNameObject.prototype.releaseObject.call(this);
	};
	oFF.OlapEnvVariable.prototype.addSlave = function(variable) {
		this.m_slaves.add(variable);
	};
	oFF.OlapEnvVariable.prototype.getMasterVariable = function() {
		return this.m_master;
	};
	oFF.OlapEnvVariable.prototype.syncMasterSlaves = function() {
		var serialization = this.m_master.serializeToElement(
				oFF.QModelFormat.INA_REPOSITORY, null);
		var i;
		var slave;
		for (i = 0; i < this.m_slaves.size(); i++) {
			slave = this.m_slaves.get(i);
			slave.deserializeFromElementExt(oFF.QModelFormat.INA_REPOSITORY,
					serialization);
		}
	};
	oFF.QVisibilityTriplet = function() {
	};
	oFF.QVisibilityTriplet.prototype = new oFF.DfNameObject();
	oFF.QVisibilityTriplet.create = function(alignment, element, visibility) {
		var newObj = new oFF.QVisibilityTriplet();
		newObj.m_alignment = alignment;
		newObj.m_element = element;
		newObj.m_visibility = visibility;
		newObj.setName(oFF.QVisibilityTriplet.getVisibilityKey(alignment,
				element));
		return newObj;
	};
	oFF.QVisibilityTriplet.getVisibilityKey = function(alignment, element) {
		if (oFF.isNull(alignment) || oFF.isNull(element)) {
			return null;
		}
		return oFF.XStringUtils.concatenate3(alignment.getName(), "-", element
				.getName());
	};
	oFF.QVisibilityTriplet.prototype.m_alignment = null;
	oFF.QVisibilityTriplet.prototype.m_element = null;
	oFF.QVisibilityTriplet.prototype.m_visibility = null;
	oFF.QVisibilityTriplet.prototype.clone = function() {
		return oFF.QVisibilityTriplet.create(this.m_alignment, this.m_element,
				this.m_visibility);
	};
	oFF.QVisibilityTriplet.prototype.releaseObject = function() {
		this.m_alignment = null;
		this.m_element = null;
		this.m_visibility = null;
		oFF.DfNameObject.prototype.releaseObject.call(this);
	};
	oFF.QVisibilityTriplet.prototype.getAlignment = function() {
		return this.m_alignment;
	};
	oFF.QVisibilityTriplet.prototype.getElement = function() {
		return this.m_element;
	};
	oFF.QVisibilityTriplet.prototype.setVisibility = function(visibility) {
		this.m_visibility = visibility;
	};
	oFF.QVisibilityTriplet.prototype.getVisibility = function() {
		return this.m_visibility;
	};
	oFF.QVisibilityTriplet.prototype.toString = function() {
		return oFF.XStringUtils.concatenate3(this.getName(), "-",
				this.m_visibility.getName());
	};
	oFF.QUqmPreparator = function() {
	};
	oFF.QUqmPreparator.prototype = new oFF.QueryPreparatorFactory();
	oFF.QUqmPreparator.staticSetupUqm = function() {
		oFF.QueryPreparatorFactory.put(oFF.QModelFormat.UQM,
				new oFF.QUqmPreparator());
	};
	oFF.QUqmPreparator.prototype.newInstanceFromFactory = function() {
		return new oFF.QUqmPreparator();
	};
	oFF.QUqmPreparator.prototype.prepareBeforeMetadata = function(config,
			details) {
		var definitionAsStructure = config.getDefinitionAsStructure();
		var dataSourceName;
		var dataSource;
		var type;
		var dataSourceDef;
		var systemName;
		if (oFF.notNull(definitionAsStructure)) {
			dataSourceName = definitionAsStructure
					.getStringByKey("DataSourceName");
			if (oFF.notNull(dataSourceName)) {
				dataSource = oFF.QFactory.newDataSource();
				dataSource.setFullQualifiedName(dataSourceName);
				config.setDataSource(dataSource);
			} else {
				type = definitionAsStructure.getElementTypeByKey("DataSource");
				if (type === oFF.PrElementType.STRING) {
					dataSourceName = definitionAsStructure
							.getStringByKey("DataSource");
					dataSource = oFF.QFactory.newDataSource();
					dataSource.setFullQualifiedName(dataSourceName);
					config.setDataSource(dataSource);
				} else {
					if (type === oFF.PrElementType.STRUCTURE) {
						dataSourceDef = definitionAsStructure
								.getStructureByKey("DataSource");
						if (oFF.notNull(dataSourceDef)) {
							dataSource = oFF.QFactory.newDataSource();
							dataSource.setObjectName(dataSourceDef
									.getStringByKey("ObjectName"));
							dataSource.setType(oFF.MetaObjectType
									.lookup(dataSourceDef
											.getStringByKey("Type")));
							config.setDataSource(dataSource);
						}
					}
				}
			}
			systemName = definitionAsStructure.getStringByKey("System");
			if (oFF.notNull(systemName) && config.hasSystemNameSet() === false) {
				config.setSystemName(systemName);
			}
		}
	};
	oFF.QUqmPreparator.prototype.prepareAfterMetadataBeforeVariables = function(
			queryManager, details) {
	};
	oFF.QUqmPreparator.prototype.prepareAfterVariables = function(queryManager,
			details) {
		var definitionAsStructure;
		if (oFF.notNull(details) && details.isStructure()) {
			definitionAsStructure = details.asStructure();
			this.prepareGlobalDef(queryManager, definitionAsStructure);
			this.prepareTmx(queryManager, definitionAsStructure);
			this.prepareVizDef(queryManager, definitionAsStructure);
			this.prepareffQuery(queryManager, definitionAsStructure);
		}
	};
	oFF.QUqmPreparator.prototype.prepareffQuery = function(queryManager,
			definitionAsStructure) {
		var ffQuery = definitionAsStructure.getStringByKey("ffQuery");
		var preparator;
		var prFFQuery;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(ffQuery)) {
			preparator = oFF.QueryPreparatorFactory
					.newInstance(oFF.QModelFormat.GRIDDEF);
			if (oFF.notNull(preparator)) {
				prFFQuery = oFF.PrFactory.createString(ffQuery);
				preparator.prepareAfterVariables(queryManager, prFFQuery);
			}
		}
	};
	oFF.QUqmPreparator.prototype.prepareTmx = function(queryManager,
			definitionAsStructure) {
		var tmx = definitionAsStructure.getStringByKey("Tmx");
		var preparator;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(tmx)) {
			preparator = oFF.QueryPreparatorFactory
					.newInstance(oFF.QModelFormat.TMX);
			if (oFF.notNull(preparator)) {
				preparator.prepareAfterVariables(queryManager, oFF.PrString
						.createWithValue(tmx));
			}
		}
	};
	oFF.QUqmPreparator.prototype.prepareVizDef = function(queryManager,
			definitionAsStructure) {
		var vizDef = definitionAsStructure.getStructureByKey("VizDef");
		var preparator;
		if (oFF.notNull(vizDef)) {
			preparator = oFF.QueryPreparatorFactory
					.newInstance(oFF.QModelFormat.VIZDEF);
			if (oFF.notNull(preparator)) {
				preparator.prepareAfterVariables(queryManager, vizDef);
			}
		}
	};
	oFF.QUqmPreparator.prototype.prepareGlobalDef = function(queryManager,
			definitionAsStructure) {
		var globalDef = definitionAsStructure.getStructureByKey("GlobalDef");
		var globalDefs = definitionAsStructure.getStructureByKey("GlobalDefs");
		var preparator;
		if (oFF.isNull(globalDef) && oFF.notNull(globalDefs)) {
			globalDef = globalDefs;
		}
		if (oFF.notNull(globalDef)) {
			preparator = oFF.QueryPreparatorFactory
					.newInstance(oFF.QModelFormat.GLOBALDEF);
			if (oFF.notNull(preparator)) {
				preparator.prepareAfterVariables(queryManager, globalDef);
			}
		}
	};
	oFF.QVariableValue = function() {
	};
	oFF.QVariableValue.prototype = new oFF.XAbstractValue();
	oFF.QVariableValue.create = function(variable) {
		var object = new oFF.QVariableValue();
		object.setVariable(variable);
		return object;
	};
	oFF.QVariableValue.prototype.m_variable = null;
	oFF.QVariableValue.prototype.releaseObject = function() {
		this.m_variable = oFF.XObjectExt.release(this.m_variable);
		oFF.XAbstractValue.prototype.releaseObject.call(this);
	};
	oFF.QVariableValue.prototype.getValueType = function() {
		return oFF.XValueType.VARIABLE;
	};
	oFF.QVariableValue.prototype.getVariable = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_variable);
	};
	oFF.QVariableValue.prototype.setVariable = function(variable) {
		this.m_variable = oFF.XWeakReferenceUtil.getWeakRef(variable);
	};
	oFF.QVariableValue.prototype.resetValue = function(value) {
		var variableValue;
		oFF.XAbstractValue.prototype.resetValue.call(this, value);
		variableValue = value;
		this.setVariable(variableValue.getVariable());
	};
	oFF.QVariableValue.prototype.clone = function() {
		return oFF.QVariableValue.create(this.getVariable());
	};
	oFF.QVariableValue.prototype.isEqualTo = function(other) {
		var xOther;
		if (!oFF.XAbstractValue.prototype.isEqualTo.call(this, other)) {
			return false;
		}
		xOther = other;
		return this.getVariable() === xOther.getVariable();
	};
	oFF.QVariableValue.prototype.toString = function() {
		return this.m_variable.toString();
	};
	oFF.QDeltaBroadcastPhase = function() {
	};
	oFF.QDeltaBroadcastPhase.prototype = new oFF.XConstant();
	oFF.QDeltaBroadcastPhase.BEFORE_EVENTS_BROADCAST = null;
	oFF.QDeltaBroadcastPhase.AFTER_EVENTS_BROADCAST = null;
	oFF.QDeltaBroadcastPhase.staticSetup = function() {
		oFF.QDeltaBroadcastPhase.BEFORE_EVENTS_BROADCAST = oFF.XConstant
				.setupName(new oFF.QDeltaBroadcastPhase(),
						"BeforeEventsBroadcast");
		oFF.QDeltaBroadcastPhase.AFTER_EVENTS_BROADCAST = oFF.XConstant
				.setupName(new oFF.QDeltaBroadcastPhase(),
						"AfterEventsBroadcast");
	};
	oFF.QDeltaChangeState = function() {
	};
	oFF.QDeltaChangeState.prototype = new oFF.XConstant();
	oFF.QDeltaChangeState.UNCHANGED = null;
	oFF.QDeltaChangeState.NODE_CHANGED = null;
	oFF.QDeltaChangeState.NODE_AND_CHILDREN_CHANGED = null;
	oFF.QDeltaChangeState.CHILDREN_CHANGED = null;
	oFF.QDeltaChangeState.staticSetup = function() {
		oFF.QDeltaChangeState.UNCHANGED = oFF.XConstant.setupName(
				new oFF.QDeltaChangeState(), "Unchanged");
		oFF.QDeltaChangeState.NODE_CHANGED = oFF.XConstant.setupName(
				new oFF.QDeltaChangeState(), "NodeChanged");
		oFF.QDeltaChangeState.NODE_AND_CHILDREN_CHANGED = oFF.XConstant
				.setupName(new oFF.QDeltaChangeState(),
						"NodeAndChildrenChanged");
		oFF.QDeltaChangeState.CHILDREN_CHANGED = oFF.XConstant.setupName(
				new oFF.QDeltaChangeState(), "ChildrenChanged");
	};
	oFF.QDeltaOperationPhase = function() {
	};
	oFF.QDeltaOperationPhase.prototype = new oFF.XConstant();
	oFF.QDeltaOperationPhase.QUEUE = null;
	oFF.QDeltaOperationPhase.STOP = null;
	oFF.QDeltaOperationPhase.RESUME = null;
	oFF.QDeltaOperationPhase.staticSetup = function() {
		oFF.QDeltaOperationPhase.QUEUE = oFF.XConstant.setupName(
				new oFF.QDeltaOperationPhase(), "Queue");
		oFF.QDeltaOperationPhase.STOP = oFF.XConstant.setupName(
				new oFF.QDeltaOperationPhase(), "Stop");
		oFF.QDeltaOperationPhase.RESUME = oFF.XConstant.setupName(
				new oFF.QDeltaOperationPhase(), "Resume");
	};
	oFF.DfQContext = function() {
	};
	oFF.DfQContext.prototype = new oFF.XObjectExt();
	oFF.DfQContext.prototype.m_context = null;
	oFF.DfQContext.prototype.setupContext = function(context) {
		this.setContext(context);
	};
	oFF.DfQContext.prototype.releaseObject = function() {
		this.m_context = oFF.XObjectExt.release(this.m_context);
		oFF.XObjectExt.prototype.releaseObject.call(this);
	};
	oFF.DfQContext.prototype.setContext = function(context) {
		if (oFF.notNull(context)) {
			this.m_context = oFF.XWeakReferenceUtil.getWeakRef(context);
		}
	};
	oFF.DfQContext.prototype.getContext = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_context);
	};
	oFF.DfQContext.prototype.getOriginContext = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_context);
	};
	oFF.DfQContext.prototype.getLogWriter = function() {
		var session = this.getSession();
		if (oFF.notNull(session)) {
			return session.getLogWriter();
		} else {
			return null;
		}
	};
	oFF.DfQContext.prototype.getSession = function() {
		return this.getApplication().getSession();
	};
	oFF.DfQContext.prototype.getApplication = function() {
		return this.getOlapEnv().getApplication();
	};
	oFF.DfQContext.prototype.getOlapEnv = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) || context === this ? null : context
				.getOlapEnv();
	};
	oFF.DfQContext.prototype.getQueryManagerBase = function() {
		return this.getQueryManager();
	};
	oFF.DfQContext.prototype.getConvenienceCommands = function() {
		var queryManager = this.getQueryManager();
		return oFF.isNull(queryManager) ? null : queryManager
				.getConvenienceCommands();
	};
	oFF.DfQContext.prototype.getQueryManager = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) ? null : context.getQueryManager();
	};
	oFF.DfQContext.prototype.getQueryModel = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) ? null : context.getQueryModel();
	};
	oFF.DfQContext.prototype.getQueryModelBase = function() {
		return this.getQueryModel();
	};
	oFF.DfQContext.prototype.getVariableContainer = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) ? null : context.getVariableContainer();
	};
	oFF.DfQContext.prototype.getDimensionAccessor = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) ? null : context.getDimensionAccessor();
	};
	oFF.DfQContext.prototype.getFieldAccessorSingle = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) ? null : context.getFieldAccessorSingle();
	};
	oFF.DfQContext.prototype.getModelCapabilities = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) ? null : context.getModelCapabilities();
	};
	oFF.DfQContext.prototype.getDrillManager = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) ? null : context.getDrillManager();
	};
	oFF.DfQContext.prototype.getDataSource = function() {
		var context = this.getOriginContext();
		return oFF.isNull(context) ? null : context.getDataSource();
	};
	oFF.OlapEnvArea = function() {
	};
	oFF.OlapEnvArea.prototype = new oFF.DfNameTextObject();
	oFF.OlapEnvArea.createArea = function(olapEnvironment) {
		var newObj = new oFF.OlapEnvArea();
		newObj.setupArea(olapEnvironment);
		return newObj;
	};
	oFF.OlapEnvArea.prototype.m_olapEnvironment = null;
	oFF.OlapEnvArea.prototype.m_varProcessor = null;
	oFF.OlapEnvArea.prototype.m_queryManagers = null;
	oFF.OlapEnvArea.prototype.setupArea = function(olapEnvironment) {
		this.m_olapEnvironment = oFF.XWeakReferenceUtil
				.getWeakRef(olapEnvironment);
		this.m_queryManagers = oFF.XList.create();
		this.m_varProcessor = oFF.OlapEnvVarProcessor.create(this);
	};
	oFF.OlapEnvArea.prototype.releaseObject = function() {
		var olapEnvironment = this.getOlapEnvironment();
		var i;
		var queryManager;
		olapEnvironment.unregisterArea(this);
		if (oFF.notNull(this.m_queryManagers)) {
			for (i = 0; i < this.m_queryManagers.size(); i++) {
				queryManager = this.m_queryManagers.get(i);
				oFF.XObjectExt.release(queryManager);
			}
			oFF.XObjectExt.release(this.m_queryManagers);
			this.m_queryManagers = null;
		}
		this.m_varProcessor = oFF.XObjectExt.release(this.m_varProcessor);
		this.m_olapEnvironment = null;
		oFF.DfNameTextObject.prototype.releaseObject.call(this);
	};
	oFF.OlapEnvArea.prototype.getOlapEnvironment = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_olapEnvironment);
	};
	oFF.OlapEnvArea.prototype.getApplication = function() {
		return this.getOlapEnvironment().getApplication();
	};
	oFF.OlapEnvArea.prototype.getOlapEnv = function() {
		return this.getOlapEnvironment().getOlapEnv();
	};
	oFF.OlapEnvArea.prototype.getSession = function() {
		return this.getOlapEnvironment().getSession();
	};
	oFF.OlapEnvArea.prototype.getVariableProcessor = function() {
		return this.m_varProcessor;
	};
	oFF.OlapEnvArea.prototype.getAllAreaQueryManager = function() {
		return this.m_queryManagers;
	};
	oFF.OlapEnvArea.prototype.registerQueryManager = function(queryManager) {
		this.m_queryManagers.add(queryManager);
	};
	oFF.OlapEnvArea.prototype.unregisterQueryManager = function(queryManager) {
		this.m_queryManagers.removeElement(queryManager);
	};
	oFF.PreQueryExecutor = function() {
	};
	oFF.PreQueryExecutor.prototype = new oFF.MessageManager();
	oFF.PreQueryExecutor.create = function(queryManager) {
		var preQueryExecutor = new oFF.PreQueryExecutor();
		preQueryExecutor.setupSessionContext(null);
		preQueryExecutor.m_queryManager = queryManager;
		preQueryExecutor.m_messageReceivers = oFF.XList.create();
		return preQueryExecutor;
	};
	oFF.PreQueryExecutor.prototype.m_queryManager = null;
	oFF.PreQueryExecutor.prototype.m_preQueryManager = null;
	oFF.PreQueryExecutor.prototype.m_preQueryExecutedListener = null;
	oFF.PreQueryExecutor.prototype.m_messageReceivers = null;
	oFF.PreQueryExecutor.prototype.releaseObject = function() {
		oFF.MessageManager.prototype.releaseObject.call(this);
		this.m_queryManager = null;
		this.m_preQueryManager = null;
		this.m_preQueryExecutedListener = null;
		this.m_messageReceivers = oFF.XObjectExt
				.release(this.m_messageReceivers);
	};
	oFF.PreQueryExecutor.prototype.serializeRemotePreQueries = function(
			syncType, mainSystemName, preQueries, preQueryExecutedListener) {
		var i;
		var preQueryManager;
		var preQueryExecutor;
		this.clearMessages();
		this.m_preQueryExecutedListener = preQueryExecutedListener;
		if (oFF.XCollectionUtils.hasElements(preQueries)) {
			for (i = 0; i < preQueries.size(); i++) {
				preQueryManager = preQueries.get(i).getObject()
						.getQueryManager();
				preQueryExecutor = preQueryManager.getPreQueryExecutor();
				if (!preQueryExecutor.serializeRemotePreQueries(syncType,
						preQueryManager.getSystemName(), preQueryManager
								.getQueryModel().getPreQueries(),
						preQueryExecutedListener)) {
					this.addAllMessages(preQueryExecutor);
					return false;
				}
				if (!oFF.XString.isEqual(mainSystemName, preQueryManager
						.getSystemName())) {
					if (!this.serializeAsRemotePreQuery(preQueryManager,
							syncType, mainSystemName)) {
						return false;
					}
				}
			}
		}
		return this.isValid();
	};
	oFF.PreQueryExecutor.prototype.serializeAsRemotePreQuery = function(
			preQueryManager, syncType, mainSystemName) {
		var persistenceIdentifier;
		var resultSetSyncState;
		var cache;
		var syncAction;
		if (!preQueryManager.getConnection().isBatchModeEnabled()) {
			this.updateResultSetPersistenceTarget(preQueryManager,
					mainSystemName);
			persistenceIdentifier = oFF.BlendingSource
					.createPersistenceIdentifier(preQueryManager);
			preQueryManager
					.setResultSetPersistenceIdentifier(persistenceIdentifier);
			resultSetSyncState = preQueryManager.getResultSetSyncState();
			if (resultSetSyncState === oFF.SyncState.OUT_OF_SYNC) {
				this.m_preQueryManager = preQueryManager;
				cache = preQueryManager.getOlapEnv()
						.getCachedRemoteBlendingData(persistenceIdentifier);
				if (oFF.notNull(cache)) {
					preQueryManager
							.getActiveResultSetContainer()
							.setSerializedData(cache.getView(), cache.getCube());
				} else {
					if (syncType === oFF.SyncType.BLOCKING) {
						syncAction = preQueryManager
								.processQueryExecutionAsRemotePreQuery(
										syncType, null, null);
						this.addMessageReceiver(this);
						this.onPreQueryExecuted(syncAction, true);
					} else {
						this.addMessageReceiver(this);
						preQueryManager.processQueryExecutionAsRemotePreQuery(
								syncType, this, oFF.XStringValue
										.create("RemotePreQuerySerialization"));
						return false;
					}
				}
			} else {
				if (resultSetSyncState === oFF.SyncState.IN_SYNC_WITH_ERROR) {
					this.addAllMessages(preQueryManager
							.getActiveResultSetContainer());
				}
			}
		}
		return this.isValid();
	};
	oFF.PreQueryExecutor.prototype.onQueryExecuted = function(extResult,
			resultSetContainer, customIdentifier) {
		if (oFF.notNull(customIdentifier)
				&& oFF.XString.isEqual(customIdentifier.toString(),
						"RemotePreQuerySerialization")) {
			this.onPreQueryExecuted(extResult, true);
			this.m_preQueryExecutedListener.onPreQueryExecuted();
		} else {
			this.onPreQueryExecuted(extResult, false);
		}
	};
	oFF.PreQueryExecutor.prototype.onPreQueryExecuted = function(extResult,
			isRemotePreQuerySerialization) {
		var i;
		this.m_preQueryManager.getQueryModel().addQueryModelIdToMessages(
				extResult.getMessages());
		if (isRemotePreQuerySerialization || this.isStreamingEnabled()) {
			for (i = 0; i < this.m_messageReceivers.size(); i++) {
				this.m_messageReceivers.get(i).copyAllMessages(extResult);
			}
		}
		this.m_messageReceivers.clear();
	};
	oFF.PreQueryExecutor.prototype.isStreamingEnabled = function() {
		var connectionContainer = this.m_preQueryManager.getServiceConfig()
				.getConnectionContainer();
		var batchRequestManager;
		if (oFF.notNull(connectionContainer)) {
			batchRequestManager = connectionContainer.getBatchRequestManager();
			if (oFF.notNull(batchRequestManager)) {
				return batchRequestManager.isRsStreamingEnabled();
			}
		}
		return false;
	};
	oFF.PreQueryExecutor.prototype.processExecutionAsPreQueryInBatch = function(
			batchSystemName, preQueryName, messageReceiver) {
		var tmpResultSetTransportEnabled;
		var service;
		var tmpConnection;
		if (this.m_queryManager.getActiveResultSetContainer().getSyncState() === oFF.SyncState.PROCESSING) {
			this.addMessageReceiver(messageReceiver);
			return;
		}
		tmpResultSetTransportEnabled = this.m_queryManager
				.isResultSetTransportEnabled();
		if (oFF.XString.isEqual(batchSystemName, this.m_queryManager
				.getSystemName())) {
			this.m_preQueryManager = this.m_queryManager;
			this.addMessageReceiver(messageReceiver);
			this.m_queryManager.setResultSetTransportEnabled(false);
			this.m_queryManager.setPreQueryName(preQueryName);
			this.m_queryManager.processQueryExecution(
					oFF.SyncType.NON_BLOCKING, this, null);
			this.restoreData(tmpResultSetTransportEnabled, null);
		} else {
			this.serializeAsRemotePreQuery(this.m_queryManager,
					oFF.SyncType.BLOCKING, batchSystemName);
			if (this.isValid() && this.m_queryManager.isValid()) {
				service = this.m_queryManager;
				tmpConnection = service.getConnection();
				service.setConnection(tmpConnection.getConnectionPool()
						.getConnection(batchSystemName));
				this.m_queryManager.setResultSetTransportEnabled(false);
				this.m_queryManager.setPreQueryName(preQueryName);
				this.m_queryManager.processQueryExecutionAsRemotePreQuery(
						oFF.SyncType.NON_BLOCKING, null, null);
				this.restoreData(tmpResultSetTransportEnabled, tmpConnection);
			}
		}
	};
	oFF.PreQueryExecutor.prototype.addMessageReceiver = function(
			messageReceiver) {
		if (oFF.notNull(messageReceiver)) {
			this.m_messageReceivers.add(messageReceiver);
		}
	};
	oFF.PreQueryExecutor.prototype.restoreData = function(
			resultSetTransportEnabled, connectionContainer) {
		if (oFF.notNull(connectionContainer)) {
			this.m_queryManager.setConnection(connectionContainer);
		}
		this.m_queryManager.getActiveResultSetContainer()
				.setResultSetTransportEnabled(resultSetTransportEnabled);
		this.m_queryManager.setPreQueryName(null);
	};
	oFF.PreQueryExecutor.prototype.updateResultSetPersistenceTarget = function(
			queryManager, batchSystemName) {
		var batchSystemDescription = queryManager.getApplication()
				.getSystemLandscape().getSystemDescription(batchSystemName);
		var systemMapping;
		if (oFF.notNull(batchSystemDescription)) {
			if (batchSystemDescription.isSystemMappingValid(queryManager
					.getSystemDescription())) {
				systemMapping = queryManager.getSystemDescription()
						.getSystemMapping(batchSystemName);
				queryManager.setResultSetPersistanceTargetTable(systemMapping
						.getSerializeTable());
				queryManager.setResultSetPersistanceTargetSchema(systemMapping
						.getSerializeSchema());
			} else {
				queryManager.setResultSetPersistanceTargetTable(null);
				queryManager.setResultSetPersistanceTargetSchema(null);
			}
		}
	};
	oFF.QMetadataModel = function() {
	};
	oFF.QMetadataModel.prototype = new oFF.DfApplicationContext();
	oFF.QMetadataModel.create = function(queryModel) {
		var metaDataCache = new oFF.QMetadataModel();
		metaDataCache.setupExt(queryModel);
		return metaDataCache;
	};
	oFF.QMetadataModel.prototype.m_queryModel = null;
	oFF.QMetadataModel.prototype.m_hierarchies = null;
	oFF.QMetadataModel.prototype.setupExt = function(queryModel) {
		if (oFF.notNull(queryModel)) {
			this.setupApplicationContext(queryModel.getApplication());
		} else {
			this.setupApplicationContext(null);
		}
		this.m_hierarchies = oFF.XList.create();
		this.m_queryModel = oFF.XWeakReferenceUtil.getWeakRef(queryModel);
	};
	oFF.QMetadataModel.prototype.clone = function() {
		return this.cloneOlapComponent(null, null);
	};
	oFF.QMetadataModel.prototype.cloneOlapComponent = function(context, parent) {
		var metadataModelClone = oFF.QMetadataModel
				.create(this.getQueryModel());
		var iterator = this.m_hierarchies.getIterator();
		var element;
		var cloneObj;
		while (iterator.hasNext()) {
			element = iterator.next();
			cloneObj = element.cloneOlapComponent(null, null);
			metadataModelClone.getLeveledHierarchiesBase().add(cloneObj);
		}
		oFF.XObjectExt.release(iterator);
		return metadataModelClone;
	};
	oFF.QMetadataModel.prototype.releaseObject = function() {
		this.m_hierarchies = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_hierarchies);
		this.m_queryModel = null;
		oFF.DfApplicationContext.prototype.releaseObject.call(this);
	};
	oFF.QMetadataModel.prototype.getComponentType = function() {
		return this.getOlapComponentType();
	};
	oFF.QMetadataModel.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.OLAP_METADATA_MODEL;
	};
	oFF.QMetadataModel.prototype.getQueryModel = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_queryModel);
	};
	oFF.QMetadataModel.prototype.getLeveledHierarchiesBase = function() {
		return this.m_hierarchies;
	};
	oFF.QMetadataModel.prototype.getLeveledHierarchies = function() {
		var hierarchies;
		var iterator;
		if (oFF.isNull(this.m_hierarchies)) {
			return null;
		}
		hierarchies = oFF.XList.create();
		iterator = this.m_hierarchies.getIterator();
		while (iterator.hasNext()) {
			hierarchies.add(iterator.next());
		}
		oFF.XObjectExt.release(iterator);
		return hierarchies;
	};
	oFF.QMetadataModel.prototype.getLeveledHierarchiesByDimension = function(
			dimension) {
		var supportsHierarchyLevels = dimension
				.supportsHierarchyLevelMetadata()
				|| dimension.supportsDimensionHierarchyLevels();
		var dimensionHierarchies;
		var hierIt;
		var next;
		if (oFF.isNull(this.m_hierarchies) || !supportsHierarchyLevels) {
			return null;
		}
		dimensionHierarchies = oFF.XList.create();
		hierIt = this.m_hierarchies.getIterator();
		while (hierIt.hasNext()) {
			next = hierIt.next();
			if (dimension.isEqualTo(next.getDimension())
					|| oFF.XString.isEqual(dimension.getName(), next
							.getDimensionName())) {
				dimensionHierarchies.add(next);
			}
		}
		oFF.XObjectExt.release(hierIt);
		return dimensionHierarchies;
	};
	oFF.QMetadataModel.prototype.getMetadataResponse = function() {
		return this.getQueryModel().getServerBaseSerialization();
	};
	oFF.QMetadataModel.prototype.registerChangedListener = oFF.noSupport;
	oFF.QMetadataModel.prototype.unregisterChangedListener = oFF.noSupport;
	oFF.QMetadataModel.prototype.queueEventing = function() {
	};
	oFF.QMetadataModel.prototype.stopEventing = function() {
	};
	oFF.QMetadataModel.prototype.isEventingStopped = function() {
		return false;
	};
	oFF.QMetadataModel.prototype.resumeEventing = function() {
	};
	oFF.OlapEnvironment = function() {
	};
	oFF.OlapEnvironment.prototype = new oFF.XObjectExt();
	oFF.OlapEnvironment.SYSTEM_NAME = "systemName";
	oFF.OlapEnvironment.QUERY_MANAGER = "queryManager";
	oFF.OlapEnvironment.CUSTOM_IDENTIFIER = "customIdentifier";
	oFF.OlapEnvironment.LISTENER = "listener";
	oFF.OlapEnvironment.SYNC_TYPE = "syncType";
	oFF.OlapEnvironment.RS_DATA_CACHE_MAX_ENTRIES = 10;
	oFF.OlapEnvironment.create = function(application) {
		var newObj = new oFF.OlapEnvironment();
		newObj.setupEnv(application);
		return newObj;
	};
	oFF.OlapEnvironment.prototype.m_application = null;
	oFF.OlapEnvironment.prototype.m_defaultArea = null;
	oFF.OlapEnvironment.prototype.m_areas = null;
	oFF.OlapEnvironment.prototype.m_isCmdTracing = false;
	oFF.OlapEnvironment.prototype.m_variables = null;
	oFF.OlapEnvironment.prototype.m_traceOffset = 0;
	oFF.OlapEnvironment.prototype.m_traces = null;
	oFF.OlapEnvironment.prototype.m_metadataCache = null;
	oFF.OlapEnvironment.prototype.m_fieldMetadataCache = null;
	oFF.OlapEnvironment.prototype.m_dimensionMetadataCache = null;
	oFF.OlapEnvironment.prototype.m_remoteBlendingCache = null;
	oFF.OlapEnvironment.prototype.m_microCubesNames = null;
	oFF.OlapEnvironment.prototype.m_queryManagerBySystemName = null;
	oFF.OlapEnvironment.prototype.m_olapEnvironmentQMCreationListener = null;
	oFF.OlapEnvironment.prototype.m_datasourceKeysToListeners = null;
	oFF.OlapEnvironment.prototype.m_resourceToStringRep = null;
	oFF.OlapEnvironment.prototype.getdatasourceKeysToListeners = function() {
		return this.m_datasourceKeysToListeners;
	};
	oFF.OlapEnvironment.prototype.setupEnv = function(application) {
		this.setApplication(application);
		this.m_areas = oFF.XListOfNameObject.create();
		this.m_metadataCache = oFF.XCache.create();
		this.m_fieldMetadataCache = oFF.XCache.create();
		this.m_dimensionMetadataCache = oFF.XCache.create();
		this.m_remoteBlendingCache = oFF.XLinkedHashMapByString.create();
		this.m_datasourceKeysToListeners = oFF.XHashMapByString.create();
		this.m_resourceToStringRep = oFF.XCache.create();
	};
	oFF.OlapEnvironment.prototype.releaseObject = function() {
		if (oFF.notNull(this.m_areas)) {
			while (this.m_areas.hasElements()) {
				oFF.XObjectExt.release(this.m_areas.get(0));
			}
			oFF.XObjectExt.release(this.m_areas);
			this.m_areas = null;
		}
		this.m_metadataCache = oFF.XObjectExt.release(this.m_metadataCache);
		this.m_fieldMetadataCache = oFF.XObjectExt
				.release(this.m_fieldMetadataCache);
		this.m_dimensionMetadataCache = oFF.XObjectExt
				.release(this.m_dimensionMetadataCache);
		this.m_remoteBlendingCache = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_remoteBlendingCache);
		this.m_defaultArea = null;
		this.m_application = null;
		this.m_microCubesNames = oFF.XObjectExt.release(this.m_microCubesNames);
		this.m_datasourceKeysToListeners = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_datasourceKeysToListeners);
		this.m_queryManagerBySystemName = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_queryManagerBySystemName);
		this.m_olapEnvironmentQMCreationListener = oFF.XObjectExt
				.release(this.m_olapEnvironmentQMCreationListener);
		this.m_resourceToStringRep = oFF.XObjectExt
				.release(this.m_resourceToStringRep);
		oFF.XObjectExt.prototype.releaseObject.call(this);
	};
	oFF.OlapEnvironment.prototype.getComponentType = function() {
		return oFF.OlapComponentType.OLAP_ENVIRONMENT;
	};
	oFF.OlapEnvironment.prototype.getArea = function(name) {
		return this.m_areas.getByKey(name);
	};
	oFF.OlapEnvironment.prototype.newArea = function(name, text, isDefault) {
		var area = oFF.OlapEnvArea.createArea(this);
		area.setName(name);
		area.setText(text);
		this.m_areas.add(area);
		if (isDefault) {
			this.m_defaultArea = area;
		}
		return area;
	};
	oFF.OlapEnvironment.prototype.setDefaultArea = function(name) {
		var area = this.getArea(name);
		this.m_defaultArea = area;
		return area;
	};
	oFF.OlapEnvironment.prototype.getAllAreas = function() {
		return this.m_areas;
	};
	oFF.OlapEnvironment.prototype.unregisterArea = function(area) {
		this.m_areas.removeElement(area);
		if (this.m_defaultArea === area) {
			this.m_defaultArea = null;
		}
	};
	oFF.OlapEnvironment.prototype.getDefaultArea = function() {
		if (oFF.isNull(this.m_defaultArea)) {
			if (this.m_areas.size() > 0) {
				this.m_defaultArea = this.m_areas.get(0);
			} else {
				this.newArea("defaultArea", "Default Area", true);
			}
		}
		return this.m_defaultArea;
	};
	oFF.OlapEnvironment.prototype.getAllAreaQueryManager = function() {
		return this.getDefaultArea().getAllAreaQueryManager();
	};
	oFF.OlapEnvironment.prototype.getName = function() {
		return this.getDefaultArea().getName();
	};
	oFF.OlapEnvironment.prototype.getText = function() {
		return this.getDefaultArea().getText();
	};
	oFF.OlapEnvironment.prototype.getVariableProcessor = function() {
		return this.getDefaultArea().getVariableProcessor();
	};
	oFF.OlapEnvironment.prototype.getOlapEnv = function() {
		return this;
	};
	oFF.OlapEnvironment.prototype.getOlapEnvironment = function() {
		return this;
	};
	oFF.OlapEnvironment.prototype.setDefaultSyncType = function(syncType) {
		this.getSession().setDefaultSyncType(syncType);
	};
	oFF.OlapEnvironment.prototype.getDefaultSyncType = function() {
		return this.getSession().getDefaultSyncType();
	};
	oFF.OlapEnvironment.prototype.getVersion = function() {
		return this.getSession().getVersion();
	};
	oFF.OlapEnvironment.prototype.getApplicationName = function() {
		return this.getApplication().getApplicationName();
	};
	oFF.OlapEnvironment.prototype.getErrorManager = function() {
		return this.getApplication().getErrorManager();
	};
	oFF.OlapEnvironment.prototype.getSystemLandscape = function() {
		return this.getApplication().getSystemLandscape();
	};
	oFF.OlapEnvironment.prototype.getUserManager = function() {
		return this.getApplication().getUserManager();
	};
	oFF.OlapEnvironment.prototype.getRepositoryManager = function() {
		return this.getApplication().getRepositoryManager();
	};
	oFF.OlapEnvironment.prototype.getConnectionPool = function() {
		return this.getApplication().getConnectionPool();
	};
	oFF.OlapEnvironment.prototype.getConnection = function(systemName) {
		return this.getApplication().getConnection(systemName);
	};
	oFF.OlapEnvironment.prototype.getUiManager = function() {
		return this.getApplication().getUiManager();
	};
	oFF.OlapEnvironment.prototype.setUiManager = function(uiManager) {
		this.getApplicationBase().setUiManager(uiManager);
	};
	oFF.OlapEnvironment.prototype.getServices = function(serviceType) {
		return this.getApplication().getServices(serviceType);
	};
	oFF.OlapEnvironment.prototype.createNextInstanceId = function() {
		return this.getApplication().createNextInstanceId();
	};
	oFF.OlapEnvironment.prototype.setQueryMetadata = function(key, entry) {
		if (oFF.notNull(key) && oFF.notNull(entry)) {
			if (this.m_metadataCache.containsEntry(key)) {
				this.m_metadataCache.useEntry(key);
			} else {
				this.m_metadataCache.addEntry(key, entry);
			}
		}
	};
	oFF.OlapEnvironment.prototype.overwriteQueryMetadata = function(key, entry) {
		if (oFF.notNull(key) && oFF.notNull(entry)) {
			this.m_metadataCache.updateEntry(key, entry);
		}
	};
	oFF.OlapEnvironment.prototype.releaseQueryMetadata = function(key) {
		this.m_metadataCache.freeEntry(key);
	};
	oFF.OlapEnvironment.prototype.getQueryMetadata = function(key) {
		return this.m_metadataCache.getEntry(key);
	};
	oFF.OlapEnvironment.prototype.getDataProviders = function() {
		return this.getApplication().getDataProviders();
	};
	oFF.OlapEnvironment.prototype.setApplicationName = function(name) {
		this.getApplicationBase().setApplicationName(name);
	};
	oFF.OlapEnvironment.prototype.setErrorManager = function(errorManager) {
		this.getApplicationBase().setErrorManager(errorManager);
	};
	oFF.OlapEnvironment.prototype.setSystemLandscape = function(systemLandscape) {
		this.getApplicationBase().setSystemLandscape(systemLandscape);
	};
	oFF.OlapEnvironment.prototype.registerService = function(service) {
		this.getApplicationBase().registerService(service);
	};
	oFF.OlapEnvironment.prototype.unregisterService = function(service) {
		this.getApplicationBase().unregisterService(service);
	};
	oFF.OlapEnvironment.prototype.registerDataProvider = function(dataProvider) {
		this.getApplicationBase().registerDataProvider(dataProvider);
	};
	oFF.OlapEnvironment.prototype.unregisterDataProvider = function(
			dataProvider) {
		this.getApplicationBase().unregisterDataProvider(dataProvider);
	};
	oFF.OlapEnvironment.prototype.isSapStatisticsEnabled = function() {
		return this.getApplication().isSapStatisticsEnabled();
	};
	oFF.OlapEnvironment.prototype.setSapStatisticsEnabled = function(enabled) {
		this.getApplicationBase().setSapStatisticsEnabled(enabled);
	};
	oFF.OlapEnvironment.prototype.newSubApplication = function() {
		return this.getApplication().newSubApplication();
	};
	oFF.OlapEnvironment.prototype.unregisterSubApplication = function(
			subApplication) {
		this.getApplicationBase().unregisterSubApplication(subApplication);
	};
	oFF.OlapEnvironment.prototype.getSyncManager = function() {
		return this.getApplication().getSyncManager();
	};
	oFF.OlapEnvironment.prototype.setTracing = function(enableTracing) {
		if (this.m_isCmdTracing !== enableTracing) {
			this.m_isCmdTracing = enableTracing;
			if (enableTracing) {
				this.m_traces = oFF.XList.create();
				this.m_traceOffset = 0;
			} else {
				this.m_traces = oFF.XObjectExt.release(this.m_traces);
			}
		}
	};
	oFF.OlapEnvironment.prototype.isTracing = function() {
		return oFF.notNull(this.m_traces);
	};
	oFF.OlapEnvironment.prototype.getTracingLog = function() {
		var buffer;
		var i;
		var cmd;
		if (oFF.isNull(this.m_traces)) {
			return "[Tracing not enabled]";
		}
		buffer = oFF.XStringBuffer.create();
		for (i = 0; i < this.m_traces.size(); i++) {
			cmd = this.m_traces.get(i);
			buffer.appendLine(cmd.toString());
		}
		return buffer.toString();
	};
	oFF.OlapEnvironment.prototype.setReplacementVariables = function(variables,
			varPrefix, varPostfix, lookupNamespace) {
		this.m_variables = variables;
	};
	oFF.OlapEnvironment.prototype.replaceVariable = function(name) {
		return oFF.isNull(this.m_variables) ? name : this.m_variables
				.getStringByKeyExt(name, name);
	};
	oFF.OlapEnvironment.prototype.addTraceEntry = function(entry) {
		if (oFF.notNull(this.m_traces)) {
			this.m_traces.add(entry);
		}
	};
	oFF.OlapEnvironment.prototype.getTraceChunk = function() {
		var chunk = this.m_traces;
		if (oFF.notNull(this.m_traces)) {
			this.m_traceOffset = this.m_traceOffset + this.m_traces.size();
			this.m_traces = oFF.XList.create();
		}
		return chunk;
	};
	oFF.OlapEnvironment.prototype.getTraceOffset = function() {
		return this.m_traceOffset;
	};
	oFF.OlapEnvironment.prototype.selectCmds = function(olapObject) {
		return oFF.CommandSpaceFactory.createCommandSpaceWithElement(this,
				olapObject);
	};
	oFF.OlapEnvironment.prototype.select = function(sigSelExpression) {
		return oFF.CommandSpaceFactory.createCommandSpaceWithSelection(this,
				sigSelExpression);
	};
	oFF.OlapEnvironment.prototype.getSession = function() {
		return this.getApplication().getSession();
	};
	oFF.OlapEnvironment.prototype.getApplication = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_application);
	};
	oFF.OlapEnvironment.prototype.getApplicationBase = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_application);
	};
	oFF.OlapEnvironment.prototype.setApplication = function(application) {
		this.m_application = oFF.XWeakReferenceUtil.getWeakRef(application);
	};
	oFF.OlapEnvironment.prototype.getContext = function() {
		return this;
	};
	oFF.OlapEnvironment.prototype.getQueryModel = function() {
		return null;
	};
	oFF.OlapEnvironment.prototype.getVariableContainer = function() {
		return null;
	};
	oFF.OlapEnvironment.prototype.getDimensionAccessor = function() {
		return null;
	};
	oFF.OlapEnvironment.prototype.getQueryManager = function() {
		return null;
	};
	oFF.OlapEnvironment.prototype.getFieldAccessorSingle = function() {
		return null;
	};
	oFF.OlapEnvironment.prototype.getModelCapabilities = function() {
		return null;
	};
	oFF.OlapEnvironment.prototype.getDrillManager = function() {
		return null;
	};
	oFF.OlapEnvironment.prototype.setContext = oFF.noSupport;
	oFF.OlapEnvironment.prototype.toString = function() {
		return oFF.isNull(this.m_application) ? "" : this.m_application
				.toString();
	};
	oFF.OlapEnvironment.prototype.getDataSource = function() {
		return null;
	};
	oFF.OlapEnvironment.prototype.createKey = function(systemName, queryName,
			objectName, providerType) {
		var connection;
		var openConnections = this.getConnectionPool().getOpenConnections(
				systemName);
		var isBW;
		if (openConnections.isEmpty()) {
			connection = this.getConnection(systemName);
		} else {
			connection = openConnections.get(0);
		}
		isBW = connection.getSystemDescription().getSystemType().isTypeOf(
				oFF.SystemType.ABAP);
		return oFF.XStringUtils.concatenate3(oFF.XStringUtils.concatenate5(
				systemName, "~", isBW ? null : queryName, "~", objectName),
				"~", providerType);
	};
	oFF.OlapEnvironment.prototype.getFieldMetadata = function(systemName,
			queryName, providerType, fieldName, dimensionName, validationHash) {
		return this.m_fieldMetadataCache
				.getEntry(oFF.XStringUtils.concatenate5(this.createKey(
						systemName, queryName, fieldName, providerType), "~",
						dimensionName, "~", validationHash));
	};
	oFF.OlapEnvironment.prototype.getFieldMetadataByKey = function(key) {
		return this.m_fieldMetadataCache.useEntry(key);
	};
	oFF.OlapEnvironment.prototype.setFieldMetadata = function(metadata) {
		this.m_fieldMetadataCache.addEntry(metadata.getCacheKey(), metadata);
	};
	oFF.OlapEnvironment.prototype.releaseFieldMetadataByKey = function(key) {
		this.m_fieldMetadataCache.freeEntry(key);
	};
	oFF.OlapEnvironment.prototype.getDimensionMetadata = function(systemName,
			queryName, providerType, dimensionName, validationHash) {
		return this.m_dimensionMetadataCache.getEntry(oFF.XStringUtils
				.concatenate3(this.createKey(systemName, queryName,
						dimensionName, providerType), "~", validationHash));
	};
	oFF.OlapEnvironment.prototype.getDimensionMetadataByKey = function(key) {
		return this.m_dimensionMetadataCache.useEntry(key);
	};
	oFF.OlapEnvironment.prototype.setDimensionMetadata = function(metadata) {
		this.m_dimensionMetadataCache
				.addEntry(metadata.getCacheKey(), metadata);
	};
	oFF.OlapEnvironment.prototype.releaseDimensionMetadataByKey = function(key) {
		this.m_dimensionMetadataCache.freeEntry(key);
	};
	oFF.OlapEnvironment.prototype.cacheRemoteBlendingData = function(cId, view,
			cube) {
		var cacheEntry;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(cId)
				&& oFF.XStringUtils.isNotNullAndNotEmpty(view)
				&& oFF.XStringUtils.isNotNullAndNotEmpty(cube)) {
			cacheEntry = this.m_remoteBlendingCache.getByKey(cId);
			if (oFF.notNull(cacheEntry)
					&& oFF.XString.isEqual(view, cacheEntry.getView())
					&& oFF.XString.isEqual(cube, cacheEntry.getCube())) {
				return;
			}
			this.m_remoteBlendingCache.put(cId, oFF.RemoteBlendingCacheEntry
					.create(view, cube));
			if (this.m_remoteBlendingCache.size() > oFF.OlapEnvironment.RS_DATA_CACHE_MAX_ENTRIES) {
				this
						.invalidateRemoteBlendingCacheEntry(this.m_remoteBlendingCache
								.getKeysAsReadOnlyListOfString().get(0));
			}
		}
	};
	oFF.OlapEnvironment.prototype.invalidateRemoteBlendingCacheEntry = function(
			cId) {
		if (oFF.XStringUtils.isNotNullAndNotEmpty(cId)) {
			oFF.XObjectExt.release(this.m_remoteBlendingCache.getByKey(cId));
			this.m_remoteBlendingCache.remove(cId);
		}
	};
	oFF.OlapEnvironment.prototype.getCachedRemoteBlendingData = function(cId) {
		return this.m_remoteBlendingCache.getByKey(cId);
	};
	oFF.OlapEnvironment.prototype.getMicroCubesNames = function() {
		return this.m_microCubesNames;
	};
	oFF.OlapEnvironment.prototype.isValidMicroCubeName = function(name) {
		return oFF.XStringUtils.isNotNullAndNotEmpty(name)
				&& (oFF.isNull(this.m_microCubesNames) || !this.m_microCubesNames
						.contains(name));
	};
	oFF.OlapEnvironment.prototype.addMicroCubeName = function(name) {
		if (!this.isValidMicroCubeName(name)) {
			return false;
		}
		if (oFF.isNull(this.m_microCubesNames)) {
			this.m_microCubesNames = oFF.XHashSetOfString.create();
		}
		this.m_microCubesNames.add(name);
		return true;
	};
	oFF.OlapEnvironment.prototype.removeMicroCubeName = function(name) {
		if (oFF.notNull(this.m_microCubesNames)
				&& this.m_microCubesNames.contains(name)) {
			this.m_microCubesNames.removeElement(name);
		}
	};
	oFF.OlapEnvironment.prototype.processCmdContextCreation = function(
			syncType, listener, customIdentifier, serviceConfig,
			asBackgroundThread) {
		var pair = oFF.XPair.create(listener, customIdentifier);
		serviceConfig.processQueryManagerCreation(oFF.SyncType.NON_BLOCKING,
				this, pair);
		return null;
	};
	oFF.OlapEnvironment.prototype.onQueryManagerCreated = function(extResult,
			queryManager, customIdentifier) {
		var pair = customIdentifier;
		var listener = pair.getFirstObject();
		var targetCustomIdentifier = pair.getSecondObject();
		var cmdContext = null;
		var extResult2;
		if (oFF.notNull(queryManager)) {
			cmdContext = this.selectCmds(queryManager);
		}
		extResult2 = oFF.ExtResult.create(cmdContext, extResult);
		listener.onCmdContextCreated(extResult2, cmdContext,
				targetCustomIdentifier);
	};
	oFF.OlapEnvironment.prototype.putQueryManagerBySystemName = function(
			systemName, queryManager) {
		this.m_queryManagerBySystemName.put(systemName, queryManager);
	};
	oFF.OlapEnvironment.prototype.updateDynamicVariablesForQueryManager = function(
			queryManager, syncType, listener, customIdentifier) {
		var systemName = queryManager.getSystemDescription().getSystemName();
		var customIdWithDetails = oFF.XHashMapByString.create();
		var queryConsumerServiceConfig;
		customIdWithDetails.put(oFF.OlapEnvironment.SYNC_TYPE, syncType);
		customIdWithDetails.put(oFF.OlapEnvironment.LISTENER, listener);
		customIdWithDetails.put(oFF.OlapEnvironment.CUSTOM_IDENTIFIER,
				customIdentifier);
		customIdWithDetails
				.put(oFF.OlapEnvironment.QUERY_MANAGER, queryManager);
		customIdWithDetails.put(oFF.OlapEnvironment.SYSTEM_NAME,
				oFF.XStringValue.create(systemName));
		if (!oFF.XCollectionUtils.hasElements(this.m_queryManagerBySystemName)
				|| this.m_queryManagerBySystemName.getByKey(systemName) === null) {
			if (oFF.isNull(this.m_queryManagerBySystemName)) {
				this.m_queryManagerBySystemName = oFF.XHashMapByString.create();
			}
			queryConsumerServiceConfig = oFF.QueryServiceConfig
					.createWithDataSourceName(this.getApplication(),
							systemName, "view:[_SYS_BIC][][$$VariableValues$$]");
			queryConsumerServiceConfig
					.activateExperimentalFeature(oFF.InactiveCapabilities.VIRTUAL_DS_VARIABLE_VALUES);
			if (oFF.isNull(this.m_olapEnvironmentQMCreationListener)) {
				this.m_olapEnvironmentQMCreationListener = oFF.OlapEnvironmentQMCreationListener
						.create(this);
			}
			queryConsumerServiceConfig.processQueryManagerCreation(
					oFF.SyncType.BLOCKING,
					this.m_olapEnvironmentQMCreationListener,
					customIdWithDetails);
		} else {
			this.m_olapEnvironmentQMCreationListener.onQueryManagerCreated(
					null, this.m_queryManagerBySystemName.getByKey(systemName),
					customIdWithDetails);
		}
	};
	oFF.OlapEnvironment.prototype.setClientInfo = function(version, identifier,
			component) {
		this.getApplication().setClientInfo(version, identifier, component);
	};
	oFF.OlapEnvironment.prototype.clearClientInfo = function() {
		this.getApplication().clearClientInfo();
	};
	oFF.OlapEnvironment.prototype.getClientVersion = function() {
		return this.getApplication().getClientVersion();
	};
	oFF.OlapEnvironment.prototype.getClientIdentifier = function() {
		return this.getApplication().getClientIdentifier();
	};
	oFF.OlapEnvironment.prototype.getClientComponent = function() {
		return this.getApplication().getClientComponent();
	};
	oFF.OlapEnvironment.prototype.setStoryId = function(storyId) {
		this.getApplication().setStoryId(storyId);
	};
	oFF.OlapEnvironment.prototype.getStoryId = function() {
		return this.getApplication().getStoryId();
	};
	oFF.OlapEnvironment.prototype.processBooting = oFF.noSupport;
	oFF.OlapEnvironment.prototype.addBLOBDetailsToCache = function(resourceKey,
			contentAndMime) {
		this.m_resourceToStringRep.addEntry(resourceKey, contentAndMime);
	};
	oFF.OlapEnvironment.prototype.useBLOBDetailsForResourceId = function(
			resourceKey) {
		return this.m_resourceToStringRep.useEntry(resourceKey);
	};
	oFF.OlapEnvironment.prototype.getBLOBDetailsForResourceId = function(
			resourceKey) {
		return this.m_resourceToStringRep.getEntry(resourceKey);
	};
	oFF.OlapEnvironment.prototype.hasBLOBForResourceId = function(resourceKey) {
		return this.m_resourceToStringRep.containsEntry(resourceKey);
	};
	oFF.OlapEnvironment.prototype.releaseResource = function(resourceKey) {
		this.m_resourceToStringRep.freeEntry(resourceKey);
	};
	oFF.OlapEnvironment.prototype.getBindingManager = function() {
		return this.getApplication().getBindingManager();
	};
	oFF.QOlapSyncAction = function() {
	};
	oFF.QOlapSyncAction.prototype = new oFF.DfRsSyncAction();
	oFF.QOlapSyncAction.prototype.getQueryManagerBase = function() {
		if (this.getContext() === null) {
			return null;
		}
		return this.getContext().getQueryManager();
	};
	oFF.QOlapSyncAction.prototype.getQueryModelBase = function() {
		return this.getContext().getQueryModel();
	};
	oFF.QOlapSyncAction.prototype.isQueryModelVersionValid = oFF.noSupport;
	oFF.QModelComponent = function() {
	};
	oFF.QModelComponent.prototype = new oFF.DfQContext();
	oFF.QModelComponent.prototype.m_name = null;
	oFF.QModelComponent.prototype.m_text = null;
	oFF.QModelComponent.prototype.m_tagging = null;
	oFF.QModelComponent.prototype.m_primaryParent = null;
	oFF.QModelComponent.prototype.m_secondaryParents = null;
	oFF.QModelComponent.prototype.m_protocolExtension = null;
	oFF.QModelComponent.prototype.m_isProtocolExtensionReplacing = false;
	oFF.QModelComponent.prototype.m_modCounter = 0;
	oFF.QModelComponent.prototype.m_changedListeners = null;
	oFF.QModelComponent.prototype.m_deserializeListeners = null;
	oFF.QModelComponent.prototype.m_state = null;
	oFF.QModelComponent.prototype.m_deltaStack = null;
	oFF.QModelComponent.prototype.m_currentDeltaPhase = null;
	oFF.QModelComponent.prototype.m_changedNodes = null;
	oFF.QModelComponent.prototype.m_isInRaiseEvents = false;
	oFF.QModelComponent.prototype.m_notificationListener = null;
	oFF.QModelComponent.prototype.copyModelComponent = function(origin) {
		this.m_name = origin.m_name;
		this.m_text = origin.m_text;
		if (oFF.notNull(origin.m_tagging)) {
			this.m_tagging = origin.m_tagging.createMapOfStringByStringCopy();
		}
	};
	oFF.QModelComponent.prototype.setupModelComponentWithName = function(
			context, parentNode, name) {
		this.setupModelComponent(context, parentNode);
		this.setName(name);
	};
	oFF.QModelComponent.prototype.setupModelComponent = function(context,
			parentNode) {
		var theContext = context;
		if (oFF.isNull(theContext) && oFF.notNull(parentNode)) {
			theContext = parentNode.getContext();
		}
		this.setupContext(theContext);
		this.m_primaryParent = oFF.XWeakReferenceUtil.getWeakRef(parentNode);
		this.m_state = oFF.QDeltaChangeState.UNCHANGED;
		this.m_isInRaiseEvents = false;
	};
	oFF.QModelComponent.prototype.releaseObject = function() {
		this.m_name = null;
		this.m_text = null;
		this.m_state = null;
		this.m_modCounter = 0;
		this.m_primaryParent = null;
		this.m_changedListeners = oFF.XObjectExt
				.release(this.m_changedListeners);
		this.m_deserializeListeners = oFF.XObjectExt
				.release(this.m_deserializeListeners);
		this.m_secondaryParents = oFF.XObjectExt
				.release(this.m_secondaryParents);
		if (oFF.notNull(this.m_changedNodes)) {
			this.m_changedNodes.clear();
		}
		this.m_tagging = oFF.XObjectExt.release(this.m_tagging);
		this.m_protocolExtension = oFF.XObjectExt
				.release(this.m_protocolExtension);
		this.m_notificationListener = null;
		oFF.DfQContext.prototype.releaseObject.call(this);
	};
	oFF.QModelComponent.prototype.getComponentType = function() {
		return this.getOlapComponentType();
	};
	oFF.QModelComponent.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.OLAP;
	};
	oFF.QModelComponent.prototype.isRoot = function() {
		return oFF.isNull(this.m_primaryParent);
	};
	oFF.QModelComponent.prototype.getParent = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_primaryParent);
	};
	oFF.QModelComponent.prototype.getParentComponent = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_primaryParent);
	};
	oFF.QModelComponent.prototype.setParent = function(parent) {
		this.m_primaryParent = oFF.XWeakReferenceUtil.getWeakRef(parent);
		if (oFF.notNull(parent) && this.getContext() === null) {
			this.setContext(parent.getContext());
		}
	};
	oFF.QModelComponent.prototype.addSecondaryParent = function(parent) {
		if (parent === this) {
			throw oFF.XException
					.createIllegalArgumentException("The parent cannot be set to itself");
		}
		if (oFF.isNull(this.m_secondaryParents)) {
			this.m_secondaryParents = oFF.XListWeakRef.create();
		}
		this.m_secondaryParents.add(parent);
	};
	oFF.QModelComponent.prototype.removeSecondaryParent = function(parent) {
		var parentsSize;
		var i;
		if (oFF.notNull(this.m_secondaryParents)) {
			parentsSize = this.m_secondaryParents.size();
			for (i = 0; i < parentsSize; i++) {
				if (this.m_secondaryParents.get(i) === parent) {
					this.m_secondaryParents.removeAt(i);
					break;
				}
			}
		}
	};
	oFF.QModelComponent.prototype.getName = function() {
		return this.m_name;
	};
	oFF.QModelComponent.prototype.setName = function(name) {
		this.m_name = name;
	};
	oFF.QModelComponent.prototype.getText = function() {
		return this.m_text;
	};
	oFF.QModelComponent.prototype.setText = function(text) {
		this.m_text = text;
	};
	oFF.QModelComponent.prototype.isComponentNode = function() {
		return false;
	};
	oFF.QModelComponent.prototype.getChildren = function() {
		return this.getChildrenIterator();
	};
	oFF.QModelComponent.prototype.getChildrenIterator = function() {
		var namedChildren = this.getNamedChildren();
		var indexedChildren = this.getIndexedChildren();
		var all;
		var keysAsReadOnlyListOfString;
		var keys;
		var size;
		var i;
		if (oFF.notNull(indexedChildren) && oFF.isNull(namedChildren)) {
			return indexedChildren;
		}
		all = oFF.XList.create();
		if (oFF.notNull(namedChildren)) {
			keysAsReadOnlyListOfString = namedChildren
					.getKeysAsReadOnlyListOfString();
			keys = oFF.XListOfString
					.createFromReadOnlyList(keysAsReadOnlyListOfString);
			keys.sortByDirection(oFF.XSortDirection.ASCENDING);
			size = keys.size();
			for (i = 0; i < size; i++) {
				all.add(namedChildren.getByKey(keys.get(i)));
			}
		}
		if (oFF.notNull(indexedChildren)) {
			while (indexedChildren.hasNext()) {
				all.add(indexedChildren.next());
			}
		}
		return all.getIterator();
	};
	oFF.QModelComponent.prototype.getNamedChildren = function() {
		return null;
	};
	oFF.QModelComponent.prototype.getIndexedChildren = function() {
		return null;
	};
	oFF.QModelComponent.prototype.getPropertyStringValue = function(type) {
		if (type === oFF.OlapProperty.NAME) {
			return this.getName();
		}
		if (type === oFF.OlapProperty.TEXT) {
			return this.getText();
		}
		return null;
	};
	oFF.QModelComponent.prototype.getPropertyConstantValue = function(type) {
		return null;
	};
	oFF.QModelComponent.prototype.setProtocolExtension = function(element,
			replace) {
		this.m_protocolExtension = oFF.XJson.extractJsonContent(element);
		this.m_isProtocolExtensionReplacing = replace;
	};
	oFF.QModelComponent.prototype.getProtocolExtension = function() {
		return this.m_protocolExtension;
	};
	oFF.QModelComponent.prototype.isProtocolExtensionReplacing = function() {
		return this.m_isProtocolExtensionReplacing;
	};
	oFF.QModelComponent.prototype.assertValueType = function(value, valueType) {
		if (oFF.notNull(value) && value.getValueType() !== valueType) {
			oFF.noSupport();
		}
	};
	oFF.QModelComponent.prototype.getTagging = function() {
		if (oFF.isNull(this.m_tagging)) {
			this.m_tagging = oFF.XHashMapOfStringByString.create();
		}
		return this.m_tagging;
	};
	oFF.QModelComponent.prototype.setTagging = function(tagging) {
		this.m_tagging = tagging;
	};
	oFF.QModelComponent.prototype.registerDeserializeListener = function(
			listener, customIdentifier) {
		if (oFF.isNull(this.m_deserializeListeners)) {
			this.m_deserializeListeners = oFF.XList.create();
		}
		this.unregisterDeserializeListener(listener);
		this.m_deserializeListeners.add(oFF.QDeserializeListenerPair.create(
				listener, customIdentifier));
	};
	oFF.QModelComponent.prototype.unregisterDeserializeListener = function(
			listener) {
		var listenerIndex = this.getDeserializeListenerIndex(listener);
		var removeAt;
		if (listenerIndex !== -1) {
			removeAt = this.m_deserializeListeners.removeAt(listenerIndex);
			oFF.XObjectExt.release(removeAt);
		}
	};
	oFF.QModelComponent.prototype.getDeserializeListenerIndex = function(
			listener) {
		var listenerSize;
		var i;
		var pair;
		var myListener;
		if (oFF.notNull(this.m_deserializeListeners)) {
			listenerSize = this.m_deserializeListeners.size();
			for (i = 0; i < listenerSize; i++) {
				pair = this.m_deserializeListeners.get(i);
				myListener = pair.getListener();
				if (myListener === listener) {
					return i;
				}
			}
		}
		return -1;
	};
	oFF.QModelComponent.prototype.serializeToElement = function(modelFormat,
			capabilities) {
		var exporter;
		if (modelFormat.isTypeOf(oFF.QModelFormat.INA_DATA)) {
			exporter = oFF.QInAExportFactory.create(this.getApplication(),
					modelFormat, capabilities, oFF.QContextType.RESULT_SET);
		} else {
			exporter = oFF.QInAExportFactory.create(this.getApplication(),
					modelFormat, capabilities, null);
		}
		return exporter.exportComponent(null, this, null,
				oFF.QImExFlag.DEFAULT_ALL);
	};
	oFF.QModelComponent.prototype.serializeToFormat = function(modelFormat) {
		if (this.getOlapComponentType() === oFF.OlapComponentType.QUERY_MODEL) {
			return this.serialize(modelFormat, this.getProtocolCapabilities()
					.getIntersectCapabilities());
		}
		return this.serialize(modelFormat, null);
	};
	oFF.QModelComponent.prototype.serialize = function(modelFormat,
			capabilities) {
		var serialization = this.serializeToElement(modelFormat, capabilities);
		if (oFF.isNull(serialization)) {
			return null;
		}
		return oFF.PrUtils.serialize(serialization, true, false, 0);
	};
	oFF.QModelComponent.prototype.raiseDeserializeEvent = function(currentState) {
		var listenerSize;
		var idxListener;
		var pair;
		var listener;
		if (oFF.notNull(this.m_deserializeListeners)) {
			listenerSize = this.m_deserializeListeners.size();
			for (idxListener = 0; idxListener < listenerSize; idxListener++) {
				pair = this.m_deserializeListeners.get(idxListener);
				listener = pair.getListener();
				if (oFF.notNull(listener)) {
					listener.onModelComponentDeserialize(this, currentState,
							pair.getCustomIdentifier());
				}
			}
		}
	};
	oFF.QModelComponent.prototype.deserializeExt = function(modelFormat,
			expression) {
		var jsonParser = oFF.JsonParserFactory.newInstance();
		var element = jsonParser.parse(expression);
		if (jsonParser.hasErrors()) {
			return oFF.ExtResult.create(null, jsonParser);
		}
		oFF.XObjectExt.release(jsonParser);
		return this.deserializeInternal(this, null, modelFormat, element);
	};
	oFF.QModelComponent.prototype.deserializeFromElementExt = function(
			modelFormat, element) {
		return this.deserializeInternal(this, null, modelFormat, element);
	};
	oFF.QModelComponent.prototype.deserializeNewComponentExt = function(
			componentType, modelFormat, expression) {
		var jsonParser = oFF.JsonParserFactory.newInstance();
		var element = jsonParser.parse(expression);
		if (jsonParser.hasErrors()) {
			return oFF.ExtResult.create(null, jsonParser);
		}
		oFF.XObjectExt.release(jsonParser);
		return this.deserializeInternal(null, componentType, modelFormat,
				element);
	};
	oFF.QModelComponent.prototype.deserializeNewComponentFromElementExt = function(
			componentType, modelFormat, element) {
		return this.deserializeInternal(this, componentType, modelFormat,
				element);
	};
	oFF.QModelComponent.prototype.deserializeInternal = function(
			modelComponent, componentType, modelFormat, element) {
		var importer = oFF.QInAImportFactory.create(this.getApplication(),
				modelFormat, null);
		var context;
		var resultComponent;
		if (oFF.isNull(element)) {
			if (oFF.isNull(importer)) {
				return oFF.ExtResult.create(null, oFF.MessageManager
						.createMessageManagerExt(this.getSession()));
			}
			return oFF.ExtResult.create(null, importer);
		}
		this.raiseDeserializeEvent(element);
		context = this.getContext();
		resultComponent = importer.importComponent(componentType, element,
				modelComponent, oFF.notNull(modelComponent) ? modelComponent
						.getParent() : null, context);
		return oFF.ExtResult.create(resultComponent, importer);
	};
	oFF.QModelComponent.prototype.getModCounter = function() {
		return this.m_modCounter;
	};
	oFF.QModelComponent.prototype.queueEventing = function() {
		this.setDeltaPhase(oFF.QDeltaOperationPhase.QUEUE);
	};
	oFF.QModelComponent.prototype.stopEventing = function() {
		this.setDeltaPhase(oFF.QDeltaOperationPhase.STOP);
	};
	oFF.QModelComponent.prototype.resumeEventing = function() {
		this.setDeltaPhase(oFF.QDeltaOperationPhase.RESUME);
	};
	oFF.QModelComponent.prototype.isEventingStopped = function() {
		var parentDeltaNode = this.getParentComponent();
		if (oFF.isNull(parentDeltaNode)) {
			return this.m_currentDeltaPhase === oFF.QDeltaOperationPhase.STOP;
		}
		return parentDeltaNode.isEventingStopped();
	};
	oFF.QModelComponent.prototype.setDeltaPhase = function(phase) {
		var parentDeltaNode = this.getParentComponent();
		var oldPhase;
		var stackSize;
		var i;
		if (oFF.isNull(parentDeltaNode)) {
			if (oFF.isNull(this.m_deltaStack)) {
				this.m_deltaStack = oFF.XList.create();
			}
			if (phase === oFF.QDeltaOperationPhase.QUEUE) {
				this.m_deltaStack.add(oFF.QDeltaOperationPhase.QUEUE);
			} else {
				if (phase === oFF.QDeltaOperationPhase.STOP) {
					this.m_deltaStack.add(oFF.QDeltaOperationPhase.STOP);
				} else {
					if (phase === oFF.QDeltaOperationPhase.RESUME) {
						this.m_deltaStack
								.removeAt(this.m_deltaStack.size() - 1);
					}
				}
			}
			oldPhase = this.m_currentDeltaPhase;
			this.m_currentDeltaPhase = null;
			stackSize = this.m_deltaStack.size();
			for (i = 0; i < stackSize
					&& this.m_currentDeltaPhase !== oFF.QDeltaOperationPhase.STOP; i++) {
				this.m_currentDeltaPhase = this.m_deltaStack.get(i);
			}
			if (oldPhase === oFF.QDeltaOperationPhase.QUEUE
					&& oFF.isNull(this.m_currentDeltaPhase)) {
				this.raiseEvents();
			}
		} else {
			parentDeltaNode.setDeltaPhase(phase);
		}
	};
	oFF.QModelComponent.prototype.getNotificationListener = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_notificationListener);
	};
	oFF.QModelComponent.prototype.setNotificationListener = function(owner) {
		this.m_notificationListener = oFF.XWeakReferenceUtil.getWeakRef(owner);
	};
	oFF.QModelComponent.prototype.onModelChangeBeforeBroadcast = function(
			changedNodes) {
		var owner = this.getNotificationListener();
		if (oFF.notNull(owner)) {
			owner
					.onModelChange(oFF.QDeltaBroadcastPhase.BEFORE_EVENTS_BROADCAST);
		}
	};
	oFF.QModelComponent.prototype.onModelChangeAfterBroadcast = function(
			changedNodes) {
		var owner = this.getNotificationListener();
		if (oFF.notNull(owner)) {
			owner
					.onModelChange(oFF.QDeltaBroadcastPhase.AFTER_EVENTS_BROADCAST);
		}
	};
	oFF.QModelComponent.prototype.resetChangeState = function() {
		var nodeSize;
		var i;
		var node;
		if (oFF.isNull(this.m_primaryParent)
				&& oFF.notNull(this.m_changedNodes)) {
			nodeSize = this.m_changedNodes.size();
			for (i = 0; i < nodeSize; i++) {
				node = this.m_changedNodes.get(i);
				if (node !== this && !node.isRoot()) {
					node.resetChangeState();
				}
			}
			this.m_changedNodes.clear();
		}
		this.m_state = oFF.QDeltaChangeState.UNCHANGED;
	};
	oFF.QModelComponent.prototype.notifyChildAttached = function(child) {
		if (oFF.notNull(child)) {
			child.setParent(this);
		}
		this.notifyNodeChanged();
	};
	oFF.QModelComponent.prototype.notifyNodeChanged = function() {
		var deltaChange;
		var parentDeltaNode;
		var parentSize;
		var i;
		var current;
		if (!this.isEventingStopped()) {
			if (this.m_state === oFF.QDeltaChangeState.UNCHANGED) {
				this.m_state = oFF.QDeltaChangeState.NODE_CHANGED;
				this.m_modCounter++;
			} else {
				if (this.m_state === oFF.QDeltaChangeState.CHILDREN_CHANGED) {
					this.m_state = oFF.QDeltaChangeState.NODE_AND_CHILDREN_CHANGED;
					this.m_modCounter++;
				}
			}
			deltaChange = oFF.XList.create();
			deltaChange.add(this);
			parentDeltaNode = this.getParentComponent();
			if (oFF.notNull(parentDeltaNode)) {
				parentDeltaNode.notifyChildChanged(deltaChange);
			}
			if (oFF.notNull(this.m_secondaryParents)) {
				parentSize = this.m_secondaryParents.size();
				for (i = 0; i < parentSize; i++) {
					current = this.m_secondaryParents.get(i);
					if (oFF.notNull(current)) {
						current.notifyChildChanged(deltaChange);
					}
				}
			}
			if (oFF.isNull(this.m_primaryParent)) {
				if (!this.changedNodesContains(this)) {
					this.m_changedNodes.add(this);
				}
				this.raiseEvents();
			}
		}
	};
	oFF.QModelComponent.prototype.changedNodesContains = function(node) {
		var size;
		var i;
		if (oFF.isNull(this.m_changedNodes)) {
			this.m_changedNodes = oFF.XList.create();
			return false;
		}
		size = this.m_changedNodes.size();
		for (i = 0; i < size; i++) {
			if (this.m_changedNodes.get(i) === node) {
				return true;
			}
		}
		return false;
	};
	oFF.QModelComponent.prototype.notifyChildChanged = function(changedNodes) {
		var primaryParent;
		var parentSize;
		var i;
		var secondaryParent;
		var nodeSize;
		var j;
		var node;
		if (!this.isEventingStopped()) {
			if (this.m_state === oFF.QDeltaChangeState.UNCHANGED) {
				this.m_state = oFF.QDeltaChangeState.CHILDREN_CHANGED;
				this.m_modCounter++;
			} else {
				if (this.m_state === oFF.QDeltaChangeState.NODE_CHANGED) {
					this.m_state = oFF.QDeltaChangeState.NODE_AND_CHILDREN_CHANGED;
					this.m_modCounter++;
				}
			}
			changedNodes.add(this);
			primaryParent = this.getParentComponent();
			if (oFF.notNull(primaryParent)) {
				primaryParent.notifyChildChanged(changedNodes);
			}
			if (oFF.notNull(this.m_secondaryParents)) {
				parentSize = this.m_secondaryParents.size();
				for (i = 0; i < parentSize; i++) {
					secondaryParent = this.m_secondaryParents.get(i);
					if (oFF.notNull(secondaryParent)) {
						secondaryParent.notifyChildChanged(changedNodes);
					}
				}
			}
			if (oFF.isNull(this.m_primaryParent)) {
				nodeSize = changedNodes.size();
				for (j = 0; j < nodeSize; j++) {
					node = changedNodes.get(j);
					if (!this.changedNodesContains(node)) {
						this.m_changedNodes.add(node);
					}
				}
				this.raiseEvents();
			}
		}
	};
	oFF.QModelComponent.prototype.raiseEvents = function() {
		var nodeSize;
		var idxNode;
		var node;
		var listeners;
		var listenerSize;
		var idxListener;
		var pair;
		var listener;
		if (oFF.isNull(this.m_currentDeltaPhase) && !this.m_isInRaiseEvents
				&& oFF.notNull(this.m_changedNodes)) {
			this.m_isInRaiseEvents = true;
			this.onModelChangeBeforeBroadcast(this.m_changedNodes);
			nodeSize = this.m_changedNodes.size();
			for (idxNode = 0; idxNode < nodeSize; idxNode++) {
				node = this.m_changedNodes.get(idxNode);
				listeners = node.getChangedListeners();
				if (oFF.notNull(listeners)) {
					listenerSize = listeners.size();
					for (idxListener = 0; idxListener < listenerSize; idxListener++) {
						pair = listeners.get(idxListener);
						listener = pair.getListener();
						if (oFF.notNull(listener)) {
							listener.onModelComponentChanged(node, pair
									.getCustomIdentifier());
						}
					}
				}
			}
			this.onModelChangeAfterBroadcast(this.m_changedNodes);
			this.resetChangeState();
			this.m_isInRaiseEvents = false;
		}
	};
	oFF.QModelComponent.prototype.registerChangedListener = function(listener,
			customIdentifier) {
		if (oFF.isNull(this.m_changedListeners)) {
			this.m_changedListeners = oFF.XList.create();
		}
		this.unregisterChangedListener(listener);
		this.m_changedListeners.add(oFF.QChangedListenerPair.create(listener,
				customIdentifier));
		return null;
	};
	oFF.QModelComponent.prototype.unregisterChangedListener = function(listener) {
		var listenerIndex = this.getListenerIndex(listener);
		var removeAt;
		if (listenerIndex !== -1) {
			removeAt = this.m_changedListeners.removeAt(listenerIndex);
			oFF.XObjectExt.release(removeAt);
		}
		return null;
	};
	oFF.QModelComponent.prototype.getListenerIndex = function(listener) {
		var listenerSize;
		var i;
		if (oFF.notNull(this.m_changedListeners)) {
			listenerSize = this.m_changedListeners.size();
			for (i = 0; i < listenerSize; i++) {
				if (this.m_changedListeners.get(i).getListener() === listener) {
					return i;
				}
			}
		}
		return -1;
	};
	oFF.QModelComponent.prototype.getChangedListeners = function() {
		if (oFF.isNull(this.m_changedListeners)) {
			this.m_changedListeners = oFF.XList.create();
		}
		return this.m_changedListeners;
	};
	oFF.QModelComponent.prototype.getTagValue = function(tagName) {
		return null;
	};
	oFF.QModelComponent.prototype.getContentElement = function() {
		return this;
	};
	oFF.QModelComponent.prototype.getContentConstant = function() {
		return null;
	};
	oFF.QModelComponent.prototype.isLeaf = function() {
		return !this.isNode();
	};
	oFF.QModelComponent.prototype.isNode = function() {
		return false;
	};
	oFF.QModelComponent.prototype.mergeDeepRecursive = function(settings, other) {
	};
	oFF.QModelComponent.prototype.cloneOlapComponent = oFF.noSupport;
	oFF.QModelComponent.prototype.toString = function() {
		var exporter = oFF.QInAExportFactory.create(this.getApplication(),
				oFF.QModelFormat.INA_CLONE, null, null);
		var element = exporter.exportComponent(null, this, null,
				oFF.QImExFlag.DEFAULT_ALL);
		if (oFF.isNull(element)) {
			return "[Exporter not available]";
		}
		return oFF.PrUtils.serialize(element, true, true, 4);
	};
	oFF.OlapEnvVarProcessor = function() {
	};
	oFF.OlapEnvVarProcessor.prototype = new oFF.XObject();
	oFF.OlapEnvVarProcessor.create = function(olapEnvArea) {
		var newObj = new oFF.OlapEnvVarProcessor();
		newObj.setupProcessor(olapEnvArea);
		return newObj;
	};
	oFF.OlapEnvVarProcessor.prototype.m_olapEnvArea = null;
	oFF.OlapEnvVarProcessor.prototype.m_state = null;
	oFF.OlapEnvVarProcessor.prototype.m_selectionMap = null;
	oFF.OlapEnvVarProcessor.prototype.setupProcessor = function(olapEnvArea) {
		this.m_olapEnvArea = oFF.XWeakReferenceUtil.getWeakRef(olapEnvArea);
		this.m_selectionMap = oFF.XHashMapOfStringByString.create();
	};
	oFF.OlapEnvVarProcessor.prototype.releaseObject = function() {
		this.m_olapEnvArea = null;
		this.m_state = null;
		this.m_selectionMap = oFF.XObjectExt.release(this.m_selectionMap);
		oFF.XObject.prototype.releaseObject.call(this);
	};
	oFF.OlapEnvVarProcessor.prototype.supportsCheckVariables = function() {
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			if (variableProcessor.supportsCheckVariables()) {
				return true;
			}
		}
		return false;
	};
	oFF.OlapEnvVarProcessor.prototype.supportsReInitVariables = function() {
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			if (variableProcessor.supportsReInitVariables()) {
				return true;
			}
		}
		return false;
	};
	oFF.OlapEnvVarProcessor.prototype.supportsDirectVariableTransfer = function() {
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			if (!variableProcessor.supportsReInitVariables()) {
				return false;
			}
		}
		return true;
	};
	oFF.OlapEnvVarProcessor.prototype.getVariableMode = function() {
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			if (variableProcessor.getVariableMode() === oFF.VariableMode.SUBMIT_AND_REINIT) {
				return oFF.VariableMode.SUBMIT_AND_REINIT;
			}
		}
		return oFF.VariableMode.DIRECT_VALUE_TRANSFER;
	};
	oFF.OlapEnvVarProcessor.prototype.hasInputEnabledVariables = function() {
		return oFF.QVariableUtils.hasInputEnabledVariables(this.getVariables());
	};
	oFF.OlapEnvVarProcessor.prototype.clearExternalVariablesRepresentations = function() {
		this.queueEventing();
		oFF.QVariableUtils.clearExternalVariablesRepresentations(this
				.getVariables());
		this.resumeEventing();
	};
	oFF.OlapEnvVarProcessor.prototype.hasMandatoryVariables = function() {
		return oFF.QVariableUtils.hasMandatoryVariables(this.getVariables());
	};
	oFF.OlapEnvVarProcessor.prototype.hasVariables = function() {
		return this.getVariables().hasElements();
	};
	oFF.OlapEnvVarProcessor.prototype.getInputEnabledVariable = function(name) {
		return oFF.QVariableUtils.getInputEnabledVariable(this.getVariables(),
				name);
	};
	oFF.OlapEnvVarProcessor.prototype.getInputEnabledVariables = function() {
		return oFF.QVariableUtils.getInputEnabledVariables(this.getVariables());
	};
	oFF.OlapEnvVarProcessor.prototype.getHierarchyNodeVariable = function(name) {
		return oFF.QVariableUtils.getVariableByType(this.getVariables(), name,
				oFF.VariableType.HIERARCHY_NODE_VARIABLE);
	};
	oFF.OlapEnvVarProcessor.prototype.getHierarchyNameVariable = function(name) {
		return oFF.QVariableUtils.getVariableByType(this.getVariables(), name,
				oFF.VariableType.HIERARCHY_NAME_VARIABLE);
	};
	oFF.OlapEnvVarProcessor.prototype.getHierarchyNameVariables = function() {
		return oFF.QVariableUtils
				.getHierarchyNameVariables(this.getVariables());
	};
	oFF.OlapEnvVarProcessor.prototype.getDimensionMemberVariables = function() {
		return oFF.QVariableUtils.getDimensionMemberVariables(this
				.getVariables());
	};
	oFF.OlapEnvVarProcessor.prototype.syncMasterSlaves = function() {
		var mergedVariables = this.getMergedVariables();
		var mergedVariablesSize = mergedVariables.size();
		var i;
		for (i = 0; i < mergedVariablesSize; i++) {
			mergedVariables.get(i).syncMasterSlaves();
		}
	};
	oFF.OlapEnvVarProcessor.prototype.getVariables = function() {
		var variables = oFF.XListOfNameObject.create();
		var mergedVariables = this.getMergedVariables();
		var mergedVariablesSize = mergedVariables.size();
		var i;
		for (i = 0; i < mergedVariablesSize; i++) {
			variables.add(mergedVariables.get(i).getMasterVariable());
		}
		return variables;
	};
	oFF.OlapEnvVarProcessor.prototype.getVariable = function(name) {
		var mergedVariable = this.getMergedVariables().getByKey(name);
		return oFF.isNull(mergedVariable) ? null : mergedVariable
				.getMasterVariable();
	};
	oFF.OlapEnvVarProcessor.prototype.getMergedVariables = function() {
		var mergedVariables = oFF.XListOfNameObject.create();
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		var variableContainer;
		var contVariables;
		var contVariablesSize;
		var j;
		var variable;
		var key;
		var mergedVar;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			variableContainer = variableProcessor.getVariableContainer();
			contVariables = variableContainer.getVariables();
			contVariablesSize = contVariables.size();
			for (j = 0; j < contVariablesSize; j++) {
				variable = contVariables.get(j);
				key = this.createMergeVarKey(queryManager, variable);
				mergedVar = mergedVariables.getByKey(key);
				if (oFF.isNull(mergedVar)) {
					mergedVariables.add(oFF.OlapEnvVariable.create(key,
							variable));
				} else {
					mergedVar.addSlave(variable);
				}
			}
		}
		return mergedVariables;
	};
	oFF.OlapEnvVarProcessor.prototype.createMergeVarKey = function(
			queryManager, variable) {
		var buffer = oFF.XStringBuffer.create();
		var dataSource;
		buffer.append(queryManager.getSystemName());
		buffer.append("~");
		dataSource = queryManager.getDataSource();
		buffer.append(dataSource.getFullQualifiedName());
		buffer.append("~");
		buffer.append(variable.getName());
		return buffer.toString();
	};
	oFF.OlapEnvVarProcessor.prototype.getDimensionAccessor = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getDrillManager = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.submitVariables = function(syncType,
			listener, customIdentifier) {
		return oFF.OlapEnvVarAction.createAndRunSubmit(this, syncType,
				listener, customIdentifier);
	};
	oFF.OlapEnvVarProcessor.prototype.reInitVariablesAfterSubmit = function(
			syncType, listener, customIdentifier) {
		return oFF.OlapEnvVarAction.createAndRunReInitAfterSubmit(this,
				syncType, listener, customIdentifier);
	};
	oFF.OlapEnvVarProcessor.prototype.cancelReInitVariables = function(
			syncType, listener, customIdentifier) {
		return oFF.OlapEnvVarAction.createAndRunCancel(this, syncType,
				listener, customIdentifier);
	};
	oFF.OlapEnvVarProcessor.prototype.transferVariables = function(syncType,
			listener, customIdentifier) {
		return oFF.OlapEnvVarAction.createAndRunSetGetValues(this, syncType,
				listener, customIdentifier);
	};
	oFF.OlapEnvVarProcessor.prototype.emptyVariableDefinition = function(
			syncType, listener, customIdentifier) {
		return oFF.OlapEnvVarAction.createAndRunEmptyVariableDefinition(this,
				syncType, listener, customIdentifier);
	};
	oFF.OlapEnvVarProcessor.prototype.checkVariables = function(syncType,
			listener, customIdentifier) {
		return oFF.OlapEnvVarAction.createAndRunCheck(this, syncType, listener,
				customIdentifier);
	};
	oFF.OlapEnvVarProcessor.prototype.transferVariablesByVariable = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.setDirectVariableTransferEnabled = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.isDirectVariableTransferEnabled = function() {
		return this.getVariableProcessorState() === oFF.VariableProcessorState.CHANGEABLE_DIRECT_VALUE_TRANSFER;
	};
	oFF.OlapEnvVarProcessor.prototype.isSubmitted = function() {
		return this.getVariableProcessorState() === oFF.VariableProcessorState.SUBMITTED;
	};
	oFF.OlapEnvVarProcessor.prototype.getVariableProcessorState = function() {
		var variableProcessorState;
		var queryManagerList;
		var queryManagerSize;
		var i;
		var queryManager;
		var variableProcessor;
		var currentState;
		var newState;
		if (oFF.notNull(this.m_state)) {
			return this.m_state;
		}
		variableProcessorState = null;
		queryManagerList = this.getTaggedQueryManagers();
		queryManagerSize = queryManagerList.size();
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			currentState = variableProcessor.getVariableProcessorState();
			if (currentState.isTypeOf(oFF.VariableProcessorState.PROCESSING)) {
				return oFF.VariableProcessorState.PROCESSING;
			}
			if (oFF.isNull(variableProcessorState)) {
				variableProcessorState = currentState;
			} else {
				if (variableProcessorState !== currentState) {
					newState = null;
					if (variableProcessorState
							.isTypeOf(oFF.VariableProcessorState.CHANGEABLE)) {
						if (currentState === oFF.VariableProcessorState.SUBMITTED) {
							newState = oFF.VariableProcessorState.SUBMITTED;
						} else {
							if (currentState
									.isTypeOf(oFF.VariableProcessorState.CHANGEABLE)) {
								if (currentState === oFF.VariableProcessorState.CHANGEABLE_REINIT
										|| variableProcessorState === oFF.VariableProcessorState.CHANGEABLE_REINIT) {
									newState = oFF.VariableProcessorState.CHANGEABLE_REINIT;
								} else {
									newState = oFF.VariableProcessorState.CHANGEABLE;
								}
							}
						}
					} else {
						if (variableProcessorState === oFF.VariableProcessorState.SUBMITTED
								&& currentState
										.isTypeOf(oFF.VariableProcessorState.CHANGEABLE)) {
							newState = oFF.VariableProcessorState.SUBMITTED;
						}
					}
					if (oFF.isNull(newState)) {
						newState = oFF.VariableProcessorState.MIXED;
					}
					variableProcessorState = newState;
				}
			}
		}
		return variableProcessorState;
	};
	oFF.OlapEnvVarProcessor.prototype.setVariableProcessorState = function(
			state) {
		this.m_state = state;
	};
	oFF.OlapEnvVarProcessor.prototype.registerVariableProcessorStateChangedListener = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.unregisterVariableProcessorStateChangedListener = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getOlapEnvArea = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_olapEnvArea);
	};
	oFF.OlapEnvVarProcessor.prototype.getApplication = function() {
		return this.getOlapEnvArea().getApplication();
	};
	oFF.OlapEnvVarProcessor.prototype.getOlapEnv = function() {
		return this.getOlapEnvArea().getOlapEnv();
	};
	oFF.OlapEnvVarProcessor.prototype.getSession = function() {
		return this.getOlapEnvArea().getSession();
	};
	oFF.OlapEnvVarProcessor.prototype.getSelectionTagging = function() {
		return this.m_selectionMap;
	};
	oFF.OlapEnvVarProcessor.prototype.getSelectedVariableProcessors = function(
			targetState) {
		var varProcessorList = oFF.XList.create();
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		var variableProcessorState;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			if (variableProcessor.hasVariables()) {
				if (oFF.isNull(targetState)) {
					varProcessorList.add(variableProcessor);
				} else {
					variableProcessorState = variableProcessor
							.getVariableProcessorState();
					if (variableProcessorState.isTypeOf(targetState)
							|| oFF.VariableProcessorState.PROCESSING_EMPTY_VARIABLE_DEFINITION === variableProcessorState) {
						varProcessorList.add(variableProcessor);
					}
				}
			}
		}
		return varProcessorList;
	};
	oFF.OlapEnvVarProcessor.prototype.getTaggedQueryManagers = function() {
		var queryManagerList = this.getOlapEnvArea().getAllAreaQueryManager();
		var selection;
		var queryManagerSize;
		var i;
		var queryManager;
		var checkTagging;
		var iterator;
		var ok;
		var key;
		var value;
		var checkValue;
		if (this.m_selectionMap.isEmpty()) {
			return queryManagerList;
		}
		selection = oFF.XList.create();
		queryManagerSize = queryManagerList.size();
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			checkTagging = queryManager.getTagging();
			iterator = this.m_selectionMap.getKeysAsIteratorOfString();
			ok = true;
			while (iterator.hasNext()) {
				key = iterator.next();
				value = this.m_selectionMap.getByKey(key);
				checkValue = checkTagging.getByKey(key);
				if (!oFF.XString.isEqual(value, checkValue)) {
					ok = false;
					break;
				}
			}
			if (ok) {
				selection.add(queryManager);
			}
		}
		return selection;
	};
	oFF.OlapEnvVarProcessor.prototype.getVariableContainer = function() {
		return this;
	};
	oFF.OlapEnvVarProcessor.prototype.registerChangedListener = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.unregisterChangedListener = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.registerDeserializeListener = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.unregisterDeserializeListener = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getOlapComponentType = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.isComponentNode = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getChildren = function() {
		return this.getChildrenIterator();
	};
	oFF.OlapEnvVarProcessor.prototype.getChildrenIterator = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getNamedChildren = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getIndexedChildren = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.serialize = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.serializeToFormat = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.serializeToElement = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.deserializeExt = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.deserializeFromElementExt = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.deserializeNewComponentExt = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.deserializeNewComponentFromElementExt = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.setProtocolExtension = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getProtocolExtension = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.isProtocolExtensionReplacing = function() {
		return false;
	};
	oFF.OlapEnvVarProcessor.prototype.getTagging = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.isEventingStopped = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.stopEventing = function() {
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		var variableContainer;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			variableContainer = variableProcessor.getVariableContainer();
			variableContainer.stopEventing();
		}
	};
	oFF.OlapEnvVarProcessor.prototype.queueEventing = function() {
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		var variableContainer;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			variableContainer = variableProcessor.getVariableContainer();
			variableContainer.queueEventing();
		}
	};
	oFF.OlapEnvVarProcessor.prototype.resumeEventing = function() {
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		var variableProcessor;
		var variableContainer;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			variableProcessor = queryManager.getVariableProcessor();
			variableContainer = variableProcessor.getVariableContainer();
			variableContainer.resumeEventing();
		}
	};
	oFF.OlapEnvVarProcessor.prototype.getComponentType = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getName = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getText = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getContext = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getFieldAccessorSingle = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getQueryModel = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getQueryManager = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getModelCapabilities = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.isSubmitNeeded = function() {
		return this.getVariableProcessorState().isSubmitNeeded();
	};
	oFF.OlapEnvVarProcessor.prototype.isReinitNeeded = function() {
		return this.getVariableProcessorState().isReinitNeeded();
	};
	oFF.OlapEnvVarProcessor.prototype.isCancelNeeded = function() {
		return this.getVariableProcessorState().isCancelNeeded();
	};
	oFF.OlapEnvVarProcessor.prototype.getTagValue = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getContentElement = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getContentConstant = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.isNode = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.isLeaf = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.activateVariableVariant = function(
			variableVariant, syncType, listener, customIdentifier) {
		return oFF.OlapEnvVarAction.createAndRunDefinition(this, syncType,
				listener, customIdentifier, variableVariant);
	};
	oFF.OlapEnvVarProcessor.prototype.cloneOlapComponent = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.getParent = function() {
		return null;
	};
	oFF.OlapEnvVarProcessor.prototype.getDataSource = oFF.noSupport;
	oFF.OlapEnvVarProcessor.prototype.updateDynamicVariables = function(
			syncType, listener, customIdentifier) {
		var queryManagerList = this.getTaggedQueryManagers();
		var queryManagerSize = queryManagerList.size();
		var i;
		var queryManager;
		for (i = 0; i < queryManagerSize; i++) {
			queryManager = queryManagerList.get(i);
			if (queryManager.getQueryModel().supportsDynamicVariableRefresh()) {
				queryManager.updateDynamicVariables(syncType, listener,
						customIdentifier);
			}
		}
	};
	oFF.OlapEnvVarProcessor.prototype.getConvenienceCommands = oFF.noSupport;
	oFF.HierarchyCatalogService = function() {
	};
	oFF.HierarchyCatalogService.prototype = new oFF.DfService();
	oFF.HierarchyCatalogService.CLAZZ = null;
	oFF.HierarchyCatalogService.staticSetup = function() {
		oFF.HierarchyCatalogService.CLAZZ = oFF.XClass
				.create(oFF.HierarchyCatalogService);
	};
	oFF.HierarchyCatalogService.prototype.m_catalogManager = null;
	oFF.HierarchyCatalogService.prototype.m_dataSource = null;
	oFF.HierarchyCatalogService.prototype.m_dimensionName = null;
	oFF.HierarchyCatalogService.prototype.releaseObject = function() {
		this.m_catalogManager = oFF.XObjectExt.release(this.m_catalogManager);
		this.m_dataSource = null;
		this.m_dimensionName = null;
		oFF.DfService.prototype.releaseObject.call(this);
	};
	oFF.HierarchyCatalogService.prototype.isServiceConfigMatching = function(
			serviceConfig, connection, messages) {
		var systemDescription = serviceConfig.getSystemDescription();
		if (!oFF.HierarchyCatalogUtil
				.supportsHierarchyCatalog(systemDescription)) {
			return false;
		}
		return oFF.DfService.prototype.isServiceConfigMatching.call(this,
				serviceConfig, connection, messages);
	};
	oFF.HierarchyCatalogService.prototype.getCatalogManager = function() {
		return this.m_catalogManager;
	};
	oFF.HierarchyCatalogService.prototype.processSynchronization = function(
			syncType) {
		var config = this.getServiceConfig();
		var queryServiceConfig;
		this.m_dimensionName = config.getDimensionName();
		if (config.getSystemType() === oFF.SystemType.HANA) {
			queryServiceConfig = this._getConfigHana(config);
		} else {
			queryServiceConfig = this._getConfigBw(config);
		}
		queryServiceConfig.setConnectionContainer(this.getConnection());
		queryServiceConfig.activateExperimentalFeatureSet(config
				.getExperimentalFeatureSet());
		queryServiceConfig.processQueryManagerCreation(syncType, this, null);
		return true;
	};
	oFF.HierarchyCatalogService.prototype._getConfigHana = function(config) {
		this.m_dataSource = oFF.QFactory.newDataSource();
		this.m_dataSource.setFullQualifiedName(config.getDataSourceName());
		return oFF.QueryServiceConfig.createWithDataSourceName(this
				.getApplication(), config.getSystemName(),
				"view:[][][$$HierarchyName$$]");
	};
	oFF.HierarchyCatalogService.prototype._getConfigBw = function(config) {
		var datasource = oFF.QFactory.newDataSource();
		datasource.setType(oFF.MetaObjectType.HIERARCHY);
		datasource.setName(config.getDimensionName());
		datasource.setEnvironmentName(config.getEnvironmentName());
		return oFF.QueryServiceConfig.createWithDataSource(this
				.getApplication(), config.getSystemName(), datasource);
	};
	oFF.HierarchyCatalogService.prototype.onQueryManagerCreated = function(
			extResult, queryManager, customIdentifier) {
		this.addAllMessages(extResult);
		if (extResult.isValid()) {
			this.m_catalogManager = oFF.HierarchyCatalogManager.create(
					queryManager, this.m_dataSource, this.m_dimensionName);
		}
		this.m_dataSource = null;
		this.m_dimensionName = null;
		this.endSync();
	};
	oFF.HierarchyCatalogServiceConfig = function() {
	};
	oFF.HierarchyCatalogServiceConfig.prototype = new oFF.DfServiceConfig();
	oFF.HierarchyCatalogServiceConfig.CLAZZ = null;
	oFF.HierarchyCatalogServiceConfig.staticSetup = function() {
		oFF.HierarchyCatalogServiceConfig.CLAZZ = oFF.XClass
				.create(oFF.HierarchyCatalogServiceConfig);
	};
	oFF.HierarchyCatalogServiceConfig.prototype.m_dataSourceName = null;
	oFF.HierarchyCatalogServiceConfig.prototype.m_dimensionName = null;
	oFF.HierarchyCatalogServiceConfig.prototype.m_invalidDimension = false;
	oFF.HierarchyCatalogServiceConfig.prototype.m_environmentName = null;
	oFF.HierarchyCatalogServiceConfig.prototype.m_experimentalFeatues = null;
	oFF.HierarchyCatalogServiceConfig.prototype.releaseObject = function() {
		this.m_dataSourceName = null;
		this.m_dimensionName = null;
		this.m_environmentName = null;
		this.m_experimentalFeatues = oFF.XObjectExt
				.release(this.m_experimentalFeatues);
		oFF.DfServiceConfig.prototype.releaseObject.call(this);
	};
	oFF.HierarchyCatalogServiceConfig.prototype.activateExperimentalFeature = function(
			experimentalFeature) {
		oFF.InactiveCapabilityUtil.assertVersionValid(experimentalFeature, this
				.getApplication().getVersion());
		if (oFF.isNull(this.m_experimentalFeatues)) {
			this.m_experimentalFeatues = oFF.XSetOfNameObject.create();
		}
		this.m_experimentalFeatues.add(experimentalFeature);
	};
	oFF.HierarchyCatalogServiceConfig.prototype.activateExperimentalFeatureSet = function(
			experimentalFeatures) {
		var iterator;
		if (oFF.notNull(experimentalFeatures)) {
			iterator = experimentalFeatures.getIterator();
			while (iterator.hasNext()) {
				this.activateExperimentalFeature(iterator.next());
			}
		}
	};
	oFF.HierarchyCatalogServiceConfig.prototype.getExperimentalFeatureSet = function() {
		return this.m_experimentalFeatues;
	};
	oFF.HierarchyCatalogServiceConfig.prototype.getExperimentalFeatures = function() {
		return oFF.InactiveCapabilityUtil
				.exportInactiveCapabilities(this.m_experimentalFeatues);
	};
	oFF.HierarchyCatalogServiceConfig.prototype.setDataSourceName = function(
			dataSourceName) {
		this.m_dataSourceName = dataSourceName;
	};
	oFF.HierarchyCatalogServiceConfig.prototype.getDataSourceName = function() {
		return this.m_dataSourceName;
	};
	oFF.HierarchyCatalogServiceConfig.prototype.setDimensionName = function(
			dimensionName) {
		this.m_dimensionName = dimensionName;
	};
	oFF.HierarchyCatalogServiceConfig.prototype.getDimensionName = function() {
		return this.m_dimensionName;
	};
	oFF.HierarchyCatalogServiceConfig.prototype.setEnvironmentName = function(
			environmentName) {
		this.m_environmentName = environmentName;
	};
	oFF.HierarchyCatalogServiceConfig.prototype.getEnvironmentName = function() {
		return this.m_environmentName;
	};
	oFF.HierarchyCatalogServiceConfig.prototype.processHierarchyCatalogManagerCreation = function(
			syncType, listener, customIdentifier) {
		if (this.m_invalidDimension) {
			return oFF.ExtResult
					.createWithMessage(oFF.XMessage
							.createMessage(
									oFF.OriginLayer.SERVER,
									oFF.Severity.WARNING,
									oFF.ErrorCodes.INVALID_DIMENSION,
									oFF.XStringUtils
											.concatenate3(
													"Hierarchy Catalog is not supported for the dimensions '",
													this.m_dimensionName, "'!"),
									null, false, null));
		}
		return this.processSyncAction(syncType, listener, customIdentifier);
	};
	oFF.HierarchyCatalogServiceConfig.prototype.callListener = function(
			extResult, listener, data, customIdentifier) {
		listener.onHierarchyCatalogManagerCreated(extResult, data,
				customIdentifier);
	};
	oFF.HierarchyCatalogServiceConfig.prototype.setDataFromService = function(
			service) {
		this.setData(service.getCatalogManager());
	};
	oFF.HierarchyCatalogServiceConfig.prototype.setDimension = function(
			dimension) {
		if (oFF.notNull(dimension)) {
			this.m_invalidDimension = dimension.getDimensionType() === oFF.DimensionType.SECONDARY_STRUCTURE
					|| dimension.getDimensionType() === oFF.DimensionType.MEASURE_STRUCTURE;
			this.m_dimensionName = dimension.getName();
		}
	};
	oFF.QAttributeContainer = function() {
	};
	oFF.QAttributeContainer.prototype = new oFF.QModelComponent();
	oFF.QAttributeContainer.create = function(context, dimension) {
		var object = new oFF.QAttributeContainer();
		object.setupAttributeContainer(context, dimension);
		return object;
	};
	oFF.QAttributeContainer.prototype.m_resultSetAttributes = null;
	oFF.QAttributeContainer.prototype.m_selectorAttributes = null;
	oFF.QAttributeContainer.prototype.m_defaultResultSetAttributes = null;
	oFF.QAttributeContainer.prototype.m_allAttributes = null;
	oFF.QAttributeContainer.prototype.m_mainAttribute = null;
	oFF.QAttributeContainer.prototype.cloneOlapComponent = function(context,
			parent) {
		var clone = oFF.QAttributeContainer.create(context, null);
		clone.copyAttributeContainer(this);
		return clone;
	};
	oFF.QAttributeContainer.prototype.setupAttributeContainer = function(
			context, dimension) {
		this.setupModelComponentWithName(context, dimension, "Attributes");
		this.m_resultSetAttributes = oFF.QAttributeList.createAttributeList(
				this, "Resultset Attributes");
		this.m_selectorAttributes = oFF.QAttributeList.createAttributeList(
				this, "Selector Attribtues");
		this.m_allAttributes = oFF.QAttributeList.createAttributeList(this,
				"All Attributes");
		this.m_defaultResultSetAttributes = oFF.XListWeakRef.create();
	};
	oFF.QAttributeContainer.prototype.copyAttributeContainer = function(origin) {
		var size;
		var i;
		var context;
		var dimension;
		var origAttribute;
		var cloneAttribute;
		var attributeByName;
		this.copyModelComponent(origin);
		size = origin.m_allAttributes.size();
		context = this.getContext();
		dimension = this.getDimension();
		for (i = 0; i < size; i++) {
			origAttribute = origin.getAttributes().get(i);
			cloneAttribute = oFF.QAttribute.createAttribute(context, dimension);
			cloneAttribute.copyAttribute(origAttribute);
			this.m_allAttributes.addInternal(cloneAttribute);
		}
		this.m_allAttributes.copyAttributeList(origin.m_allAttributes);
		size = origin.m_resultSetAttributes.size();
		for (i = 0; i < size; i++) {
			this.m_resultSetAttributes.addInternal(this.m_allAttributes
					.getAttributeByName(origin.m_resultSetAttributes.get(i)
							.getName()));
		}
		this.m_resultSetAttributes
				.copyAttributeList(origin.m_resultSetAttributes);
		size = origin.m_defaultResultSetAttributes.size();
		for (i = 0; i < size; i++) {
			attributeByName = this.m_allAttributes
					.getAttributeByName(origin.m_defaultResultSetAttributes
							.get(i).getName());
			this.m_defaultResultSetAttributes.add(attributeByName);
			this.m_selectorAttributes.addInternal(attributeByName);
		}
		this.m_selectorAttributes
				.copyAttributeList(origin.m_selectorAttributes);
		if (oFF.notNull(origin.m_mainAttribute)) {
			this.m_mainAttribute = this.m_allAttributes
					.getAttributeByName(origin.m_mainAttribute.getName());
		}
	};
	oFF.QAttributeContainer.prototype.releaseObject = function() {
		this.m_resultSetAttributes = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_resultSetAttributes);
		this.m_selectorAttributes = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_selectorAttributes);
		this.m_allAttributes = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_allAttributes);
		this.m_mainAttribute = oFF.XObjectExt.release(this.m_mainAttribute);
		this.m_defaultResultSetAttributes = oFF.XObjectExt
				.release(this.m_defaultResultSetAttributes);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QAttributeContainer.prototype.reinit = function(origin) {
		oFF.XCollectionUtils
				.releaseEntriesFromCollection(this.m_resultSetAttributes);
		this.m_resultSetAttributes.clear();
		oFF.XCollectionUtils
				.releaseEntriesFromCollection(this.m_selectorAttributes);
		this.m_selectorAttributes.clear();
		oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_allAttributes);
		this.m_allAttributes.clear();
		this.m_mainAttribute = oFF.XObjectExt.release(this.m_mainAttribute);
		this.m_defaultResultSetAttributes.clear();
		this.copyAttributeContainer(origin);
	};
	oFF.QAttributeContainer.prototype.getResultSetAttributes = function() {
		return this.m_resultSetAttributes;
	};
	oFF.QAttributeContainer.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.ATTRIBUTE_CONTAINER;
	};
	oFF.QAttributeContainer.prototype.getAttributesExt = function(context) {
		if (context === oFF.QContextType.RESULT_SET) {
			return this.getResultSetAttributes();
		}
		return this.getSelectorAttributes();
	};
	oFF.QAttributeContainer.prototype.getSelectorAttributes = function() {
		return this.m_selectorAttributes;
	};
	oFF.QAttributeContainer.prototype.getMainAttribute = function() {
		return this.m_mainAttribute;
	};
	oFF.QAttributeContainer.prototype.setMainAttribute = function(mainAttribute) {
		this.m_mainAttribute = mainAttribute;
	};
	oFF.QAttributeContainer.prototype.getAttributes = function() {
		return this.m_allAttributes;
	};
	oFF.QAttributeContainer.prototype.getAttributeByName = function(name) {
		return this.m_allAttributes.getAttributeByName(name);
	};
	oFF.QAttributeContainer.prototype.getDimension = function() {
		return this.getParentComponent();
	};
	oFF.QAttributeContainer.prototype.addAttribute = function(attribute) {
		this.m_allAttributes.add(attribute);
	};
	oFF.QAttributeContainer.prototype.addAttributeInternal = function(attribute) {
		this.m_allAttributes.addInternal(attribute);
	};
	oFF.QAttributeContainer.prototype.notifyChildChanged = function(
			changedNodes) {
		var dimension;
		var size;
		var i;
		var next;
		this.queueEventing();
		oFF.QModelComponent.prototype.notifyChildChanged.call(this,
				changedNodes);
		dimension = this.getDimension();
		size = changedNodes.size();
		for (i = 0; i < size; i++) {
			next = changedNodes.get(i);
			if (next === this.m_selectorAttributes) {
				dimension
						.setSelectorFieldLayoutType(oFF.FieldLayoutType.ATTRIBUTE_BASED);
			} else {
				if (next === this.m_resultSetAttributes) {
					dimension
							.setFieldLayoutType(oFF.FieldLayoutType.ATTRIBUTE_BASED);
				}
			}
		}
		this.resumeEventing();
	};
	oFF.QAttributeContainer.prototype.isComponentNode = function() {
		return true;
	};
	oFF.QAttributeContainer.prototype.getNamedChildren = function() {
		var map = oFF.XHashMapByString.create();
		map.put("AllAttributes", this.m_allAttributes);
		map.put("ResultSetAttributes", this.m_resultSetAttributes);
		map.put("SelectorAttributes", this.m_selectorAttributes);
		map.put("MainAttribute", this.m_mainAttribute);
		return map;
	};
	oFF.QAttributeContainer.prototype.addDefaultResultSetAttribute = function(
			attribute) {
		this.m_defaultResultSetAttributes.add(attribute);
	};
	oFF.QAttributeContainer.prototype.getDefaultResultSetAttributes = function() {
		return this.m_defaultResultSetAttributes;
	};
	oFF.QAttributeContainer.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherObj = other;
		var otherAttributes = otherObj.getResultSetAttributes();
		var i;
		var otherAttribute;
		var attributeName;
		var attribute;
		this.m_resultSetAttributes.clear();
		for (i = 0; i < otherAttributes.size(); i++) {
			otherAttribute = otherAttributes.get(i);
			attributeName = otherAttribute.getName();
			attribute = this.getAttributeByName(attributeName);
			this.m_resultSetAttributes.add(attribute);
			if (oFF.notNull(attribute)) {
				attribute.mergeDeepRecursive(settings, otherAttribute);
			}
		}
	};
	oFF.QAxesManager = function() {
	};
	oFF.QAxesManager.prototype = new oFF.QModelComponent();
	oFF.QAxesManager.create = function(queryModel) {
		var newObj = new oFF.QAxesManager();
		newObj.setupAxesManager(queryModel);
		return newObj;
	};
	oFF.QAxesManager.prototype.m_axisRows = null;
	oFF.QAxesManager.prototype.m_axisColumns = null;
	oFF.QAxesManager.prototype.m_axisFree = null;
	oFF.QAxesManager.prototype.m_axisDynamic = null;
	oFF.QAxesManager.prototype.m_axisFilter = null;
	oFF.QAxesManager.prototype.m_axisRepository = null;
	oFF.QAxesManager.prototype.m_axisVirtual = null;
	oFF.QAxesManager.prototype.copyAxesManager = function(origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_axisRows.copyAxis(origin.m_axisRows);
		this.m_axisColumns.copyAxis(origin.m_axisColumns);
		this.m_axisFree.copyAxis(origin.m_axisFree);
		if (oFF.notNull(origin.m_axisDynamic)) {
			this.getDynamicAxis().copyAxis(origin.m_axisDynamic);
		}
		if (oFF.notNull(origin.m_axisFilter)) {
			this.getFilterAxis().copyAxis(origin.m_axisFilter);
		}
		if (oFF.notNull(origin.m_axisRepository)) {
			this.getRepositoryAxis().copyAxis(origin.m_axisRepository);
		}
		if (oFF.notNull(origin.m_axisVirtual)) {
			this.getVirtualAxis().copyAxis(origin.m_axisVirtual);
		}
	};
	oFF.QAxesManager.prototype.setupAxesManager = function(queryModel) {
		this.setupModelComponent(queryModel, queryModel);
		this.m_axisColumns = oFF.QAxis.createAxis(queryModel, this,
				oFF.AxisType.COLUMNS);
		this.m_axisRows = oFF.QAxis.createAxis(queryModel, this,
				oFF.AxisType.ROWS);
		this.m_axisFree = oFF.QAxis.createAxis(queryModel, this,
				oFF.AxisType.FREE);
	};
	oFF.QAxesManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.AXES_MANAGER;
	};
	oFF.QAxesManager.prototype.releaseObject = function() {
		this.m_axisColumns = oFF.XObjectExt.release(this.m_axisColumns);
		this.m_axisDynamic = oFF.XObjectExt.release(this.m_axisDynamic);
		this.m_axisFilter = oFF.XObjectExt.release(this.m_axisFilter);
		this.m_axisFree = oFF.XObjectExt.release(this.m_axisFree);
		this.m_axisRepository = oFF.XObjectExt.release(this.m_axisRepository);
		this.m_axisVirtual = oFF.XObjectExt.release(this.m_axisVirtual);
		this.m_axisRows = oFF.XObjectExt.release(this.m_axisRows);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QAxesManager.prototype.getDynamicAxis = function() {
		if (oFF.isNull(this.m_axisDynamic) && !this.isReleased()) {
			this.m_axisDynamic = oFF.QAxis.createAxis(this.getContext(), this,
					oFF.AxisType.DYNAMIC);
		}
		return this.m_axisDynamic;
	};
	oFF.QAxesManager.prototype.getColumnsAxis = function() {
		return this.m_axisColumns;
	};
	oFF.QAxesManager.prototype.getRowsAxis = function() {
		return this.m_axisRows;
	};
	oFF.QAxesManager.prototype.getFreeAxis = function() {
		return this.m_axisFree;
	};
	oFF.QAxesManager.prototype.getRepositoryAxis = function() {
		if (oFF.isNull(this.m_axisRepository) && !this.isReleased()) {
			this.m_axisRepository = oFF.QAxis.createAxis(this.getContext(),
					this, oFF.AxisType.REPOSITORY);
		}
		return this.m_axisRepository;
	};
	oFF.QAxesManager.prototype.getVirtualAxis = function() {
		if (oFF.isNull(this.m_axisVirtual) && !this.isReleased()) {
			this.m_axisVirtual = oFF.QAxis.createAxis(this.getContext(), this,
					oFF.AxisType.VIRTUAL);
		}
		return this.m_axisVirtual;
	};
	oFF.QAxesManager.prototype.getFilterAxis = function() {
		if (oFF.isNull(this.m_axisFilter) && !this.isReleased()) {
			this.m_axisFilter = oFF.QAxis.createAxis(this.getContext(), this,
					oFF.AxisType.FILTER);
		}
		return this.m_axisFilter;
	};
	oFF.QAxesManager.prototype.getAxis = function(axisType) {
		return this.getAxisBase(axisType);
	};
	oFF.QAxesManager.prototype.getAxisBase = function(axis) {
		if (axis === oFF.AxisType.COLUMNS) {
			return this.m_axisColumns;
		}
		if (axis === oFF.AxisType.ROWS) {
			return this.m_axisRows;
		}
		if (axis === oFF.AxisType.FREE) {
			return this.m_axisFree;
		}
		if (axis === oFF.AxisType.REPOSITORY) {
			return this.getRepositoryAxis();
		}
		if (axis === oFF.AxisType.DYNAMIC) {
			return this.getDynamicAxis();
		}
		if (axis === oFF.AxisType.FILTER) {
			return this.getFilterAxis();
		}
		if (axis === oFF.AxisType.VIRTUAL) {
			return this.getVirtualAxis();
		}
		return null;
	};
	oFF.QAxesManager.prototype.getNamedChildren = function() {
		var map = oFF.XHashMapByString.create();
		map.put("RowsAxis", this.m_axisRows);
		map.put("ColumnsAxis", this.m_axisColumns);
		map.put("FreeAxis", this.m_axisFree);
		map.put("DynamicAxis", this.m_axisDynamic);
		map.put("FilterAxis", this.m_axisFilter);
		map.put("RepositoryAxis", this.m_axisRepository);
		map.put("VirtualAxis", this.m_axisVirtual);
		return map;
	};
	oFF.AbstractValueAccessComponent = function() {
	};
	oFF.AbstractValueAccessComponent.prototype = new oFF.QModelComponent();
	oFF.AbstractValueAccessComponent.prototype.getValueType = function() {
		var value = this.getValue();
		return oFF.isNull(value) ? null : value.getValueType();
	};
	oFF.AbstractValueAccessComponent.prototype.getErrorValue = function() {
		return null;
	};
	oFF.AbstractValueAccessComponent.prototype.getMultiPoint = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.MULTI_POINT);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getDouble = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.DOUBLE);
		return value.getDouble();
	};
	oFF.AbstractValueAccessComponent.prototype.getInteger = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.INTEGER);
		return value.getInteger();
	};
	oFF.AbstractValueAccessComponent.prototype.getLong = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.LONG);
		return value.getLong();
	};
	oFF.AbstractValueAccessComponent.prototype.getDate = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.DATE);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getTime = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.TIME);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getTimeSpan = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.TIMESPAN);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getLineString = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.LINE_STRING);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getMultiLineString = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.MULTI_LINE_STRING);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getGeometry = function() {
		var value = this.getValue();
		var valueType = value.getValueType();
		if (!valueType.isSpatial()) {
			oFF.noSupport();
		}
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getBoolean = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.BOOLEAN);
		return value.getBoolean();
	};
	oFF.AbstractValueAccessComponent.prototype.getDateTime = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.DATE_TIME);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getPolygon = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.POLYGON);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getMultiPolygon = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.MULTI_POLYGON);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getPoint = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.POINT);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getString = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.STRING);
		return value.getString();
	};
	oFF.AbstractValueAccessComponent.prototype.getStructureValue = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.STRUCTURE);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getStructureListValue = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.LIST);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getPropertiesValue = function() {
		var value = this.getValue();
		this.assertValueType(value, oFF.XValueType.PROPERTIES);
		return value;
	};
	oFF.AbstractValueAccessComponent.prototype.getNull = function() {
		return null;
	};
	oFF.QModelComponentNode = function() {
	};
	oFF.QModelComponentNode.prototype = new oFF.QModelComponent();
	oFF.QModelComponentNode.createLeave = function(context, name) {
		var object = new oFF.QModelComponentNode();
		object.setupModelComponentNode(context, null, name, false);
		return object;
	};
	oFF.QModelComponentNode.prototype.m_modelComponentList = null;
	oFF.QModelComponentNode.prototype.m_isComponentNode = false;
	oFF.QModelComponentNode.prototype.setupModelComponentNode = function(
			context, modelComponentList, name, isComponentNode) {
		this.setupModelComponentWithName(context, this, name);
		this.m_modelComponentList = modelComponentList;
		this.m_isComponentNode = isComponentNode;
	};
	oFF.QModelComponentNode.prototype.releaseObject = function() {
		this.m_modelComponentList = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QModelComponentNode.prototype.isComponentNode = function() {
		return this.m_isComponentNode;
	};
	oFF.QModelComponentNode.prototype.getIndexedChildren = function() {
		return this.m_modelComponentList.getIterator();
	};
	oFF.QCondition = function() {
	};
	oFF.QCondition.prototype = new oFF.QModelComponent();
	oFF.QCondition.create = function(context, conditionManager, technicalName,
			isBackendCondition) {
		var newObj;
		if (oFF.isNull(technicalName) || oFF.XString.isEqual(technicalName, "")) {
			return null;
		}
		newObj = new oFF.QCondition();
		newObj.setupCondition(context, conditionManager, technicalName,
				isBackendCondition);
		return newObj;
	};
	oFF.QCondition.prototype.m_isActive = false;
	oFF.QCondition.prototype.m_isBackendCondition = false;
	oFF.QCondition.prototype.m_breakGroup = false;
	oFF.QCondition.prototype.m_autoGroup = false;
	oFF.QCondition.prototype.m_description = null;
	oFF.QCondition.prototype.m_onDisabled = null;
	oFF.QCondition.prototype.m_usedState = null;
	oFF.QCondition.prototype.m_dimensionEvaluationType = null;
	oFF.QCondition.prototype.m_evaluationDimensions = null;
	oFF.QCondition.prototype.m_conditionThresholds = null;
	oFF.QCondition.prototype.m_breakGroupDimensions = null;
	oFF.QCondition.prototype.copyCondition = function(origin) {
		var i;
		var queryModel;
		var size;
		var origEvalDimension;
		var originThreshold;
		var cloneThreshold;
		var origBreakGroupDimension;
		this.copyModelComponent(origin);
		this.m_isActive = origin.m_isActive;
		this.m_description = origin.m_description;
		this.m_usedState = origin.m_usedState;
		this.m_onDisabled = origin.m_onDisabled;
		this.m_dimensionEvaluationType = origin.m_dimensionEvaluationType;
		this.m_isBackendCondition = origin.m_isBackendCondition;
		queryModel = this.getQueryModel();
		size = origin.m_evaluationDimensions.size();
		for (i = 0; i < size; i++) {
			origEvalDimension = origin.m_evaluationDimensions.get(i);
			this.m_evaluationDimensions.addInternal(queryModel
					.getDimensionByNameFromExistingMetadata(origEvalDimension
							.getName()));
		}
		size = origin.m_conditionThresholds.size();
		for (i = 0; i < size; i++) {
			originThreshold = origin.m_conditionThresholds.get(i);
			cloneThreshold = oFF.QConditionThreshold.create(this, this);
			this.m_conditionThresholds.add(cloneThreshold);
			cloneThreshold.copyConditionThreshold(originThreshold);
		}
		this.m_autoGroup = origin.m_autoGroup;
		this.m_breakGroup = origin.m_breakGroup;
		size = origin.m_breakGroupDimensions.size();
		for (i = 0; i < size; i++) {
			origBreakGroupDimension = origin.m_breakGroupDimensions.get(i);
			this.m_breakGroupDimensions
					.addInternal(queryModel
							.getDimensionByNameFromExistingMetadata(origBreakGroupDimension
									.getName()));
		}
	};
	oFF.QCondition.prototype.setupCondition = function(context,
			conditionManager, technicalName, isBackendCondition) {
		this.setupModelComponentWithName(context, conditionManager,
				technicalName);
		this.setOnDisabledToWarning();
		this.m_isActive = true;
		this.m_isBackendCondition = isBackendCondition;
		this.m_conditionThresholds = oFF.QModelComponentList
				.createModelComponentList(context, this, false, "ThresholdList");
		this.m_evaluationDimensions = oFF.QModelComponentList
				.createModelComponentList(context, this, false,
						"EvaluationDimensionList");
		this.m_breakGroupDimensions = oFF.QModelComponentList
				.createModelComponentList(context, this, false,
						"BreakGroupDimensionList");
	};
	oFF.QCondition.prototype.setParent = function(parent) {
		var context;
		if (oFF.notNull(parent)) {
			context = parent.getContext();
			this.m_evaluationDimensions.setContext(context);
			this.m_conditionThresholds.setContext(context);
			this.m_breakGroupDimensions.setContext(context);
		}
		oFF.QModelComponent.prototype.setParent.call(this, parent);
	};
	oFF.QCondition.prototype.isActive = function() {
		return this.m_isActive;
	};
	oFF.QCondition.prototype.setActive = function(active) {
		if (this.m_isActive !== active) {
			this.m_isActive = active;
			this.notifyNodeChanged();
		}
	};
	oFF.QCondition.prototype.getUsedState = function() {
		return this.m_usedState;
	};
	oFF.QCondition.prototype.setUsedState = function(usedState) {
		this.m_usedState = usedState;
	};
	oFF.QCondition.prototype.getDescription = function() {
		return this.m_description;
	};
	oFF.QCondition.prototype.setDescription = function(description) {
		if (!oFF.XString.isEqual(this.m_description, description)) {
			this.m_description = description;
			this.notifyNodeChanged();
		}
	};
	oFF.QCondition.prototype.getDimensionEvaluationType = function() {
		return this.m_dimensionEvaluationType;
	};
	oFF.QCondition.prototype.setDimensionEvaluationType = function(
			dimensionEvalutationType) {
		if (this.m_dimensionEvaluationType !== dimensionEvalutationType) {
			this.m_dimensionEvaluationType = dimensionEvalutationType;
			this.notifyNodeChanged();
		}
	};
	oFF.QCondition.prototype.getEvaluationDimensions = function() {
		return this.m_evaluationDimensions;
	};
	oFF.QCondition.prototype.addEvaluationDimension = function(dimension) {
		this.m_evaluationDimensions.add(dimension);
	};
	oFF.QCondition.prototype.removeEvaluationDimension = function(dimension) {
		this.m_evaluationDimensions.removeElement(dimension);
	};
	oFF.QCondition.prototype.getThresholds = function() {
		return this.m_conditionThresholds;
	};
	oFF.QCondition.prototype.addThreshold = function(threshold) {
		if (oFF.notNull(threshold)) {
			threshold.setParent(this);
			this.m_conditionThresholds.add(threshold);
			if (threshold.isValid()) {
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QCondition.prototype.removeThreshold = function(threshold) {
		if (oFF.notNull(threshold)) {
			threshold.setParent(null);
			this.m_conditionThresholds.removeElement(threshold);
			if (threshold.isValid()) {
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QCondition.prototype.getConditionManager = function() {
		return this.getParentComponent();
	};
	oFF.QCondition.prototype.createThreshold = function() {
		var newThreshold = oFF.QConditionThreshold.create(this.getContext(),
				this);
		this.addThreshold(newThreshold);
		return newThreshold;
	};
	oFF.QCondition.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.CONDITION;
	};
	oFF.QCondition.prototype.isValid = function() {
		if (oFF.isNull(this.m_dimensionEvaluationType)) {
			return false;
		}
		return this.m_dimensionEvaluationType !== oFF.ConditionDimensionEvaluationType.GIVEN_LIST
				|| !this.getEvaluationDimensions().isEmpty();
	};
	oFF.QCondition.prototype.releaseObject = function() {
		this.m_description = null;
		this.m_dimensionEvaluationType = null;
		this.m_usedState = null;
		this.m_evaluationDimensions = oFF.XObjectExt
				.release(this.m_evaluationDimensions);
		this.m_breakGroupDimensions = oFF.XObjectExt
				.release(this.m_breakGroupDimensions);
		this.m_conditionThresholds = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_conditionThresholds);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QCondition.prototype.setConditionName = function(conditionName) {
		if (oFF.XStringUtils.isNullOrEmpty(conditionName)
				|| this.getConditionManager().getConditionByName(conditionName) !== null) {
			oFF.noSupport();
		}
		this.setName(conditionName);
	};
	oFF.QCondition.prototype.isChangeable = function() {
		return this.isUserCondition();
	};
	oFF.QCondition.prototype.isBackendCondition = function() {
		return this.m_isBackendCondition;
	};
	oFF.QCondition.prototype.isUserCondition = function() {
		return !this.isBackendCondition();
	};
	oFF.QCondition.prototype.addBreakGroupDimension = function(dimension) {
		this.m_breakGroupDimensions.add(dimension);
	};
	oFF.QCondition.prototype.removeBreakGroupDimension = function(dimension) {
		this.m_breakGroupDimensions.removeElement(dimension);
	};
	oFF.QCondition.prototype.getBreakGroupDimensions = function() {
		return this.m_breakGroupDimensions;
	};
	oFF.QCondition.prototype.setBreakGroup = function(breakGroup) {
		this.m_breakGroup = breakGroup;
	};
	oFF.QCondition.prototype.isBreakGroup = function() {
		return this.m_breakGroup;
	};
	oFF.QCondition.prototype.setAutoGroup = function(autoGroup) {
		this.m_autoGroup = autoGroup;
	};
	oFF.QCondition.prototype.isAutoGroup = function() {
		return this.m_autoGroup;
	};
	oFF.QCondition.prototype.getOnDisabled = function() {
		return this.m_onDisabled;
	};
	oFF.QCondition.prototype.setOnDisabledToWarning = function() {
		this.m_onDisabled = "Warning";
	};
	oFF.QCondition.prototype.setOnDisabledToError = function() {
		this.m_onDisabled = "Error";
	};
	oFF.QConditionThreshold = function() {
	};
	oFF.QConditionThreshold.prototype = new oFF.QModelComponent();
	oFF.QConditionThreshold.create = function(context, parentCondition) {
		var newObj = new oFF.QConditionThreshold();
		newObj.setupThreshold(context, parentCondition);
		return newObj;
	};
	oFF.QConditionThreshold.prototype.m_firstValue = null;
	oFF.QConditionThreshold.prototype.m_firstValueIs = null;
	oFF.QConditionThreshold.prototype.m_secondValue = null;
	oFF.QConditionThreshold.prototype.m_secondValueIs = null;
	oFF.QConditionThreshold.prototype.m_measureCoordinates = null;
	oFF.QConditionThreshold.prototype.m_conditionComparisonOperator = null;
	oFF.QConditionThreshold.prototype.m_hierarchyLevel = null;
	oFF.QConditionThreshold.prototype.m_leavesOnly = false;
	oFF.QConditionThreshold.prototype.copyConditionThreshold = function(origin) {
		var queryModel;
		var size;
		var i;
		var origMember;
		var cloneMember;
		this.copyModelComponent(origin);
		if (oFF.notNull(origin.m_firstValue)) {
			this.getLow().copyFilterValueBag(origin.getLow());
		}
		if (oFF.notNull(origin.m_firstValueIs)) {
			this.getLowIs().copyFilterValueBag(origin.getLowIs());
		}
		if (oFF.notNull(origin.m_secondValue)) {
			this.getHigh().copyFilterValueBag(origin.getHigh());
		}
		if (oFF.notNull(origin.m_secondValueIs)) {
			this.getHighIs().copyFilterValueBag(origin.getHighIs());
		}
		queryModel = this.getQueryModel();
		size = origin.m_measureCoordinates.size();
		for (i = 0; i < size; i++) {
			origMember = origin.m_measureCoordinates.get(i);
			cloneMember = queryModel.getDimensionByNameFromExistingMetadata(
					origMember.getDimension().getName()).getDimensionMember(
					origMember.getName());
			cloneMember.copyDimensionMember(origMember);
			this.m_measureCoordinates.addInternal(cloneMember);
		}
		if (oFF.notNull(origin.m_hierarchyLevel)) {
			this.m_hierarchyLevel = oFF.XIntegerValue
					.create(origin.m_hierarchyLevel.getInteger());
		}
		this.m_leavesOnly = origin.m_leavesOnly;
		this.m_conditionComparisonOperator = origin.m_conditionComparisonOperator;
	};
	oFF.QConditionThreshold.prototype.setupThreshold = function(context,
			parentCondition) {
		this.setupModelComponentWithName(context, parentCondition, "Threshold");
		this.m_conditionComparisonOperator = oFF.ConditionComparisonOperator.EQUAL;
		this.m_measureCoordinates = oFF.QModelComponentList
				.createModelComponentList(context, this, false,
						"MeasureCoordinates");
	};
	oFF.QConditionThreshold.prototype.setParent = function(parent) {
		if (oFF.notNull(parent)) {
			this.m_measureCoordinates.setContext(parent.getContext());
		}
		oFF.QModelComponent.prototype.setParent.call(this, parent);
	};
	oFF.QConditionThreshold.prototype.getMeasureCoordinates = function() {
		return this.m_measureCoordinates;
	};
	oFF.QConditionThreshold.prototype.addMeasureCoordinate = function(
			dimensionMember) {
		if (oFF.notNull(dimensionMember)) {
			this.m_measureCoordinates.add(dimensionMember);
			this.notifyNodeChanged();
		}
	};
	oFF.QConditionThreshold.prototype.removeMeasureCoordinate = function(
			dimensionMember) {
		if (oFF.notNull(dimensionMember)) {
			this.m_measureCoordinates.removeElement(dimensionMember);
			this.notifyNodeChanged();
		}
	};
	oFF.QConditionThreshold.prototype.getLow = function() {
		if (oFF.isNull(this.m_firstValue)) {
			this.m_firstValue = oFF.QFilterValueBag._create(this.getContext(),
					null, this);
		}
		return this.m_firstValue;
	};
	oFF.QConditionThreshold.prototype.getLowIs = function() {
		if (oFF.isNull(this.m_firstValueIs)) {
			this.m_firstValueIs = oFF.QFilterValueBag._create(
					this.getContext(), null, this);
		}
		return this.m_firstValueIs;
	};
	oFF.QConditionThreshold.prototype.getHigh = function() {
		if (oFF.isNull(this.m_secondValue)) {
			this.m_secondValue = oFF.QFilterValueBag._create(this.getContext(),
					null, this);
		}
		return this.m_secondValue;
	};
	oFF.QConditionThreshold.prototype.getHighIs = function() {
		if (oFF.isNull(this.m_secondValueIs)) {
			this.m_secondValueIs = oFF.QFilterValueBag._create(this
					.getContext(), null, this);
		}
		return this.m_secondValueIs;
	};
	oFF.QConditionThreshold.prototype.getComparisonOperator = function() {
		if (oFF.isNull(this.m_conditionComparisonOperator)) {
			this.m_conditionComparisonOperator = oFF.ConditionComparisonOperator.EQUAL;
		}
		return this.m_conditionComparisonOperator;
	};
	oFF.QConditionThreshold.prototype.setComparisonOperator = function(
			conditionComparisonOperator) {
		if (this.m_conditionComparisonOperator !== conditionComparisonOperator) {
			this.m_conditionComparisonOperator = conditionComparisonOperator;
			this.notifyNodeChanged();
		}
	};
	oFF.QConditionThreshold.prototype.isValid = function() {
		return this.getLow().getValue() !== null
				&& this.getMeasureCoordinates().size() >= 1;
	};
	oFF.QConditionThreshold.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.CONDITIONS_THRESHOLD;
	};
	oFF.QConditionThreshold.prototype.releaseObject = function() {
		this.m_firstValue = oFF.XObjectExt.release(this.m_firstValue);
		this.m_firstValueIs = oFF.XObjectExt.release(this.m_firstValueIs);
		this.m_secondValue = oFF.XObjectExt.release(this.m_secondValue);
		this.m_secondValueIs = oFF.XObjectExt.release(this.m_secondValueIs);
		this.m_measureCoordinates = oFF.XObjectExt
				.release(this.m_measureCoordinates);
		this.m_hierarchyLevel = oFF.XObjectExt.release(this.m_hierarchyLevel);
		this.m_conditionComparisonOperator = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QConditionThreshold.prototype.setLeavesOnly = function(leavesOnly) {
		if (this.m_leavesOnly !== leavesOnly) {
			this.m_leavesOnly = leavesOnly;
			this.notifyNodeChanged();
		}
	};
	oFF.QConditionThreshold.prototype.isLeavesOnly = function() {
		return this.m_leavesOnly;
	};
	oFF.QConditionThreshold.prototype.setLevel = function(level) {
		var newLevelValue;
		if (oFF.isNull(level)) {
			if (oFF.notNull(this.m_hierarchyLevel)) {
				oFF.XObjectExt.release(this.m_hierarchyLevel);
				this.m_hierarchyLevel = null;
				this.notifyNodeChanged();
			}
		} else {
			newLevelValue = level.getInteger();
			if (oFF.isNull(this.m_hierarchyLevel)) {
				this.m_hierarchyLevel = oFF.XIntegerValue.create(newLevelValue);
				this.notifyNodeChanged();
			} else {
				if (this.m_hierarchyLevel.getInteger() !== newLevelValue) {
					this.m_hierarchyLevel.setInteger(newLevelValue);
					this.notifyNodeChanged();
				}
			}
		}
	};
	oFF.QConditionThreshold.prototype.getLevel = function() {
		return this.m_hierarchyLevel;
	};
	oFF.QCurrencyTranslationDetails = function() {
	};
	oFF.QCurrencyTranslationDetails.prototype = new oFF.QModelComponent();
	oFF.QCurrencyTranslationDetails.create = function(queryModel) {
		var currencyTranslationDetails;
		if (!queryModel.supportsQueryCurrencyTranslation()
				|| oFF.XString.isEqual("NoCurrency", queryModel
						.getCurrencyTranslationEnabledType())) {
			throw oFF.XException
					.createIllegalArgumentException("Currency Translation not allowed on this Query.");
		}
		currencyTranslationDetails = new oFF.QCurrencyTranslationDetails();
		currencyTranslationDetails.setupModelComponent(queryModel, queryModel);
		return currencyTranslationDetails;
	};
	oFF.QCurrencyTranslationDetails.prototype.m_currencyTranslationName = null;
	oFF.QCurrencyTranslationDetails.prototype.m_currencyTranslationTarget = null;
	oFF.QCurrencyTranslationDetails.prototype.m_currencyTranslationOperation = null;
	oFF.QCurrencyTranslationDetails.prototype.copyCurrencyTranslationDetails = function(
			currencyTranslationDetails) {
		this.m_currencyTranslationName = currencyTranslationDetails
				.getCurrencyTranslationName();
		this.m_currencyTranslationTarget = currencyTranslationDetails
				.getCurrencyTranslationTarget();
		this.m_currencyTranslationOperation = currencyTranslationDetails
				.getCurrencyTranslationOperation();
	};
	oFF.QCurrencyTranslationDetails.prototype.getCurrencyTranslationName = function() {
		return this.m_currencyTranslationName;
	};
	oFF.QCurrencyTranslationDetails.prototype.setCurrencyTranslationName = function(
			currencyTranslationName) {
		this.m_currencyTranslationName = currencyTranslationName;
		this.notifyNodeChanged();
	};
	oFF.QCurrencyTranslationDetails.prototype.getCurrencyTranslationTarget = function() {
		return this.m_currencyTranslationTarget;
	};
	oFF.QCurrencyTranslationDetails.prototype.setCurrencyTranslationTarget = function(
			currencyTranslationTarget) {
		this.m_currencyTranslationTarget = currencyTranslationTarget;
		this.notifyNodeChanged();
	};
	oFF.QCurrencyTranslationDetails.prototype.getCurrencyTranslationOperation = function() {
		return this.m_currencyTranslationOperation;
	};
	oFF.QCurrencyTranslationDetails.prototype.setCurrencyTranslationOperation = function(
			currencyTranslationOperation) {
		if (oFF.XString.isEqual("Possible", this.getQueryModel()
				.getCurrencyTranslationEnabledType())
				&& (oFF.CurrencyTranslationOperation.BOTH === currencyTranslationOperation || oFF.CurrencyTranslationOperation.DEFINITION === currencyTranslationOperation)) {
			throw oFF.XException
					.createIllegalArgumentException("Property CurrencyTranslationEnabled on the Query is 'Possible'. Allowed Operation values are Original or Target. ");
		}
		this.m_currencyTranslationOperation = currencyTranslationOperation;
		this.notifyNodeChanged();
	};
	oFF.QCurrencyTranslationDetails.prototype.releaseObject = function() {
		this.m_currencyTranslationName = null;
		this.m_currencyTranslationTarget = null;
		this.m_currencyTranslationOperation = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QDataCell = function() {
	};
	oFF.QDataCell.prototype = new oFF.QModelComponent();
	oFF.QDataCell._create = function(parentNode, name) {
		var cell = new oFF.QDataCell();
		cell.setupDataCell(parentNode, name);
		return cell;
	};
	oFF.QDataCell.prototype.m_disaggMode = null;
	oFF.QDataCell.prototype.m_disaggRefCellName = null;
	oFF.QDataCell.prototype.m_cumulation = false;
	oFF.QDataCell.prototype.m_emphasized = false;
	oFF.QDataCell.prototype.m_inputEnabled = false;
	oFF.QDataCell.prototype.m_signReversal = false;
	oFF.QDataCell.prototype.m_decimalPlaces = 0;
	oFF.QDataCell.prototype.m_scalingFactor = 0;
	oFF.QDataCell.prototype.m_baseCellValueType = null;
	oFF.QDataCell.prototype.m_dimensionReference = null;
	oFF.QDataCell.prototype.m_memberName1 = null;
	oFF.QDataCell.prototype.m_memberName2 = null;
	oFF.QDataCell.prototype.copyDataCell = function(origin) {
		this.copyModelComponent(origin);
		this.m_disaggMode = origin.m_disaggMode;
		this.m_disaggRefCellName = origin.m_disaggRefCellName;
		this.m_cumulation = origin.m_cumulation;
		this.m_emphasized = origin.m_emphasized;
		this.m_inputEnabled = origin.m_inputEnabled;
		this.m_signReversal = origin.m_signReversal;
		this.m_decimalPlaces = origin.m_decimalPlaces;
		this.m_scalingFactor = origin.m_scalingFactor;
		this.m_baseCellValueType = origin.m_baseCellValueType;
		if (oFF.notNull(origin.m_dimensionReference)) {
			this.setDimensionReference(this.getDimensionAccessor()
					.getDimensionByNameFromExistingMetadata(
							origin.getDimensionReference().getName()));
		}
		this.m_memberName1 = origin.m_memberName1;
		this.m_memberName2 = origin.m_memberName2;
	};
	oFF.QDataCell.prototype.setupDataCell = function(parentNode, name) {
		this.setupModelComponentWithName(parentNode, parentNode, name);
		this.m_baseCellValueType = null;
		this.m_decimalPlaces = -1;
		this.m_scalingFactor = 0;
	};
	oFF.QDataCell.prototype.releaseObject = function() {
		this.m_disaggMode = null;
		this.m_disaggRefCellName = null;
		this.m_baseCellValueType = null;
		this.m_dimensionReference = oFF.XObjectExt
				.release(this.m_dimensionReference);
		this.m_memberName1 = null;
		this.m_memberName2 = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QDataCell.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.DATA_CELL;
	};
	oFF.QDataCell.prototype.getText = function() {
		return this.getName();
	};
	oFF.QDataCell.prototype.setBaseCellValueType = function(cellValueType) {
		this.m_baseCellValueType = cellValueType;
	};
	oFF.QDataCell.prototype.setDimensionReference = function(dimensionReference) {
		this.m_dimensionReference = oFF.XWeakReferenceUtil
				.getWeakRef(dimensionReference);
	};
	oFF.QDataCell.prototype.getDimensionReference = function() {
		return oFF.isNull(this.m_dimensionReference) ? null
				: oFF.XWeakReferenceUtil.getHardRef(this.m_dimensionReference);
	};
	oFF.QDataCell.prototype.isInputEnabled = function() {
		return this.m_inputEnabled;
	};
	oFF.QDataCell.prototype.setInputEnabled = function(enabled) {
		this.m_inputEnabled = enabled;
	};
	oFF.QDataCell.prototype.setDisaggregationMode = function(mode) {
		if (this.m_disaggMode !== mode) {
			this.m_disaggMode = mode;
			this.notifyNodeChanged();
		}
	};
	oFF.QDataCell.prototype.setDisaggregationRefCell = function(cell) {
		if (oFF.isNull(cell)) {
			if (oFF.notNull(this.m_disaggRefCellName)) {
				this.notifyNodeChanged();
			}
			this.m_disaggRefCellName = null;
		} else {
			if (oFF.isNull(this.m_disaggRefCellName)
					|| this.getDisaggregationRefCell() !== cell) {
				this.m_disaggRefCellName = cell.getName();
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QDataCell.prototype.getDisaggregationRefCell = function() {
		var refCellName = this.getDisaggregationRefCellName();
		var parentComponent = this.getParentComponent();
		return parentComponent.getByKey(refCellName);
	};
	oFF.QDataCell.prototype.getDisaggregationMode = function() {
		var dataCellEntry = this.getDataCellEntry(false);
		var entryDisaggregationMode;
		if (oFF.notNull(dataCellEntry)) {
			entryDisaggregationMode = dataCellEntry.getDisaggregationMode();
			if (oFF.notNull(entryDisaggregationMode)) {
				return entryDisaggregationMode;
			}
		}
		return this.m_disaggMode;
	};
	oFF.QDataCell.prototype.setDisaggregationRefCellName = function(name) {
		this.m_disaggRefCellName = name;
	};
	oFF.QDataCell.prototype.getDisaggregationRefCellName = function() {
		var dataCellEntry = this.getDataCellEntry(false);
		var entryRefCellName;
		if (oFF.notNull(dataCellEntry)) {
			entryRefCellName = dataCellEntry.getDisaggregationRefCellName();
			if (oFF.XStringUtils.isNotNullAndNotEmpty(entryRefCellName)) {
				return entryRefCellName;
			}
		}
		return this.m_disaggRefCellName;
	};
	oFF.QDataCell.prototype.getDataCellEntry = function(createIfNotExisting) {
		var queryManager = this.getQueryManager();
		var resultSetContainer = queryManager.getActiveResultSetContainer();
		var dataEntries;
		if (oFF.isNull(resultSetContainer)
				|| resultSetContainer.getSyncState().isNotInSync()) {
			return null;
		}
		if (!resultSetContainer.hasDataEntryCollection()) {
			return null;
		}
		dataEntries = resultSetContainer.getDataEntryCollection();
		if (createIfNotExisting) {
			return dataEntries.getDataCellEntry(this.getName());
		}
		return dataEntries.getDataCellEntryIfExisting(this.getName());
	};
	oFF.QDataCell.prototype.setDisaggregationModeForDataEntry = function(mode) {
		var dataCellEntry = this.getDataCellEntry(true);
		if (oFF.notNull(dataCellEntry)) {
			dataCellEntry.setDisaggregationMode(mode);
		}
	};
	oFF.QDataCell.prototype.setDisaggregationRefCellForDataEntry = function(
			cell) {
		var dataCellEntry = this.getDataCellEntry(true);
		if (oFF.notNull(dataCellEntry)) {
			dataCellEntry.setDisaggregationRefCellName(oFF.isNull(cell) ? null
					: cell.getName());
		}
	};
	oFF.QDataCell.prototype.getDecimalPlaces = function() {
		return this.m_decimalPlaces;
	};
	oFF.QDataCell.prototype.setDecimalPlaces = function(places) {
		if (this.m_decimalPlaces !== places) {
			this.m_decimalPlaces = places;
			this.notifyNodeChanged();
		}
	};
	oFF.QDataCell.prototype.getScalingFactor = function() {
		return this.m_scalingFactor;
	};
	oFF.QDataCell.prototype.setScalingFactor = function(factor) {
		if (this.m_scalingFactor !== factor) {
			this.m_scalingFactor = factor;
			this.notifyNodeChanged();
		}
	};
	oFF.QDataCell.prototype.hasSignReversal = function() {
		return this.m_signReversal;
	};
	oFF.QDataCell.prototype.setSignReversal = function(reverse) {
		if (this.m_signReversal !== reverse) {
			this.m_signReversal = reverse;
			this.notifyNodeChanged();
		}
	};
	oFF.QDataCell.prototype.isEmphasized = function() {
		return this.m_emphasized;
	};
	oFF.QDataCell.prototype.setEmphasized = function(emphazised) {
		if (this.m_emphasized !== emphazised) {
			this.m_emphasized = emphazised;
			this.notifyNodeChanged();
		}
	};
	oFF.QDataCell.prototype.isCumulated = function() {
		return this.m_cumulation;
	};
	oFF.QDataCell.prototype.setCumulation = function(cumulate) {
		if (this.m_cumulation !== cumulate) {
			this.m_cumulation = cumulate;
			this.notifyNodeChanged();
		}
	};
	oFF.QDataCell.prototype.getBaseValueType = function() {
		return this.m_baseCellValueType;
	};
	oFF.QDataCell.prototype.addDimensionMemberReference = function(name) {
		if (oFF.isNull(this.m_memberName1)) {
			this.m_memberName1 = name;
		} else {
			if (oFF.isNull(this.m_memberName2)) {
				this.m_memberName2 = name;
			}
		}
	};
	oFF.QDataCell.prototype.hasMemberReference = function(strucMember) {
		if (oFF.XString.isEqual(this.m_memberName1, strucMember.getName())) {
			return true;
		}
		return oFF.XString.isEqual(this.m_memberName2, strucMember.getName());
	};
	oFF.QDataCell.prototype.getReferenceStructureElement1 = function() {
		return this.getReferenceStructureElement(this.m_memberName1);
	};
	oFF.QDataCell.prototype.getReferenceStructureElement2 = function() {
		return this.getReferenceStructureElement(this.m_memberName2);
	};
	oFF.QDataCell.prototype.getReferenceStructureElement = function(memberName) {
		var measureStructure;
		var member;
		var nonMeasureStructure;
		if (oFF.isNull(memberName)) {
			return null;
		}
		measureStructure = this.getQueryModel().getMeasureDimension();
		if (oFF.notNull(measureStructure)) {
			member = measureStructure.getStructureMember(memberName);
			if (oFF.notNull(member)) {
				return member;
			}
		}
		nonMeasureStructure = this.getQueryModel().getNonMeasureDimension();
		return oFF.isNull(nonMeasureStructure) ? null : nonMeasureStructure
				.getStructureMember(memberName);
	};
	oFF.QDimensionSelector = function() {
	};
	oFF.QDimensionSelector.prototype = new oFF.QModelComponent();
	oFF.QDimensionSelector.m_wildcard = "*";
	oFF.QDimensionSelector.create = function(dimension) {
		var dimensionSelector = new oFF.QDimensionSelector();
		dimensionSelector.setupDimensionSelector(dimension);
		return dimensionSelector;
	};
	oFF.QDimensionSelector.prototype.m_selectorPagingStart = 0;
	oFF.QDimensionSelector.prototype.m_selectorPagingEnd = 0;
	oFF.QDimensionSelector.prototype.m_selectorHierarchyNode = null;
	oFF.QDimensionSelector.prototype.m_selectorHierarchyNodeName = null;
	oFF.QDimensionSelector.prototype.m_selectorHierarchyForLinkedNode = null;
	oFF.QDimensionSelector.prototype.m_selectorHierarchyNavigations = null;
	oFF.QDimensionSelector.prototype.m_selectorHierarchyActive = false;
	oFF.QDimensionSelector.prototype.m_selectorRootLevel = 0;
	oFF.QDimensionSelector.prototype.m_selectorSorting = null;
	oFF.QDimensionSelector.prototype.m_dimension = null;
	oFF.QDimensionSelector.prototype.m_isGettingInterval = false;
	oFF.QDimensionSelector.prototype.m_parentFilter = null;
	oFF.QDimensionSelector.prototype.m_selectorFilterUsage = null;
	oFF.QDimensionSelector.prototype.m_useDisplayKey = false;
	oFF.QDimensionSelector.prototype.setupDimensionSelector = function(
			dimension) {
		this.setupModelComponent(dimension, dimension);
		this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
		this.m_selectorSorting = oFF.XSortDirection.DEFAULT_VALUE;
		this.m_selectorPagingEnd = -1;
		this.m_selectorPagingStart = 0;
		this.m_selectorFilterUsage = oFF.QueryFilterUsage.SELECTOR_FILTER;
		this.m_selectorRootLevel = 0;
		this.m_selectorHierarchyActive = false;
		this.m_useDisplayKey = false;
		this.m_isGettingInterval = false;
	};
	oFF.QDimensionSelector.prototype.releaseObject = function() {
		this.m_parentFilter = oFF.XObjectExt.release(this.m_parentFilter);
		this.m_selectorHierarchyNavigations = oFF.XObjectExt
				.release(this.m_selectorHierarchyNavigations);
		this.m_selectorSorting = null;
		this.m_selectorHierarchyNode = null;
		this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
		this.m_selectorHierarchyNodeName = null;
		this.m_selectorHierarchyForLinkedNode = oFF.XObjectExt
				.release(this.m_selectorHierarchyForLinkedNode);
		this.m_selectorFilterUsage = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QDimensionSelector.prototype.createFilterOperation = function(field,
			lowValue, highValue, comparisonOperator) {
		var newFilterOperation = oFF.QFactory.newFilterOperationWithOperator(
				this.getDimension(), field, comparisonOperator);
		newFilterOperation.getLow().setValue(lowValue);
		if (oFF.notNull(highValue)) {
			newFilterOperation.getHigh().setValue(highValue);
		}
		return newFilterOperation;
	};
	oFF.QDimensionSelector.prototype.convertCartesianToComplex = function(
			cartesianProduct) {
		var newFilterOr = oFF.QFactory.newFilterOr(this.getSelectorContainer());
		newFilterOr.add(cartesianProduct);
		this.getSelectorContainer().setComplexRoot(newFilterOr);
	};
	oFF.QDimensionSelector.prototype.addComplex = function(field, lowValue,
			highValue, comparisonOperator) {
		var complex = this.getComplexRoot();
		var newFilterOperation = this.createFilterOperation(field, lowValue,
				highValue, comparisonOperator);
		if (this.m_selectorHierarchyActive) {
			newFilterOperation.setHierarchyName(this.getDimension()
					.getHierarchyName());
		}
		complex.add(newFilterOperation);
		return newFilterOperation;
	};
	oFF.QDimensionSelector.prototype.assertValueType2 = function(
			fieldValueType, valueValueType, isHigh) {
		if (fieldValueType === valueValueType) {
			return;
		}
		if (fieldValueType === oFF.XValueType.DOUBLE
				|| fieldValueType === oFF.XValueType.DECIMAL_FLOAT
				&& valueValueType === oFF.XValueType.DOUBLE
				|| valueValueType === oFF.XValueType.DECIMAL_FLOAT) {
			return;
		}
		if (isHigh) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate2(
									"Value type of highValue and field don't match. Expected: ",
									fieldValueType.getName()));
		}
		throw oFF.XException
				.createIllegalArgumentException(oFF.XStringUtils
						.concatenate2(
								"Value type of lowValue and field don't match. Expected: ",
								fieldValueType.getName()));
	};
	oFF.QDimensionSelector.prototype.assertComparisonOperator = function(
			comparisonOperator, field) {
		var dimension = this.getDimension();
		var capabilitiesByField;
		if (dimension.isMeasureStructure()) {
			if (comparisonOperator === oFF.ComparisonOperator.FUZZY
					|| comparisonOperator === oFF.ComparisonOperator.MATCH
					|| comparisonOperator === oFF.ComparisonOperator.NOT_MATCH
					|| comparisonOperator === oFF.ComparisonOperator.SEARCH
					|| comparisonOperator === oFF.ComparisonOperator.UNDEFINED
					|| comparisonOperator === oFF.ComparisonOperator.IN) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate2(
										comparisonOperator.getName(),
										" operator is not supported for ValueHelp if the dimension is a measure structure"));
			}
		} else {
			capabilitiesByField = dimension.getFilterCapabilities()
					.getFilterCapabilitiesByField(field);
			if (oFF.notNull(capabilitiesByField)
					&& !capabilitiesByField.getSupportedComparisonOperators(
							oFF.SetSign.INCLUDING).contains(comparisonOperator)) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate3(
										comparisonOperator.getName(),
										" operator is not supported for the field ",
										field.getName()));
			}
		}
	};
	oFF.QDimensionSelector.prototype.addFilterByField = function(field,
			lowValue, highValue, comparisonOperator, enforceDynamicContainer) {
		var fieldValueType;
		var lowValueType;
		var highValueType;
		var complexSelectionRoot;
		var filterContainer;
		var filterUsage;
		var dim;
		var qm;
		var cartesianProduct;
		var memberSelection;
		var newFilterOr;
		var element;
		if (oFF.isNull(field)) {
			return null;
		}
		this.assertComparisonOperator(comparisonOperator, field);
		fieldValueType = field.getValueType();
		lowValueType = lowValue.getValueType();
		this.assertValueType2(fieldValueType, lowValueType, false);
		if (oFF.notNull(highValue)) {
			highValueType = highValue.getValueType();
			this.assertValueType2(fieldValueType, highValueType, true);
		}
		complexSelectionRoot = this.getComplexRoot();
		if (oFF.notNull(complexSelectionRoot)) {
			return this.addComplex(field, lowValue, highValue,
					comparisonOperator);
		}
		filterUsage = this.getSelectorFilterUsage();
		dim = this.getDimension();
		qm = dim.getQueryModel();
		if (oFF.notNull(qm)
				&& enforceDynamicContainer
				&& (filterUsage === oFF.QueryFilterUsage.QUERY_FILTER || filterUsage === oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE)) {
			filterContainer = qm.getFilter().getDynamicFilter();
		} else {
			filterContainer = this.getSelectorContainer();
		}
		cartesianProduct = filterContainer.getCartesianProductWithDefault();
		memberSelection = cartesianProduct.getCartesianList(dim);
		if (oFF.isNull(memberSelection)) {
			memberSelection = cartesianProduct.getCartesianListByField(field);
		}
		if (memberSelection.isEmpty()) {
			memberSelection.setField(field);
		} else {
			if (memberSelection.getField() !== field) {
				if (filterUsage === oFF.QueryFilterUsage.SELECTOR_FILTER
						|| filterUsage === oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE) {
					newFilterOr = oFF.QFactory.newFilterOr(filterContainer);
					newFilterOr.add(memberSelection);
					filterContainer.setSupportsComplexFilter(true);
					filterContainer.setComplexRoot(newFilterOr);
					return this.addComplex(field, lowValue, highValue,
							comparisonOperator);
				}
				this.convertCartesianToComplex(cartesianProduct);
				return this.addComplex(field, lowValue, highValue,
						comparisonOperator);
			}
		}
		element = memberSelection.addNewCartesianElement();
		element.configureDoubleParameterExpression(lowValue, highValue,
				comparisonOperator);
		if (this.m_selectorHierarchyActive) {
			memberSelection.setHierarchyName(dim.getHierarchyName());
		}
		return memberSelection;
	};
	oFF.QDimensionSelector.prototype._getFilterField = function(isKeyField) {
		if (isKeyField) {
			return this.m_useDisplayKey ? this.getSelectorDisplayKeyField()
					: this.getSelectorKeyField();
		}
		return this.getSelectorTextField();
	};
	oFF.QDimensionSelector.prototype.getSelectorDisplayKeyField = function() {
		if (this.m_selectorHierarchyActive) {
			return this.getDimension().getHierarchyDisplayKeyField();
		}
		return this.getDimension().getFlatDisplayKeyField();
	};
	oFF.QDimensionSelector.prototype.getSelectorKeyField = function() {
		if (this.m_selectorHierarchyActive) {
			return this.getDimension().getHierarchyKeyField();
		}
		return this.getDimension().getFlatKeyField();
	};
	oFF.QDimensionSelector.prototype.getSelectorTextField = function() {
		var dim = this.getDimension();
		if (dim.isSelectorHierarchyActive()) {
			return dim.getHierarchyTextField();
		}
		return dim.getFlatTextField();
	};
	oFF.QDimensionSelector.prototype.createXValue = function(value, field) {
		var keyType;
		if (oFF.isNull(field)) {
			return null;
		}
		keyType = field.getValueType();
		if (keyType === oFF.XValueType.STRING) {
			return oFF.XStringValue.create(value);
		}
		if (keyType === oFF.XValueType.LONG) {
			return oFF.XLongValue.create(oFF.XLong.convertFromString(value));
		}
		if (keyType === oFF.XValueType.INTEGER) {
			return oFF.XIntegerValue.create(oFF.XInteger
					.convertFromStringWithRadix(value, 10));
		}
		if (keyType === oFF.XValueType.DOUBLE
				|| keyType === oFF.XValueType.DECIMAL_FLOAT) {
			return oFF.XDoubleValue
					.create(oFF.XDouble.convertFromString(value));
		}
		if (keyType === oFF.XValueType.DATE) {
			return oFF.XDate.createDateFromString(value, null);
		}
		if (keyType === oFF.XValueType.TIME) {
			return oFF.XTime.createTimeFromString(value, null);
		}
		if (keyType === oFF.XValueType.DATE_TIME) {
			return oFF.XDateTime.createDateTimeFromString(value, null);
		}
		if (keyType === oFF.XValueType.TIMESPAN) {
			return oFF.XTimeSpan.create(oFF.XLong.convertFromString(value));
		}
		throw oFF.XException.createIllegalStateException(oFF.XStringUtils
				.concatenate2("Value type not supported: ", keyType.getName()));
	};
	oFF.QDimensionSelector.prototype.setSelectorOrder = function(direction) {
		this.m_selectorSorting = direction;
	};
	oFF.QDimensionSelector.prototype.getSelectorOrder = function() {
		return this.m_selectorSorting;
	};
	oFF.QDimensionSelector.prototype.setSelectorPagingDefault = function() {
		this.m_selectorPagingStart = 0;
		this.m_selectorPagingEnd = -1;
	};
	oFF.QDimensionSelector.prototype.setSelectorPaging = function(start, end) {
		this.m_selectorPagingEnd = end;
		this.m_selectorPagingStart = start;
	};
	oFF.QDimensionSelector.prototype.getSelectorPagingStart = function() {
		return this.m_selectorPagingStart;
	};
	oFF.QDimensionSelector.prototype.setSelectorPagingStart = function(start) {
		this.m_selectorPagingStart = start;
	};
	oFF.QDimensionSelector.prototype.getSelectorPagingEnd = function() {
		return this.m_selectorPagingEnd;
	};
	oFF.QDimensionSelector.prototype.setSelectorPagingEnd = function(end) {
		this.m_selectorPagingEnd = end;
	};
	oFF.QDimensionSelector.prototype.getSelectorFilterUsage = function() {
		return this.m_selectorFilterUsage;
	};
	oFF.QDimensionSelector.prototype.setSelectorFilterUsage = function(
			queryFilterUsage) {
		this.m_selectorFilterUsage = queryFilterUsage;
	};
	oFF.QDimensionSelector.prototype.getDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
	};
	oFF.QDimensionSelector.prototype._getSearchOperator = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)
				|| queryModel.getSystemType().isTypeOf(oFF.SystemType.ABAP)) {
			return oFF.ComparisonOperator.MATCH;
		}
		return oFF.ComparisonOperator.LIKE;
	};
	oFF.QDimensionSelector.prototype._getKeyFieldBasedOnCompounding = function(
			comparisonOperator) {
		var dimension = this.getDimension();
		if (dimension.isCompound()
				&& comparisonOperator === oFF.ComparisonOperator.MATCH) {
			return dimension
					.getFieldByPresentationType(oFF.PresentationType.KEY_NOT_COMPOUND);
		}
		return this._getFilterField(true);
	};
	oFF.QDimensionSelector.prototype.addSearchForKey = function(searchValue) {
		var comparisonOperator = this._getSearchOperator();
		var filterField = this
				._getKeyFieldBasedOnCompounding(comparisonOperator);
		return this.addFilterByField(filterField, this.createXValue(
				searchValue, filterField), null, comparisonOperator, false);
	};
	oFF.QDimensionSelector.prototype.addSelectorFilterForKey = function(
			filterValue, comparisonOperator) {
		var filterField = this
				._getKeyFieldBasedOnCompounding(comparisonOperator);
		return this.addFilterByField(filterField, this.createXValue(
				filterValue, filterField), null, comparisonOperator, false);
	};
	oFF.QDimensionSelector.prototype.addSelectorFilterIntervalForKey = function(
			lowValue, highValue, comparisonOperator) {
		var filterField = this
				._getKeyFieldBasedOnCompounding(comparisonOperator);
		return this.addFilterByField(filterField, this.createXValue(lowValue,
				filterField), this.createXValue(highValue, filterField),
				comparisonOperator, false);
	};
	oFF.QDimensionSelector.prototype.addSearchForKeyUsingDynamicFilter = function(
			searchValue) {
		var comparisonOperator;
		var filterField;
		this
				.setSelectorFilterUsage(oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE);
		comparisonOperator = this._getSearchOperator();
		filterField = this._getKeyFieldBasedOnCompounding(comparisonOperator);
		return this.addFilterByField(filterField, this.createXValue(
				searchValue, filterField), null, comparisonOperator, true);
	};
	oFF.QDimensionSelector.prototype.addSearchForTextUsingDynamicFilter = function(
			searchValue) {
		var textField;
		this
				.setSelectorFilterUsage(oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE);
		textField = this._getFilterField(false);
		return this.addFilterByField(textField, this.createXValue(searchValue,
				textField), null, this._getSearchOperator(), true);
	};
	oFF.QDimensionSelector.prototype.addSearchForText = function(searchValue) {
		return this.addSelectorFilterForText(searchValue, this
				._getSearchOperator());
	};
	oFF.QDimensionSelector.prototype.addSelectorFilterForText = function(
			filterValue, comparisonOperator) {
		var filterField = this._getFilterField(false);
		var isValidFilterForBwF4 = this.isValidFilterForBwF4(filterField, this
				.getSelectorContainer());
		if (oFF.isNull(filterField) || !filterField.isFilterable()
				&& !isValidFilterForBwF4) {
			return null;
		}
		return this.addFilterByField(filterField, this.createXValue(
				filterValue, filterField), null, comparisonOperator, false);
	};
	oFF.QDimensionSelector.prototype.isValidFilterForBwF4 = function(field,
			filterExpression) {
		var isSupported;
		var queryModel;
		var f4Container;
		var dimension;
		var isSelectorUsage;
		if (oFF.isNull(field)) {
			return false;
		}
		isSupported = false;
		queryModel = field.getQueryModel();
		if (oFF.notNull(queryModel)) {
			if (!queryModel.getSystemType().isTypeOf(oFF.SystemType.ABAP)) {
				return false;
			}
			isSupported = queryModel.supportsF4FilterForTextField();
		}
		f4Container = oFF.notNull(filterExpression)
				&& oFF.XString.isEqual(filterExpression.getName(),
						oFF.QFilter.VALUEHELP_FILTER_CONTAINER);
		dimension = field.getDimension();
		isSelectorUsage = oFF.notNull(dimension)
				&& dimension.getSelectorFilterUsage() === oFF.QueryFilterUsage.SELECTOR_FILTER;
		return isSupported
				&& f4Container
				&& isSelectorUsage
				&& field.getPresentationType().isTypeOf(
						oFF.PresentationType.ABSTRACT_TEXT);
	};
	oFF.QDimensionSelector.prototype.addSelectorFilter = function(filterValue,
			field, comparisonOperator) {
		return this.addFilterByField(field, filterValue, null,
				comparisonOperator, false);
	};
	oFF.QDimensionSelector.prototype.addSelectorFilterInterval = function(
			lowValue, highValue, field, comparisonOperator) {
		return this.addFilterByField(field, lowValue, highValue,
				comparisonOperator, false);
	};
	oFF.QDimensionSelector.prototype.clearSelectorFilter = function() {
		var complexRoot = this.getComplexRoot();
		var cartesianProduct;
		if (oFF.isNull(complexRoot)) {
			cartesianProduct = this.getCartesian();
			if (oFF.notNull(cartesianProduct)) {
				cartesianProduct.clear();
			}
		} else {
			complexRoot.clear();
		}
	};
	oFF.QDimensionSelector.prototype.clearSelectorFilterByDimension = function(
			dimension) {
		var cartesianProduct;
		var memberFilter;
		if (oFF.isNull(dimension)) {
			return;
		}
		cartesianProduct = this.getCartesian();
		if (oFF.notNull(cartesianProduct)) {
			memberFilter = cartesianProduct.getCartesianList(dimension);
			if (oFF.notNull(memberFilter)) {
				memberFilter.clear();
			}
		}
	};
	oFF.QDimensionSelector.prototype.getSelectorContainer = function() {
		var dim = this.getDimension();
		var queryModel = dim.getQueryModel();
		var planningSequence;
		if (oFF.isNull(queryModel)) {
			planningSequence = dim.getContext();
			return planningSequence.getSelector().getValuehelpFilter();
		}
		if (oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE === this
				.getSelectorFilterUsage()) {
			return queryModel.getFilter().getDynamicFilter();
		}
		return queryModel.getFilter().getValuehelpFilter();
	};
	oFF.QDimensionSelector.prototype.getComplexRoot = function() {
		var selectorContainer = this.getSelectorContainer();
		return oFF.isNull(selectorContainer) ? null : selectorContainer
				.getComplexRoot();
	};
	oFF.QDimensionSelector.prototype.getCartesian = function() {
		var selectorContainer = this.getSelectorContainer();
		return oFF.isNull(selectorContainer) ? null : selectorContainer
				.getCartesianProduct();
	};
	oFF.QDimensionSelector.prototype.removeFilterElement = function(filter) {
		var complexRoot;
		var cartesianProduct;
		if (oFF.isNull(filter)) {
			return;
		}
		complexRoot = this.getComplexRoot();
		if (oFF.isNull(complexRoot)) {
			cartesianProduct = this.getCartesian();
			if (oFF.notNull(cartesianProduct)) {
				cartesianProduct.removeElement(filter);
			}
		} else {
			complexRoot.removeElement(filter);
		}
	};
	oFF.QDimensionSelector.prototype.removeNavigationsWithDisplayLevelGreaterNewParent = function(
			newParentDisplayLevel) {
		var idx = 0;
		var node;
		while (idx < this.m_selectorHierarchyNavigations.size()) {
			node = this.m_selectorHierarchyNavigations.get(idx);
			if (node.getDisplayLevel() >= newParentDisplayLevel) {
				this.m_selectorHierarchyNavigations.removeElement(node);
			} else {
				idx++;
			}
		}
	};
	oFF.QDimensionSelector.prototype.setSelectorHierarchyNode = function(parent) {
		var filterValue;
		if (oFF.isNull(this.m_selectorHierarchyNavigations)) {
			this.m_selectorHierarchyNavigations = oFF.XList.create();
		}
		this.m_selectorHierarchyNode = parent;
		if (oFF.isNull(parent)) {
			this.m_selectorHierarchyNavigations.clear();
			this.setSelectorHierarchyNodeByName(null);
		} else {
			this.removeNavigationsWithDisplayLevelGreaterNewParent(parent
					.getDisplayLevel());
			this.m_selectorHierarchyNavigations.add(parent);
			if (this.isSelectorFilteringOnDisplayKey()) {
				filterValue = parent.getDimensionMember().getFieldValue(
						this.getSelectorDisplayKeyField()).getString();
			} else {
				filterValue = parent.getName();
			}
			this.setSelectorHierarchyNodeByName(filterValue);
		}
	};
	oFF.QDimensionSelector.prototype.getSelectorHierarchyNode = function() {
		return this.m_selectorHierarchyNode;
	};
	oFF.QDimensionSelector.prototype.clearSelectorHierarchyNode = function() {
		this.setSelectorHierarchyNode(null);
		this.removeFilterElement(this.m_parentFilter);
	};
	oFF.QDimensionSelector.prototype.setSelectorInitialDrillLevel = function(
			relativeLevelCount) {
		this.m_selectorRootLevel = relativeLevelCount;
	};
	oFF.QDimensionSelector.prototype.getSelectorRootLevel = function() {
		return this.m_selectorRootLevel;
	};
	oFF.QDimensionSelector.prototype.setSelectorHierarchyActive = function(
			isActive) {
		this.m_selectorHierarchyActive = isActive;
	};
	oFF.QDimensionSelector.prototype.isSelectorHierarchyActive = function() {
		return this.m_selectorHierarchyActive;
	};
	oFF.QDimensionSelector.prototype.setSelectorFilterOnDisplayKey = function(
			isUsingDisplayKey) {
		this.m_useDisplayKey = isUsingDisplayKey;
	};
	oFF.QDimensionSelector.prototype.isSelectorFilteringOnDisplayKey = function() {
		return this.m_useDisplayKey;
	};
	oFF.QDimensionSelector.prototype.setSelectorGettingInterval = function(
			doGetInterval) {
		this.m_isGettingInterval = doGetInterval;
		return this.isSelectorGettingInterval();
	};
	oFF.QDimensionSelector.prototype.isSelectorGettingInterval = function() {
		return this.m_isGettingInterval && !this.m_selectorHierarchyActive;
	};
	oFF.QDimensionSelector.prototype.setSelectorHierarchyNodeByName = function(
			parent) {
		this.removeFilterElement(this.m_parentFilter);
		this.m_selectorHierarchyNodeName = parent;
		if (oFF.notNull(parent)) {
			this.m_parentFilter = this.addSelectorFilterForKey(parent,
					oFF.ComparisonOperator.EQUAL);
		}
	};
	oFF.QDimensionSelector.prototype.getSelectorHierarchyNodeName = function() {
		return this.m_selectorHierarchyNodeName;
	};
	oFF.QDimensionSelector.prototype.setSelectorHierarchyForLinkedNode = function(
			nodeSid, nodeName) {
		this.removeFilterElement(this.m_parentFilter);
		if (oFF.isNull(this.m_selectorHierarchyForLinkedNode)) {
			this.m_selectorHierarchyForLinkedNode = oFF.XKeyValuePair.create();
		}
		this.m_selectorHierarchyForLinkedNode.setKeyValue(oFF.XStringValue
				.create(nodeSid), oFF.XStringValue.create(nodeName));
		if (oFF.notNull(nodeName)) {
			this.m_parentFilter = this.addSelectorFilterForKey(nodeName,
					oFF.ComparisonOperator.EQUAL);
		}
	};
	oFF.QDimensionSelector.prototype.getSelectorHierarchyForLinkedNode = function() {
		return this.m_selectorHierarchyForLinkedNode;
	};
	oFF.QDimensionSelector.prototype.processIsNodeChildOfParent = function(
			nodeName, parentName, syncType, listener, customIdentifier) {
		var dim = this.getDimension();
		var pathField;
		var selectorFields;
		var isPathFieldContained;
		var pagingStartCache;
		var pagingEndCache;
		var cartesianDimensionList;
		var childFilter;
		var processMemberHelp;
		var data;
		var childNode;
		var nodeIterator;
		var next;
		var fieldValue;
		var stringValue;
		var parser;
		var hierarchyPathStructure;
		var uniqueHierarchyPath;
		var idx;
		if (!dim.getQueryModel().supportsUniqueHierarchyPath()) {
			return false;
		}
		if (oFF.XStringUtils.isNullOrEmpty(nodeName)
				|| oFF.XStringUtils.isNullOrEmpty(parentName)) {
			return false;
		}
		if (!this.m_selectorHierarchyActive) {
			return false;
		}
		if (oFF.XString.isEqual(nodeName, parentName)) {
			return false;
		}
		pathField = dim.getHierarchyPathField();
		if (oFF.isNull(pathField)) {
			return false;
		}
		selectorFields = dim.getSelectorFields();
		isPathFieldContained = selectorFields.contains(pathField);
		if (!isPathFieldContained) {
			selectorFields.add(pathField);
		}
		pagingStartCache = this.m_selectorPagingStart;
		pagingEndCache = this.m_selectorPagingEnd;
		this.setSelectorPagingDefault();
		cartesianDimensionList = this.getSelectorContainer()
				.getCartesianProductWithDefault().getCartesianListWithDefault(
						dim);
		childFilter = cartesianDimensionList.addNewCartesianElement();
		childFilter.setField(this.getSelectorKeyField());
		childFilter.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
		childFilter.setLowString(nodeName);
		cartesianDimensionList.setHierarchyName(dim.getHierarchyName());
		processMemberHelp = dim.processValueHelp(syncType,
				oFF.ValueHelpListenerDecorator.create(listener),
				customIdentifier);
		this.m_selectorPagingStart = pagingStartCache;
		this.m_selectorPagingEnd = pagingEndCache;
		cartesianDimensionList.removeElement(childFilter);
		oFF.MessageUtil.checkNoError(processMemberHelp);
		data = processMemberHelp.getData();
		if (data.isEmpty()) {
			return false;
		}
		childNode = null;
		nodeIterator = data.getIterator();
		while (nodeIterator.hasNext()) {
			next = nodeIterator.next();
			if (oFF.XString.isEqual(next.getName(), nodeName)) {
				childNode = next;
				break;
			}
		}
		oFF.XObjectExt.release(nodeIterator);
		if (oFF.isNull(childNode)) {
			return false;
		}
		fieldValue = childNode.getDimensionMember().getFieldValue(pathField);
		stringValue = fieldValue.getString();
		parser = oFF.JsonParserFactory.newInstance();
		hierarchyPathStructure = parser.parse(stringValue);
		oFF.XObjectExt.release(parser);
		uniqueHierarchyPath = hierarchyPathStructure.getListByKey("UniqueName");
		for (idx = 0; idx < uniqueHierarchyPath.size(); idx++) {
			if (oFF.XString.isEqual(uniqueHierarchyPath.getStringAt(idx),
					parentName)) {
				return true;
			}
		}
		return false;
	};
	oFF.QDimensionSelector.prototype.processMeasureHelp = function() {
		var dim = this.getDimension();
		var allStructureMembers = dim.getAllStructureMembers();
		var measureList = oFF.XList.create();
		var messageManager = oFF.MessageManager.createMessageManagerExt(this
				.getSession());
		var selectionContainer;
		var selectorFilterUsage = this.getSelectorFilterUsage();
		var cartesianList;
		var cartesianProduct;
		var measureSize;
		var measureIdx;
		var measure;
		var end;
		var start;
		var selectorOrder;
		if (selectorFilterUsage === oFF.QueryFilterUsage.QUERY_FILTER) {
			selectionContainer = dim.getQueryModel().getFilter()
					.getDynamicFilter();
		} else {
			if (selectorFilterUsage === oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE) {
				selectionContainer = dim.getQueryModel().getFilter()
						.getEffectiveFilter();
			} else {
				if (selectorFilterUsage === oFF.QueryFilterUsage.SELECTOR_FILTER) {
					selectionContainer = this.getSelectorContainer();
				} else {
					messageManager
							.addWarning(oFF.ErrorCodes.INVALID_OPERATOR,
									"Filter on other dimensions not supported for measurehelp.");
					selectionContainer = null;
				}
			}
		}
		cartesianList = null;
		if (oFF.notNull(selectionContainer)
				&& selectionContainer.isCartesianProduct()) {
			cartesianProduct = selectionContainer.getCartesianProduct();
			if (oFF.notNull(cartesianProduct)) {
				cartesianList = cartesianProduct
						.getCartesianListByDimensionName(dim.getName());
			}
		} else {
			messageManager.addWarning(oFF.ErrorCodes.INVALID_OPERATOR,
					"Complex filters are ignored for measurehelp.");
		}
		measureSize = allStructureMembers.size();
		for (measureIdx = 0; measureIdx < measureSize; measureIdx++) {
			measure = allStructureMembers.get(measureIdx);
			if (this.measureMatchesFilter(measure, cartesianList)) {
				measureList.add(oFF.QValueHelpNode2.createValueHelpNode(measure
						.getName(), measure, null, 0, -1, -1));
			}
		}
		end = this.getSelectorPagingEnd();
		if (end < 0 || end > measureSize) {
			end = measureSize;
		}
		while (end < measureList.size()) {
			measureList.removeAt(measureList.size() - 1);
		}
		start = this.getSelectorPagingStart();
		while (start > 0) {
			measureList.removeAt(0);
			start--;
		}
		selectorOrder = this.getSelectorOrder();
		if (selectorOrder === oFF.XSortDirection.ASCENDING
				|| selectorOrder === oFF.XSortDirection.DESCENDING) {
			measureList.sortByDirection(selectorOrder);
		}
		return oFF.ExtResult.create(measureList, messageManager);
	};
	oFF.QDimensionSelector.prototype.measureMatchesLike = function(op,
			isIncluding, text) {
		var searchPattern = op.getLow().getString();
		var startsWithWildcard = oFF.XString.startsWith(searchPattern,
				oFF.QDimensionSelector.m_wildcard);
		var endsWithWildcard = oFF.XString.endsWith(searchPattern,
				oFF.QDimensionSelector.m_wildcard);
		var start = 0;
		var end;
		var measureNameContained;
		if (startsWithWildcard) {
			start = 1;
		}
		end = oFF.XString.size(searchPattern);
		if (endsWithWildcard) {
			end = oFF.XString.size(searchPattern) - 1;
		}
		if (startsWithWildcard || endsWithWildcard) {
			searchPattern = oFF.XString.substring(searchPattern, start, end);
		}
		measureNameContained = oFF.XString.containsString(text, searchPattern);
		if (measureNameContained && isIncluding) {
			return true;
		}
		return !measureNameContained && !isIncluding;
	};
	oFF.QDimensionSelector.prototype.measureMatchesFilter = function(measure,
			cartesianList) {
		var filterIdx;
		var op;
		var comparisonOperator;
		var text;
		var measureNameCompare;
		var isIncluding;
		var measureNameCompareBetween;
		var measureNameCompareBetweenExcluding;
		if (oFF.isNull(cartesianList)) {
			return true;
		}
		for (filterIdx = 0; filterIdx < cartesianList.size(); filterIdx++) {
			op = cartesianList.getOp(filterIdx);
			comparisonOperator = op.getComparisonOperator();
			if (oFF.XString.isEqual(op.getField().getName(), this
					.getSelectorKeyField().getName())) {
				text = measure.getName();
			} else {
				text = measure.getText();
			}
			measureNameCompare = oFF.XString.compare(text, op.getLow()
					.getString());
			isIncluding = op.getSetSign() === oFF.SetSign.INCLUDING;
			if (comparisonOperator === oFF.ComparisonOperator.EQUAL) {
				if (measureNameCompare === 0 && isIncluding) {
					return true;
				}
				if (measureNameCompare !== 0 && !isIncluding) {
					return true;
				}
			} else {
				if (comparisonOperator === oFF.ComparisonOperator.NOT_EQUAL) {
					if (measureNameCompare !== 0 && isIncluding) {
						return true;
					}
					if (measureNameCompare === 0 && !isIncluding) {
						return true;
					}
				} else {
					if (comparisonOperator === oFF.ComparisonOperator.LIKE) {
						return this.measureMatchesLike(op, isIncluding, text);
					} else {
						if (comparisonOperator === oFF.ComparisonOperator.LESS_THAN) {
							if (measureNameCompare < 0 && isIncluding) {
								return true;
							}
							if (measureNameCompare >= 0 && !isIncluding) {
								return true;
							}
						} else {
							if (comparisonOperator === oFF.ComparisonOperator.LESS_EQUAL) {
								if (measureNameCompare <= 0 && isIncluding) {
									return true;
								}
								if (measureNameCompare > 0 && !isIncluding) {
									return true;
								}
							} else {
								if (comparisonOperator === oFF.ComparisonOperator.GREATER_THAN) {
									if (measureNameCompare > 0 && isIncluding) {
										return true;
									}
									if (measureNameCompare <= 0 && !isIncluding) {
										return true;
									}
								} else {
									if (comparisonOperator === oFF.ComparisonOperator.GREATER_EQUAL) {
										if (measureNameCompare >= 0
												&& isIncluding) {
											return true;
										}
										if (measureNameCompare < 0
												&& !isIncluding) {
											return true;
										}
									} else {
										if (comparisonOperator === oFF.ComparisonOperator.BETWEEN) {
											measureNameCompareBetween = oFF.XString
													.compare(text, op.getHigh()
															.getString());
											if (measureNameCompare >= 0
													&& measureNameCompareBetween <= 0
													&& isIncluding) {
												return true;
											}
											if ((measureNameCompare < 0 || measureNameCompareBetween > 0)
													&& !isIncluding) {
												return true;
											}
										} else {
											if (comparisonOperator === oFF.ComparisonOperator.BETWEEN_EXCLUDING) {
												measureNameCompareBetweenExcluding = oFF.XString
														.compare(text, op
																.getHigh()
																.getString());
												if (measureNameCompare > 0
														&& measureNameCompareBetweenExcluding < 0
														&& isIncluding) {
													return true;
												}
												if ((measureNameCompare <= 0 || measureNameCompareBetweenExcluding >= 0)
														&& !isIncluding) {
													return true;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		return false;
	};
	oFF.QDimensionSelector.prototype.setSelectorComplexSelectionRoot = function(
			complexSelection) {
		this.getSelectorContainer().setComplexRoot(complexSelection);
	};
	oFF.QDimensionSelector.prototype.getNavigationNodes = function() {
		return this.m_selectorHierarchyNavigations;
	};
	oFF.QDimensionSelector.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherSel = other;
		this.m_selectorHierarchyActive = otherSel.isSelectorHierarchyActive();
	};
	oFF.QSelectValue = function() {
	};
	oFF.QSelectValue.prototype = new oFF.QModelComponent();
	oFF.QSelectValue._createDimensionElement2 = function(context, selectField,
			hierarchyName, value) {
		var newObject = new oFF.QSelectValue();
		newObject
				.setupSelectElement(context, selectField, hierarchyName, value);
		return newObject;
	};
	oFF.QSelectValue.createDimensionElementCopy = function(context,
			dimensionElement) {
		var newObject = new oFF.QSelectValue();
		var selectField = dimensionElement.getSelectField();
		var selectHierarchyName = dimensionElement.getSelectHierarchyName();
		var selectValue = dimensionElement.getSelectValue();
		newObject.setupSelectElement(context, selectField, selectHierarchyName,
				selectValue);
		return newObject;
	};
	oFF.QSelectValue.prototype.m_selectValue = null;
	oFF.QSelectValue.prototype.m_selectField = null;
	oFF.QSelectValue.prototype.m_selectHierarchyName = null;
	oFF.QSelectValue.prototype.setupSelectElement = function(context,
			selectField, hierarchyName, value) {
		this.setupModelComponent(context, null);
		this.m_selectField = oFF.XWeakReferenceUtil.getWeakRef(selectField);
		this.m_selectHierarchyName = hierarchyName;
		this.m_selectValue = value;
	};
	oFF.QSelectValue.prototype.releaseObject = function() {
		this.m_selectField = oFF.XObjectExt.release(this.m_selectField);
		this.m_selectHierarchyName = null;
		this.m_selectValue = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QSelectValue.prototype.getSelectValue = function() {
		return this.m_selectValue;
	};
	oFF.QSelectValue.prototype.getSelectField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_selectField);
	};
	oFF.QSelectValue.prototype.getSelectHierarchyName = function() {
		return this.m_selectHierarchyName;
	};
	oFF.QSelectValue.prototype.getDimension = function() {
		return this.getSelectField().getDimension();
	};
	oFF.QSelectValue.prototype.getType = function() {
		return this.getMemberType();
	};
	oFF.QSelectValue.prototype.getMemberType = function() {
		return oFF.MemberType.SELECT_VALUE;
	};
	oFF.QSelectValue.prototype.getSelectableElement = function() {
		return this;
	};
	oFF.QSelectValue.prototype.isNode = function() {
		return this.getMemberType().isNode();
	};
	oFF.QDrillManager = function() {
	};
	oFF.QDrillManager.prototype = new oFF.QModelComponent();
	oFF.QDrillManager.create = function(context, queryModel) {
		var object = new oFF.QDrillManager();
		object.setupDrillManager(context, queryModel);
		return object;
	};
	oFF.QDrillManager.prototype.m_drillOperations = null;
	oFF.QDrillManager.prototype.m_drillOperationsMap = null;
	oFF.QDrillManager.prototype.m_drillCounter = 0;
	oFF.QDrillManager.prototype.m_supportsDrillCounter = false;
	oFF.QDrillManager.prototype.m_validatesContextFree = false;
	oFF.QDrillManager.prototype.copyDrillManager = function(origin) {
		var size;
		var queryModel;
		var i;
		var origDrillOp;
		var cloneDrillOp;
		var targetDimension;
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		size = origin.m_drillOperations.size();
		queryModel = this.getQueryModel();
		for (i = 0; i < size; i++) {
			origDrillOp = origin.m_drillOperations.get(i);
			cloneDrillOp = oFF.QDrillOperation.create(this.getContext(), this,
					origDrillOp.getType(), null, origDrillOp.getDrillState(),
					origDrillOp.getRelativeLevelCount(), origDrillOp
							.getDrillPath(), origDrillOp.getModCounter());
			targetDimension = origDrillOp.getTargetDimension();
			if (oFF.notNull(targetDimension)) {
				cloneDrillOp.setTargetDimension(queryModel
						.getDimensionByNameFromExistingMetadata(targetDimension
								.getName()));
			}
			this.addOperationInternal(cloneDrillOp);
		}
		this.m_drillCounter = origin.m_drillCounter;
		this.m_supportsDrillCounter = origin.m_supportsDrillCounter;
		this.m_validatesContextFree = origin.m_validatesContextFree;
	};
	oFF.QDrillManager.prototype.setupDrillManager = function(context,
			queryModel) {
		this.setupModelComponent(context, queryModel);
		this.m_drillOperations = oFF.QModelComponentList
				.createModelComponentList(context, this, true,
						"Drill Operations");
		this.m_drillOperationsMap = oFF.XHashMapByString.create();
		this.m_validatesContextFree = true;
	};
	oFF.QDrillManager.prototype.releaseObject = function() {
		this.m_drillOperations = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_drillOperations);
		this.m_drillOperationsMap = oFF.XObjectExt
				.release(this.m_drillOperationsMap);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QDrillManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.DRILL_MANAGER;
	};
	oFF.QDrillManager.prototype.getDrillOperations = function() {
		return this.m_drillOperations;
	};
	oFF.QDrillManager.prototype.setDrillState = function(drillPath, drillState) {
		var newOperation = oFF.QDrillOperation.create(this.getContext(), this,
				oFF.DrillOperationType.CONTEXT, null, drillState, 1, drillPath,
				this.m_drillCounter);
		return this.addOperationInternal(newOperation);
	};
	oFF.QDrillManager.prototype.setDrillStateElement = function(drillElement,
			drillState) {
		var drillPath = oFF.XList.create();
		var newOperation;
		drillPath.add(drillElement);
		newOperation = oFF.QDrillOperation.create(this.getContext(), this,
				oFF.DrillOperationType.CONTEXT, null, drillState, 1, drillPath,
				this.m_drillCounter);
		return this.addOperationInternal(newOperation);
	};
	oFF.QDrillManager.prototype.setRootExpandingLevels = function(dimension,
			relativeLevelCount) {
		var newOperation = oFF.QDrillOperation.create(this.getContext(), this,
				oFF.DrillOperationType.ROOT, dimension,
				oFF.DrillState.EXPANDED, relativeLevelCount, null,
				this.m_drillCounter);
		return this.addOperationInternal(newOperation);
	};
	oFF.QDrillManager.prototype.addOperationInternal = function(newOperation) {
		var uniqueName;
		this.m_drillCounter++;
		uniqueName = newOperation.getPathUniqueName();
		this.removeElementByKey(uniqueName);
		this.m_drillOperations.add(newOperation);
		this.m_drillOperationsMap.put(uniqueName, newOperation);
		this.notifyNodeChanged();
		return newOperation;
	};
	oFF.QDrillManager.prototype.processDeltaDrill = function(drillPath,
			syncType, listener, customIdentifier) {
		var drillOperation = this.setDrillState(drillPath,
				oFF.DrillState.EXPANDED);
		var targetDimension = drillOperation.getTargetDimension();
		var queryExecution;
		if (oFF.isNull(targetDimension)) {
			return oFF.ExtResult
					.createWithErrorMessage("TargetDimension of DrillOperation is null!");
		}
		targetDimension.setHierarchyNavigationDeltaMode(true);
		queryExecution = this.getQueryModel().getQueryManager()
				.processQueryExecution(syncType, listener, customIdentifier);
		targetDimension.setHierarchyNavigationDeltaMode(false);
		this.notifyNodeChanged();
		return queryExecution;
	};
	oFF.QDrillManager.prototype.removeElementByKey = function(uniqueName) {
		var oldOperation = this.m_drillOperationsMap.getByKey(uniqueName);
		if (oFF.notNull(oldOperation)) {
			this.m_drillOperations.removeElement(oldOperation);
			this.m_drillOperationsMap.remove(uniqueName);
		}
	};
	oFF.QDrillManager.prototype.getRootExpandingLevels = function(dimension) {
		var size = this.m_drillOperations.size();
		var i;
		var drillOperation;
		for (i = 0; i < size; i++) {
			drillOperation = this.m_drillOperations.get(i);
			if (drillOperation.getType() === oFF.DrillOperationType.ROOT
					&& drillOperation.getTargetDimension() === dimension) {
				return drillOperation;
			}
		}
		return null;
	};
	oFF.QDrillManager.prototype.removeInvalidDrillOperations = function(
			changedNode) {
		var idxDrillOperation;
		var doRemove;
		var drillOperation;
		var drillPath;
		var idxDrillPath;
		var drillPathElement;
		var dimension;
		var udh;
		var selectedHierarchyName;
		var hierarchyName;
		for (idxDrillOperation = 0; idxDrillOperation < this.m_drillOperations
				.size();) {
			doRemove = false;
			drillOperation = this.m_drillOperations.get(idxDrillOperation);
			if (drillOperation.getType().isEqualTo(
					oFF.DrillOperationType.CONTEXT)) {
				drillPath = drillOperation.getDrillPath();
				for (idxDrillPath = 0; idxDrillPath < drillPath.size(); idxDrillPath++) {
					drillPathElement = drillPath.get(idxDrillPath);
					dimension = drillPathElement.getDimension();
					if (oFF.isNull(dimension)) {
						if (!drillOperation.getDrillState().isOnlyForUdh()) {
							doRemove = true;
						}
						break;
					}
					udh = this.getQueryModel().getUniversalDisplayHierarchies()
							.getByName(dimension.getName());
					if (oFF.notNull(udh)) {
						if (!udh.isActive() || changedNode === udh
								|| this.udhDimensionsChanged(udh)) {
							doRemove = true;
						}
						break;
					}
					if (dimension.getAxisType() === oFF.AxisType.FREE) {
						doRemove = true;
						break;
					}
					if (!this.isValidatingContextFreeNavigations()
							&& drillPath.size() < 2) {
						break;
					}
					if (dimension.getIndexOnAxis() !== idxDrillPath) {
						doRemove = true;
						break;
					}
					selectedHierarchyName = drillPathElement
							.getSelectHierarchyName();
					hierarchyName = dimension.getHierarchyName();
					if (!oFF.XString.isEqual(hierarchyName,
							selectedHierarchyName)) {
						doRemove = true;
						break;
					}
				}
			}
			if (doRemove) {
				this.removeElementByKey(drillOperation.getPathUniqueName());
			} else {
				idxDrillOperation++;
			}
		}
	};
	oFF.QDrillManager.prototype.udhDimensionsChanged = function(udh) {
		var udhDimensions;
		var queryModel;
		var rowsAxis;
		var columnsAxis;
		if (this.getModelCapabilities()
				.supportsUniversalDisplayHierarchiesCustomDimensions()) {
			return false;
		}
		udhDimensions = udh.getDimensionNames();
		queryModel = this.getQueryModel();
		rowsAxis = queryModel.getRowsAxis();
		columnsAxis = queryModel.getColumnsAxis();
		return !rowsAxis.getDimensionNames().isEqualTo(udhDimensions)
				&& !columnsAxis.getDimensionNames().isEqualTo(udhDimensions);
	};
	oFF.QDrillManager.prototype.removeDrillOperationsByDimension = function(
			dimension) {
		var removedOperation = false;
		var idxDrillOperation = 0;
		var drillOperation;
		var drillPath;
		var lastDrillPathElement;
		while (idxDrillOperation < this.m_drillOperations.size()) {
			drillOperation = this.m_drillOperations.get(idxDrillOperation);
			if (drillOperation.getType().isEqualTo(
					oFF.DrillOperationType.CONTEXT)) {
				drillPath = drillOperation.getDrillPath();
				lastDrillPathElement = drillPath.get(drillPath.size() - 1);
				if (lastDrillPathElement.getDimension().isEqualTo(dimension)) {
					removedOperation = true;
					this.removeElementByKey(drillOperation.getPathUniqueName());
				} else {
					idxDrillOperation++;
				}
			} else {
				idxDrillOperation++;
			}
		}
		if (removedOperation) {
			this.notifyNodeChanged();
		}
	};
	oFF.QDrillManager.prototype.removeAllContextDrillOperations = function() {
		var drillIdx;
		var iqDrillOperation;
		for (drillIdx = 0; drillIdx < this.m_drillOperations.size(); drillIdx++) {
			iqDrillOperation = this.m_drillOperations.get(drillIdx);
			if (iqDrillOperation.getType().isEqualTo(
					oFF.DrillOperationType.CONTEXT)) {
				this.removeElementByKey(iqDrillOperation.getPathUniqueName());
				drillIdx--;
			}
		}
	};
	oFF.QDrillManager.prototype.supportsDrillCounter = function() {
		return this.m_supportsDrillCounter;
	};
	oFF.QDrillManager.prototype.setSupportsDrillCounter = function(
			supportsDrillCounter) {
		this.m_supportsDrillCounter = supportsDrillCounter;
	};
	oFF.QDrillManager.prototype.isValidatingContextFreeNavigations = function() {
		return this.m_validatesContextFree;
	};
	oFF.QDrillManager.prototype.setValidateContextFreeNavigations = function(
			isValidating) {
		this.m_validatesContextFree = isValidating;
	};
	oFF.QDrillManager.prototype.getIndexedChildren = function() {
		return oFF.XIteratorWrapper
				.create(this.m_drillOperations.getIterator());
	};
	oFF.QDrillManager.prototype.isDrillStateValid = function(tupleElement,
			drillState) {
		var currentDrillState = tupleElement.getDrillState();
		if (currentDrillState === oFF.DrillState.LEAF) {
			return false;
		} else {
			if (currentDrillState === oFF.DrillState.LEAF_UDH) {
				return drillState === oFF.DrillState.COLLAPSED;
			}
		}
		if (drillState === oFF.DrillState.DRILLED) {
			if (currentDrillState === oFF.DrillState.LEAF_UDH_EXPAND_ALLOWED) {
				return false;
			}
			return tupleElement.getDimension()
					.isUniversalDisplayHierarchyDimension();
		} else {
			if (drillState === oFF.DrillState.EXPANDED) {
				return currentDrillState !== oFF.DrillState.LEAF_DRILLDOWN_ALLOWED;
			}
		}
		return true;
	};
	oFF.QDrillOperation = function() {
	};
	oFF.QDrillOperation.prototype = new oFF.QModelComponent();
	oFF.QDrillOperation.create = function(context, parent, type,
			targetDimension, drillState, expandLevels, drillPath, drillCounter) {
		var object = new oFF.QDrillOperation();
		object.setupDrillOperation(context, parent, type, targetDimension,
				drillState, expandLevels, drillPath, drillCounter);
		return object;
	};
	oFF.QDrillOperation.prototype.m_drillPath = null;
	oFF.QDrillOperation.prototype.m_elementPath = null;
	oFF.QDrillOperation.prototype.m_drillState = null;
	oFF.QDrillOperation.prototype.m_targetDimension = null;
	oFF.QDrillOperation.prototype.m_type = null;
	oFF.QDrillOperation.prototype.m_expandLevels = 0;
	oFF.QDrillOperation.prototype.m_drillCounter = 0;
	oFF.QDrillOperation.prototype.cloneOlapComponent = function(context, parent) {
		var targetDimName = this.getTargetDimension().getName();
		var targetDim = context.getDimensionAccessor()
				.getDimensionByNameFromExistingMetadata(targetDimName);
		var clone = oFF.QDrillOperation.create(context, null, this.m_type,
				targetDim, this.m_drillState, this.m_expandLevels,
				this.m_drillPath, this.m_drillCounter);
		clone.copyModelComponent(this);
		clone.m_elementPath = this.m_elementPath.createListCopy();
		return clone;
	};
	oFF.QDrillOperation.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.DRILL_OPERATION;
	};
	oFF.QDrillOperation.prototype.setupDrillOperation = function(context,
			parent, type, targetDimension, drillState, expandLevels, drillPath,
			drillCounter) {
		var size;
		var i;
		this.setupModelComponent(context, parent);
		this.m_type = type;
		this.m_expandLevels = expandLevels;
		this.m_drillPath = drillPath;
		this.m_drillState = drillState;
		this.m_targetDimension = oFF.XWeakReferenceUtil
				.getWeakRef(targetDimension);
		this.m_drillCounter = drillCounter;
		if (oFF.notNull(drillPath)) {
			this.m_elementPath = oFF.XList.create();
			size = drillPath.size();
			for (i = 0; i < size; i++) {
				this.m_elementPath.add(oFF.QSelectValue
						.createDimensionElementCopy(context, drillPath.get(i)));
			}
			if (oFF.isNull(targetDimension) && size > 0) {
				this.m_targetDimension = oFF.XWeakReferenceUtil
						.getWeakRef(drillPath.get(size - 1).getDimension());
			}
		}
	};
	oFF.QDrillOperation.prototype.releaseObject = function() {
		this.m_elementPath = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_elementPath);
		this.m_drillPath = null;
		this.m_drillState = null;
		this.m_targetDimension = null;
		this.m_type = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QDrillOperation.prototype.getDrillPath = function() {
		return this.m_drillPath;
	};
	oFF.QDrillOperation.prototype.getElementPath = function() {
		return this.m_elementPath;
	};
	oFF.QDrillOperation.prototype.getDrillState = function() {
		return this.m_drillState;
	};
	oFF.QDrillOperation.prototype.setDrillState = function(drillState) {
		if (this.m_drillState !== drillState) {
			this.notifyNodeChanged();
		}
		this.m_drillState = drillState;
	};
	oFF.QDrillOperation.prototype.getTargetDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_targetDimension);
	};
	oFF.QDrillOperation.prototype.setTargetDimension = function(targetDimension) {
		this.m_targetDimension = oFF.XWeakReferenceUtil
				.getWeakRef(targetDimension);
	};
	oFF.QDrillOperation.prototype.getType = function() {
		return this.m_type;
	};
	oFF.QDrillOperation.prototype.getRelativeLevelCount = function() {
		return this.m_expandLevels;
	};
	oFF.QDrillOperation.prototype.getDrillCounter = function() {
		return this.m_drillCounter;
	};
	oFF.QDrillOperation.prototype.getUniqueName = function() {
		var buffer = oFF.XStringBuffer.create();
		var size;
		var i;
		var element;
		var dimension;
		buffer.append("[");
		buffer.append(this.m_type.getName());
		buffer.append(":");
		if (oFF.notNull(this.m_targetDimension)) {
			buffer.append(this.getTargetDimension().getName());
		}
		buffer.append("]");
		if (oFF.notNull(this.m_drillPath)) {
			size = this.m_drillPath.size();
			for (i = 0; i < size; i++) {
				if (i > 0) {
					buffer.append("/");
				}
				element = this.m_drillPath.get(i);
				buffer.append("[");
				dimension = element.getDimension();
				if (oFF.notNull(dimension)) {
					buffer.append(dimension.getName());
				}
				buffer.append("]");
				buffer.append("{ ");
				buffer.append(element.getName());
				buffer.append("} ");
			}
		}
		return buffer.toString();
	};
	oFF.QDrillOperation.prototype.getPathUniqueName = function() {
		return this.getUniqueName();
	};
	oFF.QDrillOperation.prototype.setRelativeLevelCount = function(level) {
		if (this.m_expandLevels !== level) {
			this.notifyNodeChanged();
		}
		this.m_expandLevels = level;
	};
	oFF.QDrillOperation.prototype.getDrillManager = function() {
		return this.getParentComponent().getParentComponent();
	};
	oFF.QDrillOperation.prototype.supportsDrillCounter = function() {
		var drillManager = this.getDrillManager();
		if (oFF.isNull(drillManager)) {
			return false;
		}
		return drillManager.supportsDrillCounter();
	};
	oFF.QDrillOperation.prototype.toString = function() {
		return this.getPathUniqueName();
	};
	oFF.QDrillPathElement = function() {
	};
	oFF.QDrillPathElement.prototype = new oFF.QModelComponent();
	oFF.QDrillPathElement._create = function(context) {
		var object = new oFF.QDrillPathElement();
		object.setupModelComponent(context, null);
		return object;
	};
	oFF.QDrillPathElement.prototype.m_dimension = null;
	oFF.QDrillPathElement.prototype.m_hierarchyName = null;
	oFF.QDrillPathElement.prototype.m_fieldName = null;
	oFF.QDrillPathElement.prototype.cloneOlapComponent = function(context,
			parent) {
		var clone = oFF.QDrillPathElement._create(context);
		clone.copyModelComponent(this);
		clone.m_dimension = this.m_dimension;
		clone.m_hierarchyName = this.m_hierarchyName;
		clone.m_fieldName = this.m_fieldName;
		return clone;
	};
	oFF.QDrillPathElement.prototype.releaseObject = function() {
		this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
		this.m_hierarchyName = null;
		this.m_fieldName = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QDrillPathElement.prototype.getOlapComponentType = function() {
		return this.getMemberType();
	};
	oFF.QDrillPathElement.prototype.getType = function() {
		return this.getMemberType();
	};
	oFF.QDrillPathElement.prototype.getMemberType = function() {
		return oFF.MemberType.DRILL_PATH_ELEMENT;
	};
	oFF.QDrillPathElement.prototype.getDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
	};
	oFF.QDrillPathElement.prototype.setDimension = function(dimension) {
		this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
		if (oFF.notNull(dimension)) {
			this.m_hierarchyName = dimension.getHierarchyName();
			if (this.getFieldName() === null
					&& dimension.getKeyField() !== null) {
				this.setFieldName(dimension.getKeyField().getName());
			}
		}
	};
	oFF.QDrillPathElement.prototype.getFieldName = function() {
		return this.m_fieldName;
	};
	oFF.QDrillPathElement.prototype.setFieldName = function(fieldName) {
		this.m_fieldName = fieldName;
	};
	oFF.QDrillPathElement.prototype.getSelectValue = function() {
		return this.getName();
	};
	oFF.QDrillPathElement.prototype.getSelectField = function() {
		if (oFF.isNull(this.m_dimension)) {
			return null;
		}
		return this.getDimension().getFieldByName(this.m_fieldName);
	};
	oFF.QDrillPathElement.prototype.getSelectHierarchyName = function() {
		return this.m_hierarchyName;
	};
	oFF.QDrillPathElement.prototype.getSelectableElement = function() {
		return this;
	};
	oFF.QDrillPathElement.prototype.isNode = function() {
		return this.getMemberType().isNode();
	};
	oFF.OlapEnvVarAction = function() {
	};
	oFF.OlapEnvVarAction.prototype = new oFF.QOlapSyncAction();
	oFF.OlapEnvVarAction.createAndRunDefinition = function(parent, syncType,
			listener, customIdentifier, variableVariant) {
		var newObject = new oFF.OlapEnvVarAction();
		newObject.m_activeVariant = variableVariant;
		newObject.setupVarActionAndRun(syncType, parent, listener,
				customIdentifier, oFF.VariableProcessorState.CHANGEABLE_REINIT);
		return newObject;
	};
	oFF.OlapEnvVarAction.createAndRunSubmit = function(parent, syncType,
			listener, customIdentifier) {
		var newObject = new oFF.OlapEnvVarAction();
		newObject.setupVarActionAndRun(syncType, parent, listener,
				customIdentifier, oFF.VariableProcessorState.PROCESSING_SUBMIT);
		return newObject;
	};
	oFF.OlapEnvVarAction.createAndRunCancel = function(parent, syncType,
			listener, customIdentifier) {
		var newObject = new oFF.OlapEnvVarAction();
		newObject.setupVarActionAndRun(syncType, parent, listener,
				customIdentifier, oFF.VariableProcessorState.PROCESSING_CANCEL);
		return newObject;
	};
	oFF.OlapEnvVarAction.createAndRunCheck = function(parent, syncType,
			listener, customIdentifier) {
		var newObject = new oFF.OlapEnvVarAction();
		newObject.setupVarActionAndRun(syncType, parent, listener,
				customIdentifier, oFF.VariableProcessorState.PROCESSING_CHECK);
		return newObject;
	};
	oFF.OlapEnvVarAction.createAndRunReInitAfterSubmit = function(parent,
			syncType, listener, customIdentifier) {
		var newObject = new oFF.OlapEnvVarAction();
		newObject.setupVarActionAndRun(syncType, parent, listener,
				customIdentifier, oFF.VariableProcessorState.PROCESSING_REINIT);
		return newObject;
	};
	oFF.OlapEnvVarAction.createAndRunSetGetValues = function(parent, syncType,
			listener, customIdentifier) {
		var newObject = new oFF.OlapEnvVarAction();
		newObject.setupVarActionAndRun(syncType, parent, listener,
				customIdentifier,
				oFF.VariableProcessorState.PROCESSING_UPDATE_VALUES);
		return newObject;
	};
	oFF.OlapEnvVarAction.createAndRunEmptyVariableDefinition = function(parent,
			syncType, listener, customIdentifier) {
		var newObject = new oFF.OlapEnvVarAction();
		newObject
				.setupVarActionAndRun(
						syncType,
						parent,
						listener,
						customIdentifier,
						oFF.VariableProcessorState.PROCESSING_EMPTY_VARIABLE_DEFINITION);
		return newObject;
	};
	oFF.OlapEnvVarAction.prototype.m_actionState = null;
	oFF.OlapEnvVarAction.prototype.m_finishedCount = 0;
	oFF.OlapEnvVarAction.prototype.m_affectedVarProcessors = null;
	oFF.OlapEnvVarAction.prototype.m_activeVariant = null;
	oFF.OlapEnvVarAction.prototype.releaseObject = function() {
		this.m_actionState = null;
		this.m_affectedVarProcessors = oFF.XObjectExt
				.release(this.m_affectedVarProcessors);
		this.m_activeVariant = null;
		oFF.QOlapSyncAction.prototype.releaseObject.call(this);
	};
	oFF.OlapEnvVarAction.prototype.setupVarActionAndRun = function(syncType,
			context, listener, customIdentifier, state) {
		this.m_actionState = state;
		oFF.QOlapSyncAction.prototype.setupActionAndRun.call(this, syncType,
				context, listener, customIdentifier);
	};
	oFF.OlapEnvVarAction.prototype.processSynchronization = function(syncType) {
		var varProc;
		var oldState;
		var activeSyncType;
		var i;
		var variableProcessor;
		this.setData(this);
		varProc = this.getActionContext();
		oldState = varProc.getVariableProcessorState();
		varProc.setVariableProcessorState(this.m_actionState);
		if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_SUBMIT) {
			varProc.syncMasterSlaves();
			this.m_affectedVarProcessors = varProc
					.getSelectedVariableProcessors(oFF.VariableProcessorState.CHANGEABLE_STATEFUL);
		} else {
			if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_CANCEL) {
				this.m_affectedVarProcessors = varProc
						.getSelectedVariableProcessors(oFF.VariableProcessorState.CHANGEABLE_STATEFUL);
			} else {
				if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_CHECK) {
					varProc.syncMasterSlaves();
					this.m_affectedVarProcessors = varProc
							.getSelectedVariableProcessors(oFF.VariableProcessorState.CHANGEABLE_STATEFUL);
				} else {
					if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_UPDATE_VALUES) {
						varProc.syncMasterSlaves();
						this.m_affectedVarProcessors = varProc
								.getSelectedVariableProcessors(oFF.VariableProcessorState.CHANGEABLE_STATEFUL);
					} else {
						if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_REINIT) {
							this.m_affectedVarProcessors = varProc
									.getSelectedVariableProcessors(oFF.VariableProcessorState.SUBMITTED);
						} else {
							if (this.m_actionState === oFF.VariableProcessorState.CHANGEABLE_REINIT) {
								this.m_affectedVarProcessors = varProc
										.getSelectedVariableProcessors(oFF.VariableProcessorState.CHANGEABLE_STATEFUL);
							}
						}
					}
				}
			}
		}
		if (this.m_affectedVarProcessors.isEmpty()) {
			varProc.setVariableProcessorState(oldState);
			this.addWarning(oFF.ErrorCodes.NO_VARIABLE_PROCESSOR_AFFECTED,
					"No affected variable processor was found.");
			return false;
		}
		activeSyncType = this.getActiveSyncType();
		for (i = 0; i < this.m_affectedVarProcessors.size(); i++) {
			variableProcessor = this.m_affectedVarProcessors.get(i);
			if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_SUBMIT) {
				variableProcessor.submitVariables(activeSyncType, this, null);
			} else {
				if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_CANCEL) {
					variableProcessor.cancelReInitVariables(activeSyncType,
							this, null);
				} else {
					if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_CHECK) {
						variableProcessor.checkVariables(activeSyncType, this,
								null);
					} else {
						if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_UPDATE_VALUES) {
							variableProcessor.transferVariables(activeSyncType,
									this, null);
						} else {
							if (this.m_actionState === oFF.VariableProcessorState.PROCESSING_REINIT) {
								variableProcessor.reInitVariablesAfterSubmit(
										activeSyncType, this, null);
							} else {
								if (this.m_actionState === oFF.VariableProcessorState.CHANGEABLE_REINIT) {
									variableProcessor.activateVariableVariant(
											this.m_activeVariant.clone(),
											activeSyncType, this, null);
								}
							}
						}
					}
				}
			}
		}
		return true;
	};
	oFF.OlapEnvVarAction.prototype.onVariableProcessorExecuted = function(
			extResult, result, customIdentifier) {
		var varProc;
		this.addAllMessages(extResult);
		this.m_finishedCount++;
		if (this.m_finishedCount === this.m_affectedVarProcessors.size()) {
			varProc = this.getActionContext();
			varProc.setVariableProcessorState(null);
			this.endSync();
		}
	};
	oFF.OlapEnvVarAction.prototype.callListener = function(extResult, listener,
			data, customIdentifier) {
		listener.onVariableProcessorExecuted(extResult, data, customIdentifier);
	};
	oFF.OlapEnvVarAction.prototype.isSuccessfullyProcessed = function() {
		return this.getSyncState().isInSync() && this.isValid();
	};
	oFF.QEvaluate = function() {
	};
	oFF.QEvaluate.prototype = new oFF.QModelComponent();
	oFF.QEvaluate.createEvaluate = function(dimension, lowValue, exception) {
		var evaluate;
		if (oFF.isNull(dimension) || oFF.isNull(exception)) {
			return null;
		}
		evaluate = new oFF.QEvaluate();
		evaluate.setField(dimension.getKeyField());
		evaluate.setupEvaluate(lowValue, exception);
		return evaluate;
	};
	oFF.QEvaluate.createEvaluateWithField = function(field, lowValue, exception) {
		var evaluate;
		if (oFF.isNull(field) || oFF.isNull(exception)) {
			return null;
		}
		evaluate = new oFF.QEvaluate();
		evaluate.setField(field);
		evaluate.setupEvaluate(lowValue, exception);
		return evaluate;
	};
	oFF.QEvaluate.prototype.m_field = null;
	oFF.QEvaluate.prototype.m_operator = null;
	oFF.QEvaluate.prototype.m_lowValue = null;
	oFF.QEvaluate.prototype.m_highValue = null;
	oFF.QEvaluate.prototype.m_evaluate = null;
	oFF.QEvaluate.prototype.copyEvaluate = function(origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.setField(this.getField().getDimension().getFieldByName(
				origin.getField().getName()));
		this.m_operator = origin.m_operator;
		this.m_evaluate = origin.m_evaluate;
		if (oFF.notNull(origin.m_highValue)) {
			this.setHighValue(origin.m_highValue.getValue().clone());
		}
	};
	oFF.QEvaluate.prototype.setupEvaluate = function(lowValue, exception) {
		this.setupModelComponent(exception.getContext(), exception);
		this.m_operator = oFF.ComparisonOperator.EQUAL;
		this.m_lowValue = oFF.XValueAccess.create();
		this.setLowValue(lowValue);
		this.m_evaluate = oFF.QExceptionEvalType.ALL;
	};
	oFF.QEvaluate.prototype.releaseObject = function() {
		this.m_operator = null;
		this.m_lowValue = oFF.XObjectExt.release(this.m_lowValue);
		this.m_highValue = oFF.XObjectExt.release(this.m_highValue);
		this.m_evaluate = null;
		this.m_field = oFF.XObjectExt.release(this.m_field);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QEvaluate.prototype.getField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_field);
	};
	oFF.QEvaluate.prototype.setField = function(field) {
		oFF.XObjectExt.checkNotNull(field, "The field is null.");
		this.m_field = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QEvaluate.prototype.getException = function() {
		return this.getParentComponent();
	};
	oFF.QEvaluate.prototype.getOperator = function() {
		return this.m_operator;
	};
	oFF.QEvaluate.prototype.setOperator = function(comparisonOperator) {
		this.m_operator = comparisonOperator;
	};
	oFF.QEvaluate.prototype.getLowValue = function() {
		return this.m_lowValue;
	};
	oFF.QEvaluate.prototype.setLowValue = function(lowValue) {
		this.assertValueType(lowValue, this.getValueType());
		this.setXValue(lowValue, this.m_lowValue);
	};
	oFF.QEvaluate.prototype.getHighValue = function() {
		if (oFF.isNull(this.m_highValue)) {
			this.m_highValue = oFF.XValueAccess.create();
		}
		return this.m_highValue;
	};
	oFF.QEvaluate.prototype.setHighValue = function(highValue) {
		this.assertValueType(highValue, this.getValueType());
		this.setXValue(highValue, this.getHighValue());
	};
	oFF.QEvaluate.prototype.setXValue = function(value, mValueAccess) {
		var valueType;
		var message;
		if (oFF.isNull(value)) {
			return;
		}
		valueType = this.getValueType();
		if (valueType === oFF.XValueType.INTEGER) {
			mValueAccess.setInteger(value.getInteger());
		} else {
			if (valueType === oFF.XValueType.STRING) {
				mValueAccess.setString(value.getString());
			} else {
				if (valueType === oFF.XValueType.DOUBLE) {
					mValueAccess.setDouble(value.getDouble());
				} else {
					if (valueType === oFF.XValueType.BOOLEAN) {
						mValueAccess.setBoolean(value.getBoolean());
					} else {
						if (valueType === oFF.XValueType.DATE) {
							mValueAccess.setDate(value);
						} else {
							if (valueType === oFF.XValueType.TIME) {
								mValueAccess.setTime(value);
							} else {
								if (valueType === oFF.XValueType.DATE_TIME) {
									mValueAccess.setDateTime(value);
								} else {
									if (valueType === oFF.XValueType.TIMESPAN) {
										mValueAccess.setTimeSpan(value);
									} else {
										if (valueType === oFF.XValueType.LONG) {
											mValueAccess.setLong(value
													.getLong());
										} else {
											message = oFF.XStringBuffer
													.create();
											message
													.append(
															"Value type of Evaluate is not supported. Expected '")
													.append(valueType.getName())
													.append("'!");
											throw oFF.XException
													.createIllegalArgumentException(message
															.toString());
										}
									}
								}
							}
						}
					}
				}
			}
		}
	};
	oFF.QEvaluate.prototype.setIntervall = function(lowValue, highValue) {
		if (!lowValue.getValueType().isEqualTo(highValue.getValueType())) {
			throw oFF.XException
					.createIllegalArgumentException("Value type of low value and high value differ.");
		}
		this.setLowValue(lowValue);
		this.setHighValue(highValue);
	};
	oFF.QEvaluate.prototype.getValueType = function() {
		return this.getField().getValueType();
	};
	oFF.QEvaluate.prototype.getEvaluate = function() {
		return this.m_evaluate;
	};
	oFF.QEvaluate.prototype.setEvaluate = function(evaluate) {
		this.m_evaluate = evaluate;
	};
	oFF.QEvaluate.prototype.getDimension = function() {
		return this.getField().getDimension();
	};
	oFF.QEvaluate.prototype.setDimension = function(dimension) {
		oFF.XObjectExt.checkNotNull(dimension, "The dimension is null.");
		this.setField(dimension.getKeyField());
	};
	oFF.QException = function() {
	};
	oFF.QException.prototype = new oFF.QModelComponent();
	oFF.QException.createException = function(context, model, name, text) {
		var exception = new oFF.QException();
		exception.setupException(context, model, name, text);
		return exception;
	};
	oFF.QException.prototype.m_evaluateDefault = null;
	oFF.QException.prototype.m_headerSetting = null;
	oFF.QException.prototype.m_evaluates = null;
	oFF.QException.prototype.m_thresholds = null;
	oFF.QException.prototype.m_evaluatedBeforePostAggregation = false;
	oFF.QException.prototype.m_isActive = false;
	oFF.QException.prototype.m_isChangeable = false;
	oFF.QException.prototype.m_evaluateAllMeasureMembers = false;
	oFF.QException.prototype.m_evaluateAllStructureMembers = false;
	oFF.QException.prototype.m_measure = null;
	oFF.QException.prototype.m_structure = null;
	oFF.QException.prototype.m_displayOnMeasureMember = null;
	oFF.QException.prototype.m_displayOnStructureMember = null;
	oFF.QException.prototype.copyException = function(origin) {
		var size;
		var i;
		var originThreshold;
		var cloneThreshold;
		var queryModel;
		var originEvaluate;
		var dimension;
		var cloneEvaluate;
		var origMeasure;
		var origStructure;
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		size = origin.m_thresholds.size();
		for (i = 0; i < size; i++) {
			originThreshold = origin.m_thresholds.get(i);
			cloneThreshold = this.addNewThreshold(0, originThreshold
					.getAlertLevel());
			cloneThreshold.copyThreshold(originThreshold);
		}
		queryModel = this.getQueryModel();
		if (oFF.notNull(origin.m_evaluates)) {
			size = origin.m_evaluates.size();
			for (i = 0; i < size; i++) {
				originEvaluate = origin.m_evaluates.get(i);
				dimension = queryModel
						.getDimensionByNameFromExistingMetadata(originEvaluate
								.getDimension().getName());
				cloneEvaluate = oFF.QEvaluate.createEvaluate(dimension,
						originEvaluate.getLowValue().getValue().clone(), this);
				cloneEvaluate.copyEvaluate(originEvaluate);
				this.addEvaluate(cloneEvaluate);
			}
		}
		origMeasure = origin.getMeasure();
		if (oFF.notNull(origMeasure)) {
			this.setMeasure(queryModel.getDimensionByNameFromExistingMetadata(
					origMeasure.getDimension().getName()).getStructureMember(
					origMeasure.getName()));
			if (this.getQueryModel().supportsExceptionsV2()) {
				this.displayOnOtherMember(origMeasure, origin
						.getDisplayOnOtherMember(origMeasure));
			}
		}
		origStructure = origin.getStructure();
		if (oFF.notNull(origStructure)
				&& this.getQueryModel().supportsExceptionsV2()) {
			this.setStructure(queryModel
					.getDimensionByNameFromExistingMetadata(
							origStructure.getDimension().getName())
					.getStructureMember(origStructure.getName()));
			this.displayOnOtherMember(origStructure, origin
					.getDisplayOnOtherMember(origStructure));
		}
		this.m_evaluateDefault = origin.m_evaluateDefault;
		this.m_headerSetting = origin.m_headerSetting;
		this.m_evaluatedBeforePostAggregation = origin.m_evaluatedBeforePostAggregation;
		this.m_isActive = origin.m_isActive;
		this.m_isChangeable = origin.m_isChangeable;
		this.m_evaluateAllMeasureMembers = origin.m_evaluateAllMeasureMembers;
		this.m_evaluateAllStructureMembers = origin.m_evaluateAllStructureMembers;
	};
	oFF.QException.prototype.setupException = function(context, model, name,
			text) {
		this.setupModelComponentWithName(context, model, name);
		this.setText(text);
		this.m_isChangeable = true;
		this.m_thresholds = oFF.QModelComponentList.createModelComponentList(
				context, this, false, "Thresholds");
		this.m_evaluateDefault = oFF.QExceptionEvalType.ALL;
		this.m_headerSetting = oFF.QExceptionHeaderSettings.NONE;
		this.m_evaluatedBeforePostAggregation = false;
		this.m_isActive = true;
		this.m_evaluateAllMeasureMembers = false;
		this.m_evaluateAllStructureMembers = false;
	};
	oFF.QException.prototype.releaseObject = function() {
		this.m_thresholds = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_thresholds);
		this.m_evaluates = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_evaluates);
		this.m_evaluateDefault = null;
		this.m_headerSetting = null;
		this.m_measure = oFF.XObjectExt.release(this.m_measure);
		this.m_structure = oFF.XObjectExt.release(this.m_structure);
		this.m_displayOnMeasureMember = oFF.XObjectExt
				.release(this.m_displayOnMeasureMember);
		this.m_displayOnStructureMember = oFF.XObjectExt
				.release(this.m_displayOnStructureMember);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QException.prototype.lazyLoadEvaluateList = function() {
		if (oFF.isNull(this.m_evaluates)) {
			this.m_evaluates = oFF.QModelComponentList
					.createModelComponentList(this.getContext(), this, false,
							"Evaluates");
		}
	};
	oFF.QException.prototype.addEvaluate = function(evaluate) {
		this.lazyLoadEvaluateList();
		this.insertEvaluate(this.m_evaluates.size(), evaluate);
	};
	oFF.QException.prototype.addNewEvaluate = function(dimension, lowValue) {
		var evaluate;
		this.assertIsChangeable();
		evaluate = this.newEvaluate(dimension, lowValue);
		this.addEvaluate(evaluate);
		return evaluate;
	};
	oFF.QException.prototype.addNewEvaluateWithField = function(field, lowValue) {
		var evaluate = this.newEvaluateWithField(field, lowValue);
		this.addEvaluate(evaluate);
		return evaluate;
	};
	oFF.QException.prototype.addNewThreshold = function(lowValue, alertLevel) {
		var threshold;
		this.assertIsChangeable();
		threshold = this.newThreshold(lowValue, alertLevel);
		this.addThreshold(threshold);
		return threshold;
	};
	oFF.QException.prototype.addNewThresholdWithString = function(lowValue,
			alertLevel) {
		var threshold = this.newThresholdWithString(lowValue, alertLevel);
		this.addThreshold(threshold);
		return threshold;
	};
	oFF.QException.prototype.addThreshold = function(threshold) {
		this.insertThreshold(this.m_thresholds.size(), threshold);
	};
	oFF.QException.prototype.assertIsChangeable = function() {
		oFF.XBooleanUtils.checkTrue(this.m_isChangeable, oFF.XStringUtils
				.concatenate3("The exception '", this.getName(),
						"' is not changeable!"));
	};
	oFF.QException.prototype.getEvaluateDefault = function() {
		return this.m_evaluateDefault;
	};
	oFF.QException.prototype.getEvaluates = function() {
		if (oFF.isNull(this.m_evaluates)) {
			return oFF.XList.create();
		}
		return this.m_evaluates.getValuesAsReadOnlyList();
	};
	oFF.QException.prototype.getHeaderSetting = function() {
		return this.m_headerSetting;
	};
	oFF.QException.prototype.getMeasure = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_measure);
	};
	oFF.QException.prototype.getStructure = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_structure);
	};
	oFF.QException.prototype.getThresholds = function() {
		return this.m_thresholds;
	};
	oFF.QException.prototype.insertEvaluate = function(index, evaluate) {
		this.lazyLoadEvaluateList();
		this.assertIsChangeable();
		oFF.XObjectExt.checkNotNull(evaluate, "The evaluate is null.");
		if (evaluate.getException() !== this) {
			throw oFF.XException
					.createIllegalArgumentException("The evaluate was created by another exception and can't be bound to this one.");
		}
		if (index >= this.m_evaluates.size()) {
			this.m_evaluates.add(evaluate);
		} else {
			if (index >= 0) {
				this.m_evaluates.set(index, evaluate);
			} else {
				this.m_evaluates.insert(0, evaluate);
			}
		}
		this.notifyNodeChanged();
	};
	oFF.QException.prototype.insertThreshold = function(index, threshold) {
		this.assertIsChangeable();
		oFF.XObjectExt.checkNotNull(threshold, "The threshold is null.");
		if (threshold.getException() !== this) {
			throw oFF.XException
					.createIllegalArgumentException("The threshold was created by another exception and can't be bound to this one.");
		}
		if (index >= this.m_thresholds.size()) {
			this.m_thresholds.add(threshold);
		} else {
			if (index >= 0) {
				this.m_thresholds.set(index, threshold);
			} else {
				this.m_thresholds.insert(0, threshold);
			}
		}
		this.notifyNodeChanged();
	};
	oFF.QException.prototype.isActive = function() {
		return this.m_isActive;
	};
	oFF.QException.prototype.isChangeable = function() {
		return this.m_isChangeable;
	};
	oFF.QException.prototype.isEvaluatedAfterCalculations = function() {
		return this.m_evaluatedBeforePostAggregation;
	};
	oFF.QException.prototype.newEvaluate = function(dimension, lowValue) {
		oFF.XObjectExt.checkNotNull(dimension, "The dimension is null.");
		if (oFF.notNull(lowValue)
				&& !lowValue.getValueType().isEqualTo(
						dimension.getKeyField().getValueType())) {
			throw oFF.XException
					.createIllegalArgumentException("Type of low value doesn't match value type of the dimension.");
		}
		return oFF.QEvaluate.createEvaluate(dimension, lowValue, this);
	};
	oFF.QException.prototype.newEvaluateWithField = function(field, lowValue) {
		oFF.XObjectExt.checkNotNull(field, "The field is null.");
		if (oFF.notNull(lowValue)
				&& !lowValue.getValueType().isEqualTo(field.getValueType())) {
			throw oFF.XException
					.createIllegalArgumentException("Type of low value doesn't match value type of the field.");
		}
		return oFF.QEvaluate.createEvaluateWithField(field, lowValue, this);
	};
	oFF.QException.prototype.newThreshold = function(lowValue, alertLevel) {
		return oFF.QThreshold.createThreshold(this.getContext(), lowValue,
				alertLevel, this);
	};
	oFF.QException.prototype.newThresholdWithString = function(lowValue,
			alertLevel) {
		return oFF.QThreshold.createThresholdWithString(this.getContext(),
				lowValue, alertLevel, this);
	};
	oFF.QException.prototype.setActive = function(active) {
		this.m_isActive = active;
		this.notifyNodeChanged();
	};
	oFF.QException.prototype.setEvaluateDefault = function(evaluateDefault) {
		this.assertIsChangeable();
		this.m_evaluateDefault = evaluateDefault;
		this.notifyNodeChanged();
	};
	oFF.QException.prototype.setEvaluationAfterCalculations = function(
			afterCalculations) {
		this.assertIsChangeable();
		this.m_evaluatedBeforePostAggregation = afterCalculations;
		this.notifyNodeChanged();
	};
	oFF.QException.prototype.assertBw = function() {
		oFF.XBooleanUtils.checkTrue(this.getQueryModel().getSystemType()
				.isTypeOf(oFF.SystemType.BW),
				"This is only supported for BW systems!");
	};
	oFF.QException.prototype.setHeaderSetting = function(headerSetting) {
		if (this.m_headerSetting !== headerSetting) {
			this.assertIsChangeable();
			this.assertBw();
			this.m_headerSetting = headerSetting;
			this.notifyNodeChanged();
		}
	};
	oFF.QException.prototype.setIsChangeable = function(isChangeable) {
		this.m_isChangeable = isChangeable;
	};
	oFF.QException.prototype.setMeasure = function(measure) {
		var exceptions;
		this.assertIsChangeable();
		oFF.XObjectExt.checkNotNull(measure, "The measure member is null.");
		exceptions = measure.getExceptions();
		if (oFF.notNull(exceptions)) {
			if (oFF.XCollectionUtils.getByName(exceptions, this.getName()) !== null) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate3("The exception name '", this
										.getName(), "' is not unique!"));
			}
		}
		this.m_measure = oFF.XWeakReferenceUtil.getWeakRef(measure);
		this.notifyNodeChanged();
	};
	oFF.QException.prototype.setStructure = function(structure) {
		this.assertSupportsExceptionsV2();
		this.assertIsChangeable();
		oFF.XObjectExt.checkNotNull(structure, "The structure member is null.");
		this.m_structure = oFF.XWeakReferenceUtil.getWeakRef(structure);
		this.notifyNodeChanged();
	};
	oFF.QException.prototype.setEvaluateAllMembers = function(dimension,
			evaluateAllMembers) {
		this.assertSupportsExceptionsV2();
		this.assertIsChangeable();
		oFF.XObjectExt.checkNotNull(dimension, "The dimension is null.");
		if (this.getMeasure() !== null
				&& this.getMeasure().getDimension() === dimension) {
			this.m_evaluateAllMeasureMembers = evaluateAllMembers;
			this.notifyNodeChanged();
		} else {
			if (this.getStructure() !== null
					&& this.getStructure().getDimension() === dimension) {
				this.m_evaluateAllStructureMembers = evaluateAllMembers;
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QException.prototype.isEvaluateAllMembers = function(dimension) {
		this.assertSupportsExceptionsV2();
		if (oFF.notNull(dimension)) {
			if (this.getMeasure() !== null
					&& this.getMeasure().getDimension() === dimension) {
				return this.m_evaluateAllMeasureMembers;
			} else {
				if (this.getStructure() !== null
						&& this.getStructure().getDimension() === dimension) {
					return this.m_evaluateAllStructureMembers;
				}
			}
		}
		return false;
	};
	oFF.QException.prototype.displayOnOtherMember = function(member,
			memberToDisplayOn) {
		this.assertSupportsExceptionsV2();
		this.assertIsChangeable();
		if (oFF.notNull(member)) {
			if (this.getMeasure() === member) {
				this.m_displayOnMeasureMember = oFF.XWeakReferenceUtil
						.getWeakRef(memberToDisplayOn);
				this.notifyNodeChanged();
			} else {
				if (this.getStructure() === member) {
					this.m_displayOnStructureMember = oFF.XWeakReferenceUtil
							.getWeakRef(memberToDisplayOn);
					this.notifyNodeChanged();
				}
			}
		}
	};
	oFF.QException.prototype.getDisplayOnOtherMember = function(member) {
		this.assertSupportsExceptionsV2();
		if (oFF.notNull(member)) {
			if (this.getMeasure() === member
					&& oFF.notNull(this.m_displayOnMeasureMember)) {
				return oFF.XWeakReferenceUtil
						.getHardRef(this.m_displayOnMeasureMember);
			} else {
				if (this.getStructure() === member
						&& oFF.notNull(this.m_displayOnStructureMember)) {
					return oFF.XWeakReferenceUtil
							.getHardRef(this.m_displayOnStructureMember);
				}
			}
		}
		return null;
	};
	oFF.QException.prototype.assertSupportsExceptionsV2 = function() {
		if (!this.getQueryModel().supportsExceptionsV2()) {
			oFF.noSupport();
		}
	};
	oFF.QException.prototype.setHeaderSettingBase = function(headerSetting) {
		this.m_headerSetting = headerSetting;
	};
	oFF.QSettings = function() {
	};
	oFF.QSettings.prototype = new oFF.QModelComponent();
	oFF.QSettings.createSetting = function(context, name, priority, threshold) {
		var setting;
		if (oFF.isNull(threshold)
				|| !threshold.getQueryModel().supportsExceptionSettings()) {
			return null;
		}
		setting = new oFF.QSettings();
		setting.setName(name);
		setting.setupSetting(context, priority, threshold);
		return setting;
	};
	oFF.QSettings.createSettingWithConstant = function(context,
			exceptionSetting, priority, threshold) {
		var setting;
		if (oFF.isNull(threshold)) {
			return null;
		}
		setting = new oFF.QSettings();
		setting.setName(exceptionSetting.getName());
		setting.setupSetting(context, priority, threshold);
		return setting;
	};
	oFF.QSettings.prototype.m_value = null;
	oFF.QSettings.prototype.m_setting = null;
	oFF.QSettings.prototype.m_priority = 0;
	oFF.QSettings.prototype.setupSetting = function(context, priority,
			threshold) {
		this.setupModelComponent(context, threshold);
		this.m_priority = priority;
	};
	oFF.QSettings.prototype.releaseObject = function() {
		this.m_setting = null;
		this.m_value = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QSettings.prototype.setValue = function(value) {
		this.m_value = value;
		this.notifyNodeChanged();
	};
	oFF.QSettings.prototype.getValue = function() {
		return this.m_value;
	};
	oFF.QSettings.prototype.setPriority = function(priority) {
		if (this.m_priority !== priority) {
			this.m_priority = priority;
			this.notifyNodeChanged();
		}
	};
	oFF.QSettings.prototype.getPriority = function() {
		return this.m_priority;
	};
	oFF.QSettings.prototype.toString = function() {
		var sb = oFF.XStringBuffer.create();
		sb.append(this.getName());
		sb.append(": ");
		sb.append(this.getValue());
		sb.append(" Prio: ");
		sb.appendInt(this.getPriority());
		return sb.toString();
	};
	oFF.QSettings.prototype.isEqualTo = function(other) {
		var otherSetting;
		if (oFF.isNull(other)) {
			return false;
		}
		if (this === other) {
			return true;
		}
		otherSetting = other;
		if (!oFF.XString.isEqual(this.getName(), otherSetting.getName())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getValue(), otherSetting.getValue())) {
			return false;
		}
		if (this.getPriority() !== otherSetting.getPriority()) {
			return false;
		}
		return true;
	};
	oFF.QSettings.prototype.compareTo = function(objectToCompare) {
		var otherSetting;
		if (oFF.isNull(objectToCompare)) {
			return 1;
		}
		otherSetting = objectToCompare;
		if (!oFF.XString.isEqual(this.getName(), otherSetting.getName())) {
			return oFF.XString.compare(this.getName(), otherSetting.getName());
		}
		if (!oFF.XString.isEqual(this.getValue(), otherSetting.getValue())) {
			return oFF.XString
					.compare(this.getValue(), otherSetting.getValue());
		}
		if (this.getPriority() !== otherSetting.getPriority()) {
			return this.getPriority() - otherSetting.getPriority();
		}
		return 0;
	};
	oFF.QSettings.prototype.setSetting = function(setting) {
		oFF.XObjectExt.checkNotNull(setting,
				"The ExceptionSetting must not be null.");
		this.m_setting = setting;
		this.setName(setting.getName());
		this.notifyNodeChanged();
	};
	oFF.QSettings.prototype.getSetting = function() {
		return this.m_setting;
	};
	oFF.QExceptionAggregation = function() {
	};
	oFF.QExceptionAggregation.prototype = new oFF.QModelComponent();
	oFF.QExceptionAggregation._create = function(excepAggrMgr) {
		var object = new oFF.QExceptionAggregation();
		object._setupExceptionAggregation(excepAggrMgr);
		return object;
	};
	oFF.QExceptionAggregation.prototype.m_exceptionAggregationGroup = null;
	oFF.QExceptionAggregation.prototype.m_aggregationType = null;
	oFF.QExceptionAggregation.prototype.m_usedDimensionNames = null;
	oFF.QExceptionAggregation.prototype._setupExceptionAggregation = function(
			excepAggrMgr) {
		this.setupModelComponent(excepAggrMgr, excepAggrMgr);
		this.m_usedDimensionNames = oFF.XListOfString.create();
	};
	oFF.QExceptionAggregation.prototype._copyExceptionAggregation = function(
			origin) {
		this.m_aggregationType = origin.m_aggregationType;
		this.m_usedDimensionNames.clear();
		this.m_usedDimensionNames.addAll(origin.m_usedDimensionNames);
		if (oFF.isNull(origin.m_exceptionAggregationGroup)) {
			this.m_exceptionAggregationGroup = null;
		} else {
			if (oFF.isNull(this.m_exceptionAggregationGroup)) {
				this.m_exceptionAggregationGroup = oFF.QExceptionAggregationGroup
						._createForClone(this.getParent());
			}
			this.m_exceptionAggregationGroup
					._copyExceptionAggregationGroup(origin.m_exceptionAggregationGroup);
		}
	};
	oFF.QExceptionAggregation.prototype.releaseObject = function() {
		this.m_exceptionAggregationGroup = oFF.XObjectExt
				.release(this.m_exceptionAggregationGroup);
		this.m_usedDimensionNames = oFF.XObjectExt
				.release(this.m_usedDimensionNames);
		this.m_aggregationType = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QExceptionAggregation.prototype._getAggregationType = function() {
		return this.m_aggregationType;
	};
	oFF.QExceptionAggregation.prototype._getUsedDimensionNames = function() {
		return this.m_usedDimensionNames;
	};
	oFF.QExceptionAggregation.prototype._removeDimension = function(dimName) {
		this.m_usedDimensionNames.removeElement(dimName);
		this.notifyNodeChanged();
	};
	oFF.QExceptionAggregation.prototype._clearUsedDimensions = function() {
		this.m_usedDimensionNames.clear();
		this.notifyNodeChanged();
	};
	oFF.QExceptionAggregation.prototype._isUsedDimension = function(dimName) {
		return this.m_usedDimensionNames.contains(dimName);
	};
	oFF.QExceptionAggregation.prototype._isUsable = function(dimName) {
		var dimensionsMaxSize;
		if (oFF.isNull(this.m_exceptionAggregationGroup)) {
			return true;
		}
		dimensionsMaxSize = this.m_exceptionAggregationGroup
				._getNumberOfAllowedDimensions();
		return dimensionsMaxSize === -1
				|| this.m_exceptionAggregationGroup._supportsDimension(dimName)
				&& this.m_usedDimensionNames.size() < dimensionsMaxSize;
	};
	oFF.QExceptionAggregation.prototype._addDimension = function(dimName) {
		if (this._isUsable(dimName) && !this._isUsedDimension(dimName)) {
			this.m_usedDimensionNames.add(dimName);
			this.notifyNodeChanged();
		}
	};
	oFF.QExceptionAggregation.prototype._setAggregationType = function(
			memberType, aggrType) {
		var validationCode;
		if (oFF.notNull(aggrType)) {
			validationCode = this._setAggregationGroupAndValidate(memberType,
					aggrType);
			if (validationCode === 2) {
				throw oFF.XException
						.createIllegalArgumentException("Maximum number of allowed dimensions is exceeded!");
			} else {
				if (validationCode === 3) {
					throw oFF.XException
							.createIllegalArgumentException("Invalid use of dimensions with the aggregation type!");
				}
			}
			if (this.m_aggregationType !== aggrType) {
				this.m_aggregationType = aggrType;
				this.notifyNodeChanged();
			}
		} else {
			if (this.m_aggregationType !== aggrType) {
				this.m_aggregationType = null;
				this.m_exceptionAggregationGroup = null;
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QExceptionAggregation.prototype._setAggregationGroupAndValidate = function(
			memberType, aggrType) {
		var excepAggrMgr = this.getParent();
		this.m_exceptionAggregationGroup = excepAggrMgr
				._getExceptionAggregationGroup(memberType, aggrType);
		if (oFF.isNull(this.m_exceptionAggregationGroup)) {
			throw oFF.XException
					.createIllegalArgumentException("Aggregation or Member type is not supported for exception aggregation!");
		}
		return this._validateUsedDimensions();
	};
	oFF.QExceptionAggregation.prototype._validateUsedDimensions = function() {
		var valid = 1;
		var limitExceeded = 2;
		var invalidDim = 3;
		var maxDimSize = this.m_exceptionAggregationGroup
				._getNumberOfAllowedDimensions();
		var dimSize;
		var i;
		var dimName;
		if (maxDimSize === -1) {
			return valid;
		}
		if (oFF.XCollectionUtils.hasElements(this.m_usedDimensionNames)) {
			dimSize = this.m_usedDimensionNames.size();
			if (dimSize > maxDimSize) {
				return limitExceeded;
			}
			for (i = 0; i < dimSize; i++) {
				dimName = this.m_usedDimensionNames.get(i);
				if (!this.m_exceptionAggregationGroup
						._supportsDimension(dimName)) {
					return invalidDim;
				}
			}
		}
		return valid;
	};
	oFF.QExceptionAggregationGroup = function() {
	};
	oFF.QExceptionAggregationGroup.prototype = new oFF.QModelComponent();
	oFF.QExceptionAggregationGroup._create = function(excpAggrManager,
			groupName, membersCode, maxNumOfDim, dimensionsSetName,
			supportedAggregations) {
		var object = new oFF.QExceptionAggregationGroup();
		object._initialSetup(excpAggrManager);
		object._setupGroupMembers(groupName, membersCode, maxNumOfDim,
				dimensionsSetName, supportedAggregations);
		return object;
	};
	oFF.QExceptionAggregationGroup._createForClone = function(excpAggrManager) {
		var object = new oFF.QExceptionAggregationGroup();
		object._initialSetup(excpAggrManager);
		return object;
	};
	oFF.QExceptionAggregationGroup.prototype.m_membersCode = 0;
	oFF.QExceptionAggregationGroup.prototype.m_maxNumberOfDimensions = 0;
	oFF.QExceptionAggregationGroup.prototype.m_dimensionsSetName = null;
	oFF.QExceptionAggregationGroup.prototype.m_aggregationNames = null;
	oFF.QExceptionAggregationGroup.prototype._initialSetup = function(
			excpAggrManager) {
		this.setupModelComponent(excpAggrManager, excpAggrManager);
		this.m_aggregationNames = oFF.XListOfString.create();
	};
	oFF.QExceptionAggregationGroup.prototype._setupGroupMembers = function(
			groupName, membersCode, maxNumOfDim, dimensionsSetName,
			supportedAggregations) {
		this.setName(groupName);
		this.m_membersCode = membersCode;
		this.m_maxNumberOfDimensions = maxNumOfDim;
		this.m_dimensionsSetName = dimensionsSetName;
		this._addAllStrings(supportedAggregations, this.m_aggregationNames);
	};
	oFF.QExceptionAggregationGroup.prototype._addAllStrings = function(source,
			target) {
		var list;
		var size;
		var i;
		if (oFF.notNull(source) && source !== target) {
			list = source.getValuesAsReadOnlyListOfString();
			size = list.size();
			for (i = 0; i < size; i++) {
				target.add(list.get(i));
			}
		}
	};
	oFF.QExceptionAggregationGroup.prototype._copyExceptionAggregationGroup = function(
			origin) {
		this.setName(origin.getName());
		this.m_membersCode = origin.m_membersCode;
		this.m_maxNumberOfDimensions = origin.m_maxNumberOfDimensions;
		this.m_dimensionsSetName = origin.m_dimensionsSetName;
		this.m_aggregationNames.clear();
		this._addAllStrings(origin.m_aggregationNames, this.m_aggregationNames);
	};
	oFF.QExceptionAggregationGroup.prototype.releaseObject = function() {
		this.m_dimensionsSetName = null;
		this.m_aggregationNames = oFF.XObjectExt
				.release(this.m_aggregationNames);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QExceptionAggregationGroup.prototype._getMembersCode = function() {
		return this.m_membersCode;
	};
	oFF.QExceptionAggregationGroup.prototype._getNumberOfAllowedDimensions = function() {
		return this.m_maxNumberOfDimensions;
	};
	oFF.QExceptionAggregationGroup.prototype._getSupportedDimensionSetName = function() {
		return this.m_dimensionsSetName;
	};
	oFF.QExceptionAggregationGroup.prototype._getSupportedAggregationTypeNames = function() {
		return this.m_aggregationNames;
	};
	oFF.QExceptionAggregationGroup.prototype._supportsDimension = function(
			dimName) {
		return this.m_maxNumberOfDimensions === -1
				|| oFF.XStringUtils.isNullOrEmpty(this.m_dimensionsSetName)
				|| this.getParent()._getSupportedDimensions(
						this.m_dimensionsSetName).contains(dimName);
	};
	oFF.QExceptionAggregationGroup.prototype._supportsAggregationType = function(
			aggrType) {
		return oFF.notNull(aggrType)
				&& this.m_aggregationNames.contains(aggrType.getName());
	};
	oFF.QExceptionAggregationGroup.prototype._supportsMember = function(
			memberType) {
		return oFF.notNull(memberType)
				&& this._getSupportedMembers().contains(memberType);
	};
	oFF.QExceptionAggregationGroup.prototype._getSupportedMembers = function() {
		return oFF.MemberType.getSupportedMembersForCode(this.m_membersCode);
	};
	oFF.QExceptionAggregationManager = function() {
	};
	oFF.QExceptionAggregationManager.prototype = new oFF.QModelComponent();
	oFF.QExceptionAggregationManager._create = function(queryModel) {
		var object = new oFF.QExceptionAggregationManager();
		object._setupExceptionAggregationManager(queryModel);
		return object;
	};
	oFF.QExceptionAggregationManager.prototype.m_defaultMembersCode = 0;
	oFF.QExceptionAggregationManager.prototype.m_dimensionSets = null;
	oFF.QExceptionAggregationManager.prototype.m_exceptionAggregationGroups = null;
	oFF.QExceptionAggregationManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.EXCEPTION_AGGREGATION_MANAGER;
	};
	oFF.QExceptionAggregationManager.prototype._setupExceptionAggregationManager = function(
			queryModel) {
		this.setupModelComponent(queryModel, queryModel);
		this.m_dimensionSets = oFF.XHashMapByString.create();
		this.m_exceptionAggregationGroups = oFF.XLinkedMap.create();
		this.m_defaultMembersCode = oFF.MemberType.FORMULA_CODE
				+ oFF.MemberType.RESTRICTED_MEASURE_CODE
				+ oFF.MemberType.BASIC_MEASURE_CODE;
	};
	oFF.QExceptionAggregationManager.prototype._setupDefaultConfigurations = function() {
		this._loadBasicMeasureDefaults();
		this._loadRestrictedMeasureDefaults();
		this._loadFormulaDefaults();
	};
	oFF.QExceptionAggregationManager.prototype._loadBasicMeasureDefaults = function() {
		var allAggregationNames = oFF.XListOfString.create();
		allAggregationNames.addAll(oFF.AggregationType.getAll()
				.getKeysAsReadOnlyListOfString());
		allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL
				.getName());
		allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL_ZERO
				.getName());
		allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL
				.getName());
		allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL_ZERO
				.getName());
		if (!this.getQueryModel().supportsStatisticalAggregations()) {
			this._removeStatisticalAggregations(allAggregationNames);
		}
		this._addExceptionAggregationGroup(oFF.QExceptionAggregationGroup
				._create(this, oFF.MemberType.BASIC_MEASURE.getName(),
						oFF.MemberType.BASIC_MEASURE_CODE, -1, "",
						allAggregationNames));
	};
	oFF.QExceptionAggregationManager.prototype._loadRestrictedMeasureDefaults = function() {
		var allAggregationNames = oFF.XListOfString.create();
		var qm;
		allAggregationNames.addAll(oFF.AggregationType.getAll()
				.getKeysAsReadOnlyListOfString());
		qm = this.getQueryModel();
		if (!qm.supportsExceptionAggregationAvgNullSelectionMember()
				|| !qm.supportsAverageCountNullZero()) {
			allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL
					.getName());
			allAggregationNames
					.removeElement(oFF.AggregationType.AVERAGE_NULL_ZERO
							.getName());
		}
		if (!qm.supportsExceptionAggregationCountNullSelectionMember()
				|| !qm.supportsAverageCountNullZero()) {
			allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL
					.getName());
			allAggregationNames
					.removeElement(oFF.AggregationType.COUNT_NULL_ZERO
							.getName());
		}
		if (!qm.supportsStatisticalAggregations()) {
			this._removeStatisticalAggregations(allAggregationNames);
		}
		this._addExceptionAggregationGroup(oFF.QExceptionAggregationGroup
				._create(this, oFF.MemberType.RESTRICTED_MEASURE.getName(),
						oFF.MemberType.RESTRICTED_MEASURE_CODE, -1, "",
						allAggregationNames));
	};
	oFF.QExceptionAggregationManager.prototype._loadFormulaDefaults = function() {
		var allAggregationNames = oFF.XListOfString.create();
		var qm;
		allAggregationNames.addAll(oFF.AggregationType.getAll()
				.getKeysAsReadOnlyListOfString());
		qm = this.getQueryModel();
		if (!qm.supportsAverageCountNullZero()) {
			allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL
					.getName());
			allAggregationNames
					.removeElement(oFF.AggregationType.AVERAGE_NULL_ZERO
							.getName());
			allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL
					.getName());
			allAggregationNames
					.removeElement(oFF.AggregationType.COUNT_NULL_ZERO
							.getName());
		}
		if (!qm.supportsStatisticalAggregations()) {
			this._removeStatisticalAggregations(allAggregationNames);
		}
		this._addExceptionAggregationGroup(oFF.QExceptionAggregationGroup
				._create(this, oFF.MemberType.FORMULA.getName(),
						oFF.MemberType.FORMULA_CODE, -1, "",
						allAggregationNames));
	};
	oFF.QExceptionAggregationManager.prototype._removeStatisticalAggregations = function(
			supportedAggregationTypes) {
		supportedAggregationTypes.removeElement(oFF.AggregationType.MEDIAN
				.getName());
		supportedAggregationTypes.removeElement(oFF.AggregationType.MEDIAN_NULL
				.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.MEDIAN_NULL_ZERO.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.FIRST_QUARTILE.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.FIRST_QUARTILE_NULL
						.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.FIRST_QUARTILE_NULL_ZERO
						.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.THIRD_QUARTILE.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.THIRD_QUARTILE_NULL
						.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.THIRD_QUARTILE_NULL_ZERO
						.getName());
		supportedAggregationTypes.removeElement(oFF.AggregationType.OUTLIERS
				.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.OUTLIERS_NULL.getName());
		supportedAggregationTypes
				.removeElement(oFF.AggregationType.OUTLIERS_NULL_ZERO.getName());
	};
	oFF.QExceptionAggregationManager.prototype._copyExceptionAggregationManager = function(
			origin) {
		this._clear();
		this._copyDimensionSets(origin.m_dimensionSets);
		this
				._copyExceptionAggregationGroups(origin.m_exceptionAggregationGroups);
	};
	oFF.QExceptionAggregationManager.prototype._copyDimensionSets = function(
			originDimensionSets) {
		var keys;
		var keysSize;
		var k;
		var dimSetName;
		var dimensions;
		if (oFF.notNull(originDimensionSets)) {
			keys = originDimensionSets.getKeysAsReadOnlyListOfString();
			keysSize = keys.size();
			for (k = 0; k < keysSize; k++) {
				dimSetName = keys.get(k);
				dimensions = oFF.XListOfString.create();
				dimensions.addAll(originDimensionSets.getByKey(dimSetName));
				this._addDimensionSet(dimSetName, dimensions);
			}
		}
	};
	oFF.QExceptionAggregationManager.prototype._copyExceptionAggregationGroups = function(
			originGroups) {
		var groupSize;
		var i;
		var clonedGroup;
		if (oFF.notNull(originGroups)) {
			groupSize = originGroups.size();
			for (i = 0; i < groupSize; i++) {
				clonedGroup = oFF.QExceptionAggregationGroup
						._createForClone(this);
				clonedGroup._copyExceptionAggregationGroup(originGroups.get(i));
				this._addExceptionAggregationGroup(clonedGroup);
			}
		}
	};
	oFF.QExceptionAggregationManager.prototype.mergeDeepRecursive = function(
			settings, other) {
		this._copyExceptionAggregationManager(other);
	};
	oFF.QExceptionAggregationManager.prototype.releaseObject = function() {
		this.m_dimensionSets = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_dimensionSets);
		this.m_exceptionAggregationGroups = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_exceptionAggregationGroups);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QExceptionAggregationManager.prototype._clear = function() {
		this.m_dimensionSets.clear();
		this.m_exceptionAggregationGroups.clear();
	};
	oFF.QExceptionAggregationManager.prototype._getExceptionAggregationGroups = function() {
		return this.m_exceptionAggregationGroups;
	};
	oFF.QExceptionAggregationManager.prototype._supportsAggregationType = function(
			aggrType) {
		return oFF.notNull(aggrType)
				&& this._getSupportedAggregationTypesForMember(null).contains(
						aggrType.getName());
	};
	oFF.QExceptionAggregationManager.prototype._getSupportedAggregationTypesForMember = function(
			memberType) {
		var groupsSize = this.m_exceptionAggregationGroups.size();
		var aggrTypeList = oFF.XListOfString.create();
		var i;
		var excepAggrGroup;
		for (i = 0; i < groupsSize; i++) {
			excepAggrGroup = this.m_exceptionAggregationGroups.get(i);
			if (excepAggrGroup._supportsMember(memberType)
					|| oFF.isNull(memberType)) {
				aggrTypeList.addAll(excepAggrGroup
						._getSupportedAggregationTypeNames());
			}
		}
		return aggrTypeList;
	};
	oFF.QExceptionAggregationManager.prototype._getAllSupportedAggregationTypes = function() {
		return this._getSupportedAggregationTypesForMember(null);
	};
	oFF.QExceptionAggregationManager.prototype._getDimensionSets = function() {
		return this.m_dimensionSets;
	};
	oFF.QExceptionAggregationManager.prototype._getSupportedDimensions = function(
			dimensionSetName) {
		return oFF.XStringUtils.isNullOrEmpty(dimensionSetName) ? oFF.XListOfString
				.create()
				: this.m_dimensionSets.getByKey(dimensionSetName);
	};
	oFF.QExceptionAggregationManager.prototype._getExceptionAggregationGroupNames = function() {
		return this.m_exceptionAggregationGroups
				.getKeysAsReadOnlyListOfString();
	};
	oFF.QExceptionAggregationManager.prototype._getMaxNumberOfAllowedDimensions = function(
			memberType, aggrType) {
		var excepAggrGroup = this._getExceptionAggregationGroup(memberType,
				aggrType);
		return oFF.isNull(excepAggrGroup) ? -1 : excepAggrGroup
				._getNumberOfAllowedDimensions();
	};
	oFF.QExceptionAggregationManager.prototype._getSupportedDimensionsForMemberAndAggregation = function(
			memberType, aggrType) {
		var excepAggrGroup = this._getExceptionAggregationGroup(memberType,
				aggrType);
		return oFF.isNull(excepAggrGroup) ? oFF.XListOfString.create() : this
				._getSupportedDimensions(excepAggrGroup
						._getSupportedDimensionSetName());
	};
	oFF.QExceptionAggregationManager.prototype._getSupportedMembersForAggregationType = function(
			aggrType) {
		var aggGroup = this._getExceptionAggregationGroup(null, aggrType);
		return oFF.isNull(aggrType) || oFF.isNull(aggGroup) ? oFF.XList
				.create() : oFF.MemberType.getSupportedMembersForCode(aggGroup
				._getMembersCode());
	};
	oFF.QExceptionAggregationManager.prototype._getExceptionAggregationGroup = function(
			memberType, aggrType) {
		var groupsSize;
		var i;
		var excepAggrGroup;
		if (oFF.notNull(aggrType)) {
			if (!this._supportsAggregationType(aggrType)) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate3("The backend does not support '",
										aggrType.getName(),
										"' as exception aggregation!"));
			}
			if (oFF.XCollectionUtils
					.hasElements(this.m_exceptionAggregationGroups)) {
				groupsSize = this.m_exceptionAggregationGroups.size();
				for (i = 0; i < groupsSize; i++) {
					excepAggrGroup = this.m_exceptionAggregationGroups.get(i);
					if (excepAggrGroup._supportsAggregationType(aggrType)
							&& (oFF.isNull(memberType) || excepAggrGroup
									._supportsMember(memberType))) {
						return excepAggrGroup;
					}
				}
			}
		}
		return null;
	};
	oFF.QExceptionAggregationManager.prototype._getDefaultMembersCode = function() {
		return this.m_defaultMembersCode;
	};
	oFF.QExceptionAggregationManager.prototype._addDimensionSet = function(
			dimSetName, supportedDimensions) {
		this.m_dimensionSets.put(dimSetName, supportedDimensions);
	};
	oFF.QExceptionAggregationManager.prototype._addExceptionAggregationGroup = function(
			excepAggrGroup) {
		this.m_exceptionAggregationGroups.add(excepAggrGroup);
	};
	oFF.QField = function() {
	};
	oFF.QField.prototype = new oFF.QModelComponent();
	oFF.QField._createField = function(context, dimension, type) {
		var attribute = new oFF.QField();
		attribute.setupField(context, dimension, type);
		return attribute;
	};
	oFF.QField.prototype.m_metadata = null;
	oFF.QField.prototype.m_attributeName = null;
	oFF.QField.prototype.m_obtainability = null;
	oFF.QField.prototype.m_textTransformationType = null;
	oFF.QField.prototype.m_alwaysRequested = false;
	oFF.QField.prototype.m_displayFormat = null;
	oFF.QField.prototype.cloneOlapComponent = function(context, parent) {
		var clone = oFF.QField._createField(context, null, this
				.getPresentationType());
		clone.copyField(this);
		return clone;
	};
	oFF.QField.prototype.copyField = function(origin) {
		var metadata;
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_attributeName = origin.m_attributeName;
		this.m_obtainability = origin.m_obtainability;
		this.m_textTransformationType = origin.m_textTransformationType;
		this.m_alwaysRequested = origin.m_alwaysRequested;
		this.m_displayFormat = origin.m_displayFormat;
		metadata = origin.getMetadata();
		if (oFF.notNull(metadata)) {
			this.m_metadata = oFF.XWeakReferenceUtil
					.getWeakRef(this.getOlapEnv().getFieldMetadataByKey(
							metadata.getCacheKey()));
		}
	};
	oFF.QField.prototype.setupField = function(context, dimension, type) {
		this.setupModelComponent(context, dimension);
		if (type === oFF.PresentationType.KEY) {
			this.setText("Key");
			this.setName("KEY");
		}
	};
	oFF.QField.prototype.releaseObject = function() {
		var metadata = this.getMetadata();
		if (oFF.notNull(metadata)) {
			this.getOlapEnv().releaseFieldMetadataByKey(metadata.getCacheKey());
		}
		this.m_metadata = oFF.XObjectExt.release(this.m_metadata);
		this.m_obtainability = null;
		this.m_attributeName = null;
		this.m_textTransformationType = null;
		this.m_displayFormat = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QField.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FIELD;
	};
	oFF.QField.prototype.setDimension = function(dimension) {
		this.setParent(dimension);
	};
	oFF.QField.prototype.getDimension = function() {
		return this.getParentComponent();
	};
	oFF.QField.prototype.getDimensionBase = function() {
		return this.getParentComponent();
	};
	oFF.QField.prototype.getResultSetSorting = function() {
		var queryModel = this.getQueryModel();
		var sortManager;
		if (oFF.isNull(queryModel)) {
			return null;
		}
		sortManager = queryModel.getSortingManager();
		return sortManager.getFieldSorting(this, true);
	};
	oFF.QField.prototype.supportsSorting = function() {
		var queryModel = this.getQueryModel();
		var sortManager;
		if (oFF.isNull(queryModel)) {
			return false;
		}
		sortManager = queryModel.getSortingManager();
		return sortManager.supportsFieldSorting(this);
	};
	oFF.QField.prototype.hasSorting = function() {
		var queryModel = this.getQueryModel();
		var sortManager;
		var fieldSorting;
		if (oFF.isNull(queryModel)) {
			return false;
		}
		sortManager = queryModel.getSortingManager();
		fieldSorting = sortManager.getFieldSorting(this, false);
		return oFF.notNull(fieldSorting);
	};
	oFF.QField.prototype.getPresentationType = function() {
		var metadata = this.getMetadata();
		if (oFF.isNull(metadata)) {
			return oFF.PresentationType.UNDEFINED;
		}
		return metadata.getPresentationType();
	};
	oFF.QField.prototype.getValueType = function() {
		return this.getMetadata().getValueType();
	};
	oFF.QField.prototype.createFieldLiteralValue = function() {
		return oFF.QFieldValue.createLiteral(this.getContext(), this);
	};
	oFF.QField.prototype.isKeyField = function() {
		return this.getMetadata().isKeyField();
	};
	oFF.QField.prototype.isHierarchyKeyField = function() {
		return this.getMetadata().isHierarchyKeyField();
	};
	oFF.QField.prototype.isFlatKeyField = function() {
		return this.getMetadata().isFlatKeyField();
	};
	oFF.QField.prototype.isDefaultTextField = function() {
		return this.getMetadata().isDefaultTextField();
	};
	oFF.QField.prototype.getAttribute = function() {
		var dimension = this.getDimension();
		var universalDisplayHierarchy = dimension
				.getUniversalDisplayHierarchy();
		var originalField;
		if (oFF.notNull(universalDisplayHierarchy)) {
			originalField = universalDisplayHierarchy
					.mapFieldToOriginalDimension(this);
			if (oFF.notNull(originalField) && originalField !== this) {
				return originalField.getAttribute();
			}
		}
		return dimension.getAttributeByName(this.m_attributeName);
	};
	oFF.QField.prototype.setAttribute = function(attribute) {
		this.m_attributeName = attribute.getName();
	};
	oFF.QField.prototype.getDecimals = function() {
		return this.getMetadata().getDecimals();
	};
	oFF.QField.prototype.getPrecision = function() {
		return this.getMetadata().getPrecision();
	};
	oFF.QField.prototype.getIsLowerCaseEnabled = function() {
		return this.getMetadata().getIsLowerCaseEnabled();
	};
	oFF.QField.prototype.getConversionRoutine = function() {
		return this.getMetadata().getConversionRoutine();
	};
	oFF.QField.prototype.getInitialValue = function() {
		return this.getMetadata().getInitialValue();
	};
	oFF.QField.prototype.getLength = function() {
		return this.getMetadata().getLength();
	};
	oFF.QField.prototype.getInfoObjectType = function() {
		return this.getMetadata().getInfoObjectType();
	};
	oFF.QField.prototype.getVisibilityType = function() {
		return this.getMetadata().getVisibilityType();
	};
	oFF.QField.prototype.getDependencyFields = function() {
		return this.getMetadata().getDependencyFields();
	};
	oFF.QField.prototype.getAliasName = function() {
		return this.getMetadata().getAliasName();
	};
	oFF.QField.prototype.isDisplayAttributeField = function() {
		return this.getMetadata().isDisplayAttributeField();
	};
	oFF.QField.prototype.getUsageType = function() {
		return this.getMetadata().getUsageType();
	};
	oFF.QField.prototype.isAlwaysRequested = function() {
		return this.m_alwaysRequested;
	};
	oFF.QField.prototype.setAlwaysRequested = function(alwaysRequested) {
		this.m_alwaysRequested = alwaysRequested;
	};
	oFF.QField.prototype.getUpperBound = function() {
		return this.getMetadata().getUpperBound();
	};
	oFF.QField.prototype.getLowerBound = function() {
		return this.getMetadata().getLowerBound();
	};
	oFF.QField.prototype.supportsSpatialTransformation = function() {
		return this.getQueryModel().supportsSpatialTransformation();
	};
	oFF.QField.prototype.setTextTransformation = function(
			textTransformationType) {
		if (textTransformationType
				.isTypeOf(oFF.TextTransformationType.SPATIAL_TRANSFORMATION)
				&& !this.supportsSpatialTransformation()) {
			this.m_textTransformationType = null;
			return;
		}
		this.m_textTransformationType = textTransformationType;
	};
	oFF.QField.prototype.getTextTransformation = function() {
		return this.m_textTransformationType;
	};
	oFF.QField.prototype.isHierarchyPathField = function() {
		return this.getMetadata().isHierarchyPathField();
	};
	oFF.QField.prototype.isCubeBlendingPropertiesField = function() {
		return this.getMetadata().isCubeBlendingPropertiesField();
	};
	oFF.QField.prototype.getMappedColumnName = function() {
		return this.getMetadata().getMappedColumnName();
	};
	oFF.QField.prototype.getNavigationalAttributeDescription = function() {
		return this.getMetadata().getNavigationalAttributeDescription();
	};
	oFF.QField.prototype.getAttributeType = function() {
		return this.getMetadata().getAttributeType();
	};
	oFF.QField.prototype.isFilterable = function() {
		return this.getMetadata().isFilterable();
	};
	oFF.QField.prototype.getSqlType = function() {
		return this.getMetadata().getSqlType();
	};
	oFF.QField.prototype.getSemanticType = function() {
		return this.getMetadata().getSemanticType();
	};
	oFF.QField.prototype.isEqualTo = function(other) {
		var xOther;
		if (oFF.isNull(other)) {
			return false;
		}
		if (this === other) {
			return true;
		}
		xOther = other;
		if (this.getAttribute() !== xOther.getAttribute()) {
			return false;
		}
		if (this.getDimension() !== xOther.getDimension()) {
			return false;
		}
		return oFF.XString.isEqual(this.getName(), xOther.getName());
	};
	oFF.QField.prototype.setMetadata = function(metadata) {
		this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(metadata);
	};
	oFF.QField.prototype.getMetadata = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_metadata);
	};
	oFF.QField.prototype.getMetadataBase = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_metadata);
	};
	oFF.QField.prototype.setValueType = oFF.noSupport;
	oFF.QField.prototype.isHierarchyNavigationField = function() {
		if (!this.getModelCapabilities().supportsHierarchyNavigationField()) {
			return this.isHierarchyKeyField();
		}
		return this.getMetadata().isHierarchyNavigationField();
	};
	oFF.QField.prototype.setDisplayFormat = function(displayFormat) {
		this.m_displayFormat = displayFormat;
	};
	oFF.QField.prototype.getDisplayFormat = function() {
		return this.m_displayFormat;
	};
	oFF.QField.prototype.setObtainability = function(obtainability) {
		if (this.m_obtainability !== obtainability) {
			this.m_obtainability = obtainability;
			if (this.getDimension().getResultSetFields().contains(this)) {
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QField.prototype.getObtainability = function() {
		return this.m_obtainability;
	};
	oFF.QField.prototype.getMimeType = function() {
		return this.getMetadata().getMimeType();
	};
	oFF.QFieldContainer = function() {
	};
	oFF.QFieldContainer.prototype = new oFF.QModelComponent();
	oFF.QFieldContainer.create = function(context, dimension) {
		var object = new oFF.QFieldContainer();
		object.setupFieldContainer(context, dimension);
		return object;
	};
	oFF.QFieldContainer.prototype.m_defaultResultSetFields = null;
	oFF.QFieldContainer.prototype.m_hasFixedResultSetFields = false;
	oFF.QFieldContainer.prototype.m_resultSetFields = null;
	oFF.QFieldContainer.prototype.m_selectorFields = null;
	oFF.QFieldContainer.prototype.m_allFields = null;
	oFF.QFieldContainer.prototype.m_flatFieldMapByType = null;
	oFF.QFieldContainer.prototype.m_hierarchyFieldMapByType = null;
	oFF.QFieldContainer.prototype.m_flatKeyField = null;
	oFF.QFieldContainer.prototype.m_flatTextField = null;
	oFF.QFieldContainer.prototype.m_flatDisplayKeyField = null;
	oFF.QFieldContainer.prototype.m_hierarchyKeyField = null;
	oFF.QFieldContainer.prototype.m_hierarchyTextField = null;
	oFF.QFieldContainer.prototype.m_hierarchyDisplayKeyField = null;
	oFF.QFieldContainer.prototype.m_hierarchyPathField = null;
	oFF.QFieldContainer.prototype.m_hierarchyNavigationField = null;
	oFF.QFieldContainer.prototype.m_geoShapeField = null;
	oFF.QFieldContainer.prototype.m_geoPointField = null;
	oFF.QFieldContainer.prototype.m_geoLevelField = null;
	oFF.QFieldContainer.prototype.m_geoAreaNameField = null;
	oFF.QFieldContainer.prototype.m_cubeBlendingPropertiesField = null;
	oFF.QFieldContainer.prototype.getFieldFromDimensionIfNull = function(
			fieldName) {
		var fieldByName = this.m_allFields.getByKey(fieldName);
		if (oFF.isNull(fieldByName)) {
			fieldByName = this.getDimension().getFieldByName(fieldName);
		}
		return fieldByName;
	};
	oFF.QFieldContainer.prototype.copyFieldContainer = function(origin) {
		var dimension;
		var isCalcDim;
		var size;
		var context;
		var i;
		var origField;
		var cloneField;
		var byKey;
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_hasFixedResultSetFields = origin.m_hasFixedResultSetFields;
		dimension = this.getDimension();
		isCalcDim = dimension.getDimensionType() === oFF.DimensionType.CALCULATED_DIMENSION;
		size = origin.m_allFields.size();
		context = this.getContext();
		for (i = 0; i < size; i++) {
			origField = origin.m_allFields.get(i);
			if (isCalcDim) {
				cloneField = oFF.QFieldCalcDim._createFieldCalcDim(context,
						dimension, origField.getPresentationType());
			} else {
				cloneField = oFF.QField._createField(context, dimension,
						origField.getPresentationType());
			}
			cloneField.copyField(origField);
			this.m_allFields.addInternal(cloneField);
			this.addToFieldMaps(cloneField);
		}
		this.m_allFields.copyFieldList(origin.m_allFields);
		size = origin.m_resultSetFields.size();
		for (i = 0; i < size; i++) {
			this.m_resultSetFields.addInternal(this.m_allFields
					.getByKey(origin.m_resultSetFields.get(i).getName()));
		}
		this.m_resultSetFields.copyFieldList(origin.m_resultSetFields);
		size = origin.m_defaultResultSetFields.size();
		for (i = 0; i < size; i++) {
			byKey = this.m_allFields.getByKey(origin.m_defaultResultSetFields
					.get(i).getName());
			this.m_defaultResultSetFields.add(byKey);
			this.m_selectorFields.addInternal(byKey);
		}
		this.m_selectorFields.copyFieldList(origin.m_selectorFields);
		if (oFF.notNull(origin.m_flatKeyField)) {
			this.setFlatKeyField(this.getFieldFromDimensionIfNull(origin
					.getFlatKeyField().getName()));
		}
		if (oFF.notNull(origin.m_flatTextField)) {
			this.setFlatTextField(this.getFieldFromDimensionIfNull(origin
					.getFlatTextField().getName()));
		}
		if (oFF.notNull(origin.m_flatDisplayKeyField)) {
			this.setFlatDisplayKeyField(this.getFieldFromDimensionIfNull(origin
					.getFlatDisplayKeyField().getName()));
		}
		if (oFF.notNull(origin.m_hierarchyKeyField)) {
			this.setHierachyKeyField(this.getFieldFromDimensionIfNull(origin
					.getHierarchyKeyField().getName()));
		}
		if (oFF.notNull(origin.m_hierarchyTextField)) {
			this.setHierarchyTextField(this.getFieldFromDimensionIfNull(origin
					.getHierarchyTextField().getName()));
		}
		if (oFF.notNull(origin.m_hierarchyDisplayKeyField)) {
			this.setHierarchyDisplayKeyField(this
					.getFieldFromDimensionIfNull(origin
							.getHierarchyDisplayKeyField().getName()));
		}
		if (oFF.notNull(origin.m_hierarchyPathField)) {
			this.setHierarchyPathField(this.getFieldFromDimensionIfNull(origin
					.getHierarchyPathField().getName()));
		}
		if (oFF.notNull(origin.m_hierarchyNavigationField)) {
			this.setHierachyNavigationField(this
					.getFieldFromDimensionIfNull(origin
							.getHierarchyNavigationField().getName()));
		}
		if (oFF.notNull(origin.m_geoShapeField)) {
			this.setGeoShapeField(this.getFieldFromDimensionIfNull(origin
					.getGeoShapeField().getName()));
		}
		if (oFF.notNull(origin.m_geoPointField)) {
			this.setGeoPointField(this.getFieldFromDimensionIfNull(origin
					.getGeoPointField().getName()));
		}
		if (oFF.notNull(origin.m_geoLevelField)) {
			this.setGeoLevelField(this.getFieldFromDimensionIfNull(origin
					.getGeoLevelField().getName()));
		}
		if (oFF.notNull(origin.m_geoAreaNameField)) {
			this.setGeoAreaNameField(this.getFieldFromDimensionIfNull(origin
					.getGeoAreaNameField().getName()));
		}
		if (oFF.notNull(origin.m_cubeBlendingPropertiesField)) {
			this.setCubeBlendingPropertiesField(this
					.getFieldFromDimensionIfNull(origin
							.getCubeBlendingPropertiesField().getName()));
		}
	};
	oFF.QFieldContainer.prototype.addToFieldMaps = function(cloneField) {
		var usageType = cloneField.getUsageType();
		var presentationName = cloneField.getPresentationType().getName();
		if (usageType !== oFF.FieldUsageType.FLAT) {
			if (!this.m_hierarchyFieldMapByType.containsKey(presentationName)) {
				this.m_hierarchyFieldMapByType
						.put(presentationName, cloneField);
			}
		}
		if (!this.m_flatFieldMapByType.containsKey(presentationName)) {
			this.m_flatFieldMapByType.put(presentationName, cloneField);
		}
	};
	oFF.QFieldContainer.prototype.setupFieldContainer = function(context,
			dimension) {
		this.setupModelComponentWithName(context, dimension, "Fields");
		this.m_defaultResultSetFields = oFF.XListWeakRef.create();
		this.m_resultSetFields = oFF.QFieldList.createFieldList(this,
				"Result Set Fields");
		this.m_selectorFields = oFF.QFieldList.createFieldList(this,
				"Selector Fields");
		this.m_allFields = oFF.QFieldList.createFieldList(this, "All Fields");
		this.m_flatFieldMapByType = oFF.XWeakMap.create();
		this.m_hierarchyFieldMapByType = oFF.XWeakMap.create();
	};
	oFF.QFieldContainer.prototype.releaseObject = function() {
		this.m_defaultResultSetFields = oFF.XObjectExt
				.release(this.m_defaultResultSetFields);
		this.m_resultSetFields = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_resultSetFields);
		this.m_selectorFields = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_selectorFields);
		this.m_allFields = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_allFields);
		this.m_flatFieldMapByType = oFF.XObjectExt
				.release(this.m_flatFieldMapByType);
		this.m_hierarchyFieldMapByType = oFF.XObjectExt
				.release(this.m_hierarchyFieldMapByType);
		this.m_flatKeyField = null;
		this.m_flatTextField = null;
		this.m_flatDisplayKeyField = null;
		this.m_hierarchyKeyField = null;
		this.m_hierarchyTextField = null;
		this.m_hierarchyDisplayKeyField = null;
		this.m_hierarchyPathField = null;
		this.m_hierarchyNavigationField = null;
		this.m_geoShapeField = null;
		this.m_geoPointField = null;
		this.m_geoLevelField = null;
		this.m_geoAreaNameField = null;
		this.m_cubeBlendingPropertiesField = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFieldContainer.prototype.reinit = function(origin) {
		this.m_defaultResultSetFields.clear();
		oFF.XCollectionUtils
				.releaseEntriesFromCollection(this.m_resultSetFields);
		this.m_resultSetFields.clear();
		oFF.XCollectionUtils
				.releaseEntriesFromCollection(this.m_selectorFields);
		this.m_selectorFields.clear();
		oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_allFields);
		this.m_allFields.clear();
		this.m_flatFieldMapByType.clear();
		this.m_hierarchyFieldMapByType.clear();
		this.m_flatKeyField = null;
		this.m_flatTextField = null;
		this.m_flatDisplayKeyField = null;
		this.m_hierarchyKeyField = null;
		this.m_hierarchyTextField = null;
		this.m_hierarchyDisplayKeyField = null;
		this.m_hierarchyPathField = null;
		this.m_hierarchyNavigationField = null;
		this.m_geoShapeField = null;
		this.m_geoPointField = null;
		this.m_geoLevelField = null;
		this.m_geoAreaNameField = null;
		this.m_cubeBlendingPropertiesField = null;
		this.copyFieldContainer(origin);
	};
	oFF.QFieldContainer.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FIELD_CONTAINER;
	};
	oFF.QFieldContainer.prototype.getFields = function() {
		return this.m_allFields;
	};
	oFF.QFieldContainer.prototype.getFieldByName = function(name) {
		return this.m_allFields.getByKey(name);
	};
	oFF.QFieldContainer.prototype.getFieldByNameOrAlias = function(name) {
		return this.m_allFields.getFieldByNameOrAlias(name);
	};
	oFF.QFieldContainer.prototype.getFirstFieldByType = function(type) {
		return this.m_allFields.getFirstFieldByType(type);
	};
	oFF.QFieldContainer.prototype.getResultSetFields = function() {
		return this.m_resultSetFields;
	};
	oFF.QFieldContainer.prototype.getSelectorFields = function() {
		return this.m_selectorFields;
	};
	oFF.QFieldContainer.prototype.getFieldByPresentationType = function(
			presentationType) {
		var field = null;
		if (oFF.notNull(presentationType)) {
			if (presentationType === oFF.PresentationType.ACTIVE_KEY) {
				field = this.getKeyField();
			} else {
				if (presentationType === oFF.PresentationType.ACTIVE_DISPLAY_KEY) {
					field = this.getDisplayKeyField();
				} else {
					if (presentationType === oFF.PresentationType.ACTIVE_TEXT) {
						field = this.getTextField();
					} else {
						if (this.getDimension().isHierarchyActive()) {
							field = this.m_hierarchyFieldMapByType
									.getByKey(presentationType.getName());
						} else {
							field = this.m_flatFieldMapByType
									.getByKey(presentationType.getName());
						}
					}
				}
			}
		}
		return field;
	};
	oFF.QFieldContainer.prototype.getKeyField = function() {
		if (this.getDimension().isHierarchyActive()) {
			return this.getHierarchyKeyField();
		}
		return this.getFlatKeyField();
	};
	oFF.QFieldContainer.prototype.getKeyFieldExt = function(context) {
		if (context === oFF.QContextType.RESULT_SET) {
			if (this.getDimension().isHierarchyActive()) {
				return this.getHierarchyKeyField();
			}
			return this.getFlatKeyField();
		}
		if (this.getDimension().isSelectorHierarchyActive()) {
			return this.getHierarchyKeyField();
		}
		return this.getFlatKeyField();
	};
	oFF.QFieldContainer.prototype.getTextField = function() {
		if (this.getDimension().isHierarchyActive()) {
			return this.getHierarchyTextField();
		}
		return this.getFlatTextField();
	};
	oFF.QFieldContainer.prototype.getDisplayKeyField = function() {
		if (this.getDimension().isHierarchyActive()) {
			return this.getHierarchyDisplayKeyField();
		}
		return this.getFlatDisplayKeyField();
	};
	oFF.QFieldContainer.prototype.getFlatKeyField = function() {
		var size;
		var i;
		var field;
		if (oFF.isNull(this.m_flatKeyField)) {
			size = this.m_allFields.size();
			for (i = 0; i < size; i++) {
				field = this.m_allFields.get(i);
				if (field.isFlatKeyField()) {
					this.m_flatKeyField = oFF.XWeakReferenceUtil
							.getWeakRef(field);
					break;
				}
			}
			if (oFF.isNull(this.m_flatKeyField)) {
				this.m_flatKeyField = oFF.XWeakReferenceUtil.getWeakRef(this
						.getFirstFieldByType(oFF.PresentationType.KEY));
			}
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_flatKeyField);
	};
	oFF.QFieldContainer.prototype.getFlatTextField = function() {
		var size;
		var i;
		var field;
		if (oFF.isNull(this.m_flatTextField)) {
			size = this.m_allFields.size();
			for (i = 0; i < size; i++) {
				field = this.m_allFields.get(i);
				if (field.isDefaultTextField()) {
					this.m_flatTextField = oFF.XWeakReferenceUtil
							.getWeakRef(field);
					break;
				}
			}
			if (this.getDimension().getDimensionType().isTypeOf(
					oFF.DimensionType.ABSTRACT_STRUCTURE)
					&& oFF.isNull(this.m_flatTextField)) {
				this.m_flatTextField = oFF.XWeakReferenceUtil.getWeakRef(this
						.getFirstFieldByType(oFF.PresentationType.TEXT));
			}
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_flatTextField);
	};
	oFF.QFieldContainer.prototype.getFlatDisplayKeyField = function() {
		if (oFF.isNull(this.m_flatDisplayKeyField)) {
			this.m_flatDisplayKeyField = oFF.XWeakReferenceUtil.getWeakRef(this
					.getFirstFieldByType(oFF.PresentationType.DISPLAY_KEY));
			if (oFF.isNull(this.m_flatDisplayKeyField)) {
				this.m_flatDisplayKeyField = oFF.XWeakReferenceUtil
						.getWeakRef(this.getFlatKeyField());
			}
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_flatDisplayKeyField);
	};
	oFF.QFieldContainer.prototype.setFlatKeyField = function(field) {
		this.m_flatKeyField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.setFlatTextField = function(field) {
		this.m_flatTextField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.setFlatDisplayKeyField = function(field) {
		this.m_flatDisplayKeyField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.getHierarchyKeyField = function() {
		if (oFF.isNull(this.m_hierarchyKeyField)) {
			this.m_hierarchyKeyField = oFF.XWeakReferenceUtil.getWeakRef(this
					.getFirstFieldByType(oFF.PresentationType.HIERARCHY_KEY));
			if (oFF.isNull(this.m_hierarchyKeyField)) {
				this.m_hierarchyKeyField = oFF.XWeakReferenceUtil
						.getWeakRef(this.getFlatKeyField());
			}
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyKeyField);
	};
	oFF.QFieldContainer.prototype.getHierarchyTextField = function() {
		if (oFF.isNull(this.m_hierarchyTextField)) {
			this.m_hierarchyTextField = oFF.XWeakReferenceUtil.getWeakRef(this
					.getFirstFieldByType(oFF.PresentationType.HIERARCHY_TEXT));
			if (oFF.isNull(this.m_hierarchyTextField)) {
				this.m_hierarchyTextField = oFF.XWeakReferenceUtil
						.getWeakRef(this.getFlatTextField());
			}
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyTextField);
	};
	oFF.QFieldContainer.prototype.getHierarchyDisplayKeyField = function() {
		if (oFF.isNull(this.m_hierarchyDisplayKeyField)) {
			this.m_hierarchyDisplayKeyField = oFF.XWeakReferenceUtil
					.getWeakRef(this
							.getFirstFieldByType(oFF.PresentationType.HIERARCHY_DISPLAY_KEY));
			if (oFF.isNull(this.m_hierarchyDisplayKeyField)) {
				this.m_hierarchyDisplayKeyField = oFF.XWeakReferenceUtil
						.getWeakRef(this.getFlatDisplayKeyField());
			}
		}
		return oFF.XWeakReferenceUtil
				.getHardRef(this.m_hierarchyDisplayKeyField);
	};
	oFF.QFieldContainer.prototype.setHierachyKeyField = function(field) {
		this.m_hierarchyKeyField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.setHierarchyTextField = function(field) {
		this.m_hierarchyTextField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.setHierarchyDisplayKeyField = function(field) {
		this.m_hierarchyDisplayKeyField = oFF.XWeakReferenceUtil
				.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.addField = function(field) {
		this.addFieldInternal(field);
		this.notifyNodeChanged();
	};
	oFF.QFieldContainer.prototype.addFieldInternal = function(field) {
		this.m_allFields.add(field);
		this.addToFieldMaps(field);
	};
	oFF.QFieldContainer.prototype.addNewField = function(type, name, text) {
		var dimension = this.getDimension();
		var field;
		if (dimension.getDimensionType() === oFF.DimensionType.CALCULATED_DIMENSION) {
			field = oFF.QFieldCalcDim._createFieldCalcDim(this.getContext(),
					dimension, type);
		} else {
			field = oFF.QField._createField(this.getContext(), dimension, type);
		}
		field.setName(name);
		field.setText(text);
		this.addField(field);
		return field;
	};
	oFF.QFieldContainer.prototype.getDimension = function() {
		return this.getParentComponent();
	};
	oFF.QFieldContainer.prototype.notifyChildChanged = function(changedNodes) {
		var dimension;
		var fieldLayoutType;
		var size;
		var i;
		var next;
		this.queueEventing();
		oFF.QModelComponent.prototype.notifyChildChanged.call(this,
				changedNodes);
		dimension = this.getDimension();
		fieldLayoutType = this.getFieldLayoutType();
		size = changedNodes.size();
		for (i = 0; i < size; i++) {
			next = changedNodes.get(i);
			if (next === this.m_selectorFields) {
				dimension.setSelectorFieldLayoutType(fieldLayoutType);
			} else {
				if (next === this.m_resultSetFields) {
					dimension.setFieldLayoutType(fieldLayoutType);
				}
			}
		}
		this.resumeEventing();
	};
	oFF.QFieldContainer.prototype.getFieldLayoutType = function() {
		return oFF.FieldLayoutType.FIELD_BASED;
	};
	oFF.QFieldContainer.prototype.isComponentNode = function() {
		return true;
	};
	oFF.QFieldContainer.prototype.getIndexedChildren = function() {
		var children = oFF.XList.create();
		children.add(this.m_allFields);
		children.add(this.m_resultSetFields);
		children.add(this.m_selectorFields);
		return children.getIterator();
	};
	oFF.QFieldContainer.prototype.getFieldIterator = function() {
		return this.m_allFields.getIterator();
	};
	oFF.QFieldContainer.prototype.getFlatFieldsList = function() {
		return this.getFieldsList(oFF.FieldUsageType.FLAT);
	};
	oFF.QFieldContainer.prototype.getHierarchyFieldsList = function() {
		return this.getFieldsList(oFF.FieldUsageType.HIERARCHY);
	};
	oFF.QFieldContainer.prototype.getFieldsList = function(usageType) {
		var fields = oFF.XListOfNameObject.create();
		var size = this.m_allFields.size();
		var i;
		var field;
		var currentUsageType;
		for (i = 0; i < size; i++) {
			field = this.m_allFields.get(i);
			currentUsageType = field.getUsageType();
			if (field.isAlwaysRequested()
					|| currentUsageType === oFF.FieldUsageType.ALL
					|| currentUsageType === usageType) {
				fields.add(field);
			}
		}
		return fields;
	};
	oFF.QFieldContainer.prototype.getHierarchyPathField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyPathField);
	};
	oFF.QFieldContainer.prototype.setHierarchyPathField = function(field) {
		this.m_hierarchyPathField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.getDefaultResultSetFields = function() {
		return this.m_defaultResultSetFields;
	};
	oFF.QFieldContainer.prototype.addDefaultResultSetField = function(field) {
		this.m_defaultResultSetFields.add(field);
	};
	oFF.QFieldContainer.prototype.clearDefaultResultSetFields = function() {
		this.m_defaultResultSetFields.clear();
	};
	oFF.QFieldContainer.prototype.hasFixedResultSetFields = function() {
		return this.m_hasFixedResultSetFields;
	};
	oFF.QFieldContainer.prototype.setHasFixedResultSetFields = function(
			hasFixedResultSetFields) {
		this.m_hasFixedResultSetFields = hasFixedResultSetFields;
	};
	oFF.QFieldContainer.prototype.getFieldsExt = function(context) {
		if (context === oFF.QContextType.RESULT_SET) {
			return this.m_resultSetFields;
		}
		return this.m_selectorFields;
	};
	oFF.QFieldContainer.prototype.getFieldsListByActiveUsageType = oFF.noSupport;
	oFF.QFieldContainer.prototype.getFieldsListByActiveUsageTypeExt = oFF.noSupport;
	oFF.QFieldContainer.prototype.setCubeBlendingPropertiesField = function(
			blendingPropertiesField) {
		this.m_cubeBlendingPropertiesField = oFF.XWeakReferenceUtil
				.getWeakRef(blendingPropertiesField);
	};
	oFF.QFieldContainer.prototype.getCubeBlendingPropertiesField = function() {
		return oFF.XWeakReferenceUtil
				.getHardRef(this.m_cubeBlendingPropertiesField);
	};
	oFF.QFieldContainer.prototype.mergeDeepRecursive = function(settings, other) {
		var otherAttribute = other;
		var otherFields = otherAttribute.getResultSetFields();
		var i;
		var otherField;
		var name;
		var field;
		this.m_resultSetFields.clear();
		for (i = 0; i < otherFields.size(); i++) {
			otherField = otherFields.get(i);
			name = otherField.getName();
			field = this.getFieldByName(name);
			if (oFF.notNull(field)) {
				this.m_resultSetFields.add(field);
			}
		}
	};
	oFF.QFieldContainer.prototype.clearAllFields = function() {
		this.queueEventing();
		this.m_defaultResultSetFields.clear();
		this.m_allFields.clear();
		this.m_resultSetFields.clear();
		this.m_selectorFields.clear();
		this.m_flatFieldMapByType.clear();
		this.m_hierarchyFieldMapByType.clear();
		this.m_flatKeyField = null;
		this.m_flatTextField = null;
		this.m_flatDisplayKeyField = null;
		this.m_hierarchyKeyField = null;
		this.m_hierarchyTextField = null;
		this.m_hierarchyDisplayKeyField = null;
		this.m_hierarchyPathField = null;
		this.m_hierarchyNavigationField = null;
		this.m_geoShapeField = null;
		this.m_geoPointField = null;
		this.m_geoLevelField = null;
		this.m_geoAreaNameField = null;
		this.m_cubeBlendingPropertiesField = null;
		this.resumeEventing();
	};
	oFF.QFieldContainer.prototype.removeFieldByName = function(fieldName) {
		var fieldToRemove = this.m_allFields.getFieldByName(fieldName);
		if (oFF.notNull(fieldToRemove)) {
			this.m_defaultResultSetFields.removeAt(this.m_allFields
					.getIndex(fieldToRemove));
			this.m_allFields.removeElement(fieldToRemove);
			this.m_resultSetFields.removeElement(fieldToRemove);
			this.m_selectorFields.removeElement(fieldToRemove);
			this.m_flatFieldMapByType.remove(fieldName);
			if (this.getFlatKeyField() === fieldToRemove) {
				this.m_flatKeyField = null;
			}
		}
	};
	oFF.QFieldContainer.prototype.getHierarchyNavigationField = function() {
		if (!this.getModelCapabilities().supportsHierarchyNavigationField()) {
			this.m_hierarchyNavigationField = oFF.XWeakReferenceUtil
					.getWeakRef(this.getHierarchyKeyField());
		}
		return oFF.XWeakReferenceUtil
				.getHardRef(this.m_hierarchyNavigationField);
	};
	oFF.QFieldContainer.prototype.setHierachyNavigationField = function(field) {
		this.m_hierarchyNavigationField = oFF.XWeakReferenceUtil
				.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.getGeoShapeField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_geoShapeField);
	};
	oFF.QFieldContainer.prototype.getGeoPointField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_geoPointField);
	};
	oFF.QFieldContainer.prototype.getGeoLevelField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_geoLevelField);
	};
	oFF.QFieldContainer.prototype.getGeoAreaNameField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_geoAreaNameField);
	};
	oFF.QFieldContainer.prototype.setGeoShapeField = function(field) {
		this.m_geoShapeField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.setGeoPointField = function(field) {
		this.m_geoPointField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.setGeoLevelField = function(field) {
		this.m_geoLevelField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldContainer.prototype.setGeoAreaNameField = function(field) {
		this.m_geoAreaNameField = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFilter = function() {
	};
	oFF.QFilter.prototype = new oFF.QModelComponent();
	oFF.QFilter.VALUEHELP_FILTER_CONTAINER = "selectorContainer";
	oFF.QFilter.VISIBILITY_FILTER_CONTAINER = "selectionVisibilityContainer";
	oFF.QFilter.TEMPORARY_VISIBILITY_FILTER_CONTAINER = "selectionVisibilityTmpContainer";
	oFF.QFilter.EFFECTIVE_VISIBILITY_FILTER_CONTAINER = "effectiveSelectionVisibilityContainer";
	oFF.QFilter.FIXED_FILTER_CONTAINER = "selectionSpaceContainer";
	oFF.QFilter.DYNAMIC_FILTER_CONTAINER = "selectionStateContainer";
	oFF.QFilter.TEMPORARY_FILTER_CONTAINER = "selectionTmpContainer";
	oFF.QFilter.EFFECTIVE_FILTER_CONTAINER = "effectiveSelectionContainer";
	oFF.QFilter.DEFAULT_FILTER_LAYER = "externalFilter";
	oFF.QFilter.create = function(query) {
		var filter = new oFF.QFilter();
		filter.setupFilter(query, query);
		return filter;
	};
	oFF.QFilter.createWithModelComponent = function(context, modelComponent) {
		var filter = new oFF.QFilter();
		filter.setupFilter(context, modelComponent);
		return filter;
	};
	oFF.QFilter.updateEffective = function(effectiveFilter, sourceFilterRoots,
			withEvents) {
		var isLocked;
		var sizeSourceRoots;
		var rootElementAnd;
		var singleCartesianElement;
		var filterExpression;
		var singleCartesianProduct;
		var singleCartesianProductClone;
		var cartesianProduct;
		var context;
		var n;
		var currentFilterElement;
		var currentCartesianProduct;
		var k;
		if (oFF.notNull(effectiveFilter)) {
			if (withEvents) {
				effectiveFilter.queueEventing();
			} else {
				effectiveFilter.stopEventing();
			}
			isLocked = effectiveFilter.isLocked();
			if (isLocked) {
				effectiveFilter.setIsLocked(false);
			}
			if (effectiveFilter.isCartesianProduct()) {
				effectiveFilter.setCartesianProduct(null);
			}
			if (effectiveFilter.isComplexFilter()) {
				effectiveFilter.setComplexRoot(null);
			}
			if (effectiveFilter.supportsCellValueOperands()) {
				effectiveFilter.clearCellValueFilter();
				effectiveFilter.setIsSuppressingNulls(false);
			}
			sizeSourceRoots = sourceFilterRoots.size();
			if (sizeSourceRoots > 0) {
				if (effectiveFilter.supportsComplexFilter()) {
					if (sizeSourceRoots === 1) {
						effectiveFilter
								.setComplexRoot(sourceFilterRoots.get(0));
					} else {
						rootElementAnd = oFF.QFactory
								.newFilterAnd(effectiveFilter);
						rootElementAnd.addAll(sourceFilterRoots);
						effectiveFilter.setComplexRoot(rootElementAnd);
					}
				} else {
					if (sizeSourceRoots === 1) {
						singleCartesianElement = sourceFilterRoots.get(0);
						filterExpression = singleCartesianElement
								.getFilterExpression();
						if (oFF.notNull(filterExpression)) {
							singleCartesianProduct = filterExpression
									.getCartesianProduct();
							if (oFF.notNull(singleCartesianProduct)
									&& singleCartesianProduct.hasElements()) {
								singleCartesianProductClone = oFF.QFactory
										.newFilterCartesianProduct(effectiveFilter);
								singleCartesianProductClone
										.copyCartesianProduct(singleCartesianProduct);
								effectiveFilter
										.setCartesianProduct(singleCartesianProductClone);
							}
						}
					} else {
						cartesianProduct = oFF.QFactory
								.newFilterCartesianProduct(effectiveFilter);
						context = cartesianProduct.getContext();
						for (n = 0; n < sizeSourceRoots; n++) {
							currentFilterElement = sourceFilterRoots.get(n);
							currentCartesianProduct = currentFilterElement
									.getFilterExpression()
									.getCartesianProduct();
							cartesianProduct = oFF.QFilter
									.mergeCartesianProducts(cartesianProduct,
											currentCartesianProduct, context,
											cartesianProduct);
						}
						if (cartesianProduct.hasElements()) {
							effectiveFilter
									.setCartesianProduct(cartesianProduct);
						}
					}
				}
				if (effectiveFilter.supportsCellValueOperands()) {
					for (k = 0; k < sizeSourceRoots; k++) {
						oFF.QFilter.addCellValueFilters(sourceFilterRoots
								.get(k).getFilterExpression(), effectiveFilter);
					}
				}
			}
			if (isLocked) {
				effectiveFilter.setIsLocked(true);
			}
			effectiveFilter.resumeEventing();
		}
	};
	oFF.QFilter.mergeCartesianProducts = function(cartesianProductA,
			cartesianProductB, context, parent) {
		var newCartesianProduct;
		var sizeProduct;
		var i;
		var cartesianChildB;
		var currentDimension;
		var dimensionName;
		var existingListForDimension;
		var cloneOfCartesianChildB;
		var sizeList;
		var n;
		var cartesianElement;
		var clonedCartesianElement;
		if (oFF.isNull(cartesianProductA) && oFF.isNull(cartesianProductB)) {
			return null;
		}
		if (oFF.isNull(cartesianProductA)) {
			return cartesianProductB.clone();
		}
		if (oFF.isNull(cartesianProductB)) {
			return cartesianProductA.clone();
		}
		newCartesianProduct = oFF.QFilterCartesianProduct._create(context,
				cartesianProductA.getFilterExpression());
		newCartesianProduct.copyCartesianProduct(cartesianProductA);
		newCartesianProduct.setParent(parent);
		sizeProduct = cartesianProductB.size();
		for (i = 0; i < sizeProduct; i++) {
			cartesianChildB = cartesianProductB.getCartesianChild(i);
			currentDimension = cartesianChildB.getDimension();
			dimensionName = currentDimension.getName();
			existingListForDimension = newCartesianProduct
					.getCartesianListByDimensionName(dimensionName);
			if (oFF.isNull(existingListForDimension)) {
				cloneOfCartesianChildB = cartesianChildB.cloneOlapComponent(
						context, null);
				cloneOfCartesianChildB.setParent(newCartesianProduct);
				newCartesianProduct.add(cloneOfCartesianChildB);
			} else {
				sizeList = cartesianChildB.size();
				for (n = 0; n < sizeList; n++) {
					cartesianElement = cartesianChildB.getCartesianElement(n);
					clonedCartesianElement = existingListForDimension
							.addNewCartesianElement();
					clonedCartesianElement
							.copyFilterOperation(cartesianElement);
				}
			}
		}
		return newCartesianProduct;
	};
	oFF.QFilter.addFilterExpressionRootIfNotNull = function(filterExpression,
			filterExpressionRoots) {
		var filterRootElement;
		if (oFF.isNull(filterExpression)) {
			return;
		}
		filterRootElement = filterExpression.getFilterRootElement();
		if (oFF.notNull(filterRootElement)) {
			filterExpressionRoots.add(filterRootElement);
		}
	};
	oFF.QFilter.addCellValueFilters = function(source, target) {
		var cellValueOperands;
		var i;
		if (oFF.isNull(source)) {
			return;
		}
		cellValueOperands = source.getCellValueOperands();
		if (oFF.isNull(cellValueOperands)) {
			return;
		}
		for (i = 0; i < cellValueOperands.size(); i++) {
			target.addCellValueFilter(cellValueOperands.get(i));
		}
		if (source.isSuppressingNulls()) {
			target.setIsSuppressingNulls(true);
		}
	};
	oFF.QFilter.prototype.m_fixedFilter = null;
	oFF.QFilter.prototype.m_dynamicFilter = null;
	oFF.QFilter.prototype.m_valuehelpFilter = null;
	oFF.QFilter.prototype.m_visibilityFilter = null;
	oFF.QFilter.prototype.m_effectiveFilter = null;
	oFF.QFilter.prototype.m_layeredFilters = null;
	oFF.QFilter.prototype.m_tmpFilter = null;
	oFF.QFilter.prototype.m_effectiveVisibilityFilter = null;
	oFF.QFilter.prototype.m_layeredVisibilityFilters = null;
	oFF.QFilter.prototype.m_tmpVisibilityFilter = null;
	oFF.QFilter.prototype.setupFilter = function(context, parentComponent) {
		this.setupModelComponentWithName(context, parentComponent,
				"filterManager");
		this.m_layeredFilters = oFF.XHashMapByString.create();
		this.m_layeredVisibilityFilters = oFF.XHashMapByString.create();
	};
	oFF.QFilter.prototype.copyFilterManager = function(origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		if (oFF.notNull(origin.m_fixedFilter)
				&& !this.getQueryModel().isBasedOnMicroCube()) {
			this.getFixedFilter().copyFilterExpression(origin.m_fixedFilter);
		}
		if (oFF.notNull(origin.m_dynamicFilter)) {
			this.getDynamicFilter()
					.copyFilterExpression(origin.m_dynamicFilter);
		}
		if (oFF.notNull(origin.m_visibilityFilter)) {
			this.getVisibilityFilter().copyFilterExpression(
					origin.m_visibilityFilter);
		}
	};
	oFF.QFilter.prototype._releaseLayeredFilter = function(layeredFilter) {
		var layeredFilters;
		if (oFF.isNull(layeredFilter)) {
			return null;
		}
		layeredFilters = layeredFilter.getIterator();
		while (layeredFilters.hasNext()) {
			this.freeAsSecondaryParent(layeredFilters.next());
		}
		return oFF.XObjectExt.release(layeredFilter);
	};
	oFF.QFilter.prototype.releaseObject = function() {
		this.m_effectiveFilter = oFF.XObjectExt.release(this.m_effectiveFilter);
		this.m_effectiveVisibilityFilter = oFF.XObjectExt
				.release(this.m_effectiveVisibilityFilter);
		this.m_layeredFilters = this
				._releaseLayeredFilter(this.m_layeredFilters);
		this.m_layeredVisibilityFilters = this
				._releaseLayeredFilter(this.m_layeredVisibilityFilters);
		if (oFF.notNull(this.m_tmpFilter)) {
			this.freeAsSecondaryParent(this.m_tmpFilter);
			this.m_tmpFilter = null;
		}
		this.m_fixedFilter = oFF.XObjectExt.release(this.m_fixedFilter);
		this.m_dynamicFilter = oFF.XObjectExt.release(this.m_dynamicFilter);
		this.m_visibilityFilter = oFF.XObjectExt
				.release(this.m_visibilityFilter);
		this.m_tmpVisibilityFilter = oFF.XObjectExt
				.release(this.m_tmpVisibilityFilter);
		this.m_valuehelpFilter = oFF.XObjectExt.release(this.m_valuehelpFilter);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFilter.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.SELECTOR;
	};
	oFF.QFilter.prototype.createFilter = function() {
		return oFF.QFilterExpression.create(this.getContext(), this);
	};
	oFF.QFilter.prototype.getDynamicFilter = function() {
		if (oFF.isNull(this.m_dynamicFilter)) {
			this.stopEventing();
			this.setDynamicFilter(this.createFilter());
			this.resumeEventing();
		}
		return this.m_dynamicFilter;
	};
	oFF.QFilter.prototype.getValuehelpFilter = function() {
		if (oFF.isNull(this.m_valuehelpFilter)) {
			this.m_valuehelpFilter = this.createFilter();
			this.m_valuehelpFilter
					.setName(oFF.QFilter.VALUEHELP_FILTER_CONTAINER);
			this.m_valuehelpFilter.setParent(null);
		}
		return this.m_valuehelpFilter;
	};
	oFF.QFilter.prototype.getVisibilityFilter = function() {
		if (oFF.isNull(this.m_visibilityFilter)) {
			this.stopEventing();
			this.setVisibilityFilter(this.createFilter());
			this.resumeEventing();
		}
		return this.m_visibilityFilter;
	};
	oFF.QFilter.prototype.getExternalFilter = function() {
		return this.getFilterLayer(oFF.QFilter.DEFAULT_FILTER_LAYER);
	};
	oFF.QFilter.prototype.getFilterLayer = function(layerName) {
		return this.m_layeredFilters.getByKey(layerName);
	};
	oFF.QFilter.prototype.getLayeredFilters = function() {
		return this._getLayeredFilters(false);
	};
	oFF.QFilter.prototype.getLayeredVisibilityFilters = function() {
		return this._getLayeredFilters(true);
	};
	oFF.QFilter.prototype._getLayeredFilters = function(isVisibility) {
		var layeredFiltersBase = isVisibility ? this.m_layeredVisibilityFilters
				: this.m_layeredFilters;
		var layeredFilters = oFF.XHashMapByString.create();
		var filterLayer = layeredFiltersBase.getKeysAsIteratorOfString();
		var layerName;
		while (filterLayer.hasNext()) {
			layerName = filterLayer.next();
			layeredFilters.put(layerName, layeredFiltersBase
					.getByKey(layerName));
		}
		return layeredFilters;
	};
	oFF.QFilter.prototype.getExternalVisibilityFilter = function() {
		return this.getVisibilityFilterLayer(oFF.QFilter.DEFAULT_FILTER_LAYER);
	};
	oFF.QFilter.prototype.getVisibilityFilterLayer = function(layerName) {
		return this.m_layeredVisibilityFilters
				.getByKey(oFF.QFilter.DEFAULT_FILTER_LAYER);
	};
	oFF.QFilter.prototype.hasTmpFilter = function() {
		return oFF.notNull(this.m_tmpFilter);
	};
	oFF.QFilter.prototype.getTmpFilter = function() {
		if (oFF.isNull(this.m_tmpFilter)) {
			this.stopEventing();
			this.setTmpFilter(this.createFilter());
			this.resumeEventing();
		}
		return this.m_tmpFilter;
	};
	oFF.QFilter.prototype.hasTmpVisibilityFilter = function() {
		return oFF.notNull(this.m_tmpVisibilityFilter);
	};
	oFF.QFilter.prototype.getTmpVisibilityFilter = function() {
		if (oFF.isNull(this.m_tmpVisibilityFilter)) {
			this.stopEventing();
			this.setTmpVisibilityFilter(this.createFilter());
			this.resumeEventing();
		}
		return this.m_tmpVisibilityFilter;
	};
	oFF.QFilter.prototype.setVisibilityFilter = function(visibilityFilter) {
		if (this.m_visibilityFilter === visibilityFilter) {
			return;
		}
		if (oFF.notNull(this.m_visibilityFilter)) {
			this.freeAsPrimaryParent(this.m_visibilityFilter);
			this.m_visibilityFilter = null;
		}
		if (oFF.notNull(visibilityFilter)) {
			this.m_visibilityFilter = visibilityFilter;
			this.becomePrimaryParentAndSetName(this.m_visibilityFilter,
					oFF.QFilter.VISIBILITY_FILTER_CONTAINER);
		}
		this.notifyNodeChanged();
		this.updateEffectiveFilter(true, true);
	};
	oFF.QFilter.prototype.becomeSecondaryParent = function(filterExpression) {
		filterExpression.addSecondaryParent(this);
		filterExpression.registerChangedListener(this, null);
	};
	oFF.QFilter.prototype.freeAsSecondaryParent = function(filterExpression) {
		filterExpression.unregisterChangedListener(this);
		filterExpression.removeSecondaryParent(this);
	};
	oFF.QFilter.prototype.becomePrimaryParentAndSetName = function(
			filterExpression, newName) {
		filterExpression.setParent(this);
		filterExpression.registerChangedListener(this, null);
		filterExpression.setName(newName);
	};
	oFF.QFilter.prototype.freeAsPrimaryParent = function(filterExpression) {
		filterExpression.unregisterChangedListener(this);
		oFF.XObjectExt.release(filterExpression);
	};
	oFF.QFilter.prototype.setFixedFilter = function(fixedFilter) {
		if (this.m_fixedFilter === fixedFilter) {
			return;
		}
		if (oFF.notNull(this.m_fixedFilter)) {
			this.freeAsPrimaryParent(this.m_fixedFilter);
			this.m_fixedFilter = null;
		}
		if (oFF.notNull(fixedFilter)) {
			this.m_fixedFilter = fixedFilter;
			this.becomePrimaryParentAndSetName(this.m_fixedFilter,
					oFF.QFilter.FIXED_FILTER_CONTAINER);
		}
		this.notifyNodeChanged();
	};
	oFF.QFilter.prototype.getFixedFilter = function() {
		if (oFF.isNull(this.m_fixedFilter)) {
			this.stopEventing();
			this.setFixedFilter(this.createFilter());
			this.resumeEventing();
		}
		return this.m_fixedFilter;
	};
	oFF.QFilter.prototype.setDynamicFilter = function(dynamicFilter) {
		if (this.m_dynamicFilter === dynamicFilter) {
			return;
		}
		if (oFF.notNull(this.m_dynamicFilter)) {
			this.freeAsPrimaryParent(this.m_dynamicFilter);
			this.m_dynamicFilter = null;
		}
		if (oFF.notNull(dynamicFilter)) {
			this.m_dynamicFilter = dynamicFilter;
			this.becomePrimaryParentAndSetName(this.m_dynamicFilter,
					oFF.QFilter.DYNAMIC_FILTER_CONTAINER);
		}
		this.notifyNodeChanged();
		this.updateEffectiveFilter(true, false);
	};
	oFF.QFilter.prototype.setTmpFilter = function(tmpFilter) {
		if (this.m_tmpFilter === tmpFilter) {
			return;
		}
		if (oFF.notNull(this.m_tmpFilter)) {
			this.freeAsPrimaryParent(this.m_tmpFilter);
			this.m_tmpFilter = null;
		}
		if (oFF.notNull(tmpFilter)) {
			this.m_tmpFilter = tmpFilter;
			this.becomePrimaryParentAndSetName(this.m_tmpFilter,
					oFF.QFilter.TEMPORARY_FILTER_CONTAINER);
		}
		this.notifyNodeChanged();
		this.updateEffectiveFilter(true, false);
	};
	oFF.QFilter.prototype.setTmpVisibilityFilter = function(tmpVisibilityFilter) {
		if (this.m_tmpVisibilityFilter === tmpVisibilityFilter) {
			return;
		}
		if (oFF.notNull(this.m_tmpVisibilityFilter)) {
			this.freeAsPrimaryParent(this.m_tmpVisibilityFilter);
			this.m_tmpVisibilityFilter = null;
		}
		if (oFF.notNull(tmpVisibilityFilter)) {
			this.m_tmpVisibilityFilter = tmpVisibilityFilter;
			this.becomePrimaryParentAndSetName(this.m_tmpVisibilityFilter,
					oFF.QFilter.TEMPORARY_VISIBILITY_FILTER_CONTAINER);
		}
		this.notifyNodeChanged();
		this.updateEffectiveFilter(true, true);
	};
	oFF.QFilter.prototype._putLayeredFilter = function(layerName,
			newFilterLayer, isVisibility) {
		var layeredFilter = isVisibility ? this.m_layeredVisibilityFilters
				: this.m_layeredFilters;
		var curFilterLayer = layeredFilter.getByKey(layerName);
		if (curFilterLayer === newFilterLayer) {
			return;
		}
		if (oFF.notNull(curFilterLayer)) {
			this.freeAsSecondaryParent(curFilterLayer);
		}
		if (oFF.isNull(newFilterLayer)) {
			layeredFilter.remove(layerName);
		} else {
			layeredFilter.put(layerName, newFilterLayer);
			this.becomeSecondaryParent(newFilterLayer);
		}
		this.notifyNodeChanged();
		this.updateEffectiveFilter(true, isVisibility);
	};
	oFF.QFilter.prototype.setExternalFilter = function(externalFilter) {
		this.putFilterLayer(oFF.QFilter.DEFAULT_FILTER_LAYER, externalFilter);
	};
	oFF.QFilter.prototype.putFilterLayer = function(layerName, filterLayer) {
		this._putLayeredFilter(layerName, filterLayer, false);
	};
	oFF.QFilter.prototype.setExternalVisibilityFilter = function(
			externalVisibilityFilter) {
		this.putVisibilityFilterLayer(oFF.QFilter.DEFAULT_FILTER_LAYER,
				externalVisibilityFilter);
	};
	oFF.QFilter.prototype.putVisibilityFilterLayer = function(layerName,
			visibilityFilterLayer) {
		this._putLayeredFilter(layerName, visibilityFilterLayer, true);
	};
	oFF.QFilter.prototype.onModelComponentChanged = function(modelComponent,
			customIdentifier) {
		if (oFF.isNull(modelComponent)) {
			return;
		}
		if (modelComponent.getOlapComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION) {
			if (modelComponent === this.m_dynamicFilter
					|| modelComponent === this.m_tmpFilter
					|| this.m_layeredFilters.contains(modelComponent)) {
				this.updateEffectiveFilter(true, false);
			}
			if (modelComponent === this.m_visibilityFilter
					|| modelComponent === this.m_tmpVisibilityFilter
					|| this.m_layeredVisibilityFilters.contains(modelComponent)) {
				this.updateEffectiveFilter(true, true);
			}
		}
	};
	oFF.QFilter.prototype.isFilterConflictingWithLocalFilter = function(filter) {
		var cartesianProduct;
		var i;
		var cartesianList;
		var currentDimension;
		var conflictDetected;
		if (oFF.notNull(filter) && filter.isCartesianProduct()) {
			cartesianProduct = filter.getCartesianProduct();
			for (i = 0; i < cartesianProduct.size(); i++) {
				cartesianList = cartesianProduct.getCartesianChild(i);
				currentDimension = cartesianList.getDimension();
				if (oFF.notNull(currentDimension)) {
					conflictDetected = this
							.isDimensionNameConflictingWithLocalFilter(currentDimension
									.getName());
					if (conflictDetected) {
						return true;
					}
				}
			}
		}
		return false;
	};
	oFF.QFilter.prototype.isDimensionConflictingWithLocalFilter = function(
			dimension) {
		return oFF.notNull(dimension)
				&& this.isDimensionNameConflictingWithLocalFilter(dimension
						.getName());
	};
	oFF.QFilter.prototype.isDimensionNameConflictingWithLocalFilter = function(
			dimensionName) {
		var dimensionAccessor = this.getDimensionAccessor();
		var dimension;
		var effectiveFilter;
		var cartesianProduct;
		var cartesianList;
		if (oFF.notNull(dimensionAccessor)
				&& oFF.XStringUtils.isNotNullAndNotEmpty(dimensionName)) {
			dimension = dimensionAccessor.getDimensionByName(dimensionName);
			effectiveFilter = this.getEffectiveFilter();
			if (oFF.notNull(dimension) && oFF.notNull(effectiveFilter)
					&& effectiveFilter.isAll()
					&& effectiveFilter.isCartesianProduct()) {
				cartesianProduct = effectiveFilter.getFilterExpression()
						.getCartesianProduct();
				if (oFF.notNull(cartesianProduct)) {
					cartesianList = cartesianProduct
							.getCartesianList(dimension);
					return oFF.XCollectionUtils.hasElements(cartesianList);
				}
			}
		}
		return false;
	};
	oFF.QFilter.prototype.isDimensionConflictingWithExternFilter = function(
			dimension) {
		return this.isDimensionConflictingWithLayeredFilters(dimension);
	};
	oFF.QFilter.prototype.isDimensionConflictingWithLayeredFilters = function(
			dimension) {
		return oFF.notNull(dimension)
				&& this.isDimensionNameConflictingWithLayeredFilters(dimension
						.getName());
	};
	oFF.QFilter.prototype.isDimensionNameConflictingWithExternFilter = function(
			dimensionName) {
		return this.isDimensionNameConflictingWithLayeredFilters(dimensionName);
	};
	oFF.QFilter.prototype.isDimensionNameConflictingWithLayeredFilters = function(
			dimensionName) {
		var dimensionAccessor = this.getDimensionAccessor();
		var layeredFilters;
		var filterLayer;
		var cartesianProduct;
		var cartesianList;
		if (oFF.notNull(dimensionAccessor)
				&& oFF.XStringUtils.isNotNullAndNotEmpty(dimensionName)) {
			layeredFilters = this.m_layeredFilters.getIterator();
			while (layeredFilters.hasNext()) {
				filterLayer = layeredFilters.next();
				if (oFF.notNull(filterLayer) && filterLayer.isAll()
						&& filterLayer.isCartesianProduct()) {
					cartesianProduct = filterLayer.getFilterExpression()
							.getCartesianProduct();
					if (oFF.notNull(cartesianProduct)) {
						cartesianList = cartesianProduct
								.getCartesianListByDimensionName(dimensionName);
						return oFF.XCollectionUtils.hasElements(cartesianList);
					}
				}
			}
		}
		return false;
	};
	oFF.QFilter.prototype.updateEffectiveFilter = function(withEvents,
			isVisibility) {
		oFF.QFilter.updateEffective(
				isVisibility ? this.m_effectiveVisibilityFilter
						: this.m_effectiveFilter, this
						._getSourceFilters(isVisibility), withEvents);
	};
	oFF.QFilter.prototype._getSourceFilters = function(isVisibility) {
		var sourceFilters = oFF.XList.create();
		var layeredFilters;
		var layeredFilter;
		oFF.QFilter.addFilterExpressionRootIfNotNull(
				isVisibility ? this.m_visibilityFilter : this.m_dynamicFilter,
				sourceFilters);
		oFF.QFilter.addFilterExpressionRootIfNotNull(
				isVisibility ? this.m_tmpVisibilityFilter : this.m_tmpFilter,
				sourceFilters);
		layeredFilters = isVisibility ? this.m_layeredVisibilityFilters
				: this.m_layeredFilters;
		layeredFilter = layeredFilters.getIterator();
		while (layeredFilter.hasNext()) {
			oFF.QFilter.addFilterExpressionRootIfNotNull(layeredFilter.next(),
					sourceFilters);
		}
		return sourceFilters;
	};
	oFF.QFilter.prototype.resetEffectiveFilter = function() {
		this.m_effectiveFilter = oFF.XObjectExt.release(this.m_effectiveFilter);
	};
	oFF.QFilter.prototype._createEffectiveFilter = function(isVisibility) {
		var effectiveFilter = this.createFilter();
		if (this.supportsCartesianFilterIntersect()) {
			effectiveFilter.setSupportsComplexFilter(true);
		}
		effectiveFilter
				.setName(isVisibility ? oFF.QFilter.EFFECTIVE_VISIBILITY_FILTER_CONTAINER
						: oFF.QFilter.EFFECTIVE_FILTER_CONTAINER);
		effectiveFilter.setParent(this);
		return effectiveFilter;
	};
	oFF.QFilter.prototype.getEffectiveFilter = function() {
		if (oFF.isNull(this.m_effectiveFilter)) {
			this.m_effectiveFilter = this._createEffectiveFilter(false);
			this.updateEffectiveFilter(false, false);
		}
		return this.m_effectiveFilter;
	};
	oFF.QFilter.prototype.getEffectiveVisibilityFilter = function() {
		if (oFF.isNull(this.m_effectiveVisibilityFilter)) {
			this.m_effectiveVisibilityFilter = this
					._createEffectiveFilter(true);
			this.updateEffectiveFilter(false, true);
		}
		return this.m_effectiveVisibilityFilter;
	};
	oFF.QFilter.prototype.getSelectableDimensions = function() {
		var dimList;
		var queryModel;
		var dimensions;
		var len;
		var i;
		var dimension;
		this.stopEventing();
		dimList = oFF.QDimensionList.createDimensionList(this.getContext(),
				this, "Selectable Dimension List");
		queryModel = this.getContext().getQueryModel();
		if (oFF.isNull(queryModel)) {
			dimensions = this.getDimensionAccessor().getDimensions();
		} else {
			dimensions = queryModel.getLoadedDimensions();
		}
		len = dimensions.size();
		for (i = 0; i < len; i++) {
			dimension = dimensions.get(i);
			if (dimension.isSelectable()) {
				dimList.add(dimension);
			}
		}
		this.resumeEventing();
		return dimList;
	};
	oFF.QFilter.prototype.getDimensionCount = function() {
		return this.getSelectableDimensions().getDimensionCount();
	};
	oFF.QFilter.prototype.getStructureCount = function() {
		return this.getSelectableDimensions().getStructureCount();
	};
	oFF.QFilter.prototype.getNonStructureCount = function() {
		return this.getSelectableDimensions().getNonStructureCount();
	};
	oFF.QFilter.prototype.getNonMeasureDimension = function() {
		return this.getSelectableDimensions().getNonMeasureDimension();
	};
	oFF.QFilter.prototype.getNonMeasureDimension2 = function() {
		return this.getSelectableDimensions().getNonMeasureDimension2();
	};
	oFF.QFilter.prototype.getMeasureDimension = function() {
		return this.getSelectableDimensions().getMeasureDimension();
	};
	oFF.QFilter.prototype.getAccountDimension = function() {
		return this.getSelectableDimensions().getAccountDimension();
	};
	oFF.QFilter.prototype.getDimensionNameByType = function(type) {
		return this.getSelectableDimensions().getDimensionNameByType(type);
	};
	oFF.QFilter.prototype.getDimensionByType = function(type) {
		return this.getSelectableDimensions().getDimensionByType(type);
	};
	oFF.QFilter.prototype.getDimensionByName = function(name) {
		return this.getSelectableDimensions().getDimensionByName(name);
	};
	oFF.QFilter.prototype.getDimensionByNameFromExistingMetadata = function(
			name) {
		return this.getSelectableDimensions()
				.getDimensionByNameFromExistingMetadata(name);
	};
	oFF.QFilter.prototype.getDimensions = function() {
		return this.getSelectableDimensions();
	};
	oFF.QFilter.prototype.getDimensionNames = function() {
		var nameList = oFF.XListOfString.create();
		var dimIterator = this.getDimensions().getIterator();
		var dimName;
		while (dimIterator.hasNext()) {
			dimName = dimIterator.next().getName();
			nameList.add(dimName);
		}
		return nameList;
	};
	oFF.QFilter.prototype.isComponentNode = function() {
		return true;
	};
	oFF.QFilter.prototype.getNamedChildren = function() {
		var map = oFF.XHashMapByString.create();
		map.putIfNotNull("SelectionSpaceContainer", this.getFixedFilter());
		map.putIfNotNull("SelectionStateContainer", this.getDynamicFilter());
		map.putIfNotNull("SelectionTmpContainer", this.getTmpFilter());
		map.putIfNotNull("SelectionVisibilityContainer", this
				.getVisibilityFilter());
		map.putIfNotNull("SelectionVisibilityTmpContainer", this
				.getTmpVisibilityFilter());
		return map;
	};
	oFF.QFilter.prototype.applyFilter = function(filterToApply) {
		var serializedFilter;
		var deserializeExt;
		oFF.XObjectExt.checkNotNull(filterToApply,
				"filter to apply must not be null");
		serializedFilter = filterToApply.serializeToElement(
				oFF.QModelFormat.INA_REPOSITORY, null);
		oFF.XObjectExt.checkNotNull(serializedFilter,
				"could not serialize filter to apply");
		deserializeExt = this.deserializeFromElementExt(
				oFF.QModelFormat.INA_REPOSITORY, serializedFilter);
		oFF.MessageUtil.checkNoError(deserializeExt);
	};
	oFF.QFilter.prototype.mergeDeepRecursive = function(settings, other) {
		var otherObj = other;
		this.m_dynamicFilter.mergeDeepRecursive(settings, otherObj
				.getDynamicFilter());
		this.m_fixedFilter.mergeDeepRecursive(settings, otherObj
				.getFixedFilter());
	};
	oFF.QFilter.prototype.isFixedFilterInitialized = function() {
		return oFF.notNull(this.m_fixedFilter);
	};
	oFF.QFilter.prototype.isDynamicFilterInitialized = function() {
		return oFF.notNull(this.m_dynamicFilter);
	};
	oFF.QFilter.prototype.isVisibilityFilterInitialized = function() {
		return oFF.notNull(this.m_visibilityFilter);
	};
	oFF.QFilter.prototype.supportsVisibilityFilter = function() {
		var modelCapabilities = this.getModelCapabilities();
		return oFF.notNull(modelCapabilities)
				&& modelCapabilities.supportsVisibilityFilter();
	};
	oFF.QFilter.prototype.supportsCartesianFilterIntersect = function() {
		var modelCapabilities = this.getModelCapabilities();
		return oFF.notNull(modelCapabilities)
				&& modelCapabilities.supportsCartesianFilterIntersect();
	};
	oFF.QFilter.prototype.supportsComplexFilter = function() {
		var modelCapabilities = this.getModelCapabilities();
		return oFF.notNull(modelCapabilities)
				&& (modelCapabilities.supportsComplexFilter() || modelCapabilities
						.supportsComplexTupleFilter());
	};
	oFF.QFilter.prototype.supportsCellValueOperand = function() {
		var modelCapabilities = this.getModelCapabilities();
		return oFF.notNull(modelCapabilities)
				&& modelCapabilities.supportsCellValueOperand();
	};
	oFF.QFilter.prototype.supportsIntersectLayers = function() {
		var modelCapabilities = this.getModelCapabilities();
		return oFF.notNull(modelCapabilities)
				&& modelCapabilities.supportsIntersectLayers();
	};
	oFF.QFilterCapability = function() {
	};
	oFF.QFilterCapability.prototype = new oFF.QModelComponent();
	oFF.QFilterCapability._createFilterCapability = function(context,
			parentContext, field) {
		return oFF.QFilterCapability._createFilterCapabilityWithName(context,
				parentContext, oFF.isNull(field) ? null : field.getName());
	};
	oFF.QFilterCapability._createFilterCapabilityWithName = function(context,
			parentContext, fieldName) {
		var selectionCapabilities = new oFF.QFilterCapability();
		selectionCapabilities.setupFilterCapabilities(context, parentContext,
				fieldName);
		return selectionCapabilities;
	};
	oFF.QFilterCapability.prototype.m_fieldName = null;
	oFF.QFilterCapability.prototype.m_supportedSetSigns = null;
	oFF.QFilterCapability.prototype.m_supportedComparisionOperators = null;
	oFF.QFilterCapability.prototype.copyFilterCapability = function(origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_supportedSetSigns.addAll(origin.m_supportedSetSigns);
		this.m_supportedComparisionOperators = origin.m_supportedComparisionOperators
				.createMapByStringCopy();
		this.m_fieldName = origin.m_fieldName;
	};
	oFF.QFilterCapability.prototype.setupFilterCapabilities = function(context,
			parentContext, fieldName) {
		this.setupModelComponent(context, parentContext);
		this.m_fieldName = fieldName;
		this.m_supportedSetSigns = oFF.XListOfNameObject.create();
		this.m_supportedComparisionOperators = oFF.XHashMapByString.create();
	};
	oFF.QFilterCapability.prototype.releaseObject = function() {
		this.m_fieldName = null;
		this.m_supportedSetSigns = oFF.XObjectExt
				.release(this.m_supportedSetSigns);
		this.m_supportedComparisionOperators = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_supportedComparisionOperators);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFilterCapability.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FILTER_CAPABILITY;
	};
	oFF.QFilterCapability.prototype.getFieldName = function() {
		return this.m_fieldName;
	};
	oFF.QFilterCapability.prototype.getSupportedSetSign = function() {
		return this.m_supportedSetSigns;
	};
	oFF.QFilterCapability.prototype.addSupportedSetSign = function(setSign) {
		var operatorForSign;
		if (this.m_supportedSetSigns.contains(setSign)) {
			return;
		}
		this.m_supportedSetSigns.add(setSign);
		operatorForSign = oFF.XListOfNameObject.create();
		this.m_supportedComparisionOperators.put(setSign.getName(),
				operatorForSign);
	};
	oFF.QFilterCapability.prototype.getModifiableSupportedComparisonOperators = function(
			setSign) {
		return this.m_supportedComparisionOperators.getByKey(setSign.getName());
	};
	oFF.QFilterCapability.prototype.getSupportedComparisonOperators = function(
			setSign) {
		return this.getModifiableSupportedComparisonOperators(setSign);
	};
	oFF.QFilterCapability.prototype.supportsSetSign = function(setSign) {
		return this.m_supportedSetSigns.contains(setSign);
	};
	oFF.QFilterCapability.prototype.isFilterCapabilityGroup = function() {
		return false;
	};
	oFF.QFilterCapabilityList = function() {
	};
	oFF.QFilterCapabilityList.prototype = new oFF.QModelComponent();
	oFF.QFilterCapabilityList.createFilterCapabilitiesForDimension = function() {
		var capabilities = new oFF.QFilterCapabilityList();
		capabilities.setupFilterCapabilities(null, null);
		return capabilities;
	};
	oFF.QFilterCapabilityList.createFilterCapabilitiesForVariable = function(
			context, variable) {
		var selectionSignedSetCapabilities = new oFF.QFilterCapabilityList();
		selectionSignedSetCapabilities.setupFilterCapabilities(context,
				variable);
		return selectionSignedSetCapabilities;
	};
	oFF.QFilterCapabilityList.prototype.m_filterCapabilities = null;
	oFF.QFilterCapabilityList.prototype.m_filterableFields = null;
	oFF.QFilterCapabilityList.prototype.m_supportsMultipleValues = false;
	oFF.QFilterCapabilityList.prototype.copyFilterCapabilityList = function(
			origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_filterableFields = origin.m_filterableFields
				.createListOfStringCopy();
		this.m_supportsMultipleValues = origin.m_supportsMultipleValues;
		this.m_filterCapabilities = origin.m_filterCapabilities.clone();
	};
	oFF.QFilterCapabilityList.prototype.setupFilterCapabilities = function(
			context, deltaNode) {
		this.setupModelComponent(context, deltaNode);
		this.m_filterCapabilities = oFF.XHashMapByString.create();
		this.m_filterableFields = oFF.XListOfString.create();
	};
	oFF.QFilterCapabilityList.prototype.releaseObject = function() {
		this.m_filterCapabilities = oFF.XObjectExt
				.release(this.m_filterCapabilities);
		this.m_filterableFields = oFF.XObjectExt
				.release(this.m_filterableFields);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFilterCapabilityList.prototype.getFilterCapabilitiesByField = function(
			field) {
		return this.m_filterCapabilities.getByKey(field.getName());
	};
	oFF.QFilterCapabilityList.prototype.getFilterCapabilitiesByFieldName = function(
			fieldName) {
		return this.m_filterCapabilities.getByKey(fieldName);
	};
	oFF.QFilterCapabilityList.prototype.getSelectableFieldNames = function() {
		return this.m_filterableFields;
	};
	oFF.QFilterCapabilityList.prototype.supportsMultipleValues = function() {
		return this.m_supportsMultipleValues;
	};
	oFF.QFilterCapabilityList.prototype.setSupportsMultipleValues = function(
			supportsMultipleValues) {
		this.m_supportsMultipleValues = supportsMultipleValues;
	};
	oFF.QFilterCapabilityList.prototype.createAndAddFilterCapabilitiesForFieldName = function(
			fieldName) {
		var selectionCapabilities;
		if (this.m_filterCapabilities.containsKey(fieldName)) {
			return this.m_filterCapabilities.getByKey(fieldName);
		}
		selectionCapabilities = oFF.QFilterCapability
				._createFilterCapabilityWithName(this.getContext(), this,
						fieldName);
		this.addFilterCapability(selectionCapabilities);
		return selectionCapabilities;
	};
	oFF.QFilterCapabilityList.prototype.addFilterCapability = function(
			capability) {
		var fieldName = capability.getFieldName();
		if (!this.m_filterCapabilities.containsKey(fieldName)) {
			this.m_filterableFields.add(fieldName);
		}
		this.m_filterCapabilities.put(fieldName, capability);
	};
	oFF.QFilterElement = function() {
	};
	oFF.QFilterElement.prototype = new oFF.QModelComponent();
	oFF.QFilterElement.prototype.m_filterContainer = null;
	oFF.QFilterElement.prototype.m_uniqueId = null;
	oFF.QFilterElement.prototype.setupFilterElement = function(context,
			filterContainer, parentNode) {
		this.setupModelComponent(context, parentNode);
		this.m_filterContainer = oFF.XWeakReferenceUtil
				.getWeakRef(filterContainer);
		this.m_uniqueId = oFF.XGuid.getGuid();
	};
	oFF.QFilterElement.prototype.releaseObject = function() {
		this.m_filterContainer = oFF.XObjectExt.release(this.m_filterContainer);
		this.m_uniqueId = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFilterElement.prototype.getFilterExpression = function() {
		var filterExpression = oFF.XWeakReferenceUtil
				.getHardRef(this.m_filterContainer);
		var context;
		if (oFF.notNull(filterExpression)) {
			return filterExpression;
		}
		context = this.getContext();
		if (oFF.isNull(context)
				|| context.getComponentType() !== oFF.OlapComponentType.FILTER_EXPRESSION) {
			return null;
		}
		return context;
	};
	oFF.QFilterElement.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FILTER_ELEMENT;
	};
	oFF.QFilterElement.prototype.getUniqueId = function() {
		return this.m_uniqueId;
	};
	oFF.QFilterElement.prototype.setUniqueId = function(uniqueId) {
		this.m_uniqueId = uniqueId;
	};
	oFF.QFilterElement.prototype.copyFilterElement = function(origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_uniqueId = origin.m_uniqueId;
	};
	oFF.QFormulaItemAttribute = function() {
	};
	oFF.QFormulaItemAttribute.prototype = new oFF.QModelComponent();
	oFF.QFormulaItemAttribute._createMember = function(context, parentNode) {
		var formula = new oFF.QFormulaItemAttribute();
		formula.setupFormulaAttribute(context, parentNode);
		return formula;
	};
	oFF.QFormulaItemAttribute.prototype.m_fieldName = null;
	oFF.QFormulaItemAttribute.prototype.setupFormulaAttribute = function(
			context, parentNode) {
		this.setupModelComponent(context, parentNode);
		this.m_fieldName = null;
	};
	oFF.QFormulaItemAttribute.prototype.releaseObject = function() {
		this.m_fieldName = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFormulaItemAttribute.prototype.copyFormulaItemAttribute = function(
			origin) {
		this.copyModelComponent(origin);
		this.m_fieldName = origin.m_fieldName;
	};
	oFF.QFormulaItemAttribute.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FORMULA_ITEM_ATTRIBUTE;
	};
	oFF.QFormulaItemAttribute.prototype.setFieldByName = function(fieldName) {
		this.m_fieldName = fieldName;
	};
	oFF.QFormulaItemAttribute.prototype.getFieldName = function() {
		return this.m_fieldName;
	};
	oFF.QFormulaItemConstant = function() {
	};
	oFF.QFormulaItemConstant.prototype = new oFF.QModelComponent();
	oFF.QFormulaItemConstant._createConstant = function(context, parentNode) {
		var formula = new oFF.QFormulaItemConstant();
		formula.setupFormula(context, parentNode);
		return formula;
	};
	oFF.QFormulaItemConstant.prototype.m_constantValue = null;
	oFF.QFormulaItemConstant.prototype.m_variableValue = null;
	oFF.QFormulaItemConstant.prototype.m_variable = null;
	oFF.QFormulaItemConstant.prototype.m_currency = null;
	oFF.QFormulaItemConstant.prototype.m_unit = null;
	oFF.QFormulaItemConstant.prototype.copyFormulaItemConstant = function(
			origin) {
		var variableContainer;
		var origVar;
		var origVarVal;
		var originValue;
		this.copyModelComponent(origin);
		this.m_currency = origin.m_currency;
		this.m_unit = origin.m_unit;
		if (origin.getValueType() === oFF.XValueType.VARIABLE) {
			variableContainer = this.getContext().getVariableContainer();
			origVar = origin.getVariable();
			if (oFF.notNull(origVar)) {
				this.setVariable(variableContainer.getVariables().getByKey(
						origVar.getName()));
			} else {
				origVarVal = origin.getVariableValue();
				this.setVariableValue(oFF.QVariableValue
						.create(variableContainer.getVariables().getByKey(
								origVarVal.getVariable().getName())));
			}
		} else {
			originValue = origin.m_constantValue.getValue();
			if (oFF.notNull(originValue)) {
				this.m_constantValue.copyFrom(origin.m_constantValue);
			} else {
				oFF.XObjectExt.release(this.m_constantValue);
				this.m_constantValue = oFF.XValueAccess
						.createWithType(origin.m_constantValue.getValueType());
			}
		}
	};
	oFF.QFormulaItemConstant.prototype.setupFormula = function(context,
			parentNode) {
		this.setupModelComponent(context, parentNode);
		this.m_constantValue = oFF.XValueAccess.create();
	};
	oFF.QFormulaItemConstant.prototype.releaseObject = function() {
		this.m_constantValue = oFF.XObjectExt.release(this.m_constantValue);
		this.m_variableValue = null;
		this.m_variable = null;
		this.m_currency = null;
		this.m_unit = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFormulaItemConstant.prototype.isEqualTo = function(other) {
		var xOther;
		if (oFF.isNull(other)) {
			return false;
		}
		if (this === other) {
			return true;
		}
		xOther = other;
		if (!this.getValue().isEqualTo(xOther.getValue())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getCurrency(), xOther.getCurrency())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getUnit(), xOther.getUnit())) {
			return false;
		}
		return true;
	};
	oFF.QFormulaItemConstant.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FORMULA_CONSTANT;
	};
	oFF.QFormulaItemConstant.prototype.getValueType = function() {
		if (oFF.notNull(this.m_variable)) {
			return oFF.XValueType.VARIABLE;
		}
		return this.m_constantValue.getValueType();
	};
	oFF.QFormulaItemConstant.prototype.getValue = function() {
		return this.m_constantValue.getValue();
	};
	oFF.QFormulaItemConstant.prototype.getGeometry = function() {
		var value = this.getValue();
		return value;
	};
	oFF.QFormulaItemConstant.prototype.getPolygon = function() {
		return this.m_constantValue.getPolygon();
	};
	oFF.QFormulaItemConstant.prototype.setPolygon = function(value) {
		this.m_constantValue.setPolygon(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getPoint = function() {
		return this.m_constantValue.getPoint();
	};
	oFF.QFormulaItemConstant.prototype.setPoint = function(value) {
		this.m_constantValue.setPoint(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getString = function() {
		return this.m_constantValue.getString();
	};
	oFF.QFormulaItemConstant.prototype.setString = function(value) {
		this.m_constantValue.setString(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getBoolean = function() {
		return this.m_constantValue.getBoolean();
	};
	oFF.QFormulaItemConstant.prototype.setBoolean = function(value) {
		this.m_constantValue.setBoolean(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getDate = function() {
		return this.m_constantValue.getDate();
	};
	oFF.QFormulaItemConstant.prototype.setDate = function(value) {
		this.m_constantValue.setDate(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getTime = function() {
		return this.m_constantValue.getTime();
	};
	oFF.QFormulaItemConstant.prototype.setTime = function(value) {
		this.m_constantValue.setTime(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getTimeSpan = function() {
		return this.m_constantValue.getTimeSpan();
	};
	oFF.QFormulaItemConstant.prototype.setTimeSpan = function(value) {
		this.m_constantValue.setTimeSpan(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.setDateTime = function(value) {
		this.m_constantValue.setDateTime(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getDateTime = function() {
		return this.m_constantValue.getDateTime();
	};
	oFF.QFormulaItemConstant.prototype.setInteger = function(value) {
		this.m_constantValue.setInteger(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getInteger = function() {
		return this.m_constantValue.getInteger();
	};
	oFF.QFormulaItemConstant.prototype.setLong = function(value) {
		this.m_constantValue.setLong(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getLong = function() {
		return this.m_constantValue.getLong();
	};
	oFF.QFormulaItemConstant.prototype.setDouble = function(value) {
		this.m_constantValue.setDouble(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getDouble = function() {
		return this.m_constantValue.getDouble();
	};
	oFF.QFormulaItemConstant.prototype.copyFrom = function(source) {
		this.m_constantValue.copyFrom(source);
	};
	oFF.QFormulaItemConstant.prototype.setMultiPolygon = function(value) {
		this.m_constantValue.setMultiPolygon(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getMultiPolygon = function() {
		return this.m_constantValue.getMultiPolygon();
	};
	oFF.QFormulaItemConstant.prototype.setLineString = function(value) {
		this.m_constantValue.setLineString(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getLineString = function() {
		return this.m_constantValue.getLineString();
	};
	oFF.QFormulaItemConstant.prototype.setMultiLineString = function(value) {
		this.m_constantValue.setMultiLineString(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getMultiLineString = function() {
		return this.m_constantValue.getMultiLineString();
	};
	oFF.QFormulaItemConstant.prototype.getUnit = function() {
		return this.m_unit;
	};
	oFF.QFormulaItemConstant.prototype.setUnit = function(unit) {
		this.m_unit = unit;
		this.m_currency = null;
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getCurrency = function() {
		return this.m_currency;
	};
	oFF.QFormulaItemConstant.prototype.setCurrency = function(currency) {
		this.m_currency = currency;
		this.m_unit = null;
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.setVariableValue = function(
			variableValue) {
		this.m_variableValue = oFF.XWeakReferenceUtil.getWeakRef(variableValue);
		if (oFF.notNull(this.m_variableValue)) {
			this.setVariable(variableValue.getVariable());
		} else {
			this.m_variable = null;
		}
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getVariableValue = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_variableValue);
	};
	oFF.QFormulaItemConstant.prototype.getNull = function() {
		return this.m_constantValue.getNull();
	};
	oFF.QFormulaItemConstant.prototype.setNullByType = function(nullValueType) {
		this.m_constantValue.setNullByType(nullValueType);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.setVariable = function(variable) {
		this.m_variable = oFF.XWeakReferenceUtil.getWeakRef(variable);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getVariable = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_variable);
	};
	oFF.QFormulaItemConstant.prototype.setMultiPoint = function(value) {
		this.m_constantValue.setMultiPoint(value);
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemConstant.prototype.getMultiPoint = function() {
		return this.m_constantValue.getMultiPoint();
	};
	oFF.QFormulaItemConstant.prototype.hasValue = function() {
		if (oFF.isNull(this.m_variable)) {
			return this.m_constantValue.hasValue();
		}
		return this.getVariable().getValueByString() !== null;
	};
	oFF.QFormulaItemConstant.prototype.parseString = function(value) {
		if (oFF.notNull(this.m_variable)) {
			oFF.noSupport();
		}
		return this.m_constantValue.parseString(value);
	};
	oFF.QFormulaItemConstant.prototype.setXValue = function(value) {
		oFF.XObjectExt.release(this.m_constantValue);
		this.m_constantValue = oFF.XValueAccess.createWithValue(value);
	};
	oFF.QFormulaItemConstant.prototype.getFormattedValue = function() {
		return this.getString();
	};
	oFF.QFormulaItemMember = function() {
	};
	oFF.QFormulaItemMember.prototype = new oFF.QModelComponent();
	oFF.QFormulaItemMember._createMember = function(context, parentNode) {
		var formula = new oFF.QFormulaItemMember();
		formula.setupModelComponent(context, parentNode);
		return formula;
	};
	oFF.QFormulaItemMember.prototype.m_memberName = null;
	oFF.QFormulaItemMember.prototype.m_dimensionName = null;
	oFF.QFormulaItemMember.prototype.m_memberVariable = null;
	oFF.QFormulaItemMember.prototype.copyFormulaItemMember = function(origin) {
		this.copyModelComponent(origin);
		this.m_memberName = origin.m_memberName;
		this.m_dimensionName = origin.m_dimensionName;
		if (oFF.notNull(origin.m_memberVariable)) {
			this.setVariable(this.getContext().getVariableContainer()
					.getVariables().getByKey(origin.getVariable().getName()));
		}
	};
	oFF.QFormulaItemMember.prototype.releaseObject = function() {
		this.m_memberName = null;
		this.m_dimensionName = null;
		this.m_memberVariable = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFormulaItemMember.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FORMULA_ITEM_MEMBER;
	};
	oFF.QFormulaItemMember.prototype.setMember = function(member) {
		this.setMemberName(member.getName());
	};
	oFF.QFormulaItemMember.prototype.setMemberName = function(name) {
		this.m_memberName = name;
		this.m_memberVariable = null;
	};
	oFF.QFormulaItemMember.prototype.getMemberName = function() {
		return this.m_memberName;
	};
	oFF.QFormulaItemMember.prototype.setVariable = function(variable) {
		this.m_memberVariable = oFF.XWeakReferenceUtil.getWeakRef(variable);
		this.m_memberName = null;
		this.m_dimensionName = variable.getDimension().getName();
	};
	oFF.QFormulaItemMember.prototype.getVariable = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_memberVariable);
	};
	oFF.QFormulaItemMember.prototype.getDimensionName = function() {
		return this.m_dimensionName;
	};
	oFF.QFormulaItemMember.prototype.setDimension = function(dimension) {
		if (oFF.isNull(dimension)) {
			this.m_dimensionName = null;
		} else {
			this.m_dimensionName = dimension.getName();
		}
	};
	oFF.QFormulaItemMember.prototype.setDimensionName = function(dimensionName) {
		this.m_dimensionName = dimensionName;
	};
	oFF.QFormulaItemOperation = function() {
	};
	oFF.QFormulaItemOperation.prototype = new oFF.QModelComponent();
	oFF.QFormulaItemOperation._createOperation = function(context, parentNode) {
		var formula = new oFF.QFormulaItemOperation();
		formula.setupModelComponent(context, parentNode);
		return formula;
	};
	oFF.QFormulaItemOperation.prototype.m_operator = null;
	oFF.QFormulaItemOperation.prototype.m_leftSide = null;
	oFF.QFormulaItemOperation.prototype.m_rightSide = null;
	oFF.QFormulaItemOperation.prototype.copyFormulaItemOperation = function(
			origin) {
		this.copyModelComponent(origin);
		this.m_operator = origin.m_operator;
		if (oFF.notNull(origin.m_leftSide)) {
			this.m_leftSide = this.copySide(origin.m_leftSide);
		}
		if (oFF.notNull(origin.m_rightSide)) {
			this.m_rightSide = this.copySide(origin.m_rightSide);
		}
	};
	oFF.QFormulaItemOperation.prototype.copySide = function(originItem) {
		var cloneItem;
		var originType = originItem.getOlapComponentType();
		if (originType === oFF.OlapComponentType.FORMULA_ITEM_ATTRIBUTE) {
			cloneItem = oFF.QFormulaItemAttribute._createMember(this, this);
			cloneItem.copyFormulaItemAttribute(originItem);
		} else {
			if (originType === oFF.OlapComponentType.FORMULA_CONSTANT) {
				cloneItem = oFF.QFormulaItemConstant
						._createConstant(this, this);
				cloneItem.copyFormulaItemConstant(originItem);
			} else {
				if (originType === oFF.OlapComponentType.FORMULA_ITEM_MEMBER) {
					cloneItem = oFF.QFormulaItemMember
							._createMember(this, this);
					cloneItem.copyFormulaItemMember(originItem);
				} else {
					if (originType === oFF.OlapComponentType.FORMULA_OPERATION) {
						cloneItem = oFF.QFormulaItemOperation._createOperation(
								this, this);
						cloneItem.copyFormulaItemOperation(originItem);
					} else {
						if (originType === oFF.OlapComponentType.FORMULA_FUNCTION) {
							cloneItem = oFF.QFactory.newFormulaFunction(this);
							cloneItem.copyFormulaItemFunction(originItem);
						} else {
							throw oFF.XException
									.createRuntimeException(oFF.XStringUtils
											.concatenate3(
													"Unexpected component type '",
													originType.getName(),
													"' in formula operation!"));
						}
					}
				}
			}
		}
		return cloneItem;
	};
	oFF.QFormulaItemOperation.prototype.releaseObject = function() {
		this.m_leftSide = oFF.XObjectExt.release(this.m_leftSide);
		this.m_rightSide = oFF.XObjectExt.release(this.m_rightSide);
		this.m_operator = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFormulaItemOperation.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FORMULA_OPERATION;
	};
	oFF.QFormulaItemOperation.prototype.getOperator = function() {
		return this.m_operator;
	};
	oFF.QFormulaItemOperation.prototype.setOperator = function(theOperator) {
		this.m_operator = theOperator;
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemOperation.prototype.getLeftSide = function() {
		return this.m_leftSide;
	};
	oFF.QFormulaItemOperation.prototype.setLeftSide = function(item) {
		this.m_leftSide = item;
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemOperation.prototype.getRightSide = function() {
		return this.m_rightSide;
	};
	oFF.QFormulaItemOperation.prototype.setRightSide = function(item) {
		this.m_rightSide = item;
		this.notifyNodeChanged();
	};
	oFF.HierarchyCatalogManager = function() {
	};
	oFF.HierarchyCatalogManager.prototype = new oFF.QOlapSyncAction();
	oFF.HierarchyCatalogManager.OBJECT_VERSION = "objectVersion";
	oFF.HierarchyCatalogManager.HIERARCHY_NAME = "hierarchyName";
	oFF.HierarchyCatalogManager.VERSION_NAME = "versionName";
	oFF.HierarchyCatalogManager.BW_NAME_KEY = "Name.KEY";
	oFF.HierarchyCatalogManager.BW_TEXT_SHORT_TEXT = "Text.SHORT_TEXT";
	oFF.HierarchyCatalogManager.BW_TEXT_MEDIUM_TEXT = "Text.MEDIUM_TEXT";
	oFF.HierarchyCatalogManager.BW_TEXT_LONG_TEXT = "Text.LONG_TEXT";
	oFF.HierarchyCatalogManager.BW_VERSION_DISPLAY_KEY = "Version.DISPLAY_KEY";
	oFF.HierarchyCatalogManager.BW_VERSION_KEY = "Version.KEY";
	oFF.HierarchyCatalogManager.BW_VERSION_LONG_TEXT = "Version.LONG_TEXT";
	oFF.HierarchyCatalogManager.BW_DATE_TO_KEY = "DateTo.KEY";
	oFF.HierarchyCatalogManager.BW_DATE_FROM = "DateFrom";
	oFF.HierarchyCatalogManager.BW_DATE_FROM_KEY = "DateFrom.KEY";
	oFF.HierarchyCatalogManager.BW_OWNER_KEY = "Owner.KEY";
	oFF.HierarchyCatalogManager.BW_HIEID = "HieID";
	oFF.HierarchyCatalogManager.BW_HIEID_KEY = "HieID.KEY";
	oFF.HierarchyCatalogManager.BW_HIETYPE = "HieType";
	oFF.HierarchyCatalogManager.BW_HIETYPE_KEY = "HieType.KEY";
	oFF.HierarchyCatalogManager.BW_OBJVERS = "ObjVers";
	oFF.HierarchyCatalogManager.BW_OBJVERS_KEY = "ObjVers.KEY";
	oFF.HierarchyCatalogManager.BW_IS_REMOTE = "Is_Remote_Hier";
	oFF.HierarchyCatalogManager.BW_IS_REMOTE_KEY = "Is_Remote_Hier.KEY";
	oFF.HierarchyCatalogManager.create = function(queryManager, dataSource,
			dimensionName) {
		var object = new oFF.HierarchyCatalogManager();
		object.setupCatalogManager(queryManager, dataSource, dimensionName);
		return object;
	};
	oFF.HierarchyCatalogManager.prototype.m_filter = null;
	oFF.HierarchyCatalogManager.prototype.m_operator = null;
	oFF.HierarchyCatalogManager.prototype.m_dataSource = null;
	oFF.HierarchyCatalogManager.prototype.m_dimensionName = null;
	oFF.HierarchyCatalogManager.prototype.m_filterHierarchyDate = null;
	oFF.HierarchyCatalogManager.prototype.m_enableFilterHierarchyDate = false;
	oFF.HierarchyCatalogManager.prototype.m_catalogResult = null;
	oFF.HierarchyCatalogManager.prototype.setupCatalogManager = function(
			queryManager, dataSource, dimensionName) {
		this.setupSynchronizingObject(queryManager);
		this.m_dataSource = dataSource;
		this.m_dimensionName = dimensionName;
		this.m_filter = oFF.XHashMapOfStringByString.create();
		this.m_operator = oFF.XHashMapByString.create();
	};
	oFF.HierarchyCatalogManager.prototype.releaseObject = function() {
		this.m_dataSource = null;
		this.m_dimensionName = null;
		this.m_catalogResult = oFF.XObjectExt.release(this.m_catalogResult);
		this.m_filterHierarchyDate = oFF.XObjectExt
				.release(this.m_filterHierarchyDate);
		this.m_filter = oFF.XObjectExt.release(this.m_filter);
		this.m_operator = oFF.XObjectExt.release(this.m_operator);
		oFF.XObjectExt.release(this.getQueryManager());
		oFF.QOlapSyncAction.prototype.releaseObject.call(this);
	};
	oFF.HierarchyCatalogManager.prototype.getComponentName = function() {
		return "HierarchyCatalogManager";
	};
	oFF.HierarchyCatalogManager.prototype.processGetResult = function(syncType,
			listener, customIdentifier) {
		return this.processSyncAction(syncType, listener, customIdentifier);
	};
	oFF.HierarchyCatalogManager.prototype.callListener = function(extResult,
			listener, data, customIdentifier) {
		listener.onHierarchyCatalogResult(extResult, data, customIdentifier);
	};
	oFF.HierarchyCatalogManager.prototype.processSynchronization = function(
			syncType) {
		var queryManager = this.getQueryManager();
		var queryModel = queryManager.getQueryModel();
		var commands = queryModel.getConvenienceCommands();
		commands.resetToDefault();
		if (queryManager.getSystemType() === oFF.SystemType.HANA) {
			this.processHana(commands);
		} else {
			this.processBW(commands);
		}
		this._addFilter(commands, "Name", this.getFilterHierarchyName(), this
				.getOperatorHierarchyName());
		this._addFilter(commands, "Version", this.getFilterVersionName(), this
				.getOperatorVersionName());
		queryManager.processQueryExecution(syncType, this, null);
		return true;
	};
	oFF.HierarchyCatalogManager.prototype._addFilter = function(commands,
			dimName, filterValue, operator) {
		commands.clearFiltersByDimensionName(dimName);
		if (oFF.notNull(operator)) {
			commands.addSingleMemberFilterByDimensionName(dimName, filterValue,
					operator);
		}
	};
	oFF.HierarchyCatalogManager.prototype.processHana = function(commands) {
		var dataSource;
		commands.moveDimensionToRows("Dimension");
		commands.moveDimensionToRows("Name");
		commands.moveDimensionToRows("Description");
		commands.moveDimensionToRows("Version");
		commands.moveDimensionToRows("DateTo");
		dataSource = this.m_dataSource;
		commands.addSimpleSingleMemberFilter("Type",
				dataSource.getType() === null ? null : dataSource.getType()
						.getCamelCaseName());
		commands.addSimpleSingleMemberFilter("SchemaName", dataSource
				.getSchemaName());
		commands.addSimpleSingleMemberFilter("PackageName", dataSource
				.getPackageName());
		commands.addSimpleSingleMemberFilter("ObjectName", dataSource
				.getObjectName());
		if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_dimensionName)) {
			commands.addSimpleSingleMemberFilter("Dimension",
					this.m_dimensionName);
		}
	};
	oFF.HierarchyCatalogManager.prototype.addDimensionAndField = function(
			commands, dimensionName, fieldName) {
		commands.moveDimensionToRows(dimensionName);
		commands.addFieldToResultSet(dimensionName, fieldName);
	};
	oFF.HierarchyCatalogManager.prototype.processBW = function(commands) {
		var hierarchyDate;
		this.addDimensionAndField(commands, "Name",
				oFF.HierarchyCatalogManager.BW_NAME_KEY);
		commands.moveDimensionToRows("Text");
		commands.addFieldToResultSet("Text",
				oFF.HierarchyCatalogManager.BW_TEXT_SHORT_TEXT);
		commands.addFieldToResultSet("Text",
				oFF.HierarchyCatalogManager.BW_TEXT_MEDIUM_TEXT);
		commands.addFieldToResultSet("Text",
				oFF.HierarchyCatalogManager.BW_TEXT_LONG_TEXT);
		commands.moveDimensionToRows("Version");
		commands.addFieldToResultSet("Version",
				oFF.HierarchyCatalogManager.BW_VERSION_KEY);
		commands.addFieldToResultSet("Version",
				oFF.HierarchyCatalogManager.BW_VERSION_LONG_TEXT);
		this.addDimensionAndField(commands, "DateTo",
				oFF.HierarchyCatalogManager.BW_DATE_TO_KEY);
		this.addDimensionAndField(commands,
				oFF.HierarchyCatalogManager.BW_DATE_FROM,
				oFF.HierarchyCatalogManager.BW_DATE_FROM_KEY);
		this.addDimensionAndField(commands, "Owner",
				oFF.HierarchyCatalogManager.BW_OWNER_KEY);
		this.addDimensionAndField(commands,
				oFF.HierarchyCatalogManager.BW_HIEID,
				oFF.HierarchyCatalogManager.BW_HIEID_KEY);
		this.addDimensionAndField(commands,
				oFF.HierarchyCatalogManager.BW_OBJVERS,
				oFF.HierarchyCatalogManager.BW_OBJVERS_KEY);
		this.addDimensionAndField(commands,
				oFF.HierarchyCatalogManager.BW_IS_REMOTE,
				oFF.HierarchyCatalogManager.BW_IS_REMOTE_KEY);
		this._addFilter(commands, oFF.HierarchyCatalogManager.BW_OBJVERS, this
				.getFilterHierarchyObjectVersion(), this
				.getOperatorHierarchyObjectVersion());
		if (oFF.notNull(this.m_filterHierarchyDate)
				&& this.m_enableFilterHierarchyDate) {
			hierarchyDate = this.m_filterHierarchyDate.toSAPFormat();
			this._addFilter(commands, oFF.HierarchyCatalogManager.BW_DATE_FROM,
					hierarchyDate, oFF.ComparisonOperator.LESS_EQUAL);
			this._addFilter(commands, "DateTo", hierarchyDate,
					oFF.ComparisonOperator.GREATER_EQUAL);
		}
	};
	oFF.HierarchyCatalogManager.prototype.onQueryExecuted = function(extResult,
			resultSetContainer, customIdentifier) {
		var classicResultSet;
		this.addAllMessages(extResult);
		if (extResult.isValid()) {
			classicResultSet = resultSetContainer.getClassicResultSet();
			this.m_catalogResult = oFF.HierarchyCatalogResult.create(
					classicResultSet, this.m_dimensionName);
			this.setData(this.m_catalogResult);
		}
		this.endSync();
	};
	oFF.HierarchyCatalogManager.prototype.setFilterHierarchyName = function(
			hierarchyName, enable) {
		if (enable) {
			this.setFilterHierarchyNameWithOperator(hierarchyName,
					oFF.ComparisonOperator.EQUAL);
		} else {
			this.setFilterHierarchyNameWithOperator(hierarchyName, null);
		}
	};
	oFF.HierarchyCatalogManager.prototype.assertComparisonOperator = function(
			comparisonOperator) {
		if (oFF.notNull(comparisonOperator)
				&& comparisonOperator !== oFF.ComparisonOperator.EQUAL
				&& comparisonOperator !== oFF.ComparisonOperator.MATCH) {
			throw oFF.XException
					.createRuntimeException("illegal comparison operator");
		}
	};
	oFF.HierarchyCatalogManager.prototype._setFilterInternal = function(key,
			value, operator) {
		this.assertComparisonOperator(operator);
		this.m_filter.put(key, value);
		this.m_operator.put(key, operator);
		this.resetSyncState();
	};
	oFF.HierarchyCatalogManager.prototype.setFilterHierarchyNameWithOperator = function(
			hierarchyName, comparisonOperator) {
		this._setFilterInternal(oFF.HierarchyCatalogManager.HIERARCHY_NAME,
				hierarchyName, comparisonOperator);
	};
	oFF.HierarchyCatalogManager.prototype.getOperatorHierarchyName = function() {
		return this.m_operator
				.getByKey(oFF.HierarchyCatalogManager.HIERARCHY_NAME);
	};
	oFF.HierarchyCatalogManager.prototype.getFilterHierarchyName = function() {
		return this.m_filter
				.getByKey(oFF.HierarchyCatalogManager.HIERARCHY_NAME);
	};
	oFF.HierarchyCatalogManager.prototype.isFilterHierarchyNameEnabled = function() {
		return this.getOperatorHierarchyName() !== null;
	};
	oFF.HierarchyCatalogManager.prototype.setFilterVersionName = function(
			versionName, enable) {
		if (enable) {
			this.setFilterVersionNameWithOperator(versionName,
					oFF.ComparisonOperator.EQUAL);
		} else {
			this.setFilterVersionNameWithOperator(versionName, null);
		}
	};
	oFF.HierarchyCatalogManager.prototype.setFilterVersionNameWithOperator = function(
			versionName, comparisonOperator) {
		this._setFilterInternal(oFF.HierarchyCatalogManager.VERSION_NAME,
				versionName, comparisonOperator);
	};
	oFF.HierarchyCatalogManager.prototype.getOperatorVersionName = function() {
		return this.m_operator
				.getByKey(oFF.HierarchyCatalogManager.VERSION_NAME);
	};
	oFF.HierarchyCatalogManager.prototype.getFilterVersionName = function() {
		return this.m_filter.getByKey(oFF.HierarchyCatalogManager.VERSION_NAME);
	};
	oFF.HierarchyCatalogManager.prototype.isFilterVersionNameEnabled = function() {
		return this.getOperatorVersionName() !== null;
	};
	oFF.HierarchyCatalogManager.prototype.setFilterHierarchyObjectVersion = function(
			objectVersion, enable) {
		if (enable) {
			this.setFilterHierarchyObjectVersionWithOperator(objectVersion,
					oFF.ComparisonOperator.EQUAL);
		} else {
			this.setFilterHierarchyObjectVersionWithOperator(objectVersion,
					null);
		}
	};
	oFF.HierarchyCatalogManager.prototype.setFilterHierarchyObjectVersionWithOperator = function(
			objectVersion, comparisonOperator) {
		this._setFilterInternal(oFF.HierarchyCatalogManager.OBJECT_VERSION,
				objectVersion, comparisonOperator);
	};
	oFF.HierarchyCatalogManager.prototype.getOperatorHierarchyObjectVersion = function() {
		return this.m_operator
				.getByKey(oFF.HierarchyCatalogManager.OBJECT_VERSION);
	};
	oFF.HierarchyCatalogManager.prototype.getFilterHierarchyObjectVersion = function() {
		return this.m_filter
				.getByKey(oFF.HierarchyCatalogManager.OBJECT_VERSION);
	};
	oFF.HierarchyCatalogManager.prototype.isFilterHierarchyObjectVersionEnabled = function() {
		return this.getOperatorHierarchyObjectVersion() !== null;
	};
	oFF.HierarchyCatalogManager.prototype.setFilterHierarchyDate = function(
			date, enable) {
		if (oFF.isNull(date)) {
			this.m_filterHierarchyDate = oFF.XObjectExt
					.release(this.m_filterHierarchyDate);
		} else {
			if (oFF.isNull(this.m_filterHierarchyDate)) {
				this.m_filterHierarchyDate = oFF.XDate.createDateWithValues(
						date.getYear(), date.getMonthOfYear(), date
								.getDayOfMonth());
			} else {
				this.m_filterHierarchyDate.resetValue(date);
			}
		}
		this.resetSyncState();
		this.m_enableFilterHierarchyDate = enable;
	};
	oFF.HierarchyCatalogManager.prototype.getFilterHierarchyDate = function() {
		return this.m_filterHierarchyDate;
	};
	oFF.QHierarchy = function() {
	};
	oFF.QHierarchy.prototype = new oFF.QModelComponent();
	oFF.QHierarchy.create = function(context, dimension, name) {
		var object = new oFF.QHierarchy();
		object.setupModelComponentWithName(context, dimension, name);
		return object;
	};
	oFF.QHierarchy.prototype.m_uniqueName = null;
	oFF.QHierarchy.prototype.m_hierarchyDescription = null;
	oFF.QHierarchy.prototype.m_version = null;
	oFF.QHierarchy.prototype.m_versionDescription = null;
	oFF.QHierarchy.prototype.m_dateTo = null;
	oFF.QHierarchy.prototype.m_dateFrom = null;
	oFF.QHierarchy.prototype.m_dueDate = null;
	oFF.QHierarchy.prototype.m_owner = null;
	oFF.QHierarchy.prototype.m_hierId = null;
	oFF.QHierarchy.prototype.m_hierType = null;
	oFF.QHierarchy.prototype.m_objectVersion = null;
	oFF.QHierarchy.prototype.m_isRemote = false;
	oFF.QHierarchy.prototype.m_isModeled = false;
	oFF.QHierarchy.prototype.m_hierarchyType = null;
	oFF.QHierarchy.prototype.copyHierarchy = function(origin) {
		this.copyModelComponent(origin);
		this.m_uniqueName = origin.m_uniqueName;
		this.m_hierarchyDescription = origin.m_hierarchyDescription;
		this.m_version = origin.m_version;
		this.m_versionDescription = origin.m_versionDescription;
		this.m_dateTo = oFF.XObjectExt.cloneIfNotNull(origin.m_dateTo);
		this.m_dateFrom = oFF.XObjectExt.cloneIfNotNull(origin.m_dateFrom);
		this.m_dueDate = oFF.XObjectExt.cloneIfNotNull(origin.m_dueDate);
		this.m_hierarchyType = origin.m_hierarchyType;
		this.m_owner = origin.m_owner;
		this.m_hierId = origin.m_hierId;
		this.m_hierType = origin.m_hierType;
		this.m_objectVersion = origin.m_objectVersion;
		this.m_isRemote = origin.m_isRemote;
		this.m_isModeled = origin.m_isModeled;
	};
	oFF.QHierarchy.prototype.releaseObject = function() {
		this.m_dateTo = oFF.XObjectExt.release(this.m_dateTo);
		this.m_dateFrom = oFF.XObjectExt.release(this.m_dateFrom);
		this.m_dueDate = oFF.XObjectExt.release(this.m_dueDate);
		this.m_uniqueName = null;
		this.m_hierarchyDescription = null;
		this.m_version = null;
		this.m_versionDescription = null;
		this.m_owner = null;
		this.m_hierId = null;
		this.m_hierType = null;
		this.m_objectVersion = null;
		this.m_hierarchyType = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QHierarchy.prototype.isEqualTo = function(other) {
		var otherHierarchy;
		if (oFF.isNull(other)) {
			return false;
		}
		if (this === other) {
			return true;
		}
		otherHierarchy = other;
		if (!oFF.XString.isEqual(this.getHierarchyDescription(), otherHierarchy
				.getHierarchyDescription())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getHierarchyName(), otherHierarchy
				.getHierarchyName())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getHierarchyVersion(), otherHierarchy
				.getHierarchyVersion())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getVersionDescription(), otherHierarchy
				.getVersionDescription())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getOwner(), otherHierarchy.getOwner())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getHierId(), otherHierarchy.getHierId())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getHierType(), otherHierarchy
				.getHierType())) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getObjectVersion(), otherHierarchy
				.getObjectVersion())) {
			return false;
		}
		if (this.isRemote() !== otherHierarchy.isRemote()) {
			return false;
		}
		if (this.isModeled() !== otherHierarchy.isModeled()) {
			return false;
		}
		if (this.getDateFrom() !== otherHierarchy.getDateFrom()) {
			return false;
		}
		if (this.getHierarchyDueDate() !== otherHierarchy.getHierarchyDueDate()) {
			return false;
		}
		if (this.getDateTo() !== otherHierarchy.getDateTo()) {
			return false;
		}
		return true;
	};
	oFF.QHierarchy.prototype.getHierarchyName = function() {
		return this.getName();
	};
	oFF.QHierarchy.prototype.getHierarchyDescription = function() {
		return this.m_hierarchyDescription;
	};
	oFF.QHierarchy.prototype.setHierarchyDescription = function(
			hierarchyDescription) {
		this.m_hierarchyDescription = hierarchyDescription;
	};
	oFF.QHierarchy.prototype.setVersionDescription = function(
			versionDescription) {
		this.m_versionDescription = versionDescription;
	};
	oFF.QHierarchy.prototype.getVersionDescription = function() {
		return this.m_versionDescription;
	};
	oFF.QHierarchy.prototype.getHierarchyVersion = function() {
		return this.m_version;
	};
	oFF.QHierarchy.prototype.getVersion = function() {
		return this.getHierarchyVersion();
	};
	oFF.QHierarchy.prototype.setHierarchyVersion = function(version) {
		this.m_version = version;
	};
	oFF.QHierarchy.prototype.getDateTo = function() {
		return this.m_dateTo;
	};
	oFF.QHierarchy.prototype.setDateTo = function(dateTo) {
		this.m_dateTo = dateTo;
	};
	oFF.QHierarchy.prototype.getDimension = function() {
		return this.getParentComponent();
	};
	oFF.QHierarchy.prototype.getDateFrom = function() {
		return this.m_dateFrom;
	};
	oFF.QHierarchy.prototype.getOwner = function() {
		return this.m_owner;
	};
	oFF.QHierarchy.prototype.getHierId = function() {
		return this.m_hierId;
	};
	oFF.QHierarchy.prototype.getHierType = function() {
		return this.m_hierType;
	};
	oFF.QHierarchy.prototype.setHierType = function(hierType) {
		this.m_hierType = hierType;
	};
	oFF.QHierarchy.prototype.getObjectVersion = function() {
		return this.m_objectVersion;
	};
	oFF.QHierarchy.prototype.setDateFrom = function(dateFrom) {
		this.m_dateFrom = dateFrom;
	};
	oFF.QHierarchy.prototype.setOwner = function(owner) {
		this.m_owner = owner;
	};
	oFF.QHierarchy.prototype.setHierId = function(hierId) {
		this.m_hierId = hierId;
	};
	oFF.QHierarchy.prototype.setObjectVersion = function(objectVersion) {
		this.m_objectVersion = objectVersion;
	};
	oFF.QHierarchy.prototype.isRemote = function() {
		return this.m_isRemote;
	};
	oFF.QHierarchy.prototype.setIsRemote = function(isRemote) {
		this.m_isRemote = isRemote;
	};
	oFF.QHierarchy.prototype.isModeled = function() {
		return this.m_isModeled;
	};
	oFF.QHierarchy.prototype.setIsModeled = function(isModeled) {
		this.m_isModeled = isModeled;
	};
	oFF.QHierarchy.prototype.getHierarchyDueDate = function() {
		return this.m_dueDate;
	};
	oFF.QHierarchy.prototype.getDueDate = function() {
		return this.m_dueDate;
	};
	oFF.QHierarchy.prototype.setHierarchyDueDate = function(dueDate) {
		this.m_dueDate = dueDate;
	};
	oFF.QHierarchy.prototype.getHierarchyUniqueName = function() {
		return this.m_uniqueName;
	};
	oFF.QHierarchy.prototype.setHierarchyUniqueName = function(uniqueName) {
		this.m_uniqueName = uniqueName;
	};
	oFF.QHierarchy.prototype.setHierarchyName = function(name) {
		this.setName(name);
	};
	oFF.QHierarchy.prototype.getHierarchyType = function() {
		return this.m_hierarchyType;
	};
	oFF.QHierarchy.prototype.setHierarchyType = function(hierarchyType) {
		this.m_hierarchyType = hierarchyType;
	};
	oFF.QHierarchyManager = function() {
	};
	oFF.QHierarchyManager.prototype = new oFF.QModelComponent();
	oFF.QHierarchyManager.create = function(context, parentNode) {
		var object = new oFF.QHierarchyManager();
		object.setupHierarchy(context, parentNode);
		return object;
	};
	oFF.QHierarchyManager.isStringSimilar = function(first, second) {
		if (oFF.XString.isEqual(first, second)) {
			return true;
		}
		if (oFF.isNull(first) && oFF.XString.isEqual(second, "")) {
			return true;
		}
		return oFF.isNull(second) && oFF.XString.isEqual(first, "");
	};
	oFF.QHierarchyManager.prototype.m_supportsHierarchy = false;
	oFF.QHierarchyManager.prototype.m_numberOfHierarchies = 0;
	oFF.QHierarchyManager.prototype.m_defaultHierarchyName = null;
	oFF.QHierarchyManager.prototype.m_hierarchySelectionName = null;
	oFF.QHierarchyManager.prototype.m_hierarchySelectionVersion = null;
	oFF.QHierarchyManager.prototype.m_hierarchySelectionDueDate = null;
	oFF.QHierarchyManager.prototype.m_isHierarchyActive = false;
	oFF.QHierarchyManager.prototype.m_lowerLevelNodeAlignment = null;
	oFF.QHierarchyManager.prototype.m_memberOfPostedNodeVisibility = null;
	oFF.QHierarchyManager.prototype.m_hierarchyNodeCondensation = false;
	oFF.QHierarchyManager.prototype.m_hierarchyDueDateVariableName = null;
	oFF.QHierarchyManager.prototype.m_useHierarchyDueDateVariable = false;
	oFF.QHierarchyManager.prototype.m_assignedHierarchy = null;
	oFF.QHierarchyManager.prototype.m_assignedHierarchyModCount = 0;
	oFF.QHierarchyManager.prototype.m_hierarchySelectionModCount = 0;
	oFF.QHierarchyManager.prototype.m_hierarchyHelp = null;
	oFF.QHierarchyManager.prototype.m_hierarchies = null;
	oFF.QHierarchyManager.prototype.setupHierarchy = function(context,
			parentNode) {
		oFF.QModelComponent.prototype.setupModelComponent.call(this, context,
				parentNode);
		this.m_supportsHierarchy = true;
		this.m_lowerLevelNodeAlignment = oFF.Alignment.DEFAULT_VALUE;
		this.m_memberOfPostedNodeVisibility = oFF.ResultVisibility.VISIBLE;
		this.m_hierarchies = null;
	};
	oFF.QHierarchyManager.prototype.releaseObject = function() {
		this.m_hierarchySelectionName = null;
		this.m_hierarchySelectionVersion = null;
		this.m_hierarchySelectionDueDate = null;
		this.m_lowerLevelNodeAlignment = null;
		this.m_memberOfPostedNodeVisibility = null;
		this.m_hierarchyDueDateVariableName = null;
		this.m_hierarchies = oFF.XObjectExt.release(this.m_hierarchies);
		this.m_assignedHierarchy = oFF.XObjectExt
				.release(this.m_assignedHierarchy);
		this.m_hierarchyHelp = oFF.XObjectExt.release(this.m_hierarchyHelp);
		this.m_defaultHierarchyName = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QHierarchyManager.prototype.copyHierarchy = function(origin) {
		var otherHierarchy;
		this.copyModelComponent(origin);
		this.m_supportsHierarchy = origin.supportsHierarchy();
		this.m_hierarchySelectionName = origin.getHierarchyName();
		this.m_hierarchySelectionVersion = origin.getHierarchyVersion();
		this.m_hierarchySelectionDueDate = oFF.XObjectExt.cloneIfNotNull(origin
				.getHierarchyDueDate());
		this.m_lowerLevelNodeAlignment = origin.getLowerLevelNodeAlignment();
		this.m_memberOfPostedNodeVisibility = origin
				.getMemberOfPostedNodeVisibility();
		this.m_hierarchyNodeCondensation = origin.hasNodeCondensation();
		this.m_hierarchyDueDateVariableName = origin
				.getHierarchyDueDateVariableName();
		this.m_useHierarchyDueDateVariable = origin
				.useHierarchyDueDateVariable();
		this.m_isHierarchyActive = origin.isHierarchyActive();
		otherHierarchy = origin.getHierarchy();
		if (oFF.notNull(otherHierarchy)) {
			this.m_assignedHierarchy = oFF.QHierarchy.create(this.getContext(),
					this.getDimension(), otherHierarchy.getName());
			this.m_assignedHierarchy.copyHierarchy(otherHierarchy);
		}
		this.m_hierarchies = oFF.XObjectExt.cloneIfNotNull(origin
				.getHierarchies());
		this.m_defaultHierarchyName = origin.getDefaultHierarchyName();
		this.m_numberOfHierarchies = origin.getNumberOfHierarchies();
	};
	oFF.QHierarchyManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.HIERARCHY_MANAGER;
	};
	oFF.QHierarchyManager.prototype.getHierarchyValueHelp = function(syncType) {
		if (oFF.isNull(this.m_hierarchyHelp)) {
			this.m_hierarchyHelp = oFF.QHierarchyValueHelp
					.createModelComponent(this.getContext(), this
							.getDimension(), "Available Hierarchies", syncType);
		}
		return this.m_hierarchyHelp;
	};
	oFF.QHierarchyManager.prototype.isHierarchyAssigned = function() {
		if (this.supportsHierarchy()) {
			return this.getHierarchy() !== null;
		}
		return false;
	};
	oFF.QHierarchyManager.prototype.setHierarchy = function(hierarchy) {
		var dueDate;
		this.assertSupportsHierarchy();
		if (!this.isHierarchyAssigned()
				|| !this.getHierarchy().isEqualTo(hierarchy)) {
			this.m_isHierarchyActive = oFF.notNull(hierarchy);
			if (oFF.isNull(hierarchy)) {
				this.setHierarchySelection(null, null);
				this.setHierarchyDueDate(null);
			} else {
				this.m_hierarchySelectionName = hierarchy.getName();
				this.m_hierarchySelectionVersion = hierarchy
						.getHierarchyVersion();
				dueDate = hierarchy.getHierarchyDueDate();
				if (oFF.isNull(dueDate)) {
					dueDate = hierarchy.getDateFrom();
				}
				this.m_hierarchySelectionDueDate = dueDate;
			}
			this.m_hierarchySelectionModCount++;
			this.m_assignedHierarchyModCount = this.m_hierarchySelectionModCount;
			this.m_assignedHierarchy = hierarchy;
			this.notifyNodeChanged();
		}
	};
	oFF.QHierarchyManager.prototype.getHierarchy = function() {
		return this.supportsHierarchy() ? this.m_assignedHierarchy : null;
	};
	oFF.QHierarchyManager.prototype.supportsLowerLevelNodeAlignment = function(
			alignment) {
		if (alignment === oFF.Alignment.CHILDREN_ABOVE_PARENT) {
			return this.supportsExpandBottomUp();
		}
		return true;
	};
	oFF.QHierarchyManager.prototype.supportsExpandBottomUp = function() {
		var queryModel = this.getQueryModel();
		return oFF.isNull(queryModel) ? false : queryModel
				.supportsExpandBottomUp();
	};
	oFF.QHierarchyManager.prototype.supportsHierarchy = function() {
		return this.m_supportsHierarchy;
	};
	oFF.QHierarchyManager.prototype.setSupportsHierarchy = function(
			supportsHierarchy) {
		this.m_supportsHierarchy = supportsHierarchy;
	};
	oFF.QHierarchyManager.prototype.setHierarchyVersion = function(version) {
		this.assertSupportsHierarchy();
		if (!oFF.XString.isEqual(version, this.getHierarchyVersion())) {
			this.m_hierarchySelectionVersion = version;
			this.m_hierarchySelectionModCount++;
		}
		this.reevaluateHierarchySelection();
	};
	oFF.QHierarchyManager.prototype.getHierarchyVersion = function() {
		return this.supportsHierarchy() ? this.m_hierarchySelectionVersion
				: null;
	};
	oFF.QHierarchyManager.prototype.setHierarchyDueDate = function(dueDate) {
		this.assertSupportsHierarchy();
		if (dueDate !== this.getHierarchyDueDate()) {
			this.m_hierarchySelectionDueDate = dueDate;
			this.m_hierarchySelectionModCount++;
		}
		this.reevaluateHierarchySelection();
	};
	oFF.QHierarchyManager.prototype.getHierarchyDueDate = function() {
		return this.supportsHierarchy() ? this.m_hierarchySelectionDueDate
				: null;
	};
	oFF.QHierarchyManager.prototype.getLowerLevelNodeAlignment = function() {
		return this.m_lowerLevelNodeAlignment;
	};
	oFF.QHierarchyManager.prototype.hasDefaultLowerLevelNodeAlignment = function() {
		return this.m_lowerLevelNodeAlignment === oFF.Alignment.DEFAULT_VALUE;
	};
	oFF.QHierarchyManager.prototype.setLowerLevelNodeAlignment = function(
			alignment) {
		this.m_lowerLevelNodeAlignment = alignment;
		this.notifyNodeChanged();
	};
	oFF.QHierarchyManager.prototype.getMemberOfPostedNodeVisibility = function() {
		return this.m_memberOfPostedNodeVisibility;
	};
	oFF.QHierarchyManager.prototype.setMemberOfPostedNodeVisibility = function(
			visibility) {
		this.m_memberOfPostedNodeVisibility = visibility;
		this.notifyNodeChanged();
	};
	oFF.QHierarchyManager.prototype.hasNodeCondensation = function() {
		return this.m_hierarchyNodeCondensation;
	};
	oFF.QHierarchyManager.prototype.setHasNodeCondensation = function(condense) {
		this.m_hierarchyNodeCondensation = condense;
		this.notifyNodeChanged();
	};
	oFF.QHierarchyManager.prototype.getHierarchyDueDateVariableName = function() {
		return this.m_hierarchyDueDateVariableName;
	};
	oFF.QHierarchyManager.prototype.setHierarchyDueDateVariableName = function(
			name) {
		this.m_hierarchyDueDateVariableName = name;
	};
	oFF.QHierarchyManager.prototype.useHierarchyDueDateVariable = function() {
		return this.m_useHierarchyDueDateVariable;
	};
	oFF.QHierarchyManager.prototype.setUseHierarchyDueDateVariable = function(
			useVariable) {
		this.m_useHierarchyDueDateVariable = useVariable;
	};
	oFF.QHierarchyManager.prototype.getHierarchyName = function() {
		return this.supportsHierarchy() ? this.m_hierarchySelectionName : null;
	};
	oFF.QHierarchyManager.prototype.setHierarchyName = function(name) {
		var dimension;
		var queryModel;
		var cmds;
		var selectorHierarchyNode;
		this.assertSupportsHierarchy();
		if (!oFF.XString.isEqual(name, this.getHierarchyName())) {
			dimension = this.getDimension();
			queryModel = this.getQueryModel();
			if (oFF.notNull(queryModel)) {
				cmds = queryModel.getConvenienceCommands();
				cmds.clearFiltersByDimension(dimension);
				cmds.clearVisibilityFiltersByDimension(dimension);
			}
			dimension.clearSelectorFilterByDimension(dimension);
			selectorHierarchyNode = dimension.getSelectorHierarchyNode();
			if (oFF.notNull(selectorHierarchyNode)
					&& selectorHierarchyNode.getDimension() === dimension) {
				dimension.clearSelectorHierarchyNode();
			}
			this.m_hierarchySelectionName = name;
			this.m_hierarchySelectionModCount++;
		}
		this.reevaluateHierarchySelection();
	};
	oFF.QHierarchyManager.prototype.getDimension = function() {
		return this.getParent();
	};
	oFF.QHierarchyManager.prototype.setInitialDrillLevel = function(
			relativeLevelCount) {
		var rootOperation = this.getRootDrillOperation();
		if (oFF.isNull(rootOperation)
				|| rootOperation.getRelativeLevelCount() !== relativeLevelCount) {
			this.getDrillManager().setRootExpandingLevels(this.getDimension(),
					relativeLevelCount);
		}
	};
	oFF.QHierarchyManager.prototype.getInitialDrillLevel = function() {
		var rootOperation = this.getRootDrillOperation();
		return oFF.isNull(rootOperation) ? 0 : rootOperation
				.getRelativeLevelCount();
	};
	oFF.QHierarchyManager.prototype.getRootDrillOperation = function() {
		var drillManager = this.getDrillManager();
		var dimension = this.getDimension();
		return drillManager.getRootExpandingLevels(dimension);
	};
	oFF.QHierarchyManager.prototype.isHierarchyActive = function() {
		return this.supportsHierarchy() ? this.m_isHierarchyActive : false;
	};
	oFF.QHierarchyManager.prototype.setHierarchyActive = function(active) {
		var isChanged;
		var hierarchy;
		var oldHierarchyUniqueName;
		var newHierarchyUniqueName;
		this.assertSupportsHierarchy();
		isChanged = false;
		if (active) {
			if (this.isHierarchyAssigned()
					|| this.m_hierarchySelectionModCount !== this.m_assignedHierarchyModCount) {
				if (this.getHierarchyName() === null) {
					throw oFF.XException
							.createIllegalArgumentException("No hierarchy name is given");
				}
				hierarchy = oFF.QHierarchy.create(this.getContext(), this
						.getDimension(), this.getHierarchyName());
				hierarchy.setHierarchyVersion(this.getHierarchyVersion());
				hierarchy.setHierarchyDueDate(this.getHierarchyDueDate());
				if (!hierarchy.isEqualTo(this.getHierarchy())) {
					oldHierarchyUniqueName = this.getHierarchyUniqueName(this
							.getHierarchyName());
					this.getQueryModel().assertHierarchyUniqueName(
							oldHierarchyUniqueName, false);
					this.setHierarchy(hierarchy);
					isChanged = true;
				}
				if (!this.isHierarchyActive()) {
					isChanged = true;
					this.m_hierarchySelectionModCount++;
				}
			}
		} else {
			if (this.isHierarchyActive()) {
				isChanged = true;
				this.m_hierarchySelectionModCount++;
			}
		}
		if (isChanged) {
			newHierarchyUniqueName = this.getHierarchyUniqueName(this
					.getHierarchyName());
			this.getQueryModel().assertHierarchyUniqueName(
					newHierarchyUniqueName, active);
			this.m_isHierarchyActive = active;
			this.notifyNodeChanged();
		}
		return isChanged;
	};
	oFF.QHierarchyManager.prototype.reevaluateHierarchySelection = function() {
		this.assertSupportsHierarchy();
		if (this.m_hierarchySelectionModCount !== this.m_assignedHierarchyModCount) {
			if (!this.setHierarchyActive(this.isHierarchyActive())) {
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QHierarchyManager.prototype.assertSupportsHierarchy = function() {
		if (!this.supportsHierarchy()) {
			throw oFF.XException.createIllegalStateException(oFF.XStringUtils
					.concatenate2(
							"Hierarchies are not supported on the dimension ",
							this.getName()));
		}
	};
	oFF.QHierarchyManager.prototype.getHierarchyUniqueName = function(
			hierarchyName) {
		return oFF.XStringUtils.concatenate5("[",
				this.getDimension().getName(), "].[", hierarchyName, "]");
	};
	oFF.QHierarchyManager.prototype.setHierarchySelection = function(name,
			version) {
		this.assertSupportsHierarchy();
		this.setHierarchyName(name);
		this.setHierarchyVersion(version);
		this.reevaluateHierarchySelection();
	};
	oFF.QHierarchyManager.prototype.getHierarchies = function() {
		return this.m_hierarchies;
	};
	oFF.QHierarchyManager.prototype.setHierarchies = function(hierarchies) {
		this.m_hierarchies = hierarchies;
	};
	oFF.QHierarchyManager.prototype.supportsHierarchyMetadata = function() {
		var queryModel = this.getQueryModel();
		return oFF.isNull(queryModel) ? false : queryModel
				.supportsHierarchyMetadata();
	};
	oFF.QHierarchyManager.prototype.supportsHierarchyLevelMetadata = function() {
		var queryModel = this.getQueryModel();
		return oFF.isNull(queryModel) ? false : queryModel
				.supportsHierarchyLevelMetadata();
	};
	oFF.QHierarchyManager.prototype.supportsDimensionHierarchyLevels = function() {
		var queryModel = this.getQueryModel();
		return oFF.isNull(queryModel) ? false : queryModel
				.supportsDimensionHierarchyLevels();
	};
	oFF.QHierarchyManager.prototype.activateHierarchy = function(name, version,
			dueDate) {
		this.assertSupportsHierarchy();
		this.setHierarchySelection(name, version);
		this.setHierarchyDueDate(dueDate);
		this.setHierarchyActive(true);
	};
	oFF.QHierarchyManager.prototype.isHierarchyAssignedAndActive = function() {
		if (this.supportsHierarchy()) {
			return this.isHierarchyAssigned() && this.isHierarchyActive();
		}
		return false;
	};
	oFF.QHierarchyManager.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherObj = other;
		var hierarchyName;
		var otherDueDate;
		var hierarchyVersion;
		var useHierarchyDueDateVariable;
		var delta;
		var myDueDate;
		if (this.supportsHierarchy()) {
			if (!otherObj.isHierarchyActive()) {
				this.setHierarchyActive(false);
			} else {
				hierarchyName = otherObj.getHierarchyName();
				otherDueDate = otherObj.getHierarchyDueDate();
				hierarchyVersion = otherObj.getHierarchyVersion();
				useHierarchyDueDateVariable = otherObj
						.useHierarchyDueDateVariable();
				delta = !this.isHierarchyActive();
				if (!delta) {
					delta = !oFF.QHierarchyManager.isStringSimilar(
							hierarchyName, this.getHierarchyName());
					if (!delta) {
						delta = !oFF.QHierarchyManager.isStringSimilar(
								hierarchyVersion, this.getHierarchyVersion());
						if (!delta) {
							myDueDate = this.getHierarchyDueDate();
							if (oFF.isNull(myDueDate)
									&& oFF.isNull(otherDueDate)) {
								delta = false;
							} else {
								if (oFF.notNull(myDueDate)
										&& oFF.notNull(otherDueDate)) {
									delta = !oFF.XString.isEqual(otherDueDate
											.toIsoFormat(), myDueDate
											.toIsoFormat());
								} else {
									delta = true;
								}
							}
						}
					}
				}
				if (settings.isInitialBWMerge() || delta) {
					this.activateHierarchy(hierarchyName, hierarchyVersion,
							otherDueDate);
					this
							.setUseHierarchyDueDateVariable(useHierarchyDueDateVariable);
					if (useHierarchyDueDateVariable) {
						this.setHierarchyDueDateVariableName(otherObj
								.getHierarchyDueDateVariableName());
					}
					this.setInitialDrillLevel(otherObj.getInitialDrillLevel());
					this.setLowerLevelNodeAlignment(otherObj
							.getLowerLevelNodeAlignment());
					this.setHasNodeCondensation(otherObj.hasNodeCondensation());
				}
			}
		}
	};
	oFF.QHierarchyManager.prototype.getDefaultHierarchyName = function() {
		return this.m_defaultHierarchyName;
	};
	oFF.QHierarchyManager.prototype.setDefaultHierarchyName = function(
			defaultHierarchyName) {
		this.m_defaultHierarchyName = defaultHierarchyName;
	};
	oFF.QHierarchyManager.prototype.setNumberOfHierarchies = function(
			numberOfHierarchies) {
		this.m_numberOfHierarchies = numberOfHierarchies;
	};
	oFF.QHierarchyManager.prototype.getNumberOfHierarchies = function() {
		return this.m_numberOfHierarchies;
	};
	oFF.QHierarchyValueHelp = function() {
	};
	oFF.QHierarchyValueHelp.prototype = new oFF.QModelComponent();
	oFF.QHierarchyValueHelp.createModelComponent = function(context,
			dimensionBase, name, syncType) {
		var object = new oFF.QHierarchyValueHelp();
		object.setupHierarchyValueHelp(context, dimensionBase, null, "A", name,
				syncType);
		return object;
	};
	oFF.QHierarchyValueHelp.create = function(context, dimension,
			objectVersion, name, syncType) {
		var object = new oFF.QHierarchyValueHelp();
		object.setupHierarchyValueHelp(context, null, dimension, objectVersion,
				name, syncType);
		return object;
	};
	oFF.QHierarchyValueHelp.prototype.m_dimension = null;
	oFF.QHierarchyValueHelp.prototype.m_queryModelHierarchyHelp = null;
	oFF.QHierarchyValueHelp.prototype.m_objectVersion = null;
	oFF.QHierarchyValueHelp.prototype.m_hierarchies = null;
	oFF.QHierarchyValueHelp.prototype.m_isInitialized = false;
	oFF.QHierarchyValueHelp.prototype.m_syncType = null;
	oFF.QHierarchyValueHelp.prototype.setupHierarchyValueHelp = function(
			context, dimensionBase, dimension, objectVersion, name, syncType) {
		oFF.QModelComponent.prototype.setupModelComponentWithName.call(this,
				context, dimensionBase, name);
		if (oFF.notNull(dimensionBase)) {
			this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimensionBase);
		} else {
			if (oFF.notNull(dimension)) {
				this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
			}
		}
		this.m_objectVersion = objectVersion;
		this.m_isInitialized = false;
		this.m_syncType = syncType;
		if (oFF.isNull(this.m_syncType)) {
			this.m_syncType = oFF.SyncType.NON_BLOCKING;
		}
		this.initializeHierarchyValueHelp();
	};
	oFF.QHierarchyValueHelp.prototype.releaseObject = function() {
		this.m_hierarchies = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_hierarchies);
		this.m_dimension = null;
		this.m_objectVersion = null;
		this.m_queryModelHierarchyHelp = null;
		this.m_syncType = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QHierarchyValueHelp.prototype.initializeHierarchyValueHelp = function() {
		var dimension;
		var application;
		var systemName;
		var systemDescription;
		var serviceConfig;
		var dataSource;
		if (oFF.isNull(this.m_dimension) || this.m_isInitialized) {
			return;
		}
		this.m_isInitialized = true;
		dimension = this.m_dimension.getReference();
		application = dimension.getApplication();
		systemName = dimension.getQueryModel().getDataSource().getSystemName();
		if (oFF.isNull(systemName)
				&& application.getSystemLandscape().getSystemNames().size() === 1) {
			systemName = application.getSystemLandscape().getSystemNames().get(
					0);
		}
		systemDescription = application.getSystemLandscape()
				.getSystemDescription(systemName);
		oFF.XObjectExt.checkNotNull(systemDescription, oFF.XStringUtils
				.concatenate2("System Description not found. System Name: ",
						systemName));
		oFF.XBooleanUtils.checkTrue(oFF.HierarchyCatalogUtil
				.supportsHierarchyCatalog(systemDescription),
				"Hierarchy Catalog Service is not supported");
		serviceConfig = oFF.OlapApiModule.SERVICE_TYPE_HIERARCHY_CATALOG
				.createServiceConfig(application);
		serviceConfig.setSystemName(systemName);
		dataSource = dimension.getQueryModel().getDataSource()
				.getFullQualifiedName();
		serviceConfig.setDataSourceName(dataSource);
		serviceConfig.setDimension(dimension);
		serviceConfig.processHierarchyCatalogManagerCreation(
				oFF.SyncType.BLOCKING, this, null);
	};
	oFF.QHierarchyValueHelp.prototype.getHierarchies = function() {
		return this.m_hierarchies;
	};
	oFF.QHierarchyValueHelp.prototype.getQueryModel = function() {
		return this.m_queryModelHierarchyHelp;
	};
	oFF.QHierarchyValueHelp.prototype.getDimension = function() {
		return this.m_dimension.getReference();
	};
	oFF.QHierarchyValueHelp.prototype.onHierarchyCatalogManagerCreated = function(
			extResult, hierarchyCatalogManager, customIdentifier) {
		if (extResult.hasErrors() || oFF.isNull(hierarchyCatalogManager)) {
			throw oFF.XException.createRuntimeException(extResult.getSummary());
		}
		this.m_queryModelHierarchyHelp = oFF.XWeakReferenceUtil
				.getWeakRef(hierarchyCatalogManager.getQueryManager()
						.getQueryModel());
		hierarchyCatalogManager.setFilterHierarchyObjectVersion(
				this.m_objectVersion, true);
		hierarchyCatalogManager.processGetResult(this.m_syncType, this, null);
	};
	oFF.QHierarchyValueHelp.prototype.onHierarchyCatalogResult = function(
			extResult, result, customIdentifier) {
		this.processHierarchyCatalogResult(result);
	};
	oFF.QHierarchyValueHelp.prototype.processHierarchyCatalogResult = function(
			hierarchyCatalogResult) {
		var catalogItems;
		var dimension;
		var changedNodes;
		var i;
		var catalogItem;
		var dimensionName;
		var hierarchy;
		if (oFF.isNull(hierarchyCatalogResult)) {
			return;
		}
		catalogItems = oFF.HierarchyCatalogUtil
				.getHierarchyItems(hierarchyCatalogResult);
		if (catalogItems.hasElements()) {
			dimension = this.m_dimension.getReference();
			this.m_hierarchies = oFF.XList.create();
			changedNodes = oFF.XList.create();
			for (i = 0; i < catalogItems.size(); i++) {
				catalogItem = catalogItems.get(i);
				dimensionName = catalogItem.getDimensionName();
				oFF.XBooleanUtils
						.checkTrue(
								oFF.XString.isEqual(dimension.getName(),
										dimensionName),
								oFF.XStringUtils
										.concatenate4(
												"Hierarchy Catalog: different dimension names. (1)",
												dimension.getName(), " (2) ",
												dimensionName));
				hierarchy = oFF.QHierarchy.create(dimension.getContext(),
						dimension, catalogItem.getHierarchyName());
				hierarchy.setHierarchyDescription(catalogItem
						.getHierarchyDescription());
				hierarchy.setHierarchyVersion(catalogItem.getVersionName());
				hierarchy.setVersionDescription(catalogItem
						.getVersionDescription());
				hierarchy.setDateTo(catalogItem.getDateTo());
				hierarchy.setDateFrom(catalogItem.getDateFrom());
				hierarchy.setOwner(catalogItem.getOwner());
				hierarchy.setHierId(catalogItem.getHierId());
				hierarchy.setHierType(catalogItem.getHierType());
				hierarchy.setObjectVersion(catalogItem.getObjectVersion());
				hierarchy.setIsRemote(catalogItem.isRemote());
				this.m_hierarchies.add(hierarchy);
				changedNodes.add(this.m_hierarchies.get(i));
			}
			this.notifyNodeChanged();
		} else {
			this.m_hierarchies = null;
		}
	};
	oFF.QHierarchyValueHelp.prototype.isComponentNode = function() {
		return true;
	};
	oFF.QHierarchyValueHelp.prototype.getIndexedChildren = function() {
		var children = oFF.XList.create();
		var i;
		if (oFF.notNull(this.m_hierarchies)) {
			for (i = 0; i < this.m_hierarchies.size(); i++) {
				children.add(this.m_hierarchies.get(i));
			}
		} else {
			if (!this.m_isInitialized) {
				this.initializeHierarchyValueHelp();
				children.add(oFF.QModelComponentNode.createLeave(this
						.getContext(), "Loading..."));
			}
		}
		return children.getIterator();
	};
	oFF.QHierarchyValueHelp.prototype.toString = function() {
		if (oFF.notNull(this.m_hierarchies)) {
			return this.m_hierarchies.toString();
		}
		return "[]";
	};
	oFF.QmShutdownAction = function() {
	};
	oFF.QmShutdownAction.prototype = new oFF.QOlapSyncAction();
	oFF.QmShutdownAction.createAndRun = function(syncType, listener,
			customIdentifier, parent) {
		var newObject = new oFF.QmShutdownAction();
		newObject.setupActionAndRun(syncType, parent, listener,
				customIdentifier);
		return newObject;
	};
	oFF.QmShutdownAction.prototype.m_providerShutdownAction = null;
	oFF.QmShutdownAction.prototype.releaseObject = function() {
		this.m_providerShutdownAction = null;
		oFF.QOlapSyncAction.prototype.releaseObject.call(this);
	};
	oFF.QmShutdownAction.prototype.getComponentName = function() {
		return "QmShutdownAction3";
	};
	oFF.QmShutdownAction.prototype.processSynchronization = function(syncType) {
		var parent = this.getActionContext();
		if (oFF.notNull(parent)) {
			if (parent.getLifeCycleState() !== oFF.LifeCycleState.ACTIVE) {
				this
						.addError(oFF.ErrorCodes.INVALID_STATE,
								"Query Manager cannot be shutdown, it is not in active state");
				return false;
			}
			parent.setLifeCycleState(oFF.LifeCycleState.SHUTTING_DOWN);
			this.m_providerShutdownAction = parent.processProviderShutdown(
					syncType, this, null);
			return true;
		}
		return false;
	};
	oFF.QmShutdownAction.prototype.onProviderShutdown = function(extResult,
			queryProvider, customIdentifier) {
		var parent;
		this.addAllMessages(extResult);
		parent = this.getActionContext();
		if (oFF.notNull(parent)) {
			parent.setLifeCycleState(oFF.LifeCycleState.TERMINATED);
		}
		this.setData(parent);
		this.endSync();
	};
	oFF.QmShutdownAction.prototype.callListener = function(extResult, listener,
			data, customIdentifier) {
		listener.onQueryManagerRelease(extResult, data, customIdentifier);
	};
	oFF.QmShutdownAction.prototype.cancelSynchronization = function() {
		oFF.QOlapSyncAction.prototype.cancelSynchronization.call(this);
		this.m_providerShutdownAction.cancelSynchronization();
	};
	oFF.QDataSource = function() {
	};
	oFF.QDataSource.prototype = new oFF.QModelComponent();
	oFF.QDataSource.META_OBJECT_TYPE = "meta_object_type";
	oFF.QDataSource.TEXT = "text";
	oFF.QDataSource.PACKAGE_NAME = "package_name";
	oFF.QDataSource.SCHEMA_NAME = "schema_name";
	oFF.QDataSource.NAME = "name";
	oFF.QDataSource.ENVIRONMENT = "environment";
	oFF.QDataSource.MODEL = "model";
	oFF.QDataSource.DATA_AREA = "data_area";
	oFF.QDataSource.SYSTEM_NAME = "system_name";
	oFF.QDataSource.INSTANCE_ID = "instance_id";
	oFF.QDataSource.RRI_NAME = "RRI_NAME";
	oFF.QDataSource.RRI_VALUE = "RRI_VALUE";
	oFF.QDataSource.RUN_AS_USER = "run_as_user";
	oFF.QDataSource.ALIAS = "alias";
	oFF.QDataSource.URI_PACKAGE_NAME = "package";
	oFF.QDataSource.URI_SCHEMA_NAME = "schema";
	oFF.QDataSource.URI_NAME = "name";
	oFF.QDataSource.SPC_OPEN_CONNECTORS_USER = "user";
	oFF.QDataSource.SPC_OPEN_CONNECTORS_ORGANIZATION = "organization";
	oFF.QDataSource.SPC_OPEN_CONNECTORS_ELEMENT = "element";
	oFF.QDataSource.create = function() {
		var newDataSource = new oFF.QDataSource();
		newDataSource.setupDataSource(null);
		return newDataSource;
	};
	oFF.QDataSource.createWithContext = function(context) {
		var newObject = new oFF.QDataSource();
		newObject.setupDataSource(context);
		return newObject;
	};
	oFF.QDataSource.prototype.m_properties = null;
	oFF.QDataSource.prototype.m_customProperties = null;
	oFF.QDataSource.prototype.m_multiSources = null;
	oFF.QDataSource.prototype.m_blendingSources = null;
	oFF.QDataSource.prototype.m_mappings = null;
	oFF.QDataSource.prototype.m_extendedDimensions = null;
	oFF.QDataSource.prototype.m_microCube = null;
	oFF.QDataSource.prototype.m_genericServiceDescription = null;
	oFF.QDataSource.prototype.m_validationHash = null;
	oFF.QDataSource.prototype.getValidationHash = function() {
		return this.m_validationHash;
	};
	oFF.QDataSource.prototype.setValidationHash = function(validationHash) {
		this.m_validationHash = validationHash;
	};
	oFF.QDataSource.prototype.setupDataSource = function(context) {
		this.setupModelComponent(context, null);
		this.m_multiSources = oFF.XList.create();
		this.m_blendingSources = oFF.XList.create();
		this.m_mappings = oFF.PrFactory.createList();
		this.m_properties = oFF.XProperties.create();
		this.m_customProperties = oFF.XProperties.create();
		this.m_extendedDimensions = null;
		this.m_microCube = null;
		this.m_genericServiceDescription = null;
	};
	oFF.QDataSource.prototype.releaseObject = function() {
		this.clear();
		this.m_multiSources = oFF.XObjectExt.release(this.m_multiSources);
		this.m_blendingSources = oFF.XObjectExt.release(this.m_blendingSources);
		this.m_properties = oFF.XObjectExt.release(this.m_properties);
		this.m_customProperties = oFF.XObjectExt
				.release(this.m_customProperties);
		this.m_blendingSources = oFF.XObjectExt.release(this.m_blendingSources);
		this.m_extendedDimensions = oFF.XObjectExt
				.release(this.m_extendedDimensions);
		this.m_validationHash = null;
		this.m_microCube = null;
		this.m_genericServiceDescription = oFF.XObjectExt
				.release(this.m_genericServiceDescription);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QDataSource.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.DATA_SOURCE;
	};
	oFF.QDataSource.prototype.cloneOlapComponent = function(context, parent) {
		var dataSourceClone = oFF.QFactory.newDataSource();
		dataSourceClone.copyFrom(this);
		return dataSourceClone;
	};
	oFF.QDataSource.prototype.copyFrom = function(otherDataSource) {
		var multiSources;
		var multiSourceSize;
		var multiSourceIndex;
		var multiSource;
		var otherMappings;
		var otherExtendedDimensions;
		var myExtendedDimensions;
		var otherExtendedDimensionsSize;
		var extDimIdx;
		oFF.QModelComponent.prototype.copyModelComponent.call(this,
				otherDataSource);
		this.clear();
		this.m_properties = oFF.XProperties
				.createPropertiesCopy(otherDataSource.getProperties());
		this.m_customProperties = oFF.XProperties
				.createPropertiesCopy(otherDataSource.getCustomProperties());
		multiSources = otherDataSource.getMultiSources();
		multiSourceSize = multiSources.size();
		for (multiSourceIndex = 0; multiSourceIndex < multiSourceSize; multiSourceIndex++) {
			multiSource = multiSources.get(multiSourceIndex);
			this.m_multiSources.add(multiSource.cloneOlapComponent(null, null));
		}
		otherMappings = otherDataSource.getMappings();
		if (!oFF.PrUtils.isListEmpty(otherMappings)) {
			this.m_mappings.copyFrom(otherMappings);
		}
		otherExtendedDimensions = otherDataSource.getExtendedDimensions();
		if (oFF.notNull(otherExtendedDimensions)) {
			myExtendedDimensions = this.getExtendedDimensionsBase();
			myExtendedDimensions.clear();
			otherExtendedDimensionsSize = otherExtendedDimensions.size();
			for (extDimIdx = 0; extDimIdx < otherExtendedDimensionsSize; extDimIdx++) {
				myExtendedDimensions
						.add(otherExtendedDimensions.get(extDimIdx));
			}
		}
		this.m_validationHash = otherDataSource.getValidationHash();
		if (otherDataSource.isBasedOnMicroCube()) {
			this.setMicroCube(otherDataSource.getMicroCube());
		}
		this.m_genericServiceDescription = oFF.PrUtils.createDeepCopyExt(
				otherDataSource.getGenericServiceDescription(),
				this.m_genericServiceDescription);
	};
	oFF.QDataSource.prototype.isEqualTo = function(other) {
		var otherDataSource;
		if (oFF.isNull(other)) {
			return false;
		}
		if (this === other) {
			return true;
		}
		otherDataSource = other;
		if (!oFF.XString.isEqual(this.getFullQualifiedName(), otherDataSource
				.getFullQualifiedName())) {
			return false;
		}
		if (!this.getExtendedDimensions().isEqualTo(
				otherDataSource.getExtendedDimensions())) {
			return false;
		}
		if (!this.getMappings().isEqualTo(otherDataSource.getMappings())) {
			return false;
		}
		if (!this.getMultiSources()
				.isEqualTo(otherDataSource.getMultiSources())) {
			return false;
		}
		if (!this.getProperties().isEqualTo(otherDataSource.getProperties())) {
			return false;
		}
		if (!this.getCustomProperties().isEqualTo(
				otherDataSource.getCustomProperties())) {
			return false;
		}
		return true;
	};
	oFF.QDataSource.prototype.getRunAsUser = function() {
		return this.m_properties.getByKey(oFF.QDataSource.RUN_AS_USER);
	};
	oFF.QDataSource.prototype.setRunAsUser = function(runAsUser) {
		this.m_properties.put(oFF.QDataSource.RUN_AS_USER, runAsUser);
	};
	oFF.QDataSource.prototype.getType = function() {
		var type = this.m_properties.getByKey(oFF.QDataSource.META_OBJECT_TYPE);
		if (oFF.isNull(type)) {
			return null;
		}
		return oFF.MetaObjectType.lookup(type);
	};
	oFF.QDataSource.prototype.setType = function(type) {
		if (oFF.notNull(type)) {
			this.m_properties.put(oFF.QDataSource.META_OBJECT_TYPE, type
					.getName());
		}
	};
	oFF.QDataSource.prototype.getInstanceId = function() {
		return this.m_properties.getByKey(oFF.QDataSource.INSTANCE_ID);
	};
	oFF.QDataSource.prototype.setInstanceId = function(instanceId) {
		this.m_properties.put(oFF.QDataSource.INSTANCE_ID, instanceId);
	};
	oFF.QDataSource.prototype.getSystemName = function() {
		return this.m_properties.getByKey(oFF.QDataSource.SYSTEM_NAME);
	};
	oFF.QDataSource.prototype.setSystemName = function(systemName) {
		this.m_properties.put(oFF.QDataSource.SYSTEM_NAME, systemName);
	};
	oFF.QDataSource.prototype.getSchemaName = function() {
		return this.m_properties.getByKey(oFF.QDataSource.SCHEMA_NAME);
	};
	oFF.QDataSource.prototype.setSchemaName = function(schemaName) {
		this.m_properties.put(oFF.QDataSource.SCHEMA_NAME, schemaName);
	};
	oFF.QDataSource.prototype.getPackageName = function() {
		return this.m_properties.getByKey(oFF.QDataSource.PACKAGE_NAME);
	};
	oFF.QDataSource.prototype.setPackageName = function(packageName) {
		this.m_properties.put(oFF.QDataSource.PACKAGE_NAME, packageName);
	};
	oFF.QDataSource.prototype.getAlias = function() {
		return this.m_properties.getByKey(oFF.QDataSource.ALIAS);
	};
	oFF.QDataSource.prototype.setAlias = function(alias) {
		this.m_properties.put(oFF.QDataSource.ALIAS, alias);
	};
	oFF.QDataSource.prototype.getObjectName = function() {
		return this.m_properties.getByKey(oFF.QDataSource.NAME);
	};
	oFF.QDataSource.prototype.setObjectName = function(objectName) {
		this.m_properties.put(oFF.QDataSource.NAME, objectName);
	};
	oFF.QDataSource.prototype.setText = function(text) {
		this.m_properties.put(oFF.QDataSource.TEXT, text);
	};
	oFF.QDataSource.prototype.getText = function() {
		return this.m_properties.getByKey(oFF.QDataSource.TEXT);
	};
	oFF.QDataSource.prototype.getName = function() {
		return this.m_properties.getByKey(oFF.QDataSource.NAME);
	};
	oFF.QDataSource.prototype.setName = function(name) {
		this.m_properties.put(oFF.QDataSource.NAME, name);
	};
	oFF.QDataSource.prototype.getEnvironmentName = function() {
		return this.m_properties.getByKey(oFF.QDataSource.ENVIRONMENT);
	};
	oFF.QDataSource.prototype.setEnvironmentName = function(environmentName) {
		this.m_properties.put(oFF.QDataSource.ENVIRONMENT, environmentName);
	};
	oFF.QDataSource.prototype.getModelName = function() {
		return this.m_properties.getByKey(oFF.QDataSource.MODEL);
	};
	oFF.QDataSource.prototype.setModelName = function(modelName) {
		this.m_properties.put(oFF.QDataSource.MODEL, modelName);
	};
	oFF.QDataSource.prototype.getDataArea = function() {
		var dataArea = this.m_properties.getByKey(oFF.QDataSource.DATA_AREA);
		if (oFF.XString.isEqual(dataArea,
				oFF.PlanningConstants.DATA_AREA_DEFAULT)) {
			return null;
		}
		return dataArea;
	};
	oFF.QDataSource.prototype.setDataArea = function(dataArea) {
		this.m_properties.put(oFF.QDataSource.DATA_AREA, dataArea);
	};
	oFF.QDataSource.prototype.getRriName = function() {
		return this.m_properties.getByKey(oFF.QDataSource.RRI_NAME);
	};
	oFF.QDataSource.prototype.getRriValue = function() {
		return this.m_properties.getByKey(oFF.QDataSource.RRI_VALUE);
	};
	oFF.QDataSource.prototype.setRriName = function(rriName) {
		this.m_properties.put(oFF.QDataSource.RRI_NAME, rriName);
	};
	oFF.QDataSource.prototype.setRriValue = function(rriValue) {
		this.m_properties.put(oFF.QDataSource.RRI_VALUE, rriValue);
	};
	oFF.QDataSource.prototype.getProperties = function() {
		return this.m_properties;
	};
	oFF.QDataSource.prototype.getPropertiesBase = function() {
		return this.m_properties;
	};
	oFF.QDataSource.prototype.getAsScope = function() {
		var schemaName = this.getSchemaName();
		if (oFF.XStringUtils.isNullOrEmpty(schemaName)) {
			return this.getAsMinimalScope();
		}
		return oFF.XStringUtils.concatenate3(schemaName, ".", this
				.getAsMinimalScope());
	};
	oFF.QDataSource.prototype.getAsMinimalScope = function() {
		var catalogName = this.getPackageName();
		if (oFF.XStringUtils.isNullOrEmpty(catalogName)) {
			return this.getObjectName();
		}
		return oFF.XStringUtils.concatenate3(catalogName, "/", this
				.getObjectName());
	};
	oFF.QDataSource.prototype.getFullQualifiedName = function() {
		var type = this.getType();
		if (type === oFF.MetaObjectType.MULTI_SOURCE
				|| type === oFF.MetaObjectType.BLENDING) {
			return oFF.PrUtils.serialize(this.getFQNMulti(), true, false, 0);
		}
		return this.getFQNSingle();
	};
	oFF.QDataSource.prototype.getFQNMulti = function() {
		var rootStructure = oFF.PrFactory.createStructure();
		var sources;
		var multiSources;
		var multiSourcesSize;
		var i;
		var multiSource;
		rootStructure.putString("DataSource", this.getFQNSingle());
		sources = rootStructure.putNewList("Sources");
		multiSources = this.getMultiSources();
		multiSourcesSize = multiSources.size();
		for (i = 0; i < multiSourcesSize; i++) {
			multiSource = multiSources.get(i);
			if (multiSource.getType() === oFF.MetaObjectType.MULTI_SOURCE
					|| multiSource.getType() === oFF.MetaObjectType.BLENDING) {
				sources.add(multiSource.getFQNMulti());
			} else {
				sources.addString(multiSource.getFQNSingle());
			}
		}
		rootStructure.put("Mappings", oFF.PrList.createDeepCopy(this
				.getMappings()));
		return rootStructure;
	};
	oFF.QDataSource.prototype.getFQNSingle = function() {
		var buffer = oFF.XStringBuffer.create();
		var runAsUser = this.getRunAsUser();
		var alias;
		var environmentName;
		var hasEnvironmentName;
		var modelName;
		var hasModelName;
		var dataArea;
		var hasDataArea;
		var type;
		var schemaName;
		var hasSchemaName;
		var catalogName;
		var hasCatalogName;
		var objectName;
		var hasObjectName;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(runAsUser)) {
			buffer.append("<").append(runAsUser).append(">");
		}
		alias = this.getAlias();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(alias)) {
			buffer.append("~").append(alias).append("~");
		}
		environmentName = this.getEnvironmentName();
		hasEnvironmentName = oFF.XStringUtils
				.isNotNullAndNotEmpty(environmentName);
		modelName = this.getModelName();
		hasModelName = oFF.XStringUtils.isNotNullAndNotEmpty(modelName);
		dataArea = this.getDataArea();
		hasDataArea = oFF.XStringUtils.isNotNullAndNotEmpty(dataArea);
		type = this.getType();
		if (hasEnvironmentName || hasModelName || hasDataArea) {
			buffer.append("$[");
			if (hasEnvironmentName) {
				buffer.append(environmentName);
			}
			buffer.append("][");
			if (hasModelName) {
				buffer.append(modelName);
			}
			buffer.append("]");
			if (hasDataArea) {
				buffer.append("[").append(dataArea).append("]");
			}
			if (oFF.notNull(type)) {
				buffer.append("/");
			}
		}
		if (oFF.notNull(type)) {
			buffer.append(type.getName());
			buffer.append(":");
		}
		schemaName = this.getSchemaName();
		hasSchemaName = oFF.XStringUtils.isNotNullAndNotEmpty(schemaName);
		catalogName = this.getPackageName();
		hasCatalogName = oFF.XStringUtils.isNotNullAndNotEmpty(catalogName);
		objectName = this.getObjectName();
		hasObjectName = oFF.XStringUtils.isNotNullAndNotEmpty(objectName);
		if (oFF.notNull(type) || hasSchemaName || hasCatalogName
				|| hasObjectName) {
			buffer.append("[");
			if (hasSchemaName) {
				buffer.append(this.escape(schemaName));
			}
			buffer.append("]");
			buffer.append("[");
			if (hasCatalogName) {
				buffer.append(this.escape(catalogName));
			}
			buffer.append("]");
			buffer.append("[");
			if (hasObjectName) {
				buffer.append(this.escape(objectName));
			}
			buffer.append("]");
		}
		return buffer.toString();
	};
	oFF.QDataSource.prototype.extendWithDataSource = function(datasource) {
		var multisources;
		var existingMultiSources;
		var multiSourcesSize;
		var multiSourceIndex;
		var multisource;
		var existingMultiSource;
		var mappings;
		var existingMappings;
		var len;
		var mappingIndex;
		var extendedDimensions;
		var extendedDimensionsBase;
		if (oFF.isNull(datasource)) {
			return;
		}
		this.m_validationHash = datasource.getValidationHash();
		this.extendProperties(this.m_properties, datasource.getProperties());
		this.extendProperties(this.m_customProperties, datasource
				.getCustomProperties());
		if (this.getType() === oFF.MetaObjectType.MULTI_SOURCE
				&& datasource.getType() === oFF.MetaObjectType.MULTI_SOURCE
				|| this.getType() === oFF.MetaObjectType.BLENDING
				&& datasource.getType() === oFF.MetaObjectType.BLENDING) {
			multisources = datasource.getMultiSources();
			existingMultiSources = this.getMultiSourcesBase();
			if (oFF.notNull(multisources)) {
				multiSourcesSize = multisources.size();
				for (multiSourceIndex = 0; multiSourceIndex < multiSourcesSize; multiSourceIndex++) {
					multisource = multisources.get(multiSourceIndex);
					if (existingMultiSources.size() > multiSourceIndex) {
						existingMultiSource = existingMultiSources
								.get(multiSourceIndex);
						existingMultiSource.extendWithDataSource(multisource);
					} else {
						existingMultiSources.insert(multiSourceIndex,
								multisource.cloneOlapComponent(null, null));
					}
				}
			}
			mappings = datasource.getMappings();
			existingMappings = this.getMappings();
			len = oFF.PrUtils.getListSize(mappings, 0);
			for (mappingIndex = 0; mappingIndex < len; mappingIndex++) {
				if (oFF.PrUtils.getListSize(existingMappings, 0) > mappingIndex) {
					existingMappings.set(mappingIndex, oFF.PrUtils
							.createDeepCopy(oFF.PrUtils.getElement(mappings,
									mappingIndex)));
				} else {
					existingMappings.add(oFF.PrUtils.createDeepCopy(oFF.PrUtils
							.getElement(mappings, mappingIndex)));
				}
			}
		}
		extendedDimensions = datasource.getExtendedDimensions();
		if (oFF.notNull(extendedDimensions)) {
			extendedDimensionsBase = this.getExtendedDimensionsBase();
			extendedDimensionsBase.clear();
			extendedDimensionsBase.addAll(extendedDimensions);
		}
	};
	oFF.QDataSource.prototype.extendProperties = function(properties,
			externalDsProperties) {
		var externalDsKeyIterator = externalDsProperties
				.getKeysAsIteratorOfString();
		var key;
		while (externalDsKeyIterator.hasNext()) {
			key = externalDsKeyIterator.next();
			if (oFF.XStringUtils.isNullOrEmpty(properties.getByKey(key))) {
				properties.put(key, externalDsProperties.getByKey(key));
			}
		}
	};
	oFF.QDataSource.prototype.setByUri = function(uri) {
		var type;
		var metaObjectType;
		var queryElements;
		var set;
		var queryElementsSize;
		var i;
		this.setSystemName(uri.getHost());
		type = oFF.XString.substring(uri.getPath(), 1, -1);
		metaObjectType = oFF.MetaObjectType.lookup(type);
		this.setType(metaObjectType);
		queryElements = uri.getQueryElements();
		set = oFF.XSetOfNameObject.create();
		queryElementsSize = queryElements.size();
		for (i = 0; i < queryElementsSize; i++) {
			set.add(queryElements.get(i));
		}
		if (set.containsKey(oFF.QDataSource.URI_NAME)) {
			this.setName(set.getByKey(oFF.QDataSource.URI_NAME).getValue());
		}
		if (set.containsKey(oFF.QDataSource.URI_PACKAGE_NAME)) {
			this.setPackageName(set.getByKey(oFF.QDataSource.URI_PACKAGE_NAME)
					.getValue());
		}
		if (set.containsKey(oFF.QDataSource.URI_SCHEMA_NAME)) {
			this.setSchemaName(set.getByKey(oFF.QDataSource.URI_SCHEMA_NAME)
					.getValue());
		}
	};
	oFF.QDataSource.prototype.setFullQualifiedName = function(name) {
		var multiSource;
		var jsonParser;
		var jsonElement;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(name)
				&& oFF.XString.startsWith(name, "{")
				&& oFF.XString.endsWith(name, "}")) {
			if (oFF.XString.containsString(name, "'")) {
				multiSource = oFF.XString.replace(name, "'", '"');
			} else {
				multiSource = name;
			}
			jsonParser = oFF.JsonParserFactory.newInstance();
			jsonElement = jsonParser.parse(multiSource);
			oFF.MessageUtil.checkNoError(jsonParser);
			oFF.XObjectExt.release(jsonParser);
			this.setByJson(jsonElement);
		} else {
			this.setFQNSingle(name);
		}
	};
	oFF.QDataSource.prototype.setByJson = function(element) {
		var jsonStructure = oFF.XJson.extractJsonContent(element);
		var importer;
		var dataSource;
		if (oFF.PrUtils.getStringProperty(jsonStructure, "DataSource") !== null) {
			this.setFQNMulti(jsonStructure);
		} else {
			this.clear();
			importer = oFF.QInAImportFactory.createForRepository(null, null);
			dataSource = importer.importDataSource(jsonStructure);
			oFF.XObjectExt.checkNotNull(dataSource, "illegal name");
			this.extendWithDataSource(dataSource);
		}
	};
	oFF.QDataSource.prototype.setFQNMulti = function(multiStructure) {
		var type;
		var sources;
		var sourcesSize;
		var i;
		var multiSource;
		var source;
		this.setFQNSingle(oFF.PrUtils.getStringValueProperty(multiStructure,
				"DataSource", null));
		type = this.getType();
		if (oFF.isNull(type)) {
			this.setType(oFF.MetaObjectType.MULTI_SOURCE);
		} else {
			if (type !== oFF.MetaObjectType.MULTI_SOURCE
					&& type !== oFF.MetaObjectType.BLENDING) {
				throw oFF.XException.createRuntimeException("illegal type");
			}
		}
		sources = oFF.PrUtils.getListProperty(multiStructure, "Sources");
		if (oFF.notNull(sources)) {
			sourcesSize = sources.size();
			for (i = 0; i < sourcesSize; i++) {
				multiSource = oFF.QFactory.newDataSource();
				source = sources.get(i);
				if (source.getType() === oFF.PrElementType.STRING) {
					multiSource.setFQNSingle(source.getString());
				} else {
					multiSource.setFQNMulti(source);
				}
				this.getMultiSourcesBase().add(multiSource);
			}
		}
		this.setMappings(oFF.PrUtils
				.getListProperty(multiStructure, "Mappings"));
	};
	oFF.QDataSource.prototype.setFQNSingle = function(name) {
		var fqn;
		var startRunAsUserIndex;
		var endRunAsUserIndex;
		var startAliasIndex;
		var endAliasIndex;
		var len;
		var startIndex0;
		var startIndex1;
		var endIndex1;
		var environmentName;
		var startIndex2;
		var charAt2;
		var endIndex2;
		var modelName;
		var startIndex3;
		var charAt3;
		var endIndex3;
		var dataArea;
		var endTypeIndex;
		var typeValue;
		var startIndex5;
		var endIndex5;
		var name5;
		var startIndex6;
		var endIndex6;
		var name6;
		var startIndex7;
		var endIndex7;
		var name7;
		if (oFF.notNull(name)) {
			fqn = name;
			if (oFF.XString.startsWith(fqn, "<")) {
				startRunAsUserIndex = 1;
				endRunAsUserIndex = oFF.XString.indexOfFrom(fqn, ">",
						startRunAsUserIndex);
				if (endRunAsUserIndex === -1) {
					return;
				}
				this.setRunAsUser(oFF.XString.substring(fqn,
						startRunAsUserIndex, endRunAsUserIndex));
				fqn = oFF.XString.substring(fqn, endRunAsUserIndex + 1,
						oFF.XString.size(fqn));
			}
			if (oFF.XString.startsWith(fqn, "~")) {
				startAliasIndex = 1;
				endAliasIndex = oFF.XString.indexOfFrom(fqn, "~",
						startAliasIndex);
				if (endAliasIndex === -1) {
					return;
				}
				this.setAlias(oFF.XString.substring(fqn, startAliasIndex,
						endAliasIndex));
				fqn = oFF.XString.substring(fqn, endAliasIndex + 1, oFF.XString
						.size(fqn));
			}
			len = oFF.XString.size(fqn);
			startIndex0 = 0;
			if (oFF.XString.startsWith(fqn, "$[")) {
				startIndex1 = startIndex0 + 2;
				endIndex1 = this.searchEnd(fqn, startIndex1);
				environmentName = this.unescape(oFF.XString.substring(fqn,
						startIndex1, endIndex1));
				this.setEnvironmentName(environmentName);
				startIndex2 = endIndex1 + 1;
				if (startIndex2 >= len) {
					return;
				}
				charAt2 = oFF.XString.getCharAt(fqn, startIndex2);
				if (charAt2 === 47) {
					startIndex0 = startIndex2 + 1;
				} else {
					if (charAt2 === 91) {
						startIndex2++;
						endIndex2 = this.searchEnd(fqn, startIndex2);
						modelName = this.unescape(oFF.XString.substring(fqn,
								startIndex2, endIndex2));
						this.setModelName(modelName);
						startIndex3 = endIndex2 + 1;
						if (startIndex3 >= len) {
							return;
						}
						charAt3 = oFF.XString.getCharAt(fqn, startIndex3);
						if (charAt3 === 47) {
							startIndex0 = startIndex3 + 1;
						} else {
							startIndex3++;
							endIndex3 = this.searchEnd(fqn, startIndex3);
							dataArea = this.unescape(oFF.XString.substring(fqn,
									startIndex3, endIndex3));
							this.setDataArea(dataArea);
							startIndex0 = endIndex3 + 2;
						}
					} else {
						return;
					}
				}
			}
			if (startIndex0 < len) {
				endTypeIndex = oFF.XString.indexOfFrom(fqn, ":", startIndex0);
				typeValue = oFF.MetaObjectType.lookup(oFF.XString.substring(
						fqn, startIndex0, endTypeIndex));
				this.setType(typeValue);
				startIndex5 = endTypeIndex + 2;
				if (startIndex5 < len) {
					endIndex5 = this.searchEnd(fqn, startIndex5);
					name5 = this.unescape(oFF.XString.substring(fqn,
							startIndex5, endIndex5));
					startIndex6 = endIndex5 + 2;
					if (startIndex6 < len) {
						endIndex6 = this.searchEnd(fqn, startIndex6);
						name6 = this.unescape(oFF.XString.substring(fqn,
								startIndex6, endIndex6));
						startIndex7 = endIndex6 + 2;
						if (startIndex7 < len) {
							endIndex7 = this.searchEnd(fqn, startIndex7);
							name7 = this.unescape(oFF.XString.substring(fqn,
									startIndex7, endIndex7));
							this.setSchemaName(name5);
							this.setPackageName(name6);
							this.setObjectName(name7);
						} else {
							this.setPackageName(name5);
							this.setObjectName(name6);
						}
					} else {
						this.setObjectName(name5);
					}
				}
			}
		}
	};
	oFF.QDataSource.prototype.searchEnd = function(name, startPosition) {
		var position = startPosition;
		var len = oFF.XString.size(name);
		var x1;
		var x2;
		while (position < len) {
			x1 = oFF.XString.indexOfFrom(name, "]", position);
			x2 = oFF.XString.indexOfFrom(name, "]]", position);
			if (x2 === -1) {
				if (x1 === -1) {
					throw oFF.XException
							.createRuntimeException("#1 Qualified name format error");
				}
				return x1;
			}
			if (x1 < x2) {
				return x1;
			}
			position = x2 + 2;
		}
		throw oFF.XException
				.createRuntimeException("#2 Qualified name format error");
	};
	oFF.QDataSource.prototype.escape = function(value) {
		var first = oFF.XString.replace(value, "[", "[[");
		return oFF.XString.replace(first, "]", "]]");
	};
	oFF.QDataSource.prototype.unescape = function(value) {
		var first = oFF.XString.replace(value, "[[", "[");
		return oFF.XString.replace(first, "]]", "]");
	};
	oFF.QDataSource.prototype.clear = function() {
		if (oFF.notNull(this.m_properties)) {
			this.m_properties.clear();
		}
		if (oFF.notNull(this.m_customProperties)) {
			this.m_customProperties.clear();
		}
		if (oFF.notNull(this.m_multiSources)) {
			this.m_multiSources.clear();
		}
		if (!oFF.PrUtils.isListEmpty(this.m_mappings)) {
			this.m_mappings.clear();
		}
		this.m_extendedDimensions = null;
		this.m_microCube = null;
	};
	oFF.QDataSource.prototype.isEmpty = function() {
		return this.m_properties.isEmpty() && this.m_customProperties.isEmpty();
	};
	oFF.QDataSource.prototype.hasElements = function() {
		return this.m_properties.hasElements()
				|| this.m_customProperties.hasElements();
	};
	oFF.QDataSource.prototype.size = function() {
		return this.m_properties.size() + this.m_customProperties.size();
	};
	oFF.QDataSource.prototype.toString = function() {
		return oFF.XStringUtils.concatenate3(this.m_properties.toString(), ",",
				this.m_customProperties.toString());
	};
	oFF.QDataSource.prototype.getMultiSources = function() {
		return this.m_multiSources;
	};
	oFF.QDataSource.prototype.getMultiSourcesBase = function() {
		return this.m_multiSources;
	};
	oFF.QDataSource.prototype.getMappings = function() {
		return this.m_mappings;
	};
	oFF.QDataSource.prototype.setMappings = function(mappings) {
		if (oFF.PrUtils.isListEmpty(mappings)) {
			if (this.m_mappings.size() !== 0) {
				this.m_mappings.clear();
			}
		} else {
			this.m_mappings.copyFrom(mappings);
		}
	};
	oFF.QDataSource.prototype.hasText = function() {
		return oFF.notNull(this.m_properties)
				&& this.m_properties.containsKey(oFF.QDataSource.TEXT);
	};
	oFF.QDataSource.prototype.getExtendedDimensions = function() {
		return this.m_extendedDimensions;
	};
	oFF.QDataSource.prototype.getExtendedDimensionsBase = function() {
		if (oFF.isNull(this.m_extendedDimensions)) {
			this.m_extendedDimensions = oFF.XList.create();
		}
		return this.m_extendedDimensions;
	};
	oFF.QDataSource.prototype.getBlendingSources = function() {
		return this.m_blendingSources;
	};
	oFF.QDataSource.prototype.setBlendingSources = function(sources) {
		oFF.XObjectExt.release(this.m_blendingSources);
		this.m_blendingSources = sources;
	};
	oFF.QDataSource.prototype.addCustomProperty = function(name, value) {
		if (oFF.XStringUtils.isNotNullAndNotEmpty(name)) {
			if (oFF.XStringUtils.isNotNullAndNotEmpty(value)) {
				this.m_customProperties.put(name, value);
			} else {
				this.m_customProperties.remove(name);
			}
		}
	};
	oFF.QDataSource.prototype.setCustomProperties = function(properties) {
		this.m_customProperties = oFF.XProperties
				.createPropertiesCopy(properties);
	};
	oFF.QDataSource.prototype.getCustomProperties = function() {
		return this.m_customProperties;
	};
	oFF.QDataSource.prototype.isBasedOnMicroCube = function() {
		return oFF.notNull(this.m_microCube);
	};
	oFF.QDataSource.prototype.getMicroCube = function() {
		return this.m_microCube;
	};
	oFF.QDataSource.prototype.setMicroCube = function(microCube) {
		this.m_microCube = microCube;
	};
	oFF.QDataSource.prototype.setSCPOpenConnectorsTokens = function(user,
			organization, element) {
		this.m_properties.put(oFF.QDataSource.SPC_OPEN_CONNECTORS_USER, user);
		this.m_properties.put(oFF.QDataSource.SPC_OPEN_CONNECTORS_ORGANIZATION,
				organization);
		this.m_properties.put(oFF.QDataSource.SPC_OPEN_CONNECTORS_ELEMENT,
				element);
	};
	oFF.QDataSource.prototype.getSCPOpenConnectorsUserToken = function() {
		return this.m_properties
				.getByKey(oFF.QDataSource.SPC_OPEN_CONNECTORS_USER);
	};
	oFF.QDataSource.prototype.getSCPOpenConnectorsOrganizationToken = function() {
		return this.m_properties
				.getByKey(oFF.QDataSource.SPC_OPEN_CONNECTORS_ORGANIZATION);
	};
	oFF.QDataSource.prototype.getSCPOpenConnectorsElementToken = function() {
		return this.m_properties
				.getByKey(oFF.QDataSource.SPC_OPEN_CONNECTORS_ELEMENT);
	};
	oFF.QDataSource.prototype.setGenericServiceDescription = function(
			genericServiceDescription) {
		this.m_genericServiceDescription = genericServiceDescription;
	};
	oFF.QDataSource.prototype.getGenericServiceDescription = function() {
		return this.m_genericServiceDescription;
	};
	oFF.QInfoProvider = function() {
	};
	oFF.QInfoProvider.prototype = new oFF.QModelComponent();
	oFF.QInfoProvider.createInfoProvider = function(queryModel, name, text,
			baseInfoProvider) {
		var infoProvider = new oFF.QInfoProvider();
		infoProvider
				.setupInfoProvider(queryModel, name, text, baseInfoProvider);
		return infoProvider;
	};
	oFF.QInfoProvider.prototype.m_baseInfoProvider = null;
	oFF.QInfoProvider.prototype.setupInfoProvider = function(queryModel, name,
			text, baseInfoProvider) {
		oFF.QModelComponent.prototype.setupModelComponentWithName.call(this,
				queryModel, queryModel, name);
		this.setText(text);
		this.m_baseInfoProvider = baseInfoProvider;
	};
	oFF.QInfoProvider.prototype.releaseObject = function() {
		this.m_baseInfoProvider = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QInfoProvider.prototype.getUpdatedBy = function() {
		return null;
	};
	oFF.QInfoProvider.prototype.getCreatedBy = function() {
		return null;
	};
	oFF.QInfoProvider.prototype.getCreatedOn = function() {
		return null;
	};
	oFF.QInfoProvider.prototype.getUpdatedOn = function() {
		return null;
	};
	oFF.QInfoProvider.prototype.getDueDate = function() {
		return null;
	};
	oFF.QInfoProvider.prototype.getBaseInfoProvider = function() {
		return this.m_baseInfoProvider;
	};
	oFF.QInfoProvider.prototype.getDataRollUpMax = function() {
		return null;
	};
	oFF.QInfoProvider.prototype.getDataRollUpMin = function() {
		return null;
	};
	oFF.QProtocolCapabilities = function() {
	};
	oFF.QProtocolCapabilities.prototype = new oFF.QModelComponent();
	oFF.QProtocolCapabilities.create = function(queryModel) {
		var capabilities = new oFF.QProtocolCapabilities();
		capabilities.setupModelComponent(queryModel, queryModel);
		return capabilities;
	};
	oFF.QProtocolCapabilities.prototype.m_clientCapabilities = null;
	oFF.QProtocolCapabilities.prototype.m_serverCapabilities = null;
	oFF.QProtocolCapabilities.prototype.m_intersectCapabilities = null;
	oFF.QProtocolCapabilities.prototype.copyProtocolCapabilities = function(
			origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_serverCapabilities = oFF.XObjectExt
				.cloneIfNotNull(origin.m_serverCapabilities);
		this.m_clientCapabilities = oFF.XObjectExt
				.cloneIfNotNull(origin.m_clientCapabilities);
		this.m_intersectCapabilities = oFF.XObjectExt
				.cloneIfNotNull(origin.m_intersectCapabilities);
	};
	oFF.QProtocolCapabilities.prototype.releaseObject = function() {
		this.m_clientCapabilities = null;
		this.m_serverCapabilities = null;
		this.m_intersectCapabilities = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QProtocolCapabilities.prototype.getClientCapabilities = function() {
		return this.m_clientCapabilities;
	};
	oFF.QProtocolCapabilities.prototype.getServerCapabilities = function() {
		return this.m_serverCapabilities;
	};
	oFF.QProtocolCapabilities.prototype.getIntersectCapabilities = function() {
		return this.m_intersectCapabilities;
	};
	oFF.QProtocolCapabilities.prototype.setClientCapabilities = function(
			clientCapabilities) {
		this.m_clientCapabilities = clientCapabilities;
	};
	oFF.QProtocolCapabilities.prototype.setServerCapabilities = function(
			serverCapabilities) {
		this.m_serverCapabilities = serverCapabilities;
	};
	oFF.QProtocolCapabilities.prototype.setIntersectCapabilities = function(
			intersectCapabilities) {
		this.m_intersectCapabilities = intersectCapabilities;
	};
	oFF.QResultStructureItem = function() {
	};
	oFF.QResultStructureItem.prototype = new oFF.QModelComponent();
	oFF.QResultStructureItem.createResultStructureItem = function(context,
			parent, element, visibility) {
		var item = new oFF.QResultStructureItem();
		item.setupResultStructureItem(context, parent, element, visibility);
		return item;
	};
	oFF.QResultStructureItem.prototype.m_element = null;
	oFF.QResultStructureItem.prototype.m_visibility = null;
	oFF.QResultStructureItem.prototype.setupResultStructureItem = function(
			context, parent, element, visibility) {
		oFF.QModelComponent.prototype.setupModelComponent.call(this, context,
				parent);
		this.m_element = element;
		this.m_visibility = visibility;
	};
	oFF.QResultStructureItem.prototype.releaseObject = function() {
		this.m_element = null;
		this.m_visibility = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QResultStructureItem.prototype.setResultStructureElement = function(
			element) {
		if (this.m_element !== element) {
			this.m_element = element;
			this.notifyNodeChanged();
		}
	};
	oFF.QResultStructureItem.prototype.getResultStructureElement = function() {
		return this.m_element;
	};
	oFF.QResultStructureItem.prototype.setResultVisibility = function(
			visibility) {
		if (this.m_visibility !== visibility) {
			this.m_visibility = visibility;
			this.notifyNodeChanged();
		}
	};
	oFF.QResultStructureItem.prototype.getResultVisibility = function() {
		return this.m_visibility;
	};
	oFF.QResultStructureItem.prototype.toString = function() {
		if (oFF.notNull(this.m_element) && oFF.notNull(this.m_visibility)) {
			return oFF.XStringUtils.concatenate3(this.m_element.getName(),
					": ", this.m_visibility.getName());
		}
		return oFF.QModelComponent.prototype.toString.call(this);
	};
	oFF.QGenericSorting = function() {
	};
	oFF.QGenericSorting.prototype = new oFF.QModelComponent();
	oFF.QGenericSorting.prototype.m_direction = null;
	oFF.QGenericSorting.prototype.m_preserveGroups = false;
	oFF.QGenericSorting.prototype.m_caseSensitive = false;
	oFF.QGenericSorting.prototype.m_icuLocale = null;
	oFF.QGenericSorting.prototype.m_customOrder = null;
	oFF.QGenericSorting.prototype.m_customSortPosition = null;
	oFF.QGenericSorting.prototype.setupGenericSorting = function(parentNode) {
		this.setupModelComponent(parentNode.getContext(), parentNode);
		this.m_direction = oFF.XSortDirection.DEFAULT_VALUE;
		this.m_preserveGroups = true;
	};
	oFF.QGenericSorting.prototype.copyGenericSorting = function(origin) {
		this.copyModelComponent(origin);
		this.m_direction = origin.m_direction;
		this.m_preserveGroups = origin.m_preserveGroups;
		this.m_caseSensitive = origin.m_caseSensitive;
		this.m_icuLocale = origin.m_icuLocale;
		if (oFF.notNull(origin.m_customOrder)) {
			this.m_customOrder = origin.m_customOrder.createListOfStringCopy();
		}
		this.m_customSortPosition = origin.m_customSortPosition;
	};
	oFF.QGenericSorting.prototype.releaseObject = function() {
		this.m_direction = null;
		this.m_icuLocale = null;
		this.m_customOrder = oFF.XObjectExt.release(this.m_customOrder);
		this.m_customSortPosition = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QGenericSorting.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.GENERIC_SORTING;
	};
	oFF.QGenericSorting.prototype.getDirection = function() {
		return this.m_direction;
	};
	oFF.QGenericSorting.prototype.setDirection = function(direction) {
		if (this.m_direction !== direction) {
			this.m_direction = direction;
			this.notifyNodeChanged();
		}
	};
	oFF.QGenericSorting.prototype.getSortingManager = function() {
		return this.getQueryModel().getSortingManager();
	};
	oFF.QGenericSorting.prototype.setBreakGrouping = function(breaking) {
		this.setPreserveGrouping(!breaking);
	};
	oFF.QGenericSorting.prototype.setPreserveGrouping = function(preserve) {
		if (preserve) {
			oFF.XBooleanUtils.checkTrue(this.supportsPreserveGrouping(),
					"Group preserving is not supported");
		} else {
			oFF.XBooleanUtils.checkTrue(this.supportsBreakGrouping(),
					"Group breaking is not supported");
		}
		this.m_preserveGroups = preserve;
		this.notifyNodeChanged();
	};
	oFF.QGenericSorting.prototype.isBreakGroupingEnabled = function() {
		return !this.m_preserveGroups;
	};
	oFF.QGenericSorting.prototype.isPreserveGroupingEnabled = function() {
		return this.m_preserveGroups;
	};
	oFF.QGenericSorting.prototype.supportsPreserveGrouping = function() {
		var sortingManager = this.getSortingManager();
		return sortingManager.supportsPreserveGrouping(this.getSortingType());
	};
	oFF.QGenericSorting.prototype.supportsBreakGrouping = function() {
		var sortingManager = this.getSortingManager();
		return sortingManager.supportsBreakGrouping(this.getSortingType());
	};
	oFF.QGenericSorting.prototype.toString = function() {
		var buffer = oFF.XStringBuffer.create();
		buffer.append(this.getOlapComponentType().getName());
		buffer.append(" - Dir: ");
		buffer.append(this.getDirection().getName());
		if (this.supportsBreakGrouping()) {
			if (this.isBreakGroupingEnabled()) {
				buffer.append(" - break grouping");
			}
		}
		return buffer.toString();
	};
	oFF.QGenericSorting.prototype.supportsDimension = function() {
		return false;
	};
	oFF.QGenericSorting.prototype.setDimension = oFF.noSupport;
	oFF.QGenericSorting.prototype.getDimension = oFF.noSupport;
	oFF.QGenericSorting.prototype.setLocale = function(icuLocale) {
		if (this.getQueryModel().supportsLocaleSorting()) {
			this.m_icuLocale = icuLocale;
		}
	};
	oFF.QGenericSorting.prototype.getLocale = function() {
		return this.m_icuLocale;
	};
	oFF.QGenericSorting.prototype.setIsCaseSensitive = function(isCaseSensitive) {
		if (this.getQueryModel().supportsLocaleSorting()) {
			this.m_caseSensitive = isCaseSensitive;
		}
	};
	oFF.QGenericSorting.prototype.isCaseSensitive = function() {
		return this.m_caseSensitive;
	};
	oFF.QGenericSorting.prototype.getCustomSort = function() {
		return this.m_customOrder;
	};
	oFF.QGenericSorting.prototype.setCustomSort = function(customOrder) {
		if (oFF.XCollectionUtils.hasElements(customOrder)
				&& (this.fieldSorting() || this.dimensionSorting())) {
			this.m_customOrder = customOrder.createListOfStringCopy();
			this.notifyNodeChanged();
		}
	};
	oFF.QGenericSorting.prototype.dimensionSorting = function() {
		return oFF.OlapComponentType.DIMENSION_SORTING === this
				.getOlapComponentType()
				&& this.getQueryModel().supportsCustomMeasureSortOrder()
				&& this.getDimension().isMeasureStructure();
	};
	oFF.QGenericSorting.prototype.fieldSorting = function() {
		return oFF.OlapComponentType.FIELD_SORTING === this
				.getOlapComponentType()
				&& this.getQueryModel().supportsCustomSort();
	};
	oFF.QGenericSorting.prototype.setCustomSortPosition = function(
			customSortPosition) {
		if (this.fieldSorting() || this.dimensionSorting()) {
			this.m_customSortPosition = customSortPosition;
			this.notifyNodeChanged();
		}
	};
	oFF.QGenericSorting.prototype.getCustomSortPosition = function() {
		return this.m_customSortPosition;
	};
	oFF.QSortingManager = function() {
	};
	oFF.QSortingManager.prototype = new oFF.QModelComponent();
	oFF.QSortingManager.create = function(queryModel) {
		var object = new oFF.QSortingManager();
		object.setupSortManager(queryModel);
		return object;
	};
	oFF.QSortingManager.prototype.m_sortOperations = null;
	oFF.QSortingManager.prototype.m_supports = null;
	oFF.QSortingManager.prototype.m_supportsBreakGrouping = null;
	oFF.QSortingManager.prototype.setupSortManager = function(queryModel) {
		this.setupModelComponent(queryModel, queryModel);
		this.m_sortOperations = oFF.QModelComponentList
				.createModelComponentList(queryModel, this, true,
						"SortOperations");
		this.m_supports = oFF.XSetOfNameObject.create();
		this.m_supportsBreakGrouping = oFF.XSetOfNameObject.create();
	};
	oFF.QSortingManager.prototype.copySortManager = function(origin) {
		var queryModel;
		var size;
		var i;
		var originSorting;
		var originType;
		var cloneFieldSorting;
		var cloneMeasureSorting;
		var cloneDimensionSorting;
		var cloneDataCell;
		var cloneComplex;
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_supports = origin.m_supports.createSetCopy();
		this.m_supportsBreakGrouping = origin.m_supportsBreakGrouping
				.createSetCopy();
		this.m_sortOperations.clear();
		queryModel = this.getQueryModel();
		size = origin.m_sortOperations.size();
		for (i = 0; i < size; i++) {
			originSorting = origin.m_sortOperations.get(i);
			originType = originSorting.getSortingType();
			if (originType === oFF.SortType.FIELD) {
				cloneFieldSorting = this.newFieldSorting(queryModel
						.getFieldByName(originSorting.getField().getName()));
				cloneFieldSorting.copyGenericSorting(originSorting);
				this.m_sortOperations.addInternal(cloneFieldSorting);
			} else {
				if (originType === oFF.SortType.MEASURE) {
					cloneMeasureSorting = this.newMeasureSorting(queryModel
							.getMeasureDimension().getStructureMember(
									originSorting.getMeasure().getName()));
					cloneMeasureSorting.copyMeasureSorting(originSorting);
					this.m_sortOperations.addInternal(cloneMeasureSorting);
				} else {
					if (originSorting.getOlapComponentType() === oFF.OlapComponentType.DIMENSION_SORTING) {
						cloneDimensionSorting = this
								.newDimensionSorting(queryModel
										.getDimensionByNameFromExistingMetadata(originSorting
												.getDimension().getName()));
						if (oFF.notNull(cloneDimensionSorting)) {
							cloneDimensionSorting
									.copyDimensionSorting(originSorting);
							this.m_sortOperations
									.addInternal(cloneDimensionSorting);
						}
					} else {
						if (originType === oFF.SortType.DATA_CELL_VALUE) {
							cloneDataCell = this.newDataCellSorting(null);
							cloneDataCell.copyDataCellSorting(originSorting);
							this.m_sortOperations.addInternal(cloneDataCell);
						} else {
							if (originType === oFF.SortType.COMPLEX) {
								cloneComplex = oFF.QComplexSorting.create(this,
										null);
								cloneComplex.copyComplexSorting(originSorting);
								this.m_sortOperations.addInternal(cloneComplex);
							}
						}
					}
				}
			}
		}
	};
	oFF.QSortingManager.prototype.releaseObject = function() {
		this.m_sortOperations = oFF.XObjectExt.release(this.m_sortOperations);
		this.m_supports = oFF.XObjectExt.release(this.m_supports);
		this.m_supportsBreakGrouping = oFF.XObjectExt
				.release(this.m_supportsBreakGrouping);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QSortingManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.SORT_MANAGER;
	};
	oFF.QSortingManager.prototype.getSortingOperations = function() {
		return this.m_sortOperations;
	};
	oFF.QSortingManager.prototype.newDimensionSorting = function(dimension) {
		var dimBase;
		if (oFF.isNull(dimension)) {
			return null;
		}
		if (this.supportsDimensionSorting(dimension, null)) {
			dimBase = dimension;
			return oFF.QDimensionSorting.create(this, dimBase);
		}
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils
				.concatenate2("Dimension sorting not allowed on dimension ",
						dimension.getName()));
	};
	oFF.QSortingManager.prototype.newFieldSorting = function(field) {
		var fieldBase;
		if (this.supportsFieldSorting(field)) {
			fieldBase = field;
			return oFF.QFieldSorting.create(this, fieldBase);
		}
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils
				.concatenate2("Field sorting not allowed on field ", field
						.getName()));
	};
	oFF.QSortingManager.prototype.newDataCellSorting = function(path) {
		if (this.supportsDataCellSorting()) {
			return oFF.QDataCellSorting.create(this, path);
		}
		throw oFF.XException
				.createIllegalArgumentException("Tuple sorting not allowed");
	};
	oFF.QSortingManager.prototype.newComplexSorting = function(path) {
		if (this.supportsComplexSorting()) {
			return oFF.QComplexSorting.create(this, path);
		}
		throw oFF.XException
				.createIllegalArgumentException("Complex sorting not allowed");
	};
	oFF.QSortingManager.prototype.newMeasureSorting = function(member) {
		var structureMember;
		if (this.supportsMeasureSorting()) {
			structureMember = member;
			return oFF.QMeasureSorting.create(this, structureMember);
		}
		throw oFF.XException
				.createIllegalArgumentException("Structure member sorting not allowed");
	};
	oFF.QSortingManager.prototype.getDimensionSorting = function(dimension,
			createIfNotExist) {
		var result = null;
		var size;
		var i;
		var sortOperation;
		var componentType;
		var dimSorting;
		if (oFF.notNull(dimension)) {
			size = this.m_sortOperations.size();
			for (i = 0; i < size; i++) {
				sortOperation = this.m_sortOperations.get(i);
				componentType = sortOperation.getComponentType();
				if (componentType === oFF.OlapComponentType.DIMENSION_SORTING) {
					dimSorting = sortOperation;
					if (dimSorting.getDimension() === dimension) {
						result = dimSorting;
						break;
					}
				}
			}
			if (oFF.isNull(result) && createIfNotExist) {
				result = this.newDimensionSorting(dimension);
				this.addSortOperation(result);
			}
		}
		return result;
	};
	oFF.QSortingManager.prototype.removeDimensionSorting = function(dimension) {
		var size = this.m_sortOperations.size();
		var i = 0;
		var sortOperation;
		var componentType;
		var dimSorting;
		while (i < size) {
			sortOperation = this.m_sortOperations.get(i);
			componentType = sortOperation.getComponentType();
			if (componentType === oFF.OlapComponentType.DIMENSION_SORTING) {
				dimSorting = sortOperation;
				if (dimSorting.getDimension() === dimension) {
					this.m_sortOperations.removeAt(i);
					size = this.m_sortOperations.size();
					continue;
				}
			}
			i++;
		}
	};
	oFF.QSortingManager.prototype.getFieldSorting = function(field,
			createIfNotExist) {
		var result = null;
		var size = this.m_sortOperations.size();
		var i;
		var sortOperation;
		var componentType;
		var fieldSorting;
		for (i = 0; i < size; i++) {
			sortOperation = this.m_sortOperations.get(i);
			componentType = sortOperation.getComponentType();
			if (componentType === oFF.OlapComponentType.FIELD_SORTING) {
				fieldSorting = sortOperation;
				if (fieldSorting.getField() === field) {
					result = fieldSorting;
					break;
				}
			}
		}
		if (oFF.isNull(result) && createIfNotExist) {
			result = this.newFieldSorting(field);
			this.addSortOperation(result);
		}
		return result;
	};
	oFF.QSortingManager.prototype.getDataCellSorting = function(path,
			createIfNotExist) {
		var result = null;
		var uniqueName = oFF.QComplexAndDataCellSorting
				.createPathUniqueName(path);
		var size = this.m_sortOperations.size();
		var i;
		var sortOperation;
		var componentType;
		var tupleSorting;
		var tsUniqueName;
		for (i = 0; i < size; i++) {
			sortOperation = this.m_sortOperations.get(i);
			componentType = sortOperation.getComponentType();
			if (componentType === oFF.OlapComponentType.DATA_CELL_SORTING) {
				tupleSorting = sortOperation;
				tsUniqueName = tupleSorting.getPathUniqueName();
				if (oFF.XString.isEqual(tsUniqueName, uniqueName)) {
					result = tupleSorting;
					break;
				}
			}
		}
		if (oFF.isNull(result) && createIfNotExist) {
			result = this.newDataCellSorting(path);
			this.addSortOperation(result);
		}
		return result;
	};
	oFF.QSortingManager.prototype.getComplexSorting = function(path,
			createIfNotExist) {
		var result = null;
		var uniqueName = oFF.QComplexAndDataCellSorting
				.createPathUniqueName(path);
		var size = this.m_sortOperations.size();
		var i;
		var sortOperation;
		var componentType;
		var tupleSorting;
		var tsUniqueName;
		for (i = 0; i < size; i++) {
			sortOperation = this.m_sortOperations.get(i);
			componentType = sortOperation.getComponentType();
			if (componentType === oFF.OlapComponentType.COMPLEX_SORTING) {
				tupleSorting = sortOperation;
				tsUniqueName = tupleSorting.getPathUniqueName();
				if (oFF.XString.isEqual(tsUniqueName, uniqueName)) {
					result = tupleSorting;
					break;
				}
			}
		}
		if (oFF.isNull(result) && createIfNotExist) {
			result = this.newComplexSorting(path);
			this.addSortOperation(result);
		}
		return result;
	};
	oFF.QSortingManager.prototype.getMeasureSorting = function(member,
			createIfNotExist) {
		var structure = this.getQueryModel().getNonMeasureDimension();
		var result;
		var size;
		var i;
		var sortOperation;
		var componentType;
		var memberSorting;
		if (oFF.isNull(member) || oFF.notNull(structure)
				&& member.getDimension() === structure) {
			return null;
		}
		result = null;
		size = this.m_sortOperations.size();
		for (i = 0; i < size; i++) {
			sortOperation = this.m_sortOperations.get(i);
			componentType = sortOperation.getComponentType();
			if (componentType === oFF.OlapComponentType.MEASURE_SORTING) {
				memberSorting = sortOperation;
				if (memberSorting.getMeasure() === member) {
					result = memberSorting;
					break;
				}
			}
		}
		if (oFF.isNull(result) && createIfNotExist) {
			result = this.newMeasureSorting(member);
			this.addSortOperation(result);
			if (oFF.notNull(structure)
					&& structure.getAllStructureMembers().size() > 0) {
				result.setStructure(structure.getAllStructureMembers().get(0));
			}
		}
		return result;
	};
	oFF.QSortingManager.prototype.addSortOperation = function(sortOperation) {
		if (oFF.notNull(sortOperation)) {
			this.m_sortOperations.add(sortOperation);
		}
	};
	oFF.QSortingManager.prototype.supportsFieldSorting = function(field) {
		return this.m_supports.contains(oFF.SortType.FIELD);
	};
	oFF.QSortingManager.prototype.supportsDimensionSorting = function(
			dimension, sortType) {
		if (oFF.notNull(dimension)) {
			return dimension.supportsSorting(sortType);
		}
		if (oFF.isNull(sortType)) {
			return this.m_supports.contains(oFF.SortType.FILTER)
					|| this.m_supports.contains(oFF.SortType.HIERARCHY)
					|| this.m_supports.contains(oFF.SortType.MEMBER_KEY)
					|| this.m_supports.contains(oFF.SortType.MEMBER_TEXT);
		}
		if (sortType === oFF.SortType.FILTER
				|| sortType === oFF.SortType.HIERARCHY
				|| sortType === oFF.SortType.MEMBER_KEY
				|| sortType === oFF.SortType.MEMBER_TEXT) {
			return this.m_supports.contains(sortType);
		}
		return false;
	};
	oFF.QSortingManager.prototype.supportsDataCellSorting = function() {
		return this.m_supports.contains(oFF.SortType.DATA_CELL_VALUE);
	};
	oFF.QSortingManager.prototype.supportsComplexSorting = function() {
		return this.m_supports.contains(oFF.SortType.COMPLEX);
	};
	oFF.QSortingManager.prototype.supportsMeasureSorting = function() {
		return this.m_supports.contains(oFF.SortType.MEASURE);
	};
	oFF.QSortingManager.prototype.clearSupportedSortType = function() {
		this.m_supports.clear();
	};
	oFF.QSortingManager.prototype.addSupportedSortType = function(sortType) {
		if (oFF.notNull(sortType)) {
			this.m_supports.add(sortType);
		}
	};
	oFF.QSortingManager.prototype.supportsSortType = function(sortType) {
		return this.m_supports.contains(sortType);
	};
	oFF.QSortingManager.prototype.supportsBreakGrouping = function(sortType) {
		return this.m_supportsBreakGrouping.contains(sortType);
	};
	oFF.QSortingManager.prototype.addSupportedBreakGrouping = function(sortType) {
		if (oFF.notNull(sortType)) {
			this.m_supportsBreakGrouping.add(sortType);
		}
	};
	oFF.QSortingManager.prototype.supportsPreserveGrouping = function(sortType) {
		return true;
	};
	oFF.QSortingManager.prototype.getSupportedBreakGrouping = function() {
		return this.m_supportsBreakGrouping.getValuesAsReadOnlyList();
	};
	oFF.QSortingManager.prototype.mergeDeepRecursive = function(settings, other) {
		var otherSort = other;
		this.copySortManager(otherSort);
	};
	oFF.QUniversalDisplayHierarchies = function() {
	};
	oFF.QUniversalDisplayHierarchies.prototype = new oFF.QModelComponent();
	oFF.QUniversalDisplayHierarchies.create = function(context, queryModel) {
		var udh = new oFF.QUniversalDisplayHierarchies();
		udh.setupUniversalDisplayHierarchies(context, queryModel);
		return udh;
	};
	oFF.QUniversalDisplayHierarchies.prototype.m_hierarchies = null;
	oFF.QUniversalDisplayHierarchies.prototype.setupUniversalDisplayHierarchies = function(
			context, queryModel) {
		this.setupModelComponent(context, queryModel);
		this.m_hierarchies = oFF.XListOfNameObject.create();
	};
	oFF.QUniversalDisplayHierarchies.prototype.copyUniversalDisplayHierarchies = function(
			origin) {
		var queryModel;
		var hierarchies;
		var size;
		var i;
		var originHierarchy;
		var dimensionNames;
		var axis;
		var dimension;
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		queryModel = this.getQueryModel();
		hierarchies = origin.getHierarchies();
		size = hierarchies.size();
		for (i = 0; i < size; i++) {
			originHierarchy = hierarchies.get(i);
			dimensionNames = oFF.XListOfString.create();
			dimensionNames.addAll(originHierarchy.getDimensionNames());
			axis = queryModel.getAxis(originHierarchy
					.getHierarchyDedicatedAxis().getType());
			this.addHierarchy(originHierarchy.getName(), dimensionNames,
					originHierarchy.getInitialDrillLevel(), originHierarchy
							.getAlignment(), originHierarchy.isActive(), axis,
					originHierarchy.hasCustomDimensions());
			dimension = queryModel
					.getDimensionByNameFromExistingMetadata(originHierarchy
							.getName());
			queryModel.getVirtualAxis().add(dimension);
		}
	};
	oFF.QUniversalDisplayHierarchies.prototype.mergeDeepRecursive = function(
			settings, other) {
		if (oFF.notNull(other)) {
			this.m_hierarchies.clear();
			this.copyUniversalDisplayHierarchies(other);
		}
	};
	oFF.QUniversalDisplayHierarchies.prototype.releaseObject = function() {
		oFF.QModelComponent.prototype.releaseObject.call(this);
		this.m_hierarchies = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_hierarchies);
	};
	oFF.QUniversalDisplayHierarchies.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.UNIVERSAL_DISPLAY_HIERARCHIES;
	};
	oFF.QUniversalDisplayHierarchies.prototype.addHierarchy = function(name,
			dimensionNames, initialDrillLevel, alignment, active, axis,
			customDimensions) {
		var existingHierarchy = this.getByName(name);
		var hierarchy;
		if (oFF.notNull(existingHierarchy)) {
			existingHierarchy.setDimensionNames(dimensionNames);
			existingHierarchy.setInitialDrillLevel(initialDrillLevel);
			existingHierarchy.setAlignment(alignment);
			existingHierarchy.setActive(active);
			existingHierarchy.setAxis(axis);
			existingHierarchy.setCustomDimensions(customDimensions);
		} else {
			hierarchy = oFF.QUniversalDisplayHierarchy.create(
					this.getContext(), this.getQueryModelBase(), name,
					dimensionNames, initialDrillLevel, alignment, active);
			hierarchy.setAxis(axis);
			hierarchy.setCustomDimensions(customDimensions);
			this.m_hierarchies.add(hierarchy);
		}
	};
	oFF.QUniversalDisplayHierarchies.prototype.getIndexedChildren = function() {
		return oFF.XIteratorWrapper.create(this.m_hierarchies.getIterator());
	};
	oFF.QUniversalDisplayHierarchies.prototype.getHierarchies = function() {
		return this.m_hierarchies;
	};
	oFF.QUniversalDisplayHierarchies.prototype.updateIncludedDimensions = function() {
		var i;
		for (i = 0; i < this.m_hierarchies.size(); i++) {
			this.m_hierarchies.get(i).updateIncludedDimensions();
		}
	};
	oFF.QUniversalDisplayHierarchies.prototype.getByName = function(
			hierarchyName) {
		return this.m_hierarchies.getByKey(hierarchyName);
	};
	oFF.QUniversalDisplayHierarchies.prototype.getByIncludedDimension = function(
			dimension) {
		var i;
		var hierarchy;
		for (i = 0; i < this.m_hierarchies.size(); i++) {
			hierarchy = this.m_hierarchies.get(i);
			hierarchy.updateIncludedDimensions();
			if (hierarchy.getDimensionNames().contains(dimension.getName())) {
				return hierarchy;
			}
		}
		return null;
	};
	oFF.QUniversalDisplayHierarchies.prototype.getByAxisType = function(
			axisType) {
		var i;
		var hierarchy;
		for (i = 0; i < this.m_hierarchies.size(); i++) {
			hierarchy = this.m_hierarchies.get(i);
			if (hierarchy.getHierarchyDedicatedAxis().getType() === axisType) {
				return hierarchy;
			}
		}
		return null;
	};
	oFF.QUniversalDisplayHierarchies.prototype.setHierarchy = function(
			dimensions, initialDrillLevel, active) {
		var queryManager = this.getQueryManager();
		var dimension;
		var axis;
		var i;
		var hierarchy;
		var originalDimensionNames;
		if (this.m_hierarchies.isEmpty() && oFF.notNull(queryManager)
				&& queryManager.hasVariables() && !queryManager.isSubmitted()) {
			throw oFF.XException
					.createIllegalArgumentException("Ensure variables have been submitted before updating a universal display hierarchy");
		}
		if (!oFF.XCollectionUtils.hasElements(dimensions)) {
			throw oFF.XException
					.createIllegalArgumentException("The list of dimensions must not be empty");
		}
		dimension = this.getQueryModel().getDimensionByName(dimensions.get(0));
		if (oFF.isNull(dimension)) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate3("The dimensions ", dimensions
									.toString(),
									" must exist and be placed next to each other on the axis."));
		}
		axis = dimension.getAxis();
		for (i = 0; i < this.m_hierarchies.size(); i++) {
			hierarchy = this.m_hierarchies.get(i);
			if (hierarchy.getHierarchyDedicatedAxis() === axis) {
				originalDimensionNames = hierarchy.getDimensionNames();
				hierarchy.setDimensionNames(dimensions);
				if (active && !hierarchy.isDimensionListValid()) {
					hierarchy.setDimensionNames(originalDimensionNames
							.createListOfStringCopy());
					throw oFF.XException
							.createIllegalArgumentException(oFF.XStringUtils
									.concatenate3("The dimensions ", dimensions
											.toString(),
											" must exist and be placed next to each other on the axis."));
				}
				hierarchy.setActive(active);
				hierarchy.setInitialDrillLevel(initialDrillLevel);
				return hierarchy;
			}
		}
		throw oFF.XException
				.createIllegalArgumentException(oFF.XStringUtils
						.concatenate5(
								"No suitable UDH could be found for dimensions ",
								dimensions.toString(),
								" and hierarchy ",
								this.m_hierarchies.toString(),
								". Ensure these dimensions have been added to rows or columns before (de)activating a hierarchy."));
	};
	oFF.QUniversalDisplayHierarchies.prototype.toString = function() {
		return this.m_hierarchies.toString();
	};
	oFF.QUniversalDisplayHierarchy = function() {
	};
	oFF.QUniversalDisplayHierarchy.prototype = new oFF.QModelComponent();
	oFF.QUniversalDisplayHierarchy.create = function(context, queryModel, name,
			dimensionNames, initialDrillLevel, alignment, active) {
		var udh = new oFF.QUniversalDisplayHierarchy();
		udh.setName(name);
		udh.setupUniversalDisplayHierarchy(context, queryModel, dimensionNames,
				initialDrillLevel, alignment, active);
		return udh;
	};
	oFF.QUniversalDisplayHierarchy.prototype.m_dimensionNames = null;
	oFF.QUniversalDisplayHierarchy.prototype.m_initialDrillLevel = 0;
	oFF.QUniversalDisplayHierarchy.prototype.m_alignment = null;
	oFF.QUniversalDisplayHierarchy.prototype.m_active = false;
	oFF.QUniversalDisplayHierarchy.prototype.m_axis = null;
	oFF.QUniversalDisplayHierarchy.prototype.m_customDimensions = false;
	oFF.QUniversalDisplayHierarchy.prototype.setupUniversalDisplayHierarchy = function(
			context, queryModel, dimensionNames, initialDrillLevel, alignment,
			active) {
		this.setupModelComponent(context, queryModel);
		this.m_dimensionNames = dimensionNames;
		this.m_initialDrillLevel = initialDrillLevel;
		this.m_alignment = alignment;
		this.m_active = active;
		this.m_customDimensions = false;
	};
	oFF.QUniversalDisplayHierarchy.prototype.releaseObject = function() {
		oFF.QModelComponent.prototype.releaseObject.call(this);
		this.m_dimensionNames = oFF.XObjectExt.release(this.m_dimensionNames);
		this.m_alignment = null;
		this.m_axis = null;
	};
	oFF.QUniversalDisplayHierarchy.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.UNIVERSAL_DISPLAY_HIERARCHY;
	};
	oFF.QUniversalDisplayHierarchy.prototype.updateIncludedDimensions = function() {
		var axis;
		var dimensions;
		var dimensionName;
		if (this.getModelCapabilities()
				.supportsUniversalDisplayHierarchiesCustomDimensions()
				&& this.m_customDimensions) {
			return;
		}
		axis = this.getHierarchyDedicatedAxis();
		if (oFF.notNull(axis)) {
			this.m_dimensionNames.clear();
			dimensions = axis.getIterator();
			while (dimensions.hasNext()) {
				dimensionName = dimensions.next().getName();
				if (!oFF.XString.isEqual(dimensionName, this.getName())) {
					this.m_dimensionNames.add(dimensionName);
				}
			}
		}
	};
	oFF.QUniversalDisplayHierarchy.prototype.getHierarchyDedicatedAxis = function() {
		return this.m_axis;
	};
	oFF.QUniversalDisplayHierarchy.prototype.setAxis = function(axis) {
		if (oFF.notNull(axis)) {
			this.m_axis = axis;
		}
	};
	oFF.QUniversalDisplayHierarchy.prototype.getDimensionNames = function() {
		return this.m_dimensionNames;
	};
	oFF.QUniversalDisplayHierarchy.prototype.setDimensionNames = function(
			dimensionNames) {
		if (!this.m_dimensionNames.isEqualTo(dimensionNames)) {
			this.m_customDimensions = true;
			this.m_dimensionNames.clear();
			this.m_dimensionNames.addAll(dimensionNames);
			this.notifyNodeChanged();
		}
	};
	oFF.QUniversalDisplayHierarchy.prototype.addDimension = function(
			dimensionName) {
		if (oFF.XStringUtils.isNotNullAndNotEmpty(dimensionName)
				&& !this.m_dimensionNames.contains(dimensionName)) {
			this.m_customDimensions = true;
			this.m_dimensionNames.add(dimensionName);
			this.notifyNodeChanged();
		}
	};
	oFF.QUniversalDisplayHierarchy.prototype.removeDimension = function(
			dimensionName) {
		if (this.m_dimensionNames.contains(dimensionName)) {
			this.m_customDimensions = true;
			this.m_dimensionNames.removeElement(dimensionName);
			this.notifyNodeChanged();
		}
	};
	oFF.QUniversalDisplayHierarchy.prototype.getInitialDrillLevel = function() {
		return this.m_initialDrillLevel;
	};
	oFF.QUniversalDisplayHierarchy.prototype.setInitialDrillLevel = function(
			initialDrillLevel) {
		if (this.m_initialDrillLevel === initialDrillLevel) {
			return;
		}
		this.m_initialDrillLevel = initialDrillLevel;
		this.notifyNodeChanged();
	};
	oFF.QUniversalDisplayHierarchy.prototype.getAlignment = function() {
		return this.m_alignment;
	};
	oFF.QUniversalDisplayHierarchy.prototype.setAlignment = function(alignment) {
		if (oFF.isNull(alignment) || this.m_alignment === alignment) {
			return;
		}
		this.m_alignment = alignment;
		this.notifyNodeChanged();
	};
	oFF.QUniversalDisplayHierarchy.prototype.isActive = function() {
		return this.m_active;
	};
	oFF.QUniversalDisplayHierarchy.prototype.setActive = function(active) {
		if (this.m_active === active) {
			return;
		}
		this.m_active = active;
		this.notifyNodeChanged();
	};
	oFF.QUniversalDisplayHierarchy.prototype.getKeyField = function(
			udhDimension, inaUdhStructure) {
		var attributes = inaUdhStructure.getListByKey("Attributes");
		var size;
		var i;
		var attribute;
		var keyField;
		if (oFF.notNull(attributes)) {
			size = attributes.size();
			for (i = 0; i < size; i++) {
				attribute = attributes.getStructureAt(i);
				if (attribute.getBooleanByKeyExt("IsKey", false)) {
					keyField = udhDimension.getFieldByName(attribute
							.getStringByKey("Name"));
					if (oFF.notNull(keyField)) {
						return keyField;
					}
				}
			}
		}
		return null;
	};
	oFF.QUniversalDisplayHierarchy.prototype.getTextField = function(
			udhDimension) {
		var queryModel = udhDimension.getQueryModel();
		var size = this.m_dimensionNames.size();
		var i;
		var dim;
		var field;
		for (i = 0; i < size; i++) {
			dim = queryModel.getDimensionByName(this.m_dimensionNames.get(i));
			if (oFF.notNull(dim)) {
				field = this.getUdhField(udhDimension, dim.getFlatTextField());
				if (oFF.notNull(field)) {
					return field;
				}
			}
		}
		return null;
	};
	oFF.QUniversalDisplayHierarchy.prototype.getDisplayKeyField = function(
			udhDimension) {
		var queryModel = udhDimension.getQueryModel();
		var size = this.m_dimensionNames.size();
		var i;
		var dim;
		var field;
		for (i = 0; i < size; i++) {
			dim = queryModel.getDimensionByName(this.m_dimensionNames.get(i));
			if (oFF.notNull(dim)) {
				field = this.getUdhField(udhDimension, dim
						.getFlatDisplayKeyField());
				if (oFF.notNull(field)) {
					return field;
				}
			}
		}
		return null;
	};
	oFF.QUniversalDisplayHierarchy.prototype.getUdhField = function(
			udhDimension, dimensionField) {
		var udhFieldName;
		var field;
		if (oFF.notNull(dimensionField)) {
			udhFieldName = oFF.XString.replace(dimensionField.getName(),
					dimensionField.getDimension().getName(), this.getName());
			field = udhDimension.getFieldByName(udhFieldName);
			if (oFF.notNull(field)) {
				return field;
			}
		}
		return null;
	};
	oFF.QUniversalDisplayHierarchy.prototype.mapFieldToOriginalDimension = function(
			udhField) {
		var fieldNameWithoutDimPrefix;
		var queryModel;
		var size;
		var i;
		var dim;
		var originalFieldName;
		var field;
		if (oFF.notNull(udhField)
				&& oFF.XString.startsWith(udhField.getName(), this.getName())) {
			fieldNameWithoutDimPrefix = oFF.XString.replace(udhField.getName(),
					this.getName(), "");
			queryModel = this.getQueryModel();
			size = this.m_dimensionNames.size();
			for (i = 0; i < size; i++) {
				dim = queryModel.getDimensionByName(this.m_dimensionNames
						.get(i));
				originalFieldName = oFF.XStringUtils.concatenate2(
						dim.getName(), fieldNameWithoutDimPrefix);
				field = dim.getFieldByName(originalFieldName);
				if (oFF.notNull(field)) {
					return field;
				}
			}
		}
		return null;
	};
	oFF.QUniversalDisplayHierarchy.prototype.isDimensionListValid = function() {
		var axis = this.getHierarchyDedicatedAxis();
		var indexes = oFF.XListOfString.create();
		var i;
		var dimension;
		var lastIndex;
		var k;
		var index;
		for (i = 0; i < this.m_dimensionNames.size(); i++) {
			dimension = this.getQueryModel().getDimensionByName(
					this.m_dimensionNames.get(i));
			indexes.add(oFF.XInteger.convertToString(axis.getIndex(dimension)));
		}
		indexes.sortByDirection(oFF.XSortDirection.ASCENDING);
		lastIndex = -1;
		for (k = 0; k < indexes.size(); k++) {
			index = oFF.XInteger.convertFromString(indexes.get(k));
			if (index === -1 || lastIndex >= 0 && index !== lastIndex + 1) {
				return false;
			}
			lastIndex = index;
		}
		return true;
	};
	oFF.QUniversalDisplayHierarchy.prototype.setCustomDimensions = function(
			useCustomDimensions) {
		this.m_customDimensions = useCustomDimensions;
	};
	oFF.QUniversalDisplayHierarchy.prototype.hasCustomDimensions = function() {
		return this.m_customDimensions;
	};
	oFF.QUniversalDisplayHierarchy.prototype.toString = function() {
		var buffer = oFF.XStringBuffer.create();
		buffer.append("{name: ").append(this.getName());
		buffer.append(", active: ").appendBoolean(this.isActive());
		buffer.append(", initialDrillLevel: ").appendInt(
				this.getInitialDrillLevel());
		buffer.append(", dimensions: ").append(
				this.getDimensionNames().toString());
		buffer.append("}");
		return buffer.toString();
	};
	oFF.QValueHelpNode = function() {
	};
	oFF.QValueHelpNode.prototype = new oFF.QOlapSyncAction();
	oFF.QValueHelpNode.WINDOW_SIZE = 100;
	oFF.QValueHelpNode.SPLITTER_SIZE = 100;
	oFF.QValueHelpNode.STRATEGY_WINDOWING = 0;
	oFF.QValueHelpNode.STRATEGY_SPLITTER = 1;
	oFF.QValueHelpNode.STRATEGY = 0;
	oFF.QValueHelpNode.create = function(valueHelp, parentNode, member,
			displayLevel, absoluteLevel) {
		var newObj = new oFF.QValueHelpNode();
		newObj.setupNode(valueHelp, parentNode, member, displayLevel, 1,
				absoluteLevel);
		return newObj;
	};
	oFF.QValueHelpNode.prototype.m_parentNode = null;
	oFF.QValueHelpNode.prototype.m_member = null;
	oFF.QValueHelpNode.prototype.m_children = null;
	oFF.QValueHelpNode.prototype.m_displayLevel = 0;
	oFF.QValueHelpNode.prototype.m_absoluteLevel = 0;
	oFF.QValueHelpNode.prototype.m_childSetState = null;
	oFF.QValueHelpNode.prototype.m_splittingSize = 0;
	oFF.QValueHelpNode.prototype.m_aggregatedChildCount = 0;
	oFF.QValueHelpNode.prototype.m_requestSettings = null;
	oFF.QValueHelpNode.prototype.m_osid = null;
	oFF.QValueHelpNode.prototype.setupNode = function(valueHelp, parentNode,
			member, displayLevel, splittingSize, absoluteLevel) {
		this.setupSynchronizingObject(valueHelp);
		this.m_parentNode = parentNode;
		this.m_displayLevel = displayLevel;
		this.m_absoluteLevel = absoluteLevel;
		this.m_childSetState = oFF.ChildSetState.INITIAL;
		this.m_splittingSize = splittingSize;
		this.m_member = member;
	};
	oFF.QValueHelpNode.prototype.getDimension = function() {
		return this.getActionContext().getValueHelpDimension();
	};
	oFF.QValueHelpNode.prototype.getDimensionMember = function() {
		return this.m_member;
	};
	oFF.QValueHelpNode.prototype.getParentNode = function() {
		return this.m_parentNode;
	};
	oFF.QValueHelpNode.prototype.getParentValueHelpNode = function() {
		return this.m_parentNode;
	};
	oFF.QValueHelpNode.prototype.getComponentType = function() {
		return this.getMemberType();
	};
	oFF.QValueHelpNode.prototype.getOlapComponentType = function() {
		return this.getMemberType();
	};
	oFF.QValueHelpNode.prototype.getType = function() {
		return this.getMemberType();
	};
	oFF.QValueHelpNode.prototype.getMemberType = function() {
		if (oFF.isNull(this.m_parentNode)) {
			return oFF.MemberType.VALUE_HELP_ROOT_NODE;
		}
		return oFF.MemberType.VALUE_HELP_NODE;
	};
	oFF.QValueHelpNode.prototype.isLeaf = function() {
		return this.getMemberType().isLeaf();
	};
	oFF.QValueHelpNode.prototype.isNode = function() {
		return this.getMemberType().isNode();
	};
	oFF.QValueHelpNode.prototype.getChildElements = function() {
		if (oFF.isNull(this.m_children)) {
			return oFF.XList.create();
		}
		return oFF.XReadOnlyListWrapper.create(this.m_children);
	};
	oFF.QValueHelpNode.prototype.getChildren = function() {
		return this.m_children;
	};
	oFF.QValueHelpNode.prototype.processValueHelpFetch = function(syncType,
			listener, customIdentifier) {
		if (this.m_childSetState === oFF.ChildSetState.INCOMPLETE) {
			this.resetSyncState();
		}
		return this.processSyncAction(syncType, listener, customIdentifier);
	};
	oFF.QValueHelpNode.prototype.processChildFetch = oFF.noSupport;
	oFF.QValueHelpNode.prototype.processSynchronization = function(syncType) {
		var valueHelpDimension = this.getActionContext()
				.getValueHelpDimension();
		var name = valueHelpDimension.getName();
		var hierarchyAssignedAndActive = valueHelpDimension
				.isHierarchyAssignedAndActive();
		var endIndex = 0;
		var queryManager;
		var valueHelpModel;
		var selector;
		var selectionStateContainer;
		var cmds;
		var memberName;
		if (this.m_childSetState === oFF.ChildSetState.INCOMPLETE) {
			endIndex = this.getEndIndex() + 1;
		}
		this.m_requestSettings = oFF.QRequestSettings.create(endIndex,
				oFF.QValueHelpNode.WINDOW_SIZE, hierarchyAssignedAndActive);
		queryManager = this.getActionContext().getQueryManager();
		valueHelpModel = queryManager.getQueryModel();
		selector = valueHelpModel.getFilter();
		selectionStateContainer = selector.getDynamicFilter();
		if (!selectionStateContainer.isCartesianProduct()) {
			selectionStateContainer.setComplexRoot(null);
		}
		cmds = valueHelpModel.getConvenienceCommands();
		cmds.clearFiltersByDimensionName(name);
		if (this.m_requestSettings.m_isHierarchyShot) {
			if (this.getMemberType() === oFF.MemberType.VALUE_HELP_ROOT_NODE) {
				valueHelpDimension.setInitialDrillLevel(0);
			} else {
				memberName = this.m_member.getName();
				cmds.addSingleMemberFilterByDimension(valueHelpDimension,
						memberName, oFF.ComparisonOperator.EQUAL);
				this.m_requestSettings.m_isDeltaDrill = true;
				valueHelpDimension.setInitialDrillLevel(1);
			}
		}
		queryManager.setOffsetRows(this.m_requestSettings.m_offset);
		queryManager.setMaxRows(this.m_requestSettings.m_windowSize);
		queryManager.processQueryExecution(syncType, this,
				this.m_requestSettings);
		return true;
	};
	oFF.QValueHelpNode.prototype.getDrillPath = function() {
		return oFF.XList.create();
	};
	oFF.QValueHelpNode.prototype.onQueryExecuted = function(extResult,
			resultSetContainer, customIdentifier) {
		var valueHelpDimension = this.getDimension();
		var level0Children;
		var allChildren;
		var cursorResultSet;
		var cursorRowsAxis;
		var currentParent;
		var peerNode;
		var tuplesCount;
		var myTargetState;
		var childTargetState;
		var previousChildren;
		var rootExpandingLevels;
		var lastPos;
		var lastElement;
		var tupleElement;
		var displayLevel;
		var absoluteLevel;
		var parentIndex;
		var dimMember;
		var node;
		var endIndex;
		var emptySplitter;
		this.clearMessages();
		this.addAllMessages(extResult);
		level0Children = oFF.XList.create();
		allChildren = oFF.XList.create();
		if (extResult.isValid()) {
			cursorResultSet = resultSetContainer.getCursorResultSet();
			cursorRowsAxis = cursorResultSet.getCursorRowsAxis();
			tuplesCount = cursorRowsAxis.getTuplesCount();
			if (tuplesCount < this.m_requestSettings.m_windowSize) {
				myTargetState = oFF.ChildSetState.COMPLETE;
			} else {
				myTargetState = oFF.ChildSetState.INCOMPLETE;
			}
			previousChildren = null;
			rootExpandingLevels = valueHelpDimension.getInitialDrillLevel();
			if (oFF.QValueHelpNode.STRATEGY === oFF.QValueHelpNode.STRATEGY_WINDOWING) {
				if (this.m_requestSettings.m_isHierarchyShot
						&& rootExpandingLevels >= 0) {
					childTargetState = oFF.ChildSetState.INITIAL;
				} else {
					childTargetState = myTargetState;
				}
			} else {
				if (this.m_requestSettings.m_isHierarchyShot
						&& rootExpandingLevels >= 0) {
					childTargetState = oFF.ChildSetState.INCOMPLETE;
				} else {
					childTargetState = oFF.ChildSetState.COMPLETE;
				}
				if (oFF.notNull(this.m_children)) {
					previousChildren = this.m_children;
					this.m_children = oFF.XList.create();
					lastPos = previousChildren.size() - 1;
					lastElement = previousChildren.get(lastPos);
					this.m_children.add(lastElement);
					previousChildren.removeAt(lastPos);
				}
			}
			if (this.m_requestSettings.m_isDeltaDrill) {
				if (cursorRowsAxis.hasNextTuple()) {
					cursorRowsAxis.nextTuple();
					allChildren.add(this);
				}
			}
			while (cursorRowsAxis.hasNextTuple()) {
				cursorRowsAxis.nextTuple();
				tupleElement = cursorRowsAxis.nextTupleElement();
				displayLevel = tupleElement.getDisplayLevel();
				absoluteLevel = tupleElement.getAbsoluteLevel();
				parentIndex = tupleElement.getParentNodeIndex();
				if (parentIndex === -1) {
					currentParent = this;
				} else {
					currentParent = allChildren.get(parentIndex);
				}
				dimMember = tupleElement
						.createDimensionMemberFromCurrentPosition();
				peerNode = oFF.QValueHelpNode.create(this.getActionContext(),
						currentParent, dimMember, displayLevel, absoluteLevel);
				peerNode.setChildSetState(childTargetState);
				node = peerNode;
				currentParent.addChild(node, childTargetState);
				allChildren.add(node);
				if (displayLevel === 0) {
					level0Children.add(node);
				}
			}
			if (oFF.QValueHelpNode.STRATEGY === oFF.QValueHelpNode.STRATEGY_SPLITTER
					&& myTargetState === oFF.ChildSetState.INCOMPLETE) {
				endIndex = this.getEndIndex() + 1;
				emptySplitter = oFF.QValueHelpSplitterNode.createSplitterNode(
						this.getActionContext(), this, 0, endIndex, 1, -1);
				this.m_children.add(emptySplitter);
			}
			this.m_childSetState = myTargetState;
		} else {
			this.m_childSetState = oFF.ChildSetState.COMPLETE;
		}
		this.setData(level0Children);
		this.endSync();
	};
	oFF.QValueHelpNode.prototype.addChild = function(node, childState) {
		var size2;
		var currentWindowNode;
		var childNode;
		var aggregatedChildCount;
		var myChildren2;
		var startIndex2;
		var splitterNode;
		var mySize3;
		var k;
		var splitterNode2;
		var childSetState;
		var aggregatedChildCount2;
		var startIndex3;
		if (oFF.isNull(this.m_children)) {
			this.m_children = oFF.XList.create();
		}
		if (oFF.QValueHelpNode.STRATEGY === oFF.QValueHelpNode.STRATEGY_WINDOWING) {
			this.m_children.add(node);
		} else {
			size2 = this.m_children.size();
			if (this.m_splittingSize === -1) {
				currentWindowNode = this.m_children.get(size2 - 1);
				currentWindowNode.addChild(node, childState);
			} else {
				if (size2 >= oFF.QValueHelpNode.SPLITTER_SIZE) {
					childNode = this.m_children.get(size2 - 1);
					aggregatedChildCount = childNode.getAggregatedChildCount();
					if (aggregatedChildCount === this.m_splittingSize) {
						myChildren2 = this.m_children;
						this.m_children = oFF.XList.create();
						startIndex2 = this.getStartIndex();
						splitterNode = oFF.QValueHelpSplitterNode
								.createSplitterNode(this.getActionContext(),
										this, 0, startIndex2, 1, -1);
						splitterNode
								.setChildSetState(oFF.ChildSetState.COMPLETE);
						this.m_children.add(splitterNode);
						mySize3 = myChildren2.size();
						for (k = 0; k < mySize3; k++) {
							splitterNode.addChild(myChildren2.get(k),
									childState);
						}
						this.m_splittingSize = this.m_splittingSize
								* oFF.QValueHelpNode.SPLITTER_SIZE;
						size2 = this.m_children.size();
					}
				}
				if (this.m_splittingSize === 1) {
					this.m_children.add(node);
				} else {
					splitterNode2 = this.m_children.get(size2 - 1);
					childSetState = splitterNode2.getChildSetState();
					if (childSetState === oFF.ChildSetState.INITIAL) {
						splitterNode2
								.setChildSetState(oFF.ChildSetState.COMPLETE);
					}
					aggregatedChildCount2 = splitterNode2
							.getAggregatedChildCount();
					if (aggregatedChildCount2 >= this.m_splittingSize) {
						startIndex3 = splitterNode2.getEndIndex() + 1;
						splitterNode2 = oFF.QValueHelpSplitterNode
								.createSplitterNode(this.getActionContext(),
										this, 0, startIndex3, 1, -1);
						splitterNode2
								.setChildSetState(oFF.ChildSetState.COMPLETE);
						this.m_children.add(splitterNode2);
					}
					splitterNode2.addChild(node, childState);
				}
			}
		}
		this.m_aggregatedChildCount = this.m_aggregatedChildCount
				+ node.getAggregatedChildCount();
	};
	oFF.QValueHelpNode.prototype.getStartIndex = function() {
		return 0;
	};
	oFF.QValueHelpNode.prototype.getEndIndex = function() {
		var startIndex = this.getStartIndex();
		var aggregatedChildCount = this.getAggregatedChildCount();
		return startIndex + aggregatedChildCount - 1;
	};
	oFF.QValueHelpNode.prototype.getAggregatedChildCount = function() {
		if (oFF.isNull(this.m_children) && oFF.notNull(this.m_member)) {
			return 1;
		}
		return this.m_aggregatedChildCount;
	};
	oFF.QValueHelpNode.prototype.getChildSetState = function() {
		return this.m_childSetState;
	};
	oFF.QValueHelpNode.prototype.setChildSetState = function(state) {
		this.m_childSetState = state;
	};
	oFF.QValueHelpNode.prototype.callListener = function(extResult, listener,
			data, customIdentifier) {
		var nodes = data;
		listener.onValueHelpFetched(extResult, this, nodes, customIdentifier);
	};
	oFF.QValueHelpNode.prototype.getDisplayLevel = function() {
		return this.m_displayLevel;
	};
	oFF.QValueHelpNode.prototype.getSelectableElement = function() {
		return this.m_member;
	};
	oFF.QValueHelpNode.prototype.getFirstText = function() {
		return this.getName();
	};
	oFF.QValueHelpNode.prototype.getLastText = function() {
		return this.getName();
	};
	oFF.QValueHelpNode.prototype.getName = function() {
		var name;
		var text;
		var buffer;
		if (oFF.notNull(this.m_member)) {
			name = this.m_member.getName();
			text = this.m_member.getText();
			if (oFF.XStringUtils.isNotNullAndNotEmpty(text)) {
				buffer = oFF.XStringBuffer.create();
				buffer.append(text);
				buffer.append(" [");
				buffer.append(name);
				buffer.append("]");
				return buffer.toString();
			}
			return name;
		} else {
			if (oFF.isNull(this.m_parentNode)) {
				return "Root";
			} else {
				return "[undefined]";
			}
		}
	};
	oFF.QValueHelpNode.prototype.getOsid = function() {
		var buffer;
		if (oFF.isNull(this.m_osid)) {
			buffer = oFF.XStringBuffer.create();
			buffer.append(this.getName());
			buffer.append("_");
			buffer.appendInt(this.m_member.getSession().getNextSid());
			this.m_osid = buffer.toString();
		}
		return this.m_osid;
	};
	oFF.QValueHelpNode.prototype.hasChildren = function() {
		return true;
	};
	oFF.QValueHelpNode.prototype.getText = function() {
		return this.getName();
	};
	oFF.QValueHelpNode.prototype.getTagValue = function(tagName) {
		return null;
	};
	oFF.QValueHelpNode.prototype.getContentElement = function() {
		return this;
	};
	oFF.QValueHelpNode.prototype.getContentConstant = function() {
		return null;
	};
	oFF.QValueHelpNode.prototype.getDrillState = oFF.noSupport;
	oFF.QValueHelpNode.prototype.registerChangedListener = oFF.noSupport;
	oFF.QValueHelpNode.prototype.unregisterChangedListener = oFF.noSupport;
	oFF.QValueHelpNode.prototype.getChildCount = oFF.noSupport;
	oFF.QValueHelpNode.prototype.cloneOlapComponent = oFF.noSupport;
	oFF.QValueHelpNode.prototype.toString = function() {
		var buffer = oFF.XStringBuffer.create();
		buffer.appendLine(oFF.QOlapSyncAction.prototype.toString.call(this));
		buffer.append("Name: ").appendLine(this.getName());
		buffer.append("Type: ").appendLine(this.getMemberType().getName());
		buffer.append("ChildState: ")
				.appendLine(this.m_childSetState.getName());
		buffer.append("DisplayLevel: ").appendInt(this.getDisplayLevel());
		return buffer.toString();
	};
	oFF.QValueHelpNode.prototype.getAbsoluteLevel = function() {
		return this.m_absoluteLevel;
	};
	oFF.QValueHelpVarDimMember = function() {
	};
	oFF.QValueHelpVarDimMember.prototype = new oFF.QModelComponent();
	oFF.QValueHelpVarDimMember.create = function(context, dimMemberVariable) {
		var newObj = new oFF.QValueHelpVarDimMember();
		newObj.setupValueHelp(context, dimMemberVariable);
		return newObj;
	};
	oFF.QValueHelpVarDimMember.prototype.m_dimMemberVariable = null;
	oFF.QValueHelpVarDimMember.prototype.m_valueHelpManager = null;
	oFF.QValueHelpVarDimMember.prototype.m_valueHelpDimension = null;
	oFF.QValueHelpVarDimMember.prototype.m_rootNode = null;
	oFF.QValueHelpVarDimMember.prototype.m_offsetRows = 0;
	oFF.QValueHelpVarDimMember.prototype.m_maxRows = 0;
	oFF.QValueHelpVarDimMember.prototype.setupValueHelp = function(context,
			dimMemberVariable) {
		var queryModel;
		var queryManager;
		var instanceId;
		oFF.QModelComponent.prototype.setupModelComponent.call(this, context,
				dimMemberVariable);
		this.m_dimMemberVariable = dimMemberVariable;
		queryModel = dimMemberVariable.getDimension().getQueryModel();
		if (oFF.notNull(queryModel)) {
			queryManager = queryModel.getQueryManager();
			instanceId = queryModel.getDataSource().getInstanceId();
			this.m_valueHelpManager = queryManager.cloneQueryManager();
			this.prepareQueryLayout(instanceId);
		}
		this.m_rootNode = oFF.QValueHelpNode.create(this, null, null, 0, -1);
	};
	oFF.QValueHelpVarDimMember.prototype.prepareQueryLayout = function(
			instanceId) {
		var originDim = this.m_dimMemberVariable.getDimension();
		var dimName = originDim.getName();
		var valueHelpModel = this.m_valueHelpManager.getQueryModel();
		var sys = this.m_valueHelpManager.getSystemDescription();
		var systemType = sys.getSystemType();
		var dataSource;
		var variableProcessor;
		var sortingManager;
		var sortingOperations;
		var cmds;
		var hierarchyName;
		var hierarchyVersion;
		var resultSetSorting;
		var selectorReadModes;
		var defaultValueBest;
		var defaultValueFallback;
		var readMode;
		var filter;
		var selectorContainer;
		var variableManagerBase;
		var excludeName;
		var variablesCopy;
		var iterator;
		var variable;
		var name;
		if (systemType.isTypeOf(oFF.SystemType.BW)) {
			dataSource = valueHelpModel.getDataSourceBase();
			dataSource.setInstanceId(instanceId);
			dataSource.setType(oFF.MetaObjectType.QUERY_VALUEHELP);
			variableProcessor = this.m_valueHelpManager.getVariableProcessor();
			variableProcessor
					.setVariableProcessorState(oFF.VariableProcessorState.VALUE_HELP);
		}
		sortingManager = valueHelpModel.getSortingManager();
		sortingOperations = sortingManager.getSortingOperations();
		sortingOperations.clear();
		cmds = valueHelpModel.getConvenienceCommands();
		cmds.clearAxis(oFF.AxisType.ROWS);
		cmds.clearAxis(oFF.AxisType.COLUMNS);
		this.m_valueHelpDimension = valueHelpModel.getDimensionByName(dimName);
		cmds.moveDimensionToAxis(dimName, oFF.AxisType.ROWS);
		if (this.m_valueHelpDimension.supportsHierarchy()) {
			hierarchyName = this.m_dimMemberVariable.getHierarchyName();
			hierarchyVersion = this.m_dimMemberVariable.getHierarchyVersion();
			if (oFF.isNull(hierarchyName)) {
				this.m_valueHelpDimension.setHierarchyActive(false);
			} else {
				this.m_valueHelpDimension.activateHierarchy(hierarchyName,
						hierarchyVersion, null);
			}
		}
		if (!this.m_valueHelpDimension.isHierarchyActive()) {
			resultSetSorting = this.m_valueHelpDimension.getResultSetSorting();
			resultSetSorting.setSortByKey();
			resultSetSorting.setDirection(oFF.XSortDirection.ASCENDING);
		}
		selectorReadModes = this.m_valueHelpDimension.getSupportedReadModes(
				oFF.QContextType.SELECTOR).getIterator();
		this.m_valueHelpDimension.clearReadModes(oFF.QContextType.RESULT_SET);
		defaultValueBest = null;
		defaultValueFallback = null;
		while (selectorReadModes.hasNext()) {
			defaultValueFallback = selectorReadModes.next();
			if (defaultValueFallback.isTypeOf(oFF.QMemberReadMode.BOOKED)) {
				if (oFF.isNull(defaultValueBest)) {
					defaultValueBest = defaultValueFallback;
				} else {
					if (defaultValueBest.getOrder() < defaultValueFallback
							.getOrder()) {
						defaultValueBest = defaultValueFallback;
					}
				}
			}
			this.m_valueHelpDimension.addSupportedReadMode(
					oFF.QContextType.RESULT_SET, defaultValueFallback);
		}
		oFF.XObjectExt.release(selectorReadModes);
		readMode = this.m_valueHelpDimension
				.getReadMode(oFF.QContextType.SELECTOR);
		if (oFF.isNull(readMode)) {
			if (oFF.notNull(defaultValueBest)) {
				readMode = defaultValueBest;
			} else {
				readMode = defaultValueFallback;
			}
		}
		this.m_valueHelpDimension.setReadMode(oFF.QContextType.RESULT_SET,
				readMode);
		filter = valueHelpModel.getFilterBase();
		selectorContainer = filter.getValuehelpFilter();
		filter.setDynamicFilter(selectorContainer);
		if (systemType.isTypeOf(oFF.SystemType.BW)) {
			variableManagerBase = valueHelpModel.getVariableManagerBase();
			excludeName = this.m_dimMemberVariable.getName();
			variablesCopy = oFF.XCollectionUtils
					.createListCopy(variableManagerBase.getVariables());
			iterator = variablesCopy.getIterator();
			while (iterator.hasNext()) {
				variable = iterator.next();
				name = variable.getName();
				if (!oFF.XString.isEqual(excludeName, name)) {
					variableManagerBase.removeVariable(name);
				}
			}
		}
		this.m_valueHelpManager.applyValueHelpCapabilities();
	};
	oFF.QValueHelpVarDimMember.prototype.releaseObject = function() {
		this.m_dimMemberVariable = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QValueHelpVarDimMember.prototype.setOffsetRows = function(offset) {
		this.m_offsetRows = offset;
		return null;
	};
	oFF.QValueHelpVarDimMember.prototype.getOffsetRows = function() {
		return this.m_offsetRows;
	};
	oFF.QValueHelpVarDimMember.prototype.setMaxRows = function(max) {
		this.m_maxRows = max;
		return null;
	};
	oFF.QValueHelpVarDimMember.prototype.getMaxRows = function() {
		return this.m_maxRows;
	};
	oFF.QValueHelpVarDimMember.prototype.hasMoreRowRecordsAvailable = function() {
		return false;
	};
	oFF.QValueHelpVarDimMember.prototype.getValueHelpDimension = function() {
		return this.m_valueHelpDimension;
	};
	oFF.QValueHelpVarDimMember.prototype.getDimension = function() {
		return this.m_dimMemberVariable.getDimension();
	};
	oFF.QValueHelpVarDimMember.prototype.getVariable = function() {
		return this.m_dimMemberVariable;
	};
	oFF.QValueHelpVarDimMember.prototype.process = oFF.noSupport;
	oFF.QValueHelpVarDimMember.prototype.getQueryManager = function() {
		return this.m_valueHelpManager;
	};
	oFF.QValueHelpVarDimMember.prototype.getValueHelpMembers = function() {
		return null;
	};
	oFF.QValueHelpVarDimMember.prototype.getRootNode = function() {
		return this.m_rootNode;
	};
	oFF.QVariableModelComponent = function() {
	};
	oFF.QVariableModelComponent.prototype = new oFF.QModelComponent();
	oFF.QVizDef = function() {
	};
	oFF.QVizDef.prototype = new oFF.QModelComponent();
	oFF.QVizDef.create = function(context) {
		var udh = new oFF.QVizDef();
		udh.setupVizDef(context);
		return udh;
	};
	oFF.QVizDef.prototype.m_dataBindingType = null;
	oFF.QVizDef.prototype.setupVizDef = function(context) {
		this.setupModelComponent(context, null);
	};
	oFF.QVizDef.prototype.getSemanticBindingType = function() {
		return this.m_dataBindingType;
	};
	oFF.QVizDef.prototype.setSemanticBindingType = function(type) {
		this.m_dataBindingType = type;
	};
	oFF.QVizManager = function() {
	};
	oFF.QVizManager.prototype = new oFF.QModelComponent();
	oFF.QVizManager.create = function(queryModel) {
		var object = new oFF.QVizManager();
		object.setupSortManager(queryModel);
		return object;
	};
	oFF.QVizManager.prototype.m_operations = null;
	oFF.QVizManager.prototype.m_vizDef = null;
	oFF.QVizManager.prototype.m_globalDef = null;
	oFF.QVizManager.prototype.setupSortManager = function(queryModel) {
		this.setupModelComponent(queryModel, queryModel);
		this.m_operations = oFF.QModelComponentList.createModelComponentList(
				queryModel, this, true, null);
	};
	oFF.QVizManager.prototype.copyVizManager = function(origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
	};
	oFF.QVizManager.prototype.releaseObject = function() {
		this.m_operations = oFF.XObjectExt.release(this.m_operations);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QVizManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.VIZ_MANAGER;
	};
	oFF.QVizManager.prototype.getVizDefinitions = function() {
		return this.m_operations;
	};
	oFF.QVizManager.prototype.getVizDef = function() {
		return this.m_vizDef;
	};
	oFF.QVizManager.prototype.setVizDef = function(vizDef) {
		this.m_vizDef = vizDef;
	};
	oFF.QVizManager.prototype.setGlobalDef = function(globalDef) {
		this.m_globalDef = globalDef;
	};
	oFF.QVizManager.prototype.getGlobalDef = function() {
		return this.m_globalDef;
	};
	oFF.QAttribute = function() {
	};
	oFF.QAttribute.prototype = new oFF.QFieldContainer();
	oFF.QAttribute.createAttribute = function(context, dimension) {
		var attribute = new oFF.QAttribute();
		attribute.setupFieldContainer(context, dimension);
		return attribute;
	};
	oFF.QAttribute.prototype.m_childAttributes = null;
	oFF.QAttribute.prototype.copyAttribute = function(origin) {
		var thisDimension;
		var thisContext;
		var size;
		var i;
		var origChild;
		var cloneChild;
		this.copyFieldContainer(origin);
		if (oFF.notNull(origin.m_childAttributes)) {
			thisDimension = this.getDimension();
			thisContext = this.getContext();
			size = origin.m_childAttributes.size();
			for (i = 0; i < size; i++) {
				origChild = origin.m_childAttributes.get(i);
				cloneChild = oFF.QAttribute.createAttribute(thisContext,
						thisDimension);
				cloneChild.copyAttribute(origChild);
				this.addChildAttribute(cloneChild);
			}
		}
	};
	oFF.QAttribute.prototype.addDefaultResultSetField = function(field) {
		oFF.QFieldContainer.prototype.addDefaultResultSetField
				.call(this, field);
		this.m_selectorFields.add(field);
		this.m_resultSetFields.add(field);
	};
	oFF.QAttribute.prototype.addField = function(field) {
		oFF.QFieldContainer.prototype.addField.call(this, field);
		field.setAttribute(this);
	};
	oFF.QAttribute.prototype.addFieldInternal = function(field) {
		oFF.QFieldContainer.prototype.addFieldInternal.call(this, field);
		field.setAttribute(this);
	};
	oFF.QAttribute.prototype.releaseObject = function() {
		this.m_childAttributes = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_childAttributes);
		oFF.QFieldContainer.prototype.releaseObject.call(this);
	};
	oFF.QAttribute.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.ATTRIBUTE;
	};
	oFF.QAttribute.prototype.getFieldLayoutType = function() {
		return oFF.FieldLayoutType.ATTRIBUTE_BASED;
	};
	oFF.QAttribute.prototype.getChildAttributes = function() {
		return this.m_childAttributes;
	};
	oFF.QAttribute.prototype.addChildAttribute = function(childAttribute) {
		if (oFF.isNull(this.m_childAttributes)) {
			this.m_childAttributes = oFF.XList.create();
		}
		this.m_childAttributes.add(childAttribute);
	};
	oFF.QModelComponentList = function() {
	};
	oFF.QModelComponentList.prototype = new oFF.QModelComponent();
	oFF.QModelComponentList.createModelComponentList = function(context,
			parentNode, hasChildOwnership, name) {
		var object = new oFF.QModelComponentList();
		object.setupOlapList(context, parentNode, hasChildOwnership, name);
		return object;
	};
	oFF.QModelComponentList.prototype.m_list = null;
	oFF.QModelComponentList.prototype.m_hasChildOwnership = false;
	oFF.QModelComponentList.prototype.copyModelComponentList = function(origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_hasChildOwnership = origin.m_hasChildOwnership;
	};
	oFF.QModelComponentList.prototype.setupOlapList = function(context,
			parentNode, hasChildOwnership, name) {
		this.setupModelComponentWithName(context, parentNode, name);
		this.m_hasChildOwnership = hasChildOwnership;
		this.m_list = this.createElementList();
	};
	oFF.QModelComponentList.prototype.releaseObject = function() {
		if (oFF.notNull(this.m_list)) {
			if (this.m_hasChildOwnership) {
				oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_list);
			}
			oFF.XObjectExt.release(this.m_list);
			this.m_list = null;
		}
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QModelComponentList.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.COMPONENT_LIST;
	};
	oFF.QModelComponentList.prototype.createElementList = function() {
		return oFF.XList.create();
	};
	oFF.QModelComponentList.prototype._setAsParent = function(element, parent) {
		if (this.m_hasChildOwnership) {
			element.setParent(parent);
		}
	};
	oFF.QModelComponentList.prototype.addInternal = function(element) {
		if (oFF.notNull(element)) {
			this._setAsParent(element, this);
			this.m_list.add(element);
		}
	};
	oFF.QModelComponentList.prototype.add = function(element) {
		if (oFF.notNull(element)) {
			this.addInternal(element);
			this.notifyNodeChanged();
		}
	};
	oFF.QModelComponentList.prototype.addAll = function(elements) {
		var theList;
		var len;
		var i;
		if (oFF.XCollectionUtils.hasElements(elements) && elements !== this) {
			theList = elements.getValuesAsReadOnlyList();
			len = theList.size();
			for (i = 0; i < len; i++) {
				this.addInternal(theList.get(i));
			}
			this.notifyNodeChanged();
		}
	};
	oFF.QModelComponentList.prototype.set = function(index, element) {
		var old = this.m_list.get(index);
		this.m_list.set(index, element);
		if (this.m_hasChildOwnership) {
			element.setParent(this);
			old.setParent(null);
		}
		this.notifyNodeChanged();
	};
	oFF.QModelComponentList.prototype.insertInternal = function(index, element) {
		this._setAsParent(element, this);
		this.m_list.insert(index, element);
	};
	oFF.QModelComponentList.prototype.insert = function(index, element) {
		this.insertInternal(index, element);
		this.notifyNodeChanged();
	};
	oFF.QModelComponentList.prototype.removeAt = function(index) {
		var old = this.m_list.removeAt(index);
		if (oFF.notNull(old)) {
			this._setAsParent(old, null);
			this.notifyNodeChanged();
		}
		return old;
	};
	oFF.QModelComponentList.prototype.removeInternal = function(element) {
		this._setAsParent(element, null);
		this.m_list.removeElement(element);
	};
	oFF.QModelComponentList.prototype.removeElement = function(element) {
		if (oFF.notNull(element)) {
			this.removeInternal(element);
			this.notifyNodeChanged();
		}
		return element;
	};
	oFF.QModelComponentList.prototype.clear = function() {
		var len = this.m_list.size();
		var i;
		var object;
		var nodeContext;
		if (len > 0) {
			if (this.m_hasChildOwnership) {
				for (i = 0; i < len; i++) {
					object = this.m_list.get(i);
					nodeContext = object;
					nodeContext.setParent(null);
				}
			}
			this.m_list.clear();
			this.notifyNodeChanged();
		}
	};
	oFF.QModelComponentList.prototype.setContext = function(context) {
		var size;
		var i;
		var element;
		oFF.QModelComponent.prototype.setContext.call(this, context);
		if (this.m_hasChildOwnership) {
			size = this.m_list.size();
			for (i = 0; i < size; i++) {
				element = this.m_list.get(i);
				element.setContext(context);
			}
		}
	};
	oFF.QModelComponentList.prototype.moveElement = function(fromIndex, toIndex) {
		if (fromIndex !== toIndex) {
			this.m_list.moveElement(fromIndex, toIndex);
			this.notifyNodeChanged();
		}
	};
	oFF.QModelComponentList.prototype.sortByComparator = function(comparator) {
		this.m_list.sortByComparator(comparator);
		this.notifyNodeChanged();
	};
	oFF.QModelComponentList.prototype.sortByDirection = function(sortDirection) {
		this.m_list.sortByDirection(sortDirection);
		this.notifyNodeChanged();
	};
	oFF.QModelComponentList.prototype.get = function(index) {
		return this.m_list.get(index);
	};
	oFF.QModelComponentList.prototype.getIndex = function(element) {
		return this.m_list.getIndex(element);
	};
	oFF.QModelComponentList.prototype.size = function() {
		return this.m_list.size();
	};
	oFF.QModelComponentList.prototype.isEmpty = function() {
		return this.m_list.isEmpty();
	};
	oFF.QModelComponentList.prototype.hasElements = function() {
		return this.m_list.hasElements();
	};
	oFF.QModelComponentList.prototype.getIterator = function() {
		return this.m_list.getIterator();
	};
	oFF.QModelComponentList.prototype.getValuesAsReadOnlyList = function() {
		return this;
	};
	oFF.QModelComponentList.prototype.contains = function(element) {
		return this.m_list.contains(element);
	};
	oFF.QModelComponentList.prototype.createListCopy = function() {
		return this.m_list.createListCopy();
	};
	oFF.QModelComponentList.prototype.sublist = function(beginIndex, endIndex) {
		return this.m_list.sublist(beginIndex, endIndex);
	};
	oFF.QModelComponentList.prototype.createArrayCopy = function() {
		return this.m_list.createArrayCopy();
	};
	oFF.QModelComponentList.prototype.isComponentNode = function() {
		return true;
	};
	oFF.QModelComponentList.prototype.getIndexedChildren = function() {
		return oFF.XUniversalIterator.create(this);
	};
	oFF.QDimension = function() {
	};
	oFF.QDimension.prototype = new oFF.QModelComponent();
	oFF.QDimension._create = function(context, parentNode) {
		var dim = new oFF.QDimension();
		dim.setupDimension(context, parentNode);
		return dim;
	};
	oFF.QDimension.prototype.m_metadata = null;
	oFF.QDimension.prototype.m_axis = null;
	oFF.QDimension.prototype.m_fieldLayoutType = null;
	oFF.QDimension.prototype.m_selectorFieldLayoutType = null;
	oFF.QDimension.prototype.m_fieldContainer = null;
	oFF.QDimension.prototype.m_attributeContainer = null;
	oFF.QDimension.prototype.m_hierarchyNavigationDeltaMode = false;
	oFF.QDimension.prototype.m_isIgnoredOnExport = false;
	oFF.QDimension.prototype.m_supportedSortTypes = null;
	oFF.QDimension.prototype.m_skip = 0;
	oFF.QDimension.prototype.m_top = 0;
	oFF.QDimension.prototype.m_resultStructureController = null;
	oFF.QDimension.prototype.m_resultMemberTotal = null;
	oFF.QDimension.prototype.m_resultMemberTotalIncluded = null;
	oFF.QDimension.prototype.m_resultMemberTotalRemaining = null;
	oFF.QDimension.prototype.m_defaultMemberValue = null;
	oFF.QDimension.prototype.m_dimensionVisibility = null;
	oFF.QDimension.prototype.m_readModes = null;
	oFF.QDimension.prototype.m_hierarchyManager = null;
	oFF.QDimension.prototype.m_isCumulative = false;
	oFF.QDimension.prototype.m_nameValuePairs = null;
	oFF.QDimension.prototype.m_selector = null;
	oFF.QDimension.prototype.m_allStructureMembers = null;
	oFF.QDimension.prototype.m_structureLayout = null;
	oFF.QDimension.prototype.m_alternativeFieldValues = null;
	oFF.QDimension.prototype.m_skipMetadataValidationOnRepoImport = false;
	oFF.QDimension.prototype.cloneOlapComponent = function(context, parent) {
		var clone = oFF.QDimension._create(context, null);
		clone.copyDimension(this);
		clone.copyDimensionMember(this);
		return clone;
	};
	oFF.QDimension.prototype.copyDimension = function(origin) {
		var metadata;
		var queryModel;
		var contextName;
		var originAxis;
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		metadata = origin.getMetadata();
		if (oFF.notNull(metadata)) {
			this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(this
					.getOlapEnv().getDimensionMetadataByKey(
							origin.getMetadata().getCacheKey()));
			queryModel = origin.getQueryModelBase();
			if (oFF.isNull(this.m_metadata)
					&& queryModel.isPartialResponse(queryModel
							.getQueryManagerBase())) {
				this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(metadata);
			}
		}
		this.setDimensionType(origin.getDimensionType());
		this.m_fieldContainer.copyFieldContainer(origin.m_fieldContainer);
		this.m_attributeContainer
				.copyAttributeContainer(origin.m_attributeContainer);
		this.m_fieldLayoutType = origin.m_fieldLayoutType;
		this.m_selectorFieldLayoutType = origin.m_selectorFieldLayoutType;
		this.m_hierarchyNavigationDeltaMode = origin.m_hierarchyNavigationDeltaMode;
		this.m_skip = origin.m_skip;
		this.m_top = origin.m_top;
		this.m_resultStructureController
				.copyResultStructureController(origin.m_resultStructureController);
		if (oFF.notNull(origin.m_resultMemberTotal)) {
			this.createResultMember(oFF.MemberType.RESULT);
		}
		if (oFF.notNull(origin.m_resultMemberTotalIncluded)) {
			this.createResultMember(oFF.MemberType.CONDITION_RESULT);
		}
		if (oFF.notNull(origin.m_resultMemberTotalRemaining)) {
			this.createResultMember(oFF.MemberType.CONDITION_OTHERS_RESULT);
		}
		this.m_defaultMemberValue = origin.m_defaultMemberValue;
		this.m_dimensionVisibility = origin.m_dimensionVisibility;
		contextName = oFF.QContextType.RESULT_SET.getName();
		this.m_readModes.getByKey(contextName).copyDimensionReadMode(
				origin.m_readModes.getByKey(contextName));
		contextName = oFF.QContextType.SELECTOR.getName();
		this.m_readModes.getByKey(contextName).copyDimensionReadMode(
				origin.m_readModes.getByKey(contextName));
		contextName = oFF.QContextType.VARIABLE.getName();
		this.m_readModes.getByKey(contextName).copyDimensionReadMode(
				origin.m_readModes.getByKey(contextName));
		this.m_isCumulative = origin.m_isCumulative;
		if (oFF.notNull(origin.m_nameValuePairs)) {
			this.m_nameValuePairs = origin.m_nameValuePairs
					.createMapByStringCopy();
		}
		this.m_isIgnoredOnExport = origin.m_isIgnoredOnExport;
		this.m_hierarchyManager.copyHierarchy(origin.getHierarchyManager());
		this.m_skipMetadataValidationOnRepoImport = origin.m_skipMetadataValidationOnRepoImport;
		if (oFF.notNull(origin.m_supportedSortTypes)) {
			this.m_supportedSortTypes = origin.m_supportedSortTypes
					.createSetCopy();
		}
		originAxis = origin.getAxis();
		if (oFF.notNull(originAxis)) {
			this.setAxis(this.getQueryModel().getAxis(originAxis.getType()));
		}
	};
	oFF.QDimension.prototype.copyDimensionMember = function(origin) {
		var context;
		var i;
		var size;
		var origMeasure;
		var originType;
		var cloneBasicMeasure;
		var cloneFormulaMeasure;
		var cloneRestrictedMeasure;
		var newSortedList;
		var n;
		var currentMemberOrigin;
		var foundMember;
		if (oFF.notNull(origin.m_allStructureMembers)) {
			context = this.getContext();
			size = origin.m_allStructureMembers.size();
			for (i = 0; i < size; i++) {
				origMeasure = origin.m_allStructureMembers.get(i);
				originType = origMeasure.getMemberType();
				if (originType === oFF.MemberType.BASIC_MEASURE) {
					cloneBasicMeasure = oFF.QBasicMeasure._createBasicMeasure(
							context, this);
					cloneBasicMeasure.copyBasicMeasure(origMeasure);
					this.addMeasureInternal(cloneBasicMeasure);
				} else {
					if (originType === oFF.MemberType.FORMULA) {
						cloneFormulaMeasure = oFF.QFormulaMeasure
								._createFormulaMeasure(context, this);
						cloneFormulaMeasure.copyFormulaMeasure(origMeasure);
						this.addMeasureInternal(cloneFormulaMeasure);
						this.addQueryDataCells(cloneFormulaMeasure);
					} else {
						if (originType === oFF.MemberType.RESTRICTED_MEASURE) {
							cloneRestrictedMeasure = oFF.QRestrictedMeasure
									._createRestrictedMeasure(context, this);
							cloneRestrictedMeasure
									.copyRestrictedMeasure(origMeasure);
							this.addMeasureInternal(cloneRestrictedMeasure);
							this.addQueryDataCells(cloneRestrictedMeasure);
						}
					}
				}
			}
			if (origin.m_structureLayout.isEmpty()) {
				this.m_structureLayout.clear();
			}
			newSortedList = oFF.QModelComponentWithNameList
					.createModelComponentWithNameList(context, this, false,
							"Structure Layout");
			for (n = 0; n < origin.m_structureLayout.size(); n++) {
				currentMemberOrigin = origin.m_structureLayout.get(n);
				foundMember = this.m_structureLayout
						.getByKey(currentMemberOrigin.getName());
				if (oFF.notNull(foundMember)) {
					newSortedList.addInternal(foundMember);
				}
			}
			this.m_structureLayout = newSortedList;
			if (oFF.notNull(origin.m_alternativeFieldValues)) {
				this.m_alternativeFieldValues = origin.m_alternativeFieldValues
						.createMapByStringCopy();
			}
		}
	};
	oFF.QDimension.prototype.setupDimension = function(context, parentNode) {
		oFF.QModelComponent.prototype.setupModelComponent.call(this, context,
				parentNode);
		this.m_hierarchyManager = oFF.QHierarchyManager.create(context, this);
		this.m_selectorFieldLayoutType = oFF.FieldLayoutType.FIELD_BASED;
		this.m_fieldLayoutType = oFF.FieldLayoutType.FIELD_BASED;
		this.m_fieldContainer = oFF.QFieldContainer.create(context, this);
		this.m_attributeContainer = oFF.QAttributeContainer.create(context,
				this);
		this.m_readModes = oFF.XHashMapByString.create();
		this.m_readModes.put(oFF.QContextType.RESULT_SET.getName(),
				oFF.QDimensionReadMode.create());
		this.m_readModes.put(oFF.QContextType.SELECTOR.getName(),
				oFF.QDimensionReadMode.create());
		this.m_readModes.put(oFF.QContextType.VARIABLE.getName(),
				oFF.QDimensionReadMode.create());
		this.m_resultStructureController = oFF.QResultStructureController
				._create(context, this, oFF.QModelLevel.DIMENSIONS);
	};
	oFF.QDimension.prototype.setName = function(name) {
		if (oFF.notNull(this.m_readModes)) {
			this.m_readModes.getByKey(oFF.QContextType.RESULT_SET.getName())
					.setDimensionName(name);
			this.m_readModes.getByKey(oFF.QContextType.SELECTOR.getName())
					.setDimensionName(name);
			this.m_readModes.getByKey(oFF.QContextType.VARIABLE.getName())
					.setDimensionName(name);
		}
		oFF.QModelComponent.prototype.setName.call(this, name);
	};
	oFF.QDimension.prototype.releaseObject = function() {
		var memberSize;
		var measureIdx;
		var structureMember;
		var metadata;
		this.m_fieldLayoutType = null;
		this.m_selectorFieldLayoutType = null;
		if (this.supportsCustomMembers()) {
			memberSize = this.m_allStructureMembers.size();
			for (measureIdx = 0; measureIdx < memberSize; measureIdx++) {
				structureMember = this.m_allStructureMembers.get(measureIdx);
				if (structureMember.getMemberType() === oFF.MemberType.FORMULA
						|| structureMember.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE) {
					oFF.XObjectExt.release(structureMember);
				}
			}
		}
		this.m_alternativeFieldValues = oFF.XObjectExt
				.release(this.m_alternativeFieldValues);
		this.m_resultStructureController = oFF.XObjectExt
				.release(this.m_resultStructureController);
		this.m_resultMemberTotal = oFF.XObjectExt
				.release(this.m_resultMemberTotal);
		this.m_resultMemberTotalIncluded = oFF.XObjectExt
				.release(this.m_resultMemberTotalIncluded);
		this.m_resultMemberTotalRemaining = oFF.XObjectExt
				.release(this.m_resultMemberTotalRemaining);
		this.m_selector = oFF.XObjectExt.release(this.m_selector);
		this.m_fieldContainer = oFF.XObjectExt.release(this.m_fieldContainer);
		this.m_attributeContainer = oFF.XObjectExt
				.release(this.m_attributeContainer);
		this.m_readModes = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_readModes);
		this.m_nameValuePairs = oFF.XObjectExt.release(this.m_nameValuePairs);
		this.m_allStructureMembers = oFF.XObjectExt
				.release(this.m_allStructureMembers);
		this.m_structureLayout = oFF.XObjectExt.release(this.m_structureLayout);
		this.m_supportedSortTypes = oFF.XObjectExt
				.release(this.m_supportedSortTypes);
		this.m_defaultMemberValue = null;
		this.m_dimensionVisibility = null;
		metadata = this.getMetadata();
		if (oFF.notNull(metadata)) {
			if (!metadata.isIncompleteDimensionMetadata()) {
				this.getOlapEnv().releaseDimensionMetadataByKey(
						metadata.getCacheKey());
			}
		}
		this.m_metadata = oFF.XObjectExt.release(this.m_metadata);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QDimension.prototype.setAxis = function(axis) {
		this.m_axis = oFF.XWeakReferenceUtil.getWeakRef(axis);
	};
	oFF.QDimension.prototype.getAxis = function() {
		return this.getAxisBase();
	};
	oFF.QDimension.prototype.getAxisType = function() {
		return this.getAxisBase().getType();
	};
	oFF.QDimension.prototype.getAxisBase = function() {
		if (this.isUdhActiveInResultset()) {
			return this.getUniversalDisplayHierarchy()
					.getHierarchyDedicatedAxis();
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_axis);
	};
	oFF.QDimension.prototype.getIndexOnAxis = function() {
		var udhDimensions;
		var axisDimensions;
		var size;
		var i;
		if (this.isUdhActiveInResultset()) {
			udhDimensions = this.getUniversalDisplayHierarchy()
					.getDimensionNames();
			axisDimensions = this.getAxis().getDimensionNames()
					.createListOfStringCopy();
			size = axisDimensions.size();
			for (i = 0; i < size; i++) {
				if (udhDimensions.contains(axisDimensions.get(i))) {
					return i;
				}
			}
		}
		return this.getAxis().getIndex(this);
	};
	oFF.QDimension.prototype.isUdhActiveInResultset = function() {
		var queryManager = this.getQueryManager();
		var udh = this.getUniversalDisplayHierarchy();
		return oFF.notNull(udh) && udh.isActive() && oFF.notNull(queryManager)
				&& queryManager.getResultSetSyncState().isInSync();
	};
	oFF.QDimension.prototype.getResultSetFields = function() {
		return this.m_fieldContainer.getResultSetFields();
	};
	oFF.QDimension.prototype.getFieldsExt = function(context) {
		return this.m_fieldContainer.getFieldsExt(context);
	};
	oFF.QDimension.prototype.getFields = function() {
		return this.m_fieldContainer.getFields();
	};
	oFF.QDimension.prototype.getFieldIterator = function() {
		return this.m_fieldContainer.getFieldIterator();
	};
	oFF.QDimension.prototype.getFieldByName = function(name) {
		return this.m_fieldContainer.getFieldByName(name);
	};
	oFF.QDimension.prototype.getFieldByNameOrAlias = function(name) {
		return this.m_fieldContainer.getFieldByNameOrAlias(name);
	};
	oFF.QDimension.prototype.getFirstFieldByType = function(type) {
		return this.m_fieldContainer.getFirstFieldByType(type);
	};
	oFF.QDimension.prototype.addNewField = function(type, name, text) {
		return this.m_fieldContainer.addNewField(type, name, text);
	};
	oFF.QDimension.prototype.addField = function(field) {
		this.m_fieldContainer.addField(field);
	};
	oFF.QDimension.prototype.addFieldInternal = function(field) {
		this.m_fieldContainer.addFieldInternal(field);
	};
	oFF.QDimension.prototype.getFieldByPresentationType = function(
			presentationType) {
		var mainAttribute = this.getMainAttribute();
		if (oFF.isNull(mainAttribute)) {
			return this.m_fieldContainer
					.getFieldByPresentationType(presentationType);
		}
		return mainAttribute.getFieldByPresentationType(presentationType);
	};
	oFF.QDimension.prototype.getKeyField = function() {
		return this.m_fieldContainer.getKeyField();
	};
	oFF.QDimension.prototype.getKeyFieldExt = function(context) {
		return this.m_fieldContainer.getKeyFieldExt(context);
	};
	oFF.QDimension.prototype.getTextField = function() {
		return this.m_fieldContainer.getTextField();
	};
	oFF.QDimension.prototype.getDisplayKeyField = function() {
		return this.m_fieldContainer.getDisplayKeyField();
	};
	oFF.QDimension.prototype.setFlatKeyField = function(field) {
		this.m_fieldContainer.setFlatKeyField(field);
	};
	oFF.QDimension.prototype.setFlatTextField = function(field) {
		this.m_fieldContainer.setFlatTextField(field);
	};
	oFF.QDimension.prototype.setFlatDisplayKeyField = function(field) {
		this.m_fieldContainer.setFlatDisplayKeyField(field);
	};
	oFF.QDimension.prototype.setHierachyKeyField = function(field) {
		this.m_fieldContainer.setHierachyKeyField(field);
	};
	oFF.QDimension.prototype.setHierarchyTextField = function(field) {
		this.m_fieldContainer.setHierarchyTextField(field);
	};
	oFF.QDimension.prototype.setHierarchyDisplayKeyField = function(field) {
		this.m_fieldContainer.setHierarchyDisplayKeyField(field);
	};
	oFF.QDimension.prototype.getFlatKeyField = function() {
		return this.m_fieldContainer.getFlatKeyField();
	};
	oFF.QDimension.prototype.getFlatTextField = function() {
		return this.m_fieldContainer.getFlatTextField();
	};
	oFF.QDimension.prototype.getFlatDisplayKeyField = function() {
		return this.m_fieldContainer.getFlatDisplayKeyField();
	};
	oFF.QDimension.prototype.getHierarchyKeyField = function() {
		return this.m_fieldContainer.getHierarchyKeyField();
	};
	oFF.QDimension.prototype.getHierarchyTextField = function() {
		return this.m_fieldContainer.getHierarchyTextField();
	};
	oFF.QDimension.prototype.getHierarchyDisplayKeyField = function() {
		return this.m_fieldContainer.getHierarchyDisplayKeyField();
	};
	oFF.QDimension.prototype.findKeyField = function() {
		var field = this.getKeyField();
		oFF.XObjectExt.checkNotNull(field, oFF.XStringUtils.concatenate2(
				"Cannot find key field for dimension ", this.getName()));
		return field;
	};
	oFF.QDimension.prototype.getDimensionMember = function(name) {
		var structureMember;
		if (this.supportsBasicStructureMembers()) {
			structureMember = this.m_allStructureMembers.getByKey(name);
			if (oFF.notNull(structureMember)
					|| this.getDimensionType() !== oFF.DimensionType.ACCOUNT) {
				return structureMember;
			}
		}
		return this.getDimensionMemberWithFormat(name, null);
	};
	oFF.QDimension.prototype.getDimensionMemberWithValue = function(name, field) {
		var valueType = field.getValueType();
		var dimensionMember;
		if (!valueType.isTypeOf(name.getValueType())) {
			throw oFF.XException
					.createIllegalStateException("incompatible value types");
		}
		dimensionMember = oFF.QDimensionMember.createDimensionMember(this
				.getContext(), this);
		oFF.XObjectExt.checkNotNull(dimensionMember.createAndAddFieldWithValue(
				field, name), "internal error");
		return dimensionMember;
	};
	oFF.QDimension.prototype.newDimensionMemberEmpty = function() {
		return oFF.QDimensionMember.createDimensionMember(this.getContext(),
				this);
	};
	oFF.QDimension.prototype.getDimensionMemberWithFormat = function(name,
			valueFormat) {
		var dimensionMember = oFF.QDimensionMember.createDimensionMember(this
				.getContext(), this);
		var field = this.findKeyField();
		var valueType = field.getValueType();
		var dateValue;
		var timeValue;
		var dateTimeValue;
		var intValue;
		var longValue;
		var doubleValue;
		dimensionMember.setName(name);
		if (valueType === oFF.XValueType.STRING) {
			dimensionMember.createAndAddFieldValueWithString(field, name);
		} else {
			if (valueType === oFF.XValueType.DATE) {
				dateValue = oFF.XDate.createDateFromString(name, valueFormat);
				dimensionMember
						.createAndAddFieldValueWithDate(field, dateValue);
			} else {
				if (valueType === oFF.XValueType.TIME) {
					timeValue = oFF.XTime.createTimeFromString(name,
							valueFormat);
					dimensionMember.createAndAddFieldValueWithTime(field,
							timeValue);
				} else {
					if (valueType === oFF.XValueType.DATE_TIME) {
						dateTimeValue = oFF.XDateTime.createDateTimeFromString(
								name, valueFormat);
						dimensionMember.createAndAddFieldValueWithDateTime(
								field, dateTimeValue);
					} else {
						if (valueType === oFF.XValueType.INTEGER) {
							intValue = oFF.XInteger.convertFromString(name);
							dimensionMember.createAndAddFieldValueWithInteger(
									field, intValue);
						} else {
							if (valueType === oFF.XValueType.LONG) {
								longValue = oFF.XLong.convertFromString(name);
								dimensionMember.createAndAddFieldValueWithLong(
										field, longValue);
							} else {
								if (valueType === oFF.XValueType.DOUBLE
										|| valueType === oFF.XValueType.DECIMAL_FLOAT) {
									doubleValue = oFF.XDouble
											.convertFromString(name);
									dimensionMember
											.createAndAddFieldValueWithDouble(
													field, doubleValue);
								} else {
									throw oFF.XException
											.createIllegalStateException(oFF.XStringUtils
													.concatenate2(
															"Value type not supported: ",
															valueType.getName()));
								}
							}
						}
					}
				}
			}
		}
		return dimensionMember;
	};
	oFF.QDimension.prototype.getDimensionMemberByInt = function(keyValue) {
		return this.getDimensionMemberWithFormat(oFF.XInteger
				.convertToString(keyValue), null);
	};
	oFF.QDimension.prototype.getDimensionMemberByLong = function(keyValue) {
		return this.getDimensionMemberWithFormat(oFF.XLong
				.convertToString(keyValue), null);
	};
	oFF.QDimension.prototype.getDimensionMemberByDouble = function(keyValue) {
		return this.getDimensionMemberWithFormat(oFF.XDouble
				.convertToString(keyValue), null);
	};
	oFF.QDimension.prototype.getDimensionMemberByDate = function(keyValue) {
		return this.getDimensionMemberWithFormat(keyValue.toIsoFormat(),
				oFF.XValueFormat.ISO_DATE);
	};
	oFF.QDimension.prototype.getResultMember = function(type) {
		if (type === oFF.MemberType.RESULT
				&& oFF.notNull(this.m_resultMemberTotal)) {
			return this.m_resultMemberTotal;
		}
		if (type === oFF.MemberType.CONDITION_RESULT
				&& oFF.notNull(this.m_resultMemberTotalIncluded)) {
			return this.m_resultMemberTotalIncluded;
		}
		if (type === oFF.MemberType.CONDITION_OTHERS_RESULT
				&& oFF.notNull(this.m_resultMemberTotalRemaining)) {
			return this.m_resultMemberTotalRemaining;
		}
		return this.createResultMember(type);
	};
	oFF.QDimension.prototype.createResultMember = function(type) {
		if (type === oFF.MemberType.RESULT) {
			if (oFF.isNull(this.m_resultMemberTotal)) {
				this.m_resultMemberTotal = oFF.QDimensionMemberResult
						.createQDimensionMember(this.getContext(), this, type);
			}
			return this.m_resultMemberTotal;
		}
		if (type === oFF.MemberType.CONDITION_RESULT) {
			if (oFF.isNull(this.m_resultMemberTotalIncluded)) {
				this.m_resultMemberTotalIncluded = oFF.QDimensionMemberResult
						.createQDimensionMember(this.getContext(), this, type);
			}
			return this.m_resultMemberTotalIncluded;
		}
		if (type === oFF.MemberType.CONDITION_OTHERS_RESULT) {
			if (oFF.isNull(this.m_resultMemberTotalRemaining)) {
				this.m_resultMemberTotalRemaining = oFF.QDimensionMemberResult
						.createQDimensionMember(this.getContext(), this, type);
			}
			return this.m_resultMemberTotalRemaining;
		}
		return null;
	};
	oFF.QDimension.prototype.createFilterList = function() {
		var hierarchyName = null;
		if (this.isHierarchyActive()) {
			hierarchyName = this.getHierarchyName();
		}
		return oFF.QFilterCartesianList._create(this.getContext(), null, this
				.getKeyField(), hierarchyName);
	};
	oFF.QDimension.prototype.getResultSetSorting = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return null;
		}
		return queryModel.getSortingManager().getDimensionSorting(this, true);
	};
	oFF.QDimension.prototype.hasSorting = function() {
		var queryModel = this.getQueryModel();
		var sortManager;
		var dimSorting;
		if (oFF.isNull(queryModel)) {
			return false;
		}
		sortManager = queryModel.getSortingManager();
		dimSorting = sortManager.getDimensionSorting(this, false);
		return oFF.notNull(dimSorting);
	};
	oFF.QDimension.prototype.supportsSorting = function(sortType) {
		var queryModel;
		var sortManager;
		if (oFF.notNull(this.m_supportedSortTypes) && oFF.notNull(sortType)
				&& !this.m_supportedSortTypes.contains(sortType)) {
			return false;
		}
		queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return false;
		}
		sortManager = queryModel.getSortingManager();
		return sortManager.supportsDimensionSorting(null, sortType);
	};
	oFF.QDimension.prototype.setSupportedSortTypes = function(sortTypes) {
		this.m_supportedSortTypes = sortTypes;
	};
	oFF.QDimension.prototype.getSupportedSortTypes = function() {
		return this.m_supportedSortTypes;
	};
	oFF.QDimension.prototype.getSupportedReadModes = function(context) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		return readModeContainer.getSupportedReadModes();
	};
	oFF.QDimension.prototype.supportsReadMode = function(context, readMode) {
		return this.getSupportedReadModes(context).contains(readMode);
	};
	oFF.QDimension.prototype.getReadModeDefault = function(context) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		return readModeContainer.getDefaultReadMode();
	};
	oFF.QDimension.prototype.getReadMode = function(context) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		return readModeContainer.getActiveReadMode();
	};
	oFF.QDimension.prototype.setReadMode = function(context, mode) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		readModeContainer.setActiveReadMode(mode);
		if (context === oFF.QContextType.RESULT_SET) {
			this.notifyNodeChanged();
		}
	};
	oFF.QDimension.prototype.setReadModeGraceful = function(context, mode) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		var bestReadMode = readModeContainer.determineBestReadMode(mode);
		readModeContainer.setActiveReadMode(bestReadMode);
		if (context === oFF.QContextType.RESULT_SET) {
			this.notifyNodeChanged();
		}
		return bestReadMode;
	};
	oFF.QDimension.prototype.determineBestReadMode = function(context, mode) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		return readModeContainer.determineBestReadMode(mode);
	};
	oFF.QDimension.prototype.addSupportedReadMode = function(context, mode) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		readModeContainer.addSupportedReadMode(mode);
	};
	oFF.QDimension.prototype.clearReadModes = function(context) {
		this.m_readModes.getByKey(context.getName()).clearReadmode();
	};
	oFF.QDimension.prototype.setReadModeDefault = function(context, mode) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		readModeContainer.setDefaultReadMode(mode);
	};
	oFF.QDimension.prototype.isCompound = function() {
		var metadata = this.getMetadataBase();
		var isNotCompoundField;
		if (metadata.isCompoundBase() === oFF.TriStateBool._DEFAULT) {
			isNotCompoundField = this
					.getFirstFieldByType(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND) !== null;
			if (!isNotCompoundField) {
				isNotCompoundField = this
						.getFirstFieldByType(oFF.PresentationType.KEY_NOT_COMPOUND) !== null;
			}
			if (!isNotCompoundField) {
				isNotCompoundField = this
						.getFirstFieldByType(oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT) !== null;
			}
			metadata.setIsCompoundBase(oFF.TriStateBool
					.lookup(isNotCompoundField));
		}
		return metadata.isCompound();
	};
	oFF.QDimension.prototype.getSupportedAxesTypes = function() {
		return this.getMetadata().getSupportedAxesTypes();
	};
	oFF.QDimension.prototype.supportsAxis = function(axisType) {
		return this.getMetadata().supportsAxis(axisType);
	};
	oFF.QDimension.prototype.isSelectable = function() {
		var axis = this.getAxis();
		return oFF.isNull(axis) ? true : this.getMetadata().isSelectable(
				axis.getType());
	};
	oFF.QDimension.prototype.getDimensionType = function() {
		var metadata = this.getMetadata();
		if (oFF.isNull(metadata)) {
			return oFF.DimensionType.DIMENSION;
		}
		return metadata.getDimensionType();
	};
	oFF.QDimension.prototype.setDimensionType = function(type) {
		if (oFF.notNull(type)) {
			if (this.isStructure()) {
				this.m_resultStructureController.setSupportsTotals(false);
			}
			if (this.supportsCustomMembers()) {
				this.m_allStructureMembers = oFF.XListOfNameObject.create();
				this.m_structureLayout = oFF.QModelComponentWithNameList
						.createModelComponentWithNameList(this.getContext(),
								this, false, "Structure Layout");
			}
		}
	};
	oFF.QDimension.prototype.getOlapComponentType = function() {
		return this.getMetadata().getDimensionType();
	};
	oFF.QDimension.prototype.getTotalsStructure = function() {
		return this.m_resultStructureController.getTotalsStructure();
	};
	oFF.QDimension.prototype.setResultVisibility = function(visibility) {
		this.m_resultStructureController.setResultVisibility(visibility);
	};
	oFF.QDimension.prototype.setResultVisibilityByElement = function(element,
			visibility) {
		this.m_resultStructureController.setResultVisibilityByElement(element,
				visibility);
	};
	oFF.QDimension.prototype.setResultVisibilityByElementAndAlignment = function(
			alignment, element, visibility) {
		this.m_resultStructureController
				.setResultVisibilityByElementAndAlignment(alignment, element,
						visibility);
	};
	oFF.QDimension.prototype.getResultVisibility = function() {
		return this.m_resultStructureController.getResultVisibility();
	};
	oFF.QDimension.prototype.getResultVisibilitySettings = function() {
		return this.m_resultStructureController.getResultVisibilitySettings();
	};
	oFF.QDimension.prototype.clearResultVisibilitySettings = function() {
		this.m_resultStructureController.clearResultVisibilitySettings();
	};
	oFF.QDimension.prototype.getResultVisibilityByElement = function(element) {
		return this.m_resultStructureController
				.getResultVisibilityByElement(element);
	};
	oFF.QDimension.prototype.getResultVisibilityByElementAndAlignment = function(
			alignment, element) {
		return this.m_resultStructureController
				.getResultVisibilityByElementAndAlignment(alignment, element);
	};
	oFF.QDimension.prototype.setResultAlignment = function(alignment) {
		this.m_resultStructureController.setResultAlignment(alignment);
	};
	oFF.QDimension.prototype.getResultAlignment = function() {
		return this.m_resultStructureController.getResultAlignment();
	};
	oFF.QDimension.prototype.getAdvancedResultStructure = function() {
		return this.m_resultStructureController.getAdvancedResultStructure();
	};
	oFF.QDimension.prototype.getSupportedResultAlignmentLevel = function() {
		return this.m_resultStructureController
				.getSupportedResultAlignmentLevel();
	};
	oFF.QDimension.prototype.getSupportedResultVisibilityLevel = function() {
		return this.m_resultStructureController
				.getSupportedResultVisibilityLevel();
	};
	oFF.QDimension.prototype.getSupportedResultAlignments = function() {
		return this.m_resultStructureController.getSupportedResultAlignments();
	};
	oFF.QDimension.prototype.supportsResultAlignmentType = function(
			resultAlignment) {
		return this.m_resultStructureController
				.supportsResultAlignmentType(resultAlignment);
	};
	oFF.QDimension.prototype.supportsConditionalResults = function() {
		return this.m_resultStructureController.supportsConditionalResults();
	};
	oFF.QDimension.prototype.getSupportedConditionalResults = function() {
		return this.m_resultStructureController
				.getSupportedConditionalResults();
	};
	oFF.QDimension.prototype.getResultStructureReorderingCapability = function() {
		return this.m_resultStructureController
				.getResultStructureReorderingCapability();
	};
	oFF.QDimension.prototype.supportsConditionalResultVisibility = function() {
		return this.m_resultStructureController
				.supportsConditionalResultVisibility();
	};
	oFF.QDimension.prototype.getParentResultStructureController = function() {
		var axis = this.getAxis();
		var queryModel;
		if (oFF.notNull(axis)) {
			return axis.getResultStructureController();
		}
		queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel)) {
			return queryModel.getResultStructureController();
		}
		return null;
	};
	oFF.QDimension.prototype.getResultStructureController = function() {
		return this.m_resultStructureController;
	};
	oFF.QDimension.prototype.getResultStructureControllerBase = function() {
		return this.m_resultStructureController;
	};
	oFF.QDimension.prototype.getResultStructureChildren = function() {
		return null;
	};
	oFF.QDimension.prototype.supportsTotals = function() {
		return this.getMetadata().canBeAggregated()
				&& this.m_resultStructureController.supportsTotals();
	};
	oFF.QDimension.prototype.isTotalsAlignmentOnDefault = function() {
		return this.m_resultStructureController.isTotalsAlignmentOnDefault();
	};
	oFF.QDimension.prototype.isTotalsVisibilityOnDefault = function() {
		return this.m_resultStructureController.isTotalsVisibilityOnDefault();
	};
	oFF.QDimension.prototype.isTotalsStructureOnDefault = function() {
		return this.m_resultStructureController.isTotalsStructureOnDefault();
	};
	oFF.QDimension.prototype.restoreTotalsAlignment = function(restoreAction,
			recurseChildren) {
		this.m_resultStructureController.restoreTotalsAlignment(restoreAction,
				recurseChildren);
	};
	oFF.QDimension.prototype.restoreTotalsVisibility = function(restoreAction,
			recurseChildren) {
		this.m_resultStructureController.restoreTotalsVisibility(restoreAction,
				recurseChildren);
	};
	oFF.QDimension.prototype.getModelLevel = function() {
		return this.m_resultStructureController.getModelLevel();
	};
	oFF.QDimension.prototype.getFilterCapabilities = function() {
		return this.getMetadata().getFilterCapabilities();
	};
	oFF.QDimension.prototype.isOwnerDimension = function() {
		return this.getMetadata().isOwnerDimension();
	};
	oFF.QDimension.prototype.getFieldLayoutType = function() {
		return this.m_fieldLayoutType;
	};
	oFF.QDimension.prototype.getFieldLayoutTypeExt = function(context) {
		if (context === oFF.QContextType.RESULT_SET) {
			return this.m_fieldLayoutType;
		}
		return this.m_selectorFieldLayoutType;
	};
	oFF.QDimension.prototype.assertSuppotrsFieldLayoutType = function(type) {
		if (!this.getMetadata().supportsFieldLayoutType(type)) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate2(
									"Field layout type is not supported ", type
											.getName()));
		}
	};
	oFF.QDimension.prototype.setFieldLayoutType = function(type) {
		if (oFF.notNull(type)) {
			this.assertSuppotrsFieldLayoutType(type);
			if (this.m_fieldLayoutType !== type) {
				this.m_fieldLayoutType = type;
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QDimension.prototype.getDefaultFieldLayoutType = function() {
		return this.getMetadata().getDefaultFieldLayoutType();
	};
	oFF.QDimension.prototype.getSelectorFieldLayoutType = function() {
		return this.m_selectorFieldLayoutType;
	};
	oFF.QDimension.prototype.setSelectorFieldLayoutType = function(type) {
		if (oFF.notNull(this.m_selectorFieldLayoutType) && oFF.notNull(type)) {
			this.assertSuppotrsFieldLayoutType(type);
			if (this.m_selectorFieldLayoutType !== type) {
				this.m_selectorFieldLayoutType = type;
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QDimension.prototype.supportsFieldLayoutType = function(type) {
		return this.getMetadata().supportsFieldLayoutType(type);
	};
	oFF.QDimension.prototype.getFieldContainer = function() {
		return this.m_fieldContainer;
	};
	oFF.QDimension.prototype.getAttributeContainer = function() {
		return this.m_attributeContainer;
	};
	oFF.QDimension.prototype.getAttributeContainerBase = function() {
		return this.m_attributeContainer;
	};
	oFF.QDimension.prototype.getMainAttribute = function() {
		return this.m_attributeContainer.getMainAttribute();
	};
	oFF.QDimension.prototype.getDimension = function() {
		return this;
	};
	oFF.QDimension.prototype.getResultSetAttributes = function() {
		return this.m_attributeContainer.getResultSetAttributes();
	};
	oFF.QDimension.prototype.getAttributes = function() {
		return this.m_attributeContainer.getAttributes();
	};
	oFF.QDimension.prototype.getAttributeByName = function(name) {
		return this.m_attributeContainer.getAttributeByName(name);
	};
	oFF.QDimension.prototype.getDefaultResultSetAttributes = function() {
		return this.m_attributeContainer.getDefaultResultSetAttributes();
	};
	oFF.QDimension.prototype.setIsCumulative = function(isEnabled) {
		if (!this.supportsCumulative()) {
			oFF.noSupport();
		}
		this.m_isCumulative = isEnabled;
	};
	oFF.QDimension.prototype.isCumulative = function() {
		if (!this.supportsCumulative()) {
			return false;
		}
		return this.m_isCumulative;
	};
	oFF.QDimension.prototype.supportsCumulative = function() {
		return this.getMetadata().supportsCumulative();
	};
	oFF.QDimension.prototype.isGroupingDimension = function() {
		return this.getMetadata().isGroupingDimension();
	};
	oFF.QDimension.prototype.isComponentNode = function() {
		return true;
	};
	oFF.QDimension.prototype.getIndexedChildren = function() {
		var children = oFF.XList.create();
		var i;
		var structureMember;
		if (oFF.notNull(this.m_allStructureMembers)) {
			for (i = 0; i < this.m_allStructureMembers.size(); i++) {
				structureMember = this.m_allStructureMembers.get(i);
				if (structureMember.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE) {
					children.add(structureMember);
				}
			}
		}
		return children.getIterator();
	};
	oFF.QDimension.prototype.getNamedChildren = function() {
		var map = oFF.XHashMapByString.create();
		if (oFF.notNull(this.m_fieldContainer)) {
			map.put("FieldContainer", this.m_fieldContainer);
		}
		if (oFF.notNull(this.m_attributeContainer)) {
			map.put("AttributeContainer", this.m_attributeContainer);
		}
		return map;
	};
	oFF.QDimension.prototype.getPropertyConstantValue = function(type) {
		if (type === oFF.OlapProperty.RESULT_ALIGNMENT) {
			return this.m_resultStructureController.getResultAlignment();
		}
		if (type === oFF.OlapProperty.LOWER_LEVEL_NODE_ALIGNMENT) {
			return this.getLowerLevelNodeAlignment();
		}
		return oFF.QModelComponent.prototype.getPropertyConstantValue.call(
				this, type);
	};
	oFF.QDimension.prototype.getAllDimensionMembers = function() {
		var member = oFF.XList.create();
		var allStructureMembers;
		var structureIterator;
		var allDimensionMembers;
		if (this.isMeasureStructure()) {
			allStructureMembers = this.getAllStructureMembers();
			structureIterator = allStructureMembers.getIterator();
			while (structureIterator.hasNext()) {
				member.add(structureIterator.next());
			}
			oFF.XObjectExt.release(structureIterator);
		} else {
			allDimensionMembers = this.processValueHelp(oFF.SyncType.BLOCKING,
					null, null).getData();
			member = this.nodeToMember(allDimensionMembers);
		}
		return member;
	};
	oFF.QDimension.prototype.nodeToMember = function(list) {
		var member = oFF.XList.create();
		var iterator = list.getIterator();
		while (iterator.hasNext()) {
			member.add(iterator.next().getDimensionMember());
		}
		oFF.XObjectExt.release(iterator);
		return member;
	};
	oFF.QDimension.prototype.processVariableHelp = function(variableName,
			syncType, listener, customIdentifier) {
		var listenerDecorator = oFF.ValueHelpListenerDecorator.create(listener);
		this.processVarHelp(variableName, syncType, listenerDecorator,
				customIdentifier);
		return listenerDecorator.getResult();
	};
	oFF.QDimension.prototype.processVarHelp = function(variableName, syncType,
			listener, customIdentifier) {
		var queryManager = this.getQueryManagerBase();
		var variable;
		if (queryManager.supportsReInitVariables()
				&& queryManager.isSubmitted()) {
			return this
					._valueHelpError(
							"Valuehelp for variables is not allowed if variables are already submitted.",
							listener, customIdentifier);
		}
		variable = queryManager.getVariableProcessor().getVariables().getByKey(
				variableName);
		return this._processVariableValueHelp(variableName, syncType, listener,
				customIdentifier, queryManager, variable, this);
	};
	oFF.QDimension.prototype.processVariableHelpWithVariable = function(
			variable, syncType, listener, customIdentifier) {
		var listenerDecorator = oFF.ValueHelpListenerDecorator.create(listener);
		this.processVarHelpWithVariable(variable, syncType, listenerDecorator,
				customIdentifier);
		return listenerDecorator.getResult();
	};
	oFF.QDimension.prototype.processVarHelpWithVariable = function(variable,
			syncType, listener, customIdentifier) {
		var dimensionDataSource = oFF.QDataSource.create();
		var planningSequence;
		var systemName;
		var dimension;
		var dimensionQueryManager;
		var queryServiceConfig;
		var result;
		var displayKeyField;
		var originQFilterExpression;
		var targetQFilterExpression;
		var selectorHierarchyNode;
		dimensionDataSource.setObjectName(this.getName());
		dimensionDataSource.setType(oFF.MetaObjectType.DIMENSION);
		planningSequence = this.getContext();
		systemName = this.getContext().getDataSource().getSystemName();
		if (planningSequence.getQueryManagerForDimension(this.getName()) === null) {
			queryServiceConfig = oFF.QueryServiceConfig.createWithDataSource(
					this.getApplication(), systemName, dimensionDataSource);
			result = queryServiceConfig.processQueryManagerCreation(
					oFF.SyncType.BLOCKING, null, null);
			oFF.MessageUtil.checkNoError(result);
			dimensionQueryManager = result.getData();
			dimension = dimensionQueryManager.getQueryModel()
					.getDimensionByName(this.getName());
			displayKeyField = dimension
					.getFieldByPresentationType(oFF.PresentationType.DISPLAY_KEY);
			if (oFF.notNull(displayKeyField)) {
				dimension.getSelectorFields().add(displayKeyField);
			}
			planningSequence.setQueryManagerForDimension(dimensionQueryManager,
					this.getName());
		} else {
			dimensionQueryManager = planningSequence
					.getQueryManagerForDimension(this.getName());
			dimension = dimensionQueryManager.getQueryModel()
					.getDimensionByName(this.getName());
		}
		originQFilterExpression = planningSequence.getSelector()
				.getValuehelpFilter();
		targetQFilterExpression = dimensionQueryManager.getQueryModel()
				.getFilter().getValuehelpFilter();
		targetQFilterExpression.copyFilterExpression(originQFilterExpression);
		selectorHierarchyNode = this.getSelectorHierarchyNode();
		if (oFF.notNull(selectorHierarchyNode)) {
			dimension.setSelectorHierarchyNode(selectorHierarchyNode);
		}
		return this._processVariableValueHelp(variable.getName(), syncType,
				listener, customIdentifier, dimensionQueryManager, variable,
				dimension);
	};
	oFF.QDimension.prototype._processVariableValueHelp = function(variableName,
			syncType, listener, customIdentifier, queryManager, variable,
			dimension) {
		var variableType;
		var memberVariable;
		if (oFF.isNull(variable)) {
			return this._valueHelpError(oFF.XStringUtils.concatenate3(
					"Variable '", variableName, "' is null."), listener,
					customIdentifier);
		}
		variableType = variable.getVariableType();
		if (variableType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE)) {
			memberVariable = variable;
			if (memberVariable.supportsValueHelp()) {
				return queryManager.processVarHelp(dimension, memberVariable,
						syncType, listener, customIdentifier);
			}
			return this._valueHelpError(oFF.XStringUtils
					.concatenate3("Variable '", variableName,
							"' does not support valuehelp."), listener,
					customIdentifier);
		}
		return this._valueHelpError(oFF.XStringUtils.concatenate2(
				"Valuehelp is not supported for variables of the type ",
				variableType.getName()), listener, customIdentifier);
	};
	oFF.QDimension.prototype._valueHelpError = function(errorMessage, listener,
			customIdentifier) {
		var extResult = oFF.ExtResult.createWithErrorMessage(errorMessage);
		if (oFF.notNull(listener)) {
			listener.onValuehelpExecuted(extResult, null, customIdentifier);
		}
		return extResult;
	};
	oFF.QDimension.prototype._valHelpError = function(errorMessage, listener,
			customIdentifier) {
		var extResult = oFF.ExtResult.createWithErrorMessage(errorMessage);
		if (oFF.notNull(listener)) {
			listener.onValuehelpExecuted(extResult, null, customIdentifier);
		}
		return extResult;
	};
	oFF.QDimension.prototype.processIsNodeChildOfParent = function(nodeName,
			parentName, syncType, listener, customIdentifier) {
		return this.getSelector().processIsNodeChildOfParent(nodeName,
				parentName, syncType, listener, customIdentifier);
	};
	oFF.QDimension.prototype.processMemberHelp = function(syncType, listener,
			customIdentifier) {
		var listenerDecorator = oFF.ValueHelpListenerDecorator.create(listener);
		this.processValueHelp(syncType, listenerDecorator, customIdentifier);
		return listenerDecorator.getResult();
	};
	oFF.QDimension.prototype.processValueHelp = function(syncType, listener,
			customIdentifier) {
		var queryModel = this.getQueryModelBase();
		var extResult;
		var queryManager;
		if (oFF.isNull(queryModel)) {
			return this._valHelpError(
					"Valuehelp is not supported in this context", listener,
					customIdentifier);
		}
		if (queryModel.isBlendingModel()) {
			return this._valHelpError(
					"Valuehelp is not supported for Blending", listener,
					customIdentifier);
		}
		if (this.isStructure() && !this.isHierarchyActive()) {
			extResult = this.getSelector().processMeasureHelp();
			if (oFF.notNull(listener)) {
				listener.onValuehelpExecuted(extResult, null, customIdentifier);
			}
			return extResult;
		}
		queryManager = queryModel.getQueryManagerBase();
		return queryManager.processValueHelp(this, syncType, listener,
				customIdentifier);
	};
	oFF.QDimension.prototype.getNameValuePairs = function() {
		if (oFF.isNull(this.m_nameValuePairs)) {
			return oFF.XList.create();
		}
		return this.m_nameValuePairs.getValuesAsReadOnlyList();
	};
	oFF.QDimension.prototype.addNameValuePair = function(nameValuePair) {
		if (oFF.isNull(this.m_nameValuePairs)) {
			this.m_nameValuePairs = oFF.XHashMapByString.create();
		}
		if (oFF.notNull(nameValuePair)
				&& !this.m_nameValuePairs.containsKey(nameValuePair.getName())) {
			this.m_nameValuePairs.put(nameValuePair.getName(), nameValuePair);
		}
	};
	oFF.QDimension.prototype.getNameValuePair = function(name) {
		if (oFF.notNull(this.m_nameValuePairs)
				&& this.m_nameValuePairs.containsKey(name)) {
			return this.m_nameValuePairs.getByKey(name);
		}
		return null;
	};
	oFF.QDimension.prototype.getEffectiveResultSetFields = function() {
		var resultSetAttributes;
		var result;
		var i;
		var attribute;
		if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED) {
			return this.m_fieldContainer.getResultSetFields();
		}
		resultSetAttributes = this.m_attributeContainer
				.getResultSetAttributes();
		result = oFF.XListOfNameObject.create();
		for (i = 0; i < resultSetAttributes.size(); i++) {
			attribute = resultSetAttributes.get(i);
			result.addAll(attribute.getResultSetFields());
		}
		return result;
	};
	oFF.QDimension.prototype.getAttributesExt = function(context) {
		return this.m_attributeContainer.getAttributesExt(context);
	};
	oFF.QDimension.prototype.getSelectorAttributes = function() {
		return this.m_attributeContainer.getSelectorAttributes();
	};
	oFF.QDimension.prototype.setSelectorOrder = function(direction) {
		this.getSelector().setSelectorOrder(direction);
	};
	oFF.QDimension.prototype.getSelectorOrder = function() {
		return this.getSelector().getSelectorOrder();
	};
	oFF.QDimension.prototype.setSelectorPaging = function(start, end) {
		this.getSelector().setSelectorPaging(start, end);
	};
	oFF.QDimension.prototype.getSelectorPagingStart = function() {
		return this.getSelector().getSelectorPagingStart();
	};
	oFF.QDimension.prototype.getSelectorPagingEnd = function() {
		return this.getSelector().getSelectorPagingEnd();
	};
	oFF.QDimension.prototype.setSelectorPagingDefault = function() {
		this.getSelector().setSelectorPagingDefault();
	};
	oFF.QDimension.prototype.setSelectorPagingStart = function(start) {
		this.getSelector().setSelectorPagingStart(start);
	};
	oFF.QDimension.prototype.setSelectorPagingEnd = function(end) {
		this.getSelector().setSelectorPagingEnd(end);
	};
	oFF.QDimension.prototype.getFlatFieldsList = function() {
		return this.m_fieldContainer.getFlatFieldsList();
	};
	oFF.QDimension.prototype.getHierarchyFieldsList = function() {
		return this.m_fieldContainer.getHierarchyFieldsList();
	};
	oFF.QDimension.prototype.getFieldsListByActiveUsageType = function() {
		if (this.isHierarchyAssignedAndActive()) {
			return this.m_fieldContainer.getHierarchyFieldsList();
		}
		return this.m_fieldContainer.getFlatFieldsList();
	};
	oFF.QDimension.prototype.getFieldsListByActiveUsageTypeExt = function(
			context) {
		if (context === oFF.QContextType.RESULT_SET) {
			return this.getFieldsListByActiveUsageType();
		}
		return null;
	};
	oFF.QDimension.prototype.getSelector = function() {
		if (oFF.isNull(this.m_selector)) {
			this.m_selector = oFF.QDimensionSelector.create(this);
		}
		return this.m_selector;
	};
	oFF.QDimension.prototype.getSelectorContainer = function() {
		return this.getSelector().getSelectorContainer();
	};
	oFF.QDimension.prototype.addSelectorFilterForKey = function(filterValue,
			comparisonOperator) {
		return this.getSelector().addSelectorFilterForKey(filterValue,
				comparisonOperator);
	};
	oFF.QDimension.prototype.addSelectorFilterIntervalForKey = function(
			lowValue, highValue, comparisonOperator) {
		return this.getSelector().addSelectorFilterIntervalForKey(lowValue,
				highValue, comparisonOperator);
	};
	oFF.QDimension.prototype.addSelectorFilter = function(filterValue, field,
			comparisonOperator) {
		return this.getSelector().addSelectorFilter(filterValue, field,
				comparisonOperator);
	};
	oFF.QDimension.prototype.addSelectorFilterInterval = function(lowValue,
			highValue, field, comparisonOperator) {
		return this.getSelector().addSelectorFilterInterval(lowValue,
				highValue, field, comparisonOperator);
	};
	oFF.QDimension.prototype.clearSelectorFilter = function() {
		this.getSelector().clearSelectorFilter();
	};
	oFF.QDimension.prototype.getSelectorFilterUsage = function() {
		return this.getSelector().getSelectorFilterUsage();
	};
	oFF.QDimension.prototype.addSearchForKey = function(searchValue) {
		return this.getSelector().addSearchForKey(searchValue);
	};
	oFF.QDimension.prototype.addSearchForText = function(searchValue) {
		return this.getSelector().addSearchForText(searchValue);
	};
	oFF.QDimension.prototype.addSearchForKeyUsingDynamicFilter = function(
			searchValue) {
		return this.getSelector()
				.addSearchForKeyUsingDynamicFilter(searchValue);
	};
	oFF.QDimension.prototype.addSearchForTextUsingDynamicFilter = function(
			searchValue) {
		return this.getSelector().addSearchForTextUsingDynamicFilter(
				searchValue);
	};
	oFF.QDimension.prototype.setSelectorFilterUsage = function(queryFilterUsage) {
		this.getSelector().setSelectorFilterUsage(queryFilterUsage);
	};
	oFF.QDimension.prototype.setSelectorHierarchyNode = function(parent) {
		this.getSelector().setSelectorHierarchyNode(parent);
	};
	oFF.QDimension.prototype.clearSelectorHierarchyNode = function() {
		this.getSelector().clearSelectorHierarchyNode();
	};
	oFF.QDimension.prototype.getSelectorHierarchyNode = function() {
		return this.getSelector().getSelectorHierarchyNode();
	};
	oFF.QDimension.prototype.getFilter = function() {
		var queryModel = this.getQueryModel();
		var selectionStateContainer;
		var complexSelectionRoot;
		var cartesianProduct;
		if (oFF.isNull(queryModel)) {
			return null;
		}
		selectionStateContainer = queryModel.getFilter().getDynamicFilter();
		complexSelectionRoot = selectionStateContainer.getFilterRootElement();
		if (oFF.isNull(complexSelectionRoot)
				|| selectionStateContainer.isCartesianProduct()) {
			cartesianProduct = selectionStateContainer
					.getCartesianProductWithDefault();
			return cartesianProduct.getCartesianListByDimensionName(this
					.getName());
		}
		if (selectionStateContainer.isComplexFilter()) {
			return this.getFilterFromComplexSelection(complexSelectionRoot);
		}
		return null;
	};
	oFF.QDimension.prototype.getFilterFromComplexSelection = function(
			complexSelectionRoot) {
		var cartesianList = null;
		var selectionIterator;
		var component;
		if (complexSelectionRoot.getOlapComponentType() === oFF.FilterComponentType.AND) {
			selectionIterator = complexSelectionRoot.getChildrenIterator();
			while (selectionIterator.hasNext()) {
				component = selectionIterator.next();
				if (component.getOlapComponentType() === oFF.FilterComponentType.CARTESIAN_LIST
						|| component.getOlapComponentType() === oFF.FilterComponentType.CARTESIAN_SPATIAL_LIST) {
					if (component.getDimension() === this) {
						if (oFF.notNull(cartesianList)) {
							return null;
						}
						cartesianList = component;
					}
				}
			}
		}
		return cartesianList;
	};
	oFF.QDimension.prototype.setSelectorInitialDrillLevel = function(
			relativeLevelCount) {
		this.getSelector().setSelectorInitialDrillLevel(relativeLevelCount);
	};
	oFF.QDimension.prototype.getSelectorRootLevel = function() {
		return this.getSelector().getSelectorRootLevel();
	};
	oFF.QDimension.prototype.setSelectorHierarchyActive = function(isActive) {
		this.getSelector().setSelectorHierarchyActive(isActive);
	};
	oFF.QDimension.prototype.isSelectorHierarchyActive = function() {
		return this.getSelector().isSelectorHierarchyActive();
	};
	oFF.QDimension.prototype.getSelectorKeyField = function() {
		return this.getSelector().getSelectorKeyField();
	};
	oFF.QDimension.prototype.getSelectorTextField = function() {
		return this.getSelector().getSelectorTextField();
	};
	oFF.QDimension.prototype.getSelectorFields = function() {
		return this.m_fieldContainer.getSelectorFields();
	};
	oFF.QDimension.prototype.setSkipEntries = function(amount) {
		this.m_skip = amount;
		this.notifyNodeChanged();
	};
	oFF.QDimension.prototype.getSkipEntries = function() {
		return this.m_skip;
	};
	oFF.QDimension.prototype.setTopEntries = function(amount) {
		this.m_top = amount;
		this.notifyNodeChanged();
	};
	oFF.QDimension.prototype.getTopEntries = function() {
		return this.m_top;
	};
	oFF.QDimension.prototype.getSelectorDisplayKeyField = function() {
		return this.getSelector().getSelectorDisplayKeyField();
	};
	oFF.QDimension.prototype.setSelectorFilterOnDisplayKey = function(
			isUsingDisplayKey) {
		this.getSelector().setSelectorFilterOnDisplayKey(isUsingDisplayKey);
	};
	oFF.QDimension.prototype.isSelectorFilteringOnDisplayKey = function() {
		return this.getSelector().isSelectorFilteringOnDisplayKey();
	};
	oFF.QDimension.prototype.addSelectorFilterForText = function(filterValue,
			comparisonOperator) {
		return this.getSelector().addSelectorFilterForText(filterValue,
				comparisonOperator);
	};
	oFF.QDimension.prototype.setSelectorGettingInterval = function(
			doGetInterval) {
		return this.getSelector().setSelectorGettingInterval(doGetInterval);
	};
	oFF.QDimension.prototype.isSelectorGettingInterval = function() {
		return this.getSelector().isSelectorGettingInterval();
	};
	oFF.QDimension.prototype.getGroupingDimensions = function() {
		var dimensionAccessor = this.getQueryModel();
		if (oFF.isNull(dimensionAccessor)) {
			dimensionAccessor = this.getDimensionAccessor();
		}
		return this.getMetadata().getGroupingDimensions(dimensionAccessor);
	};
	oFF.QDimension.prototype.getGroupingDimensionNames = function() {
		var dimensionAccessor = this.getQueryModel();
		if (oFF.isNull(dimensionAccessor)) {
			dimensionAccessor = this.getDimensionAccessor();
		}
		return this.getMetadata().getGroupingDimensionNames(dimensionAccessor);
	};
	oFF.QDimension.prototype.getGroupedDimensions = function() {
		var dimensionAccessor = this.getQueryModel();
		if (oFF.isNull(dimensionAccessor)) {
			dimensionAccessor = this.getDimensionAccessor();
		}
		return this.getMetadata().getGroupedDimensions(dimensionAccessor, this);
	};
	oFF.QDimension.prototype.getLeveledHierarchies = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return null;
		}
		return queryModel.getQueryManager().getMetadataModel()
				.getLeveledHierarchiesByDimension(this);
	};
	oFF.QDimension.prototype.getLeveledHierarchy = function(name) {
		var leveledHierarchies = this.getLeveledHierarchies();
		var size;
		var i;
		var leveledHierarchy;
		if (oFF.notNull(leveledHierarchies)) {
			size = leveledHierarchies.size();
			for (i = 0; i < size; i++) {
				leveledHierarchy = leveledHierarchies.get(i);
				if (oFF.XString.isEqual(leveledHierarchy.getName(), name)) {
					return leveledHierarchy;
				}
			}
		}
		return null;
	};
	oFF.QDimension.prototype.clearSelectorFilterByDimension = function(
			dimension) {
		this.getSelector().clearSelectorFilterByDimension(dimension);
	};
	oFF.QDimension.prototype.getExternalName = function() {
		return this.getMetadata().getExternalName();
	};
	oFF.QDimension.prototype.supportsLowerCase = function() {
		return this.getMetadata().supportsLowerCase();
	};
	oFF.QDimension.prototype.setSelectorHierarchyNodeByName = function(parent) {
		this.getSelector().setSelectorHierarchyNodeByName(parent);
	};
	oFF.QDimension.prototype.getSelectorHierarchyNodeName = function() {
		return this.getSelector().getSelectorHierarchyNodeName();
	};
	oFF.QDimension.prototype.setSelectorHierarchyForLinkedNode = function(
			nodeSid, nodeName) {
		this.getSelector().setSelectorHierarchyForLinkedNode(nodeSid, nodeName);
	};
	oFF.QDimension.prototype.getSelectorHierarchyForLinkedNode = function() {
		return this.getSelector().getSelectorHierarchyForLinkedNode();
	};
	oFF.QDimension.prototype.getHierarchyPathField = function() {
		return this.m_fieldContainer.getHierarchyPathField();
	};
	oFF.QDimension.prototype.setHierarchyPathField = function(field) {
		this.m_fieldContainer.setHierarchyPathField(field);
	};
	oFF.QDimension.prototype.setSelectorComplexSelectionRoot = function(
			complexSelection) {
		this.getSelector().setSelectorComplexSelectionRoot(complexSelection);
	};
	oFF.QDimension.prototype.newHierarchy = function(name) {
		return oFF.QHierarchy.create(this.getContext(), this, name);
	};
	oFF.QDimension.prototype.getDefaultAxisType = function() {
		return this.getMetadata().getDefaultAxisType();
	};
	oFF.QDimension.prototype.getDefaultResultSetFields = function() {
		return this.m_fieldContainer.getDefaultResultSetFields();
	};
	oFF.QDimension.prototype.addDefaultResultSetField = function(field) {
		this.m_fieldContainer.addDefaultResultSetField(field);
	};
	oFF.QDimension.prototype.clearDefaultResultSetFields = function() {
		this.m_fieldContainer.clearDefaultResultSetFields();
	};
	oFF.QDimension.prototype.setHasFixedResultSetFields = function(
			hasFixedResultSetFields) {
		this.m_fieldContainer
				.setHasFixedResultSetFields(hasFixedResultSetFields);
	};
	oFF.QDimension.prototype.hasFixedResultSetFields = function() {
		return this.m_fieldContainer.hasFixedResultSetFields();
	};
	oFF.QDimension.prototype.convertToFieldLayoutType = function(type) {
		var effectiveResultSetFields;
		var fields;
		if (this.m_fieldLayoutType !== type) {
			if (this.getMetadata().supportsFieldLayoutType(type)) {
				if (type === oFF.FieldLayoutType.FIELD_BASED) {
					effectiveResultSetFields = this
							.getEffectiveResultSetFields();
					fields = this.getResultSetFields();
					fields.queueEventing();
					fields.clear();
					fields.addAll(effectiveResultSetFields);
					fields.resumeEventing();
					this.setFieldLayoutType(type);
				}
			}
		}
	};
	oFF.QDimension.prototype.getNavigationNodes = function() {
		return this.getSelector().getNavigationNodes();
	};
	oFF.QDimension.prototype.getAllStructureMembers = function() {
		return this.m_allStructureMembers;
	};
	oFF.QDimension.prototype.getStructureLayout = function() {
		if (this.supportsBasicStructureMembers()) {
			return this.m_structureLayout;
		}
		return null;
	};
	oFF.QDimension.prototype.setStructuredLayout = function(
			customStructureLayout) {
		if (oFF.notNull(this.m_structureLayout)) {
			this.m_structureLayout.clear();
			this.m_structureLayout.addAll(customStructureLayout);
		}
	};
	oFF.QDimension.prototype.isStructure = function() {
		return this.getMetadata().isStructure();
	};
	oFF.QDimension.prototype.isMeasureStructure = function() {
		return this.getMetadata().isMeasureStructure();
	};
	oFF.QDimension.prototype.getStructureMember = function(name) {
		if (oFF.isNull(this.m_allStructureMembers)) {
			return null;
		}
		return this.m_allStructureMembers.getByKey(name);
	};
	oFF.QDimension.prototype.supportsResultVisibility = function() {
		if (this.isStructure()) {
			return false;
		}
		return this.m_resultStructureController.supportsResultVisibility();
	};
	oFF.QDimension.prototype.supportsResultAlignment = function() {
		if (this.isStructure()) {
			return false;
		}
		return this.m_resultStructureController.supportsResultAlignment();
	};
	oFF.QDimension.prototype.supportsAdvancedResultStructure = function() {
		if (this.isStructure()) {
			return false;
		}
		return this.m_resultStructureController
				.supportsAdvancedResultStructure();
	};
	oFF.QDimension.prototype.addNewBasicMeasure = function(name, text) {
		var member;
		if (this.supportsBasicStructureMembers()) {
			member = oFF.QBasicMeasure._createBasicMeasure(this.getContext(),
					this);
			member.setName(name);
			member.setText(text);
			this.addMeasureInternal(member);
			return member;
		}
		return null;
	};
	oFF.QDimension.prototype.addNewFormulaMeasure = function(name, text) {
		var newMember;
		if (this.supportsCustomMembers()) {
			newMember = oFF.QFormulaMeasure._createFormulaMeasure(this
					.getContext(), this);
			newMember.setName(name);
			newMember.setText(text);
			this.addMeasureInternal(newMember);
			this.addQueryDataCells(newMember);
			return newMember;
		}
		return null;
	};
	oFF.QDimension.prototype.addNewRestrictedMeasure = function(name, text) {
		var newMember;
		if (this.supportsCustomMembers()) {
			newMember = oFF.QRestrictedMeasure._createRestrictedMeasure(this
					.getContext(), this);
			newMember.setName(name);
			newMember.setText(text);
			this.addMeasureInternal(newMember);
			this.addQueryDataCells(newMember);
			return newMember;
		}
		return null;
	};
	oFF.QDimension.prototype.addQueryDataCells = function(member) {
		var queryModel = this.getQueryModelBase();
		var allDataCells;
		var nonMeasureDimension;
		var allStructureMembers;
		var membersIterator;
		var newDataCell;
		var dataCell;
		if (queryModel
				.supportsAnalyticCapabilityActive(oFF.InACapabilities.QUERY_DATA_CELLS)
				&& this.getModelCapabilities().supportsRestrictedMeasures()) {
			this.removeQueryDataCells(member);
			allDataCells = queryModel.getQueryDataCellsBase();
			nonMeasureDimension = queryModel.getNonMeasureDimension();
			if (oFF.notNull(nonMeasureDimension)) {
				allStructureMembers = nonMeasureDimension
						.getAllStructureMembers();
				membersIterator = allStructureMembers.getIterator();
				while (membersIterator.hasNext()) {
					newDataCell = allDataCells.newQueryDataCell(null);
					newDataCell.addDimensionMemberReference(member.getName());
					newDataCell.addDimensionMemberReference(membersIterator
							.next().getName());
				}
			} else {
				dataCell = allDataCells.newQueryDataCell(null);
				dataCell.addDimensionMemberReference(member.getName());
			}
		}
	};
	oFF.QDimension.prototype.removeQueryDataCells = function(member) {
		var dataCellsWithMemberRef = this.getQueryDataCells(member)
				.getIterator();
		var allDataCells = this.getQueryModelBase().getQueryDataCellsBase();
		while (dataCellsWithMemberRef.hasNext()) {
			allDataCells.removeElement(dataCellsWithMemberRef.next());
		}
	};
	oFF.QDimension.prototype.getQueryDataCells = function(member) {
		var cells = oFF.XList.create();
		var allDataCells = this.getQueryModelBase().getQueryDataCells();
		var size = allDataCells.size();
		var i;
		var dataCell;
		for (i = 0; i < size; i++) {
			dataCell = allDataCells.get(i);
			if (dataCell.hasMemberReference(member)) {
				cells.add(dataCell);
			}
		}
		return cells;
	};
	oFF.QDimension.prototype.addMeasure = function(newMeasure) {
		if (this.supportsBasicStructureMembers()
				&& newMeasure.getMemberType() === oFF.MemberType.BASIC_MEASURE
				|| this.supportsCustomMembers()) {
			this.addMeasureInternal(newMeasure);
		}
	};
	oFF.QDimension.prototype.addMeasureInternal = function(newMeasure) {
		var measureBase;
		if (oFF.notNull(newMeasure)) {
			measureBase = newMeasure;
			this.assertMemberUniqueName(measureBase.getName());
			measureBase.setParent(this);
			measureBase.initializeFieldValues();
			this.m_allStructureMembers.add(newMeasure);
			this.m_structureLayout.add(newMeasure);
		}
	};
	oFF.QDimension.prototype.removeMeasure = function(name) {
		var member;
		var memberType;
		var sortingManager;
		var measureSorting;
		var filter;
		var i;
		var filterElement;
		var comparisonOperator;
		var dimensionMember;
		if (this.supportsCustomMembers()) {
			member = this.m_allStructureMembers.getByKey(name);
			if (oFF.notNull(member)) {
				memberType = member.getMemberType();
				if (memberType !== oFF.MemberType.FORMULA
						&& memberType !== oFF.MemberType.RESTRICTED_MEASURE) {
					throw oFF.XException
							.createIllegalArgumentException(oFF.XStringUtils
									.concatenate2(
											"Structure member cannot be removed: ",
											name));
				}
				this.removeQueryDataCells(member);
				sortingManager = this.getQueryModel().getSortingManager();
				measureSorting = sortingManager
						.getMeasureSorting(member, false);
				if (oFF.notNull(measureSorting)) {
					sortingManager.getSortingOperations().removeElement(
							measureSorting);
				}
			}
			filter = this.getFilter();
			if (oFF.notNull(filter)) {
				for (i = 0; i < filter.size(); i++) {
					filterElement = filter.getOp(i);
					comparisonOperator = filterElement.getComparisonOperator();
					if (comparisonOperator.getNumberOfParameters() === 1) {
						dimensionMember = filterElement.getLow()
								.getDimensionMember();
						if (oFF.notNull(dimensionMember)
								&& oFF.XString.isEqual(dimensionMember
										.getName(), name)) {
							filter.removeAt(i);
							break;
						}
					}
				}
			}
			this.m_allStructureMembers.removeElement(member);
			this.m_structureLayout.removeElement(member);
		}
	};
	oFF.QDimension.prototype.removeOverdefinedAccount = function(name) {
		var member;
		var dimMember;
		var memberType;
		var filter;
		var i;
		var filterElement;
		var comparisonOperator;
		var dimensionMember;
		if (this.getMetadata().getDimensionType() === oFF.DimensionType.ACCOUNT) {
			member = this.m_allStructureMembers.getByKey(name);
			dimMember = this.getDimensionMemberWithFormat(name, null);
			if (oFF.isNull(member)) {
				return;
			}
			memberType = member.getMemberType();
			if (memberType !== oFF.MemberType.FORMULA
					&& memberType !== oFF.MemberType.RESTRICTED_MEASURE) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate2(
										"Structure member cannot be removed: ",
										name));
			}
			filter = this.getFilter();
			if (oFF.notNull(filter)) {
				for (i = 0; i < filter.size(); i++) {
					filterElement = filter.getOp(i);
					comparisonOperator = filterElement.getComparisonOperator();
					if (comparisonOperator.getNumberOfParameters() === 1) {
						dimensionMember = filterElement.getLow()
								.getDimensionMember();
						if (dimensionMember === member) {
							filterElement.getLow()
									.setDimensionMember(dimMember);
							break;
						}
					}
				}
			}
			this.m_allStructureMembers.removeElement(member);
			this.m_structureLayout.removeElement(member);
		}
	};
	oFF.QDimension.prototype.removeCustomMembers = function() {
		var measureIdx;
		var iqStructureMember;
		if (this.supportsCustomMembers()) {
			this.m_structureLayout.queueEventing();
			for (measureIdx = 0; measureIdx < this.m_allStructureMembers.size(); measureIdx++) {
				iqStructureMember = this.m_allStructureMembers.get(measureIdx);
				if (iqStructureMember.getMemberType() === oFF.MemberType.FORMULA
						|| iqStructureMember.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE) {
					this.removeMeasure(iqStructureMember.getName());
					measureIdx--;
				}
			}
			this.m_structureLayout.resumeEventing();
		}
	};
	oFF.QDimension.prototype.supportsCustomMembers = function() {
		return this.getMetadata().supportsCustomMembers();
	};
	oFF.QDimension.prototype.getStructureMembers = function(getBasicMembers) {
		var list = oFF.XListOfNameObject.create();
		var i;
		var member;
		for (i = 0; i < this.m_allStructureMembers.size(); i++) {
			member = this.m_allStructureMembers.get(i);
			if (member.getMemberType() === oFF.MemberType.BASIC_MEASURE === getBasicMembers) {
				list.add(member);
			}
		}
		list.sortByDirection(oFF.XSortDirection.ASCENDING);
		return list;
	};
	oFF.QDimension.prototype.getBasicStructureMembers = function() {
		if (this.supportsBasicStructureMembers()) {
			return this.getStructureMembers(true);
		}
		return null;
	};
	oFF.QDimension.prototype.supportsBasicStructureMembers = function() {
		return this.getMetadata().supportsBasicStructureMembers();
	};
	oFF.QDimension.prototype.getExtendedStructureMembers = function() {
		if (this.isStructure()) {
			return this.getStructureMembers(false);
		}
		return null;
	};
	oFF.QDimension.prototype.assertMemberUniqueName = function(name) {
		if (oFF.isNull(name)) {
			throw oFF.XException
					.createRuntimeException("The measure has no name");
		}
		oFF.XBooleanUtils
				.checkFalse(
						this.m_allStructureMembers.containsKey(name),
						oFF.XStringUtils
								.concatenate3(
										"The MeasureStructure already has a measure '",
										name,
										"' defined. You can call removeMeasure(String name) to remove a custom measure previously defined."));
	};
	oFF.QDimension.prototype.containsStructureMember = function(name) {
		if (oFF.isNull(this.m_allStructureMembers)) {
			return false;
		}
		return this.m_allStructureMembers.containsKey(name);
	};
	oFF.QDimension.prototype.supportsCalculatedBeforeAggregation = function() {
		return this.getMetadata().supportsCalculatedBeforeAggregation();
	};
	oFF.QDimension.prototype.setHierarchyNavigationDeltaMode = function(
			isDeltaMode) {
		if (isDeltaMode
				&& !this.getQueryModel().supportsHierarchyNavigationDeltaMode()) {
			oFF.noSupport();
		}
		this.m_hierarchyNavigationDeltaMode = isDeltaMode;
	};
	oFF.QDimension.prototype.isHierarchyNavigationDeltaMode = function() {
		return this.m_hierarchyNavigationDeltaMode;
	};
	oFF.QDimension.prototype.getCubeBlendingPropertiesField = function() {
		return this.m_fieldContainer.getCubeBlendingPropertiesField();
	};
	oFF.QDimension.prototype.setCubeBlendingPropertiesField = function(
			blendingPropertiesField) {
		this.m_fieldContainer
				.setCubeBlendingPropertiesField(blendingPropertiesField);
	};
	oFF.QDimension.prototype.newValueHelpMembers = function() {
		return null;
	};
	oFF.QDimension.prototype.setAlternativeFieldValue = function(hierarchyKey,
			memberKey, fieldName, value, language) {
		var internalLanguage;
		var keyTypeStringRepresentation;
		var keyMap;
		var fieldMap;
		var languageMap;
		if (oFF.isNull(language)) {
			internalLanguage = "";
		} else {
			internalLanguage = language;
		}
		if (oFF.isNull(this.m_alternativeFieldValues)) {
			this.m_alternativeFieldValues = oFF.XHashMapByString.create();
		}
		keyTypeStringRepresentation = oFF.XBoolean
				.convertToString(hierarchyKey);
		keyMap = this.m_alternativeFieldValues
				.getByKey(keyTypeStringRepresentation);
		if (oFF.isNull(keyMap)) {
			keyMap = oFF.XHashMapByString.create();
			this.m_alternativeFieldValues.put(keyTypeStringRepresentation,
					keyMap);
		}
		fieldMap = keyMap.getByKey(memberKey);
		if (oFF.isNull(fieldMap)) {
			fieldMap = oFF.XHashMapByString.create();
			keyMap.put(memberKey, fieldMap);
		}
		languageMap = fieldMap.getByKey(fieldName);
		if (oFF.isNull(languageMap)) {
			languageMap = oFF.XHashMapByString.create();
			fieldMap.put(fieldName, languageMap);
		}
		languageMap.put(internalLanguage, value);
	};
	oFF.QDimension.prototype.getAlternativeFieldValue = function(hierarchyKey,
			memberKey, fieldName, language) {
		return this.getAlternateFieldValueWithActualLanguageOrLanguageParam(
				hierarchyKey, memberKey, fieldName, false, language);
	};
	oFF.QDimension.prototype.getAlternativeFieldValueLanguageOption = function(
			hierarchyKey, memberKey, fieldName) {
		return this.getAlternateFieldValueWithActualLanguageOrLanguageParam(
				hierarchyKey, memberKey, fieldName, true, null);
	};
	oFF.QDimension.prototype.getAlternateFieldValueWithActualLanguageOrLanguageParam = function(
			hierarchyKey, memberKey, fieldName, withActualLanguage,
			languageParameter) {
		var keyMap;
		var fieldMap;
		var languageMap;
		var language;
		if (oFF.notNull(this.m_alternativeFieldValues)) {
			keyMap = this.m_alternativeFieldValues.getByKey(oFF.XBoolean
					.convertToString(hierarchyKey));
			if (oFF.notNull(keyMap)) {
				fieldMap = keyMap.getByKey(memberKey);
				if (oFF.notNull(fieldMap)) {
					languageMap = fieldMap.getByKey(fieldName);
					if (oFF.notNull(languageMap)) {
						language = languageParameter;
						if (withActualLanguage) {
							language = this.getActualLanguage();
						}
						if (oFF.XStringUtils.isNullOrEmpty(language)
								|| languageMap.getByKey(language) === null) {
							return languageMap.getByKey("");
						}
						return languageMap.getByKey(language);
					}
				}
			}
		}
		return null;
	};
	oFF.QDimension.prototype.getActualLanguage = function() {
		var language = null;
		var queryModel = this.getQueryModelBase();
		var queryManager;
		var connection;
		var serverMetadata;
		var sysDesc;
		if (oFF.notNull(queryModel)) {
			queryManager = queryModel.getQueryManagerBase();
			if (oFF.notNull(queryManager)) {
				connection = queryManager.getConnection();
				if (oFF.notNull(connection)) {
					serverMetadata = connection.getServerMetadata();
					if (oFF.notNull(serverMetadata)) {
						language = serverMetadata.getUserLanguage();
					}
				}
				if (oFF.isNull(language)) {
					sysDesc = queryManager.getSystemDescription();
					if (oFF.notNull(sysDesc)) {
						language = sysDesc.getLanguage();
					}
				}
			}
		}
		return language;
	};
	oFF.QDimension.prototype.getAlternativeFieldValueMemberKeys = function(
			hierarchyKey) {
		var keyMap;
		if (oFF.notNull(this.m_alternativeFieldValues)) {
			keyMap = this.m_alternativeFieldValues.getByKey(oFF.XBoolean
					.convertToString(hierarchyKey));
			if (oFF.notNull(keyMap)) {
				return keyMap.getKeysAsReadOnlyListOfString();
			}
		}
		return null;
	};
	oFF.QDimension.prototype.getAlternativeFieldValueFields = function(
			hierarchyKey, memberKey) {
		var keyMap;
		var fieldMap;
		if (oFF.notNull(this.m_alternativeFieldValues)) {
			keyMap = this.m_alternativeFieldValues.getByKey(oFF.XBoolean
					.convertToString(hierarchyKey));
			if (oFF.notNull(keyMap)) {
				fieldMap = keyMap.getByKey(memberKey);
				if (oFF.notNull(fieldMap)) {
					return fieldMap.getKeysAsReadOnlyListOfString();
				}
			}
		}
		return null;
	};
	oFF.QDimension.prototype.getAlternativeFieldValueLanguages = function(
			hierarchyKey, memberKey, fieldName) {
		var keyMap;
		var fieldMap;
		var languageMap;
		if (oFF.notNull(this.m_alternativeFieldValues)) {
			keyMap = this.m_alternativeFieldValues.getByKey(oFF.XBoolean
					.convertToString(hierarchyKey));
			if (oFF.notNull(keyMap)) {
				fieldMap = keyMap.getByKey(memberKey);
				if (oFF.notNull(fieldMap)) {
					languageMap = fieldMap.getByKey(fieldName);
					if (oFF.notNull(languageMap)) {
						return languageMap.getKeysAsReadOnlyListOfString();
					}
				}
			}
		}
		return null;
	};
	oFF.QDimension.prototype.canBeAggregated = function() {
		return this.getMetadata().canBeAggregated();
	};
	oFF.QDimension.prototype.getAttributeViewName = function() {
		return this.getMetadata().getAttributeViewName();
	};
	oFF.QDimension.prototype.setIgnoreOnOptimizedExport = function(isIgnored) {
		this.m_isIgnoredOnExport = isIgnored;
	};
	oFF.QDimension.prototype.isIgnoredOnOptimizedExport = function() {
		return this.m_isIgnoredOnExport;
	};
	oFF.QDimension.prototype.mergeDeepRecursive = function(settings, other) {
		var otherDim = other;
		var otherFieldLayout;
		var attributeContainer;
		var otherAttributeContainer;
		var selector;
		var allStructureMembers;
		var memberSize;
		var i;
		var otherStructureMember;
		var structureMember;
		this.setText(otherDim.getText());
		this.m_hierarchyManager.mergeDeepRecursive(settings, otherDim);
		if (settings.isInitialBWMerge()) {
			if (this.getFieldLayoutType() === oFF.FieldLayoutType.ATTRIBUTE_BASED) {
				otherFieldLayout = otherDim.getFieldLayoutType();
				this.setFieldLayoutType(otherFieldLayout);
				if (otherFieldLayout === oFF.FieldLayoutType.ATTRIBUTE_BASED) {
					attributeContainer = this.getAttributeContainerBase();
					otherAttributeContainer = otherDim.getAttributeContainer();
					attributeContainer.mergeDeepRecursive(settings,
							otherAttributeContainer);
				}
			}
		}
		selector = this.getSelector();
		selector.mergeDeepRecursive(settings, otherDim.getSelector());
		this.setNewReadModes(otherDim, oFF.QContextType.RESULT_SET);
		this.setNewReadModes(otherDim, oFF.QContextType.SELECTOR);
		this.setNewReadModes(otherDim, oFF.QContextType.VARIABLE);
		allStructureMembers = otherDim.getAllStructureMembers();
		if (this.isStructure()) {
			if (!oFF.XCollectionUtils.hasElements(allStructureMembers)) {
				return;
			}
			memberSize = allStructureMembers.size();
			for (i = 0; i < memberSize; i++) {
				otherStructureMember = allStructureMembers.get(i);
				structureMember = this.m_allStructureMembers
						.getByKey(otherStructureMember.getName());
				if (oFF.notNull(structureMember)) {
					structureMember.mergeDeepRecursive(settings,
							otherStructureMember);
				}
			}
		}
	};
	oFF.QDimension.prototype.setNewReadModes = function(otherDim, context) {
		var readModeContainer = this.m_readModes.getByKey(context.getName());
		var supportedReadModes;
		var size;
		var idx;
		var activeReadMode;
		var defaultReadMode;
		readModeContainer.clearReadmode();
		supportedReadModes = otherDim.getSupportedReadModes(context)
				.getValuesAsReadOnlyList();
		size = supportedReadModes.size();
		for (idx = 0; idx < size; idx++) {
			readModeContainer.addSupportedReadMode(supportedReadModes.get(idx));
		}
		activeReadMode = otherDim.getReadMode(context);
		defaultReadMode = otherDim.getReadModeDefault(context);
		readModeContainer.setDefaultReadMode(defaultReadMode);
		if (oFF.isNull(activeReadMode)) {
			readModeContainer.setActiveReadMode(defaultReadMode);
		} else {
			readModeContainer.setActiveReadMode(activeReadMode);
		}
	};
	oFF.QDimension.prototype.activateHierarchy = function(name, version,
			dueDate) {
		this.m_hierarchyManager.activateHierarchy(name, version, dueDate);
	};
	oFF.QDimension.prototype.setHierarchySelection = function(name, version) {
		this.m_hierarchyManager.setHierarchySelection(name, version);
	};
	oFF.QDimension.prototype.getHierarchyUniqueName = function(hierarchyName) {
		return this.m_hierarchyManager.getHierarchyUniqueName(hierarchyName);
	};
	oFF.QDimension.prototype.setHierarchyName = function(name) {
		this.m_hierarchyManager.setHierarchyName(name);
	};
	oFF.QDimension.prototype.setHierarchyVersion = function(version) {
		this.m_hierarchyManager.setHierarchyVersion(version);
	};
	oFF.QDimension.prototype.setHierarchyDueDate = function(dueDate) {
		this.m_hierarchyManager.setHierarchyDueDate(dueDate);
	};
	oFF.QDimension.prototype.setHierarchyActive = function(active) {
		return this.m_hierarchyManager.setHierarchyActive(active);
	};
	oFF.QDimension.prototype.getHierarchyVersion = function() {
		return this.m_hierarchyManager.getHierarchyVersion();
	};
	oFF.QDimension.prototype.getHierarchyDueDate = function() {
		return this.m_hierarchyManager.getHierarchyDueDate();
	};
	oFF.QDimension.prototype.isHierarchyActive = function() {
		return this.m_hierarchyManager.isHierarchyActive();
	};
	oFF.QDimension.prototype.getHierarchy = function() {
		return this.m_hierarchyManager.getHierarchy();
	};
	oFF.QDimension.prototype.setHierarchy = function(hierarchy) {
		this.m_hierarchyManager.setHierarchy(hierarchy);
	};
	oFF.QDimension.prototype.getHierarchyName = function() {
		return this.m_hierarchyManager.getHierarchyName();
	};
	oFF.QDimension.prototype.isHierarchyAssigned = function() {
		return this.m_hierarchyManager.isHierarchyAssigned();
	};
	oFF.QDimension.prototype.isHierarchyAssignedAndActive = function() {
		return this.m_hierarchyManager.isHierarchyAssignedAndActive();
	};
	oFF.QDimension.prototype.getLowerLevelNodeAlignment = function() {
		return this.m_hierarchyManager.getLowerLevelNodeAlignment();
	};
	oFF.QDimension.prototype.hasDefaultLowerLevelNodeAlignment = function() {
		return this.m_hierarchyManager.hasDefaultLowerLevelNodeAlignment();
	};
	oFF.QDimension.prototype.setLowerLevelNodeAlignment = function(alignment) {
		this.m_hierarchyManager.setLowerLevelNodeAlignment(alignment);
	};
	oFF.QDimension.prototype.supportsLowerLevelNodeAlignment = function(
			alignment) {
		return this.m_hierarchyManager
				.supportsLowerLevelNodeAlignment(alignment);
	};
	oFF.QDimension.prototype.hasNodeCondensation = function() {
		return this.m_hierarchyManager.hasNodeCondensation();
	};
	oFF.QDimension.prototype.setHasNodeCondensation = function(condense) {
		this.m_hierarchyManager.setHasNodeCondensation(condense);
	};
	oFF.QDimension.prototype.getMemberOfPostedNodeVisibility = function() {
		return this.m_hierarchyManager.getMemberOfPostedNodeVisibility();
	};
	oFF.QDimension.prototype.setMemberOfPostedNodeVisibility = function(
			visibility) {
		this.m_hierarchyManager.setMemberOfPostedNodeVisibility(visibility);
	};
	oFF.QDimension.prototype.getHierarchyValueHelp = function(syncType) {
		return this.m_hierarchyManager.getHierarchyValueHelp(syncType);
	};
	oFF.QDimension.prototype.getInitialDrillLevel = function() {
		return this.m_hierarchyManager.getInitialDrillLevel();
	};
	oFF.QDimension.prototype.setInitialDrillLevel = function(relativeLevelCount) {
		this.m_hierarchyManager.setInitialDrillLevel(relativeLevelCount);
	};
	oFF.QDimension.prototype.getHierarchyDueDateVariableName = function() {
		return this.m_hierarchyManager.getHierarchyDueDateVariableName();
	};
	oFF.QDimension.prototype.setHierarchyDueDateVariableName = function(name) {
		this.m_hierarchyManager.setHierarchyDueDateVariableName(name);
	};
	oFF.QDimension.prototype.useHierarchyDueDateVariable = function() {
		return this.m_hierarchyManager.useHierarchyDueDateVariable();
	};
	oFF.QDimension.prototype.setUseHierarchyDueDateVariable = function(
			useVariable) {
		this.m_hierarchyManager.setUseHierarchyDueDateVariable(useVariable);
	};
	oFF.QDimension.prototype.supportsHierarchy = function() {
		return this.m_hierarchyManager.supportsHierarchy();
	};
	oFF.QDimension.prototype.getHierarchies = function() {
		return this.m_hierarchyManager.getHierarchies();
	};
	oFF.QDimension.prototype.supportsHierarchyMetadata = function() {
		return this.m_hierarchyManager.supportsHierarchyMetadata();
	};
	oFF.QDimension.prototype.supportsHierarchyLevelMetadata = function() {
		return this.m_hierarchyManager.supportsHierarchyLevelMetadata();
	};
	oFF.QDimension.prototype.supportsDimensionHierarchyLevels = function() {
		return this.m_hierarchyManager.supportsDimensionHierarchyLevels();
	};
	oFF.QDimension.prototype.supportsExpandBottomUp = function() {
		return this.m_hierarchyManager.supportsExpandBottomUp();
	};
	oFF.QDimension.prototype.getHierarchyManager = function() {
		return this.m_hierarchyManager;
	};
	oFF.QDimension.prototype.getHierarchyManagerBase = function() {
		return this.m_hierarchyManager;
	};
	oFF.QDimension.prototype.getOrderedStructureMemberNames = function() {
		if (oFF.isNull(this.m_allStructureMembers)
				|| this.m_allStructureMembers.isEmpty()) {
			return null;
		}
		return this.m_allStructureMembers.getKeysAsReadOnlyListOfString();
	};
	oFF.QDimension.prototype.reOrderStructureMembers = function(
			orderedStructureMemberNames) {
		var existingOrder;
		var orderIsEqual;
		var i;
		var memberName;
		var tmpStructureMembers;
		var orderedNamesIndex;
		var structureMember;
		if (oFF.isNull(this.m_allStructureMembers)) {
			return;
		}
		if (oFF.isNull(orderedStructureMemberNames)) {
			return;
		}
		if (this.m_allStructureMembers.size() !== orderedStructureMemberNames
				.size()) {
			return;
		}
		existingOrder = this.m_allStructureMembers
				.getKeysAsReadOnlyListOfString();
		if (existingOrder.size() !== orderedStructureMemberNames.size()) {
			return;
		}
		orderIsEqual = true;
		for (i = 0; i < orderedStructureMemberNames.size(); i++) {
			memberName = orderedStructureMemberNames.get(i);
			if (!oFF.XString.isEqual(memberName, existingOrder.get(i))) {
				orderIsEqual = false;
				break;
			}
		}
		if (orderIsEqual) {
			return;
		}
		tmpStructureMembers = oFF.XListOfNameObject.create();
		for (orderedNamesIndex = 0; orderedNamesIndex < orderedStructureMemberNames
				.size(); orderedNamesIndex++) {
			structureMember = this.m_allStructureMembers
					.getByKey(orderedStructureMemberNames
							.get(orderedNamesIndex));
			if (oFF.isNull(structureMember)) {
				continue;
			}
			tmpStructureMembers.add(structureMember);
		}
		if (this.m_allStructureMembers.size() !== tmpStructureMembers.size()) {
			oFF.XObjectExt.release(tmpStructureMembers);
			return;
		}
		oFF.XObjectExt.release(this.m_allStructureMembers);
		this.m_allStructureMembers = tmpStructureMembers;
	};
	oFF.QDimension.prototype.clearAllFields = function() {
		this.m_fieldContainer.clearAllFields();
	};
	oFF.QDimension.prototype.removeFieldByName = function(fieldName) {
		this.m_fieldContainer.removeFieldByName(fieldName);
	};
	oFF.QDimension.prototype.getDefaultHierarchyName = function() {
		return this.m_hierarchyManager.getDefaultHierarchyName();
	};
	oFF.QDimension.prototype.getMetadata = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_metadata);
	};
	oFF.QDimension.prototype.setMetadata = function(metadata) {
		this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(metadata);
	};
	oFF.QDimension.prototype.getMetadataBase = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_metadata);
	};
	oFF.QDimension.prototype.getUniversalDisplayHierarchy = function() {
		var queryModel = this.getQueryModel();
		var universalDisplayHierarchies;
		if (oFF.notNull(queryModel)) {
			universalDisplayHierarchies = queryModel
					.getUniversalDisplayHierarchies();
			if (oFF.notNull(universalDisplayHierarchies)) {
				return universalDisplayHierarchies.getByName(this.getName());
			}
		}
		return null;
	};
	oFF.QDimension.prototype.isUniversalDisplayHierarchyDimension = function() {
		return this.getUniversalDisplayHierarchy() !== null;
	};
	oFF.QDimension.prototype.getUDHWithThisDimensionIncluded = function() {
		var queryModel = this.getQueryModel();
		var universalDisplayHierarchies;
		if (oFF.notNull(queryModel)) {
			universalDisplayHierarchies = queryModel
					.getUniversalDisplayHierarchies();
			if (oFF.notNull(universalDisplayHierarchies)) {
				return universalDisplayHierarchies.getByIncludedDimension(this);
			}
		}
		return null;
	};
	oFF.QDimension.prototype.isPartOfActiveUDH = function() {
		var udh = this.getUDHWithThisDimensionIncluded();
		return oFF.notNull(udh) && udh.isActive();
	};
	oFF.QDimension.prototype.isEnforcedDynamicValue = function() {
		if (this.getMetadataBase() === null) {
			return false;
		}
		return this.getMetadataBase().isEnforcedDynamicValue();
	};
	oFF.QDimension.prototype.setSkipMetadataValidationOnRepoImport = function(
			skipMetadataValidationOnRepoImport) {
		this.m_skipMetadataValidationOnRepoImport = skipMetadataValidationOnRepoImport;
	};
	oFF.QDimension.prototype.getSkipMetadataValidationOnRepoImport = function() {
		return this.m_skipMetadataValidationOnRepoImport;
	};
	oFF.QDimension.prototype.setHierachyNavigationField = function(field) {
		this.m_fieldContainer.setHierachyNavigationField(field);
	};
	oFF.QDimension.prototype.getHierarchyNavigationField = function() {
		return this.m_fieldContainer.getHierarchyNavigationField();
	};
	oFF.QDimension.prototype.getNumberOfHierarchies = function() {
		return this.getHierarchyManager().getNumberOfHierarchies();
	};
	oFF.QDimension.prototype.hasAlternativeFieldValuesDefined = function() {
		return oFF.notNull(this.m_alternativeFieldValues);
	};
	oFF.QDimension.prototype.getValueType = function() {
		return this.getMetadata().getValueType();
	};
	oFF.QDimension.prototype.isPrivate = function() {
		return this.getMetadata().isPrivate();
	};
	oFF.QDimension.prototype.isHierarchyMandatory = function() {
		return this.getMetadata().isHierarchyMandatory();
	};
	oFF.QDimension.prototype.getGeoShapeField = function() {
		return this.m_fieldContainer.getGeoShapeField();
	};
	oFF.QDimension.prototype.getGeoPointField = function() {
		return this.m_fieldContainer.getGeoPointField();
	};
	oFF.QDimension.prototype.getGeoLevelField = function() {
		return this.m_fieldContainer.getGeoLevelField();
	};
	oFF.QDimension.prototype.getGeoAreaNameField = function() {
		return this.m_fieldContainer.getGeoAreaNameField();
	};
	oFF.QDimension.prototype.setGeoShapeField = function(field) {
		this.m_fieldContainer.setGeoShapeField(field);
	};
	oFF.QDimension.prototype.setGeoPointField = function(field) {
		this.m_fieldContainer.setGeoPointField(field);
	};
	oFF.QDimension.prototype.setGeoLevelField = function(field) {
		this.m_fieldContainer.setGeoLevelField(field);
	};
	oFF.QDimension.prototype.setGeoAreaNameField = function(field) {
		this.m_fieldContainer.setGeoAreaNameField(field);
	};
	oFF.QDimension.prototype.getVisibility = function() {
		return this.m_dimensionVisibility;
	};
	oFF.QDimension.prototype.setVisibility = function(dimensionVisibility) {
		this.m_dimensionVisibility = dimensionVisibility;
	};
	oFF.QDimension.prototype.getDefaultMemberValue = function() {
		return this.m_defaultMemberValue;
	};
	oFF.QDimension.prototype.setDefaultMemberValue = function(
			defaultMemberValue) {
		this.m_defaultMemberValue = defaultMemberValue;
	};
	oFF.QAbstractDimensionMember = function() {
	};
	oFF.QAbstractDimensionMember.prototype = new oFF.AbstractValueAccessComponent();
	oFF.QAbstractDimensionMember.prototype.m_dimension = null;
	oFF.QAbstractDimensionMember.prototype.m_memberType = null;
	oFF.QAbstractDimensionMember.prototype.setupAbstractDimensionMember = function(
			context, dimension) {
		this.setupModelComponent(context, dimension);
		this.setDimension(dimension);
	};
	oFF.QAbstractDimensionMember.prototype.copyAbstractDimensionMember = function(
			origin) {
		var queryModel;
		var originDimension;
		oFF.AbstractValueAccessComponent.prototype.copyModelComponent.call(
				this, origin);
		queryModel = this.getQueryModel();
		originDimension = origin.getDimension();
		if (oFF.isNull(originDimension)) {
			originDimension = origin.getParentComponent();
		}
		this.setDimension(queryModel
				.getDimensionByNameFromExistingMetadata(originDimension
						.getName()));
	};
	oFF.QAbstractDimensionMember.prototype.releaseObject = function() {
		this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
		this.m_memberType = null;
		oFF.AbstractValueAccessComponent.prototype.releaseObject.call(this);
	};
	oFF.QAbstractDimensionMember.prototype.getDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
	};
	oFF.QAbstractDimensionMember.prototype.setDimension = function(dimension) {
		this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
	};
	oFF.QAbstractDimensionMember.prototype.setType = function(type) {
		this.m_memberType = type;
	};
	oFF.QAbstractDimensionMember.prototype.getType = function() {
		return this.getMemberType();
	};
	oFF.QAbstractDimensionMember.prototype.getMemberType = function() {
		return this.m_memberType;
	};
	oFF.QAbstractDimensionMember.prototype.getOlapComponentType = function() {
		return this.m_memberType;
	};
	oFF.QAbstractDimensionMember.prototype.getDimensionMember = function() {
		return this;
	};
	oFF.QAbstractDimensionMember.prototype.getSelectableElement = function() {
		return this;
	};
	oFF.QAbstractDimensionMember.prototype.isNode = function() {
		return this.getMemberType().isNode();
	};
	oFF.QFieldCalcDim = function() {
	};
	oFF.QFieldCalcDim.prototype = new oFF.QField();
	oFF.QFieldCalcDim._createFieldCalcDim = function(context, dimension, type) {
		var fieldCalcDim = new oFF.QFieldCalcDim();
		fieldCalcDim.setupField(context, dimension, type);
		fieldCalcDim.m_presentationType = type;
		return fieldCalcDim;
	};
	oFF.QFieldCalcDim.prototype.m_presentationType = null;
	oFF.QFieldCalcDim.prototype.m_valueType = null;
	oFF.QFieldCalcDim.prototype.copyField = function(origin) {
		oFF.QField.prototype.copyField.call(this, origin);
		this.setValueType(origin.getValueType());
	};
	oFF.QFieldCalcDim.prototype.setValueType = function(valueType) {
		this.m_valueType = valueType;
	};
	oFF.QFieldCalcDim.prototype.getAliasName = function() {
		return null;
	};
	oFF.QFieldCalcDim.prototype.releaseObject = function() {
		this.m_presentationType = null;
		this.m_valueType = null;
		oFF.QField.prototype.releaseObject.call(this);
	};
	oFF.QFieldCalcDim.prototype.getUsageType = function() {
		return null;
	};
	oFF.QFieldCalcDim.prototype.getValueType = function() {
		if (oFF.notNull(this.m_valueType)) {
			return this.m_valueType;
		}
		return oFF.XValueType.STRING;
	};
	oFF.QFieldCalcDim.prototype.getPresentationType = function() {
		return this.m_presentationType;
	};
	oFF.QFieldCalcDim.prototype.isCubeBlendingPropertiesField = function() {
		return false;
	};
	oFF.QFieldCalcDim.prototype.isDefaultTextField = function() {
		return false;
	};
	oFF.QFieldCalcDim.prototype.isDisplayAttributeField = function() {
		return false;
	};
	oFF.QFieldCalcDim.prototype.isFlatKeyField = function() {
		return this.m_presentationType === oFF.PresentationType.KEY;
	};
	oFF.QFieldCalcDim.prototype.isKeyField = function() {
		return this.m_presentationType === oFF.PresentationType.KEY;
	};
	oFF.QFieldCalcDim.prototype.isHierarchyKeyField = function() {
		return false;
	};
	oFF.QFieldCalcDim.prototype.isHierarchyPathField = function() {
		return false;
	};
	oFF.QFieldCalcDim.prototype.isFilterable = function() {
		return true;
	};
	oFF.QFieldCalcDim.prototype.isHierarchyNavigationField = function() {
		return false;
	};
	oFF.QFieldValue = function() {
	};
	oFF.QFieldValue.prototype = new oFF.AbstractValueAccessComponent();
	oFF.QFieldValue._create = function(context) {
		var fieldValue = new oFF.QFieldValue();
		fieldValue.setupFieldValue(context, null, null,
				oFF.MemberType.FIELD_VALUE);
		return fieldValue;
	};
	oFF.QFieldValue.create = function(context, field, dimensionMember) {
		var fieldValue = new oFF.QFieldValue();
		fieldValue.setupFieldValue(context, field, dimensionMember,
				oFF.MemberType.FIELD_VALUE);
		return fieldValue;
	};
	oFF.QFieldValue.createLiteral = function(context, field) {
		var fieldValue = new oFF.QFieldValue();
		fieldValue.setupFieldValue(context, field, null,
				oFF.MemberType.LITERAL_MEMBER);
		return fieldValue;
	};
	oFF.QFieldValue.prototype.m_value = null;
	oFF.QFieldValue.prototype.m_valueException = null;
	oFF.QFieldValue.prototype.m_formattedValue = null;
	oFF.QFieldValue.prototype.m_dimensionMember = null;
	oFF.QFieldValue.prototype.m_field = null;
	oFF.QFieldValue.prototype.m_memberType = null;
	oFF.QFieldValue.prototype.m_isStarWildcardEnabled = false;
	oFF.QFieldValue.prototype.setupFieldValue = function(context, field,
			dimensionMember, memberType) {
		this.setupModelComponent(context, null);
		this.setDimensionMember(dimensionMember);
		this.m_field = field;
		this.m_memberType = memberType;
	};
	oFF.QFieldValue.prototype.isEqualTo = function(other) {
		var xOther;
		if (this === other) {
			return true;
		}
		if (oFF.isNull(other)) {
			return false;
		}
		xOther = other;
		if (this.m_dimensionMember !== xOther.m_dimensionMember) {
			return false;
		}
		if (this.m_field !== xOther.m_field) {
			return false;
		}
		if (!oFF.XString
				.isEqual(this.m_formattedValue, xOther.m_formattedValue)) {
			return false;
		}
		if (this.m_isStarWildcardEnabled !== xOther.m_isStarWildcardEnabled) {
			return false;
		}
		if (this.m_memberType !== xOther.m_memberType) {
			return false;
		}
		if (!oFF.XObjectExt.areEqual(this.m_value, xOther.m_value)) {
			return false;
		}
		if (this.m_valueException !== xOther.m_valueException) {
			return false;
		}
		return true;
	};
	oFF.QFieldValue.prototype.cloneOlapComponent = function(context, parent) {
		var clone = new oFF.QFieldValue();
		clone.setupFieldValue(context, null, null, this.m_memberType);
		clone.copyFieldValue(this);
		return clone;
	};
	oFF.QFieldValue.prototype.setFieldValue = function(other) {
		this.m_value = other.getValue() === null ? null : other.getValue()
				.clone();
		this.m_valueException = other.getValueException();
		this.m_formattedValue = other.getFormattedValue();
		this.m_field = other.getField();
		this.m_memberType = other.getMemberType();
		this.m_dimensionMember = other.getDimensionMember();
		this.notifyNodeChanged();
	};
	oFF.QFieldValue.prototype.copyFrom = function(source) {
	};
	oFF.QFieldValue.prototype.copyFieldValue = function(origin) {
		var variableValue;
		var correctVariable;
		var origMember;
		var originName;
		var dimName;
		var cloneDimension;
		var cloneMember;
		oFF.AbstractValueAccessComponent.prototype.copyModelComponent.call(
				this, origin);
		if (oFF.isNull(origin.m_value)) {
			this.m_value = null;
		} else {
			this.m_value = origin.m_value.clone();
			if (origin.m_value.getValueType() === oFF.XValueType.VARIABLE) {
				variableValue = this.m_value;
				correctVariable = this.getVariableContainer().getVariable(
						variableValue.getVariable().getName());
				variableValue.setVariable(correctVariable);
			}
		}
		this.m_valueException = origin.m_valueException;
		this.m_formattedValue = origin.m_formattedValue;
		if (oFF.notNull(origin.m_field)) {
			this.m_field = this.getContext().getFieldAccessorSingle()
					.getFieldByName(origin.m_field.getName());
		}
		this.m_memberType = origin.m_memberType;
		this.m_isStarWildcardEnabled = origin.m_isStarWildcardEnabled;
		if (oFF.notNull(origin.m_dimensionMember)) {
			origMember = origin.getDimensionMember();
			if (oFF.notNull(origMember)) {
				originName = origMember.getName();
				if (oFF.notNull(originName)) {
					dimName = origMember.getDimension().getName();
					cloneDimension = this.getDimensionAccessor()
							.getDimensionByNameFromExistingMetadata(dimName);
					cloneMember = cloneDimension.getDimensionMember(originName);
					if (oFF.notNull(cloneMember)) {
						this.setDimensionMember(cloneMember);
					}
				}
			}
		}
	};
	oFF.QFieldValue.prototype.mergeDeepRecursive = function(settings, other) {
		var otherFieldValue = other;
		var otherValue = otherFieldValue.getValue();
		if (oFF.notNull(this.m_value) && oFF.notNull(otherValue)
				&& !this.m_value.isEqualTo(otherValue)) {
			this.m_value = otherValue.clone();
		}
	};
	oFF.QFieldValue.prototype.releaseObject = function() {
		this.m_value = oFF.XObjectExt.release(this.m_value);
		this.m_dimensionMember = null;
		this.m_formattedValue = null;
		this.m_valueException = null;
		this.m_field = null;
		oFF.AbstractValueAccessComponent.prototype.releaseObject.call(this);
	};
	oFF.QFieldValue.prototype.getType = function() {
		return this.getMemberType();
	};
	oFF.QFieldValue.prototype.getMemberType = function() {
		return this.m_memberType;
	};
	oFF.QFieldValue.prototype.getField = function() {
		return this.m_field;
	};
	oFF.QFieldValue.prototype.getFieldBase = function() {
		return this.m_field;
	};
	oFF.QFieldValue.prototype.getSelectValue = function() {
		return this.getString();
	};
	oFF.QFieldValue.prototype.getSelectField = function() {
		return this.m_field;
	};
	oFF.QFieldValue.prototype.getSelectHierarchyName = function() {
		return null;
	};
	oFF.QFieldValue.prototype.getFormattedValue = function() {
		if (this.getField() !== null
				&& this.getField().getPresentationType() === oFF.PresentationType.URL) {
			return oFF.XHttpUtils.decodeURIComponent(this.m_formattedValue);
		}
		return this.m_formattedValue;
	};
	oFF.QFieldValue.prototype.setFormattedValue = function(formattedValue) {
		this.m_formattedValue = formattedValue;
	};
	oFF.QFieldValue.prototype.getValue = function() {
		return this.m_value;
	};
	oFF.QFieldValue.prototype.setValue = function(value) {
		this.m_value = value;
		this.notifyNodeChanged();
	};
	oFF.QFieldValue.prototype.setXValue = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.getDimension = function() {
		var field = this.getField();
		return oFF.isNull(field) ? null : field.getDimension();
	};
	oFF.QFieldValue.prototype.getDimensionMember = function() {
		var field;
		if (oFF.isNull(this.m_dimensionMember)) {
			field = this.getField();
			if (oFF.notNull(field) && field.isKeyField()) {
				this.m_dimensionMember = field.getDimension()
						.getDimensionMemberWithValue(this.getValue(), field);
			}
		}
		return this.m_dimensionMember;
	};
	oFF.QFieldValue.prototype.setDimensionMember = function(dimensionMember) {
		this.m_dimensionMember = dimensionMember;
	};
	oFF.QFieldValue.prototype.assertNumeric = function(value) {
		if (oFF.XMath.isNaN(value)) {
			throw oFF.XException
					.createIllegalArgumentException("The value must not be NaN!");
		}
	};
	oFF.QFieldValue.prototype.setDouble = function(value) {
		this.assertNumeric(value);
		this.setValue(oFF.XDoubleValue.create(value));
	};
	oFF.QFieldValue.prototype.setInteger = function(value) {
		this.assertNumeric(value);
		this.setValue(oFF.XIntegerValue.create(value));
	};
	oFF.QFieldValue.prototype.setLong = function(value) {
		this.assertNumeric(value);
		this.setValue(oFF.XLongValue.create(value));
	};
	oFF.QFieldValue.prototype.setDate = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setTime = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setTimeSpan = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setPolygon = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setPoint = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.getString = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		} else {
			if (value.getValueType() === oFF.XValueType.STRING) {
				return value.getString();
			}
		}
		return value.toString();
	};
	oFF.QFieldValue.prototype.setString = function(value) {
		this.setValue(oFF.XStringValue.create(value));
	};
	oFF.QFieldValue.prototype.setBoolean = function(value) {
		this.setValue(oFF.XBooleanValue.create(value));
	};
	oFF.QFieldValue.prototype.setStructureValue = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setStructureListValue = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setPropertiesValue = function(properties) {
		this.setValue(properties);
	};
	oFF.QFieldValue.prototype.setDateTime = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setMultiPolygon = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setLineString = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setMultiLineString = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setNullByType = function(nullValueType) {
	};
	oFF.QFieldValue.prototype.setMultiPoint = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.getValueException = function() {
		return this.m_valueException;
	};
	oFF.QFieldValue.prototype.setValueException = function(valueException) {
		this.m_valueException = valueException;
	};
	oFF.QFieldValue.prototype.parseString = oFF.noSupport;
	oFF.QFieldValue.prototype.setLiteralString = function(value) {
		this.setValue(oFF.XStringValue.create(value));
	};
	oFF.QFieldValue.prototype.setLiteralPolygon = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setLiteralInt = function(value) {
		this.setValue(oFF.XIntegerValue.create(value));
	};
	oFF.QFieldValue.prototype.setLiteralLong = function(value) {
		this.setValue(oFF.XLongValue.create(value));
	};
	oFF.QFieldValue.prototype.setLiteralDouble = function(value) {
		this.setValue(oFF.XDoubleValue.create(value));
	};
	oFF.QFieldValue.prototype.setLiteralDate = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.setLiteralTimespan = function(timespan) {
		this.setValue(oFF.XTimeSpan.create(timespan));
	};
	oFF.QFieldValue.prototype.setLiteralPoint = function(value) {
		this.setValue(value);
	};
	oFF.QFieldValue.prototype.supportsStarWildcard = function() {
		return true;
	};
	oFF.QFieldValue.prototype.isStarWildcardEnabled = function() {
		return this.m_isStarWildcardEnabled;
	};
	oFF.QFieldValue.prototype.setIsStarWildcardEnabled = function(isEnabled) {
		this.m_isStarWildcardEnabled = isEnabled;
	};
	oFF.QFieldValue.prototype.hasValue = function() {
		return oFF.notNull(this.m_value);
	};
	oFF.QFieldValue.prototype.getSelectableElement = function() {
		return this;
	};
	oFF.QFieldValue.prototype.isNode = function() {
		return this.getMemberType().isNode();
	};
	oFF.QFieldValue.prototype.toString = function() {
		var buffer = oFF.XStringBuffer.create();
		if (oFF.notNull(this.m_field)) {
			buffer.append(this.m_field.toString());
		}
		if (oFF.notNull(this.m_value)) {
			buffer.append(": '").append(this.m_value.toString()).append("'");
		}
		return buffer.toString();
	};
	oFF.QFilterCapabilityGroup = function() {
	};
	oFF.QFilterCapabilityGroup.prototype = new oFF.QModelComponent();
	oFF.QFilterCapabilityGroup._createFilterCapabilityGroup = function(context,
			parentContext, field) {
		var selectionCapabilities = new oFF.QFilterCapabilityGroup();
		selectionCapabilities.setupSelectionCapabilities(context,
				parentContext, field);
		return selectionCapabilities;
	};
	oFF.QFilterCapabilityGroup.prototype.m_fieldName = null;
	oFF.QFilterCapabilityGroup.prototype.m_group = null;
	oFF.QFilterCapabilityGroup.prototype.copyFilterCapabilityGroup = function(
			origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_fieldName = origin.m_fieldName;
		this.m_group = origin.m_group;
	};
	oFF.QFilterCapabilityGroup.prototype.setupSelectionCapabilities = function(
			context, parentContext, field) {
		this.setupModelComponent(context, parentContext);
		if (oFF.notNull(field)) {
			this.m_fieldName = field.getName();
		}
	};
	oFF.QFilterCapabilityGroup.prototype.releaseObject = function() {
		this.m_fieldName = null;
		this.m_group = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFilterCapabilityGroup.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FILTER_CAPABILITY_GROUP;
	};
	oFF.QFilterCapabilityGroup.prototype.getGroup = function() {
		return this.m_group;
	};
	oFF.QFilterCapabilityGroup.prototype.getFieldName = function() {
		return this.m_fieldName;
	};
	oFF.QFilterCapabilityGroup.prototype.getSupportedSetSign = function() {
		if (oFF.isNull(this.m_group) || this.m_group.getSetSigns() === null) {
			return oFF.XListOfNameObject.create();
		}
		return this.m_group.getSetSigns();
	};
	oFF.QFilterCapabilityGroup.prototype.supportsSetSign = function(setSign) {
		return oFF.notNull(this.m_group)
				&& this.m_group.getSetSigns().contains(setSign);
	};
	oFF.QFilterCapabilityGroup.prototype.getSupportedComparisonOperators = function(
			setSign) {
		if (oFF.isNull(this.m_group)
				|| this.m_group.getComparisonOperatorsForSign(setSign) === null) {
			return oFF.XListOfNameObject.create();
		}
		return this.m_group.getComparisonOperatorsForSign(setSign);
	};
	oFF.QFilterCapabilityGroup.prototype.isFilterCapabilityGroup = function() {
		return true;
	};
	oFF.QFilterCapabilityGroup.prototype.setGroup = function(group) {
		this.m_group = group;
	};
	oFF.QFilterCellValueOperand = function() {
	};
	oFF.QFilterCellValueOperand.prototype = new oFF.QFilterElement();
	oFF.QFilterCellValueOperand._create = function(context, parentNode,
			lowValue, highValue, comparisonOperator) {
		var cvo = new oFF.QFilterCellValueOperand();
		cvo.setupCellValueOperand(context, parentNode, lowValue, highValue,
				comparisonOperator);
		return cvo;
	};
	oFF.QFilterCellValueOperand.createWithExpression = function(context,
			selectionContainer, parentNode) {
		var obj = new oFF.QFilterCellValueOperand();
		obj.setupFilterElement(context, selectionContainer, parentNode);
		obj.setupCellValueOperand(context, parentNode, null, null,
				oFF.ComparisonOperator.EQUAL);
		return obj;
	};
	oFF.QFilterCellValueOperand.createWithVariable = function(context,
			parentNode, lowVariable, highVariable, comparisonOperator) {
		var cvo = new oFF.QFilterCellValueOperand();
		cvo.setupCellValueOperand(context, parentNode, lowVariable.getName(),
				null, comparisonOperator);
		cvo.m_lowValue.setVariableValue(lowVariable);
		cvo.m_highValue.setVariableValue(highVariable);
		return cvo;
	};
	oFF.QFilterCellValueOperand.createForNullSuppression = function(context,
			parentNode) {
		var cvo = new oFF.QFilterCellValueOperand();
		cvo.setupCellValueOperand(context, parentNode, null, null,
				oFF.ComparisonOperator.IS_NULL);
		cvo.setIsExcluding(true);
		return cvo;
	};
	oFF.QFilterCellValueOperand.prototype.m_isExcluding = false;
	oFF.QFilterCellValueOperand.prototype.m_lowValue = null;
	oFF.QFilterCellValueOperand.prototype.m_highValue = null;
	oFF.QFilterCellValueOperand.prototype.m_operator = null;
	oFF.QFilterCellValueOperand.prototype.copyCellValueOperand = function(
			origin) {
		oFF.QFilterElement.prototype.copyModelComponent.call(this, origin);
		this.m_operator = origin.m_operator;
		this.m_isExcluding = origin.m_isExcluding;
		if (oFF.notNull(origin.m_lowValue)) {
			this.getLowValue().copyFilterValueBag(origin.getLowValue());
		}
		if (oFF.notNull(origin.m_highValue)) {
			this.getHighValue().copyFilterValueBag(origin.getHighValue());
		}
	};
	oFF.QFilterCellValueOperand.prototype.setupCellValueOperand = function(
			context, parentNode, lowValue, highValue, comparisonOperator) {
		this.setupModelComponent(context, parentNode);
		this.m_isExcluding = false;
		this.setComparisonOperator(comparisonOperator);
		this.m_lowValue = oFF.QFilterValueBag._create(context, null, this);
		this.m_lowValue.setString(lowValue);
		this.m_highValue = oFF.QFilterValueBag._create(context, null, this);
		this.m_highValue.setString(highValue);
	};
	oFF.QFilterCellValueOperand.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FILTER_CELL_VALUE_OPERAND;
	};
	oFF.QFilterCellValueOperand.prototype.isEqualTo = function(other) {
		var otherCvo;
		if (oFF.isNull(other)) {
			return false;
		}
		if (this === other) {
			return true;
		}
		otherCvo = other;
		if (!oFF.XString.isEqual(this.getLow(), otherCvo.getLow())) {
			return false;
		}
		if (this.isLowVariable() !== otherCvo.isLowVariable()) {
			return false;
		}
		if (!oFF.XString.isEqual(this.getHigh(), otherCvo.getHigh())) {
			return false;
		}
		if (this.isHighVariable() !== otherCvo.isHighVariable()) {
			return false;
		}
		if (this.getComparisonOperator() !== otherCvo.getComparisonOperator()) {
			return false;
		}
		if (this.isExcluding() !== otherCvo.isExcluding()) {
			return false;
		}
		return true;
	};
	oFF.QFilterCellValueOperand.prototype.releaseObject = function() {
		this.m_highValue = oFF.XObjectExt.release(this.m_highValue);
		this.m_lowValue = oFF.XObjectExt.release(this.m_lowValue);
		this.m_operator = null;
		oFF.QFilterElement.prototype.releaseObject.call(this);
	};
	oFF.QFilterCellValueOperand.prototype.isExcluding = function() {
		return this.m_isExcluding;
	};
	oFF.QFilterCellValueOperand.prototype.setIsExcluding = function(isExcluding) {
		this.m_isExcluding = isExcluding;
	};
	oFF.QFilterCellValueOperand.prototype.getLow = function() {
		return this.m_lowValue.getString();
	};
	oFF.QFilterCellValueOperand.prototype.isLowVariable = function() {
		return this.m_lowValue.getValueType() === oFF.XValueType.VARIABLE;
	};
	oFF.QFilterCellValueOperand.prototype.setLow = function(lowValue) {
		this.m_lowValue.setString(lowValue);
	};
	oFF.QFilterCellValueOperand.prototype.setLowVariable = function(variable) {
		if (oFF.isNull(variable)) {
			this.setLow(null);
		} else {
			this.m_lowValue.setVariableValue(variable);
		}
	};
	oFF.QFilterCellValueOperand.prototype.getHigh = function() {
		return this.m_highValue.getString();
	};
	oFF.QFilterCellValueOperand.prototype.isHighVariable = function() {
		return this.m_highValue.getValueType() === oFF.XValueType.VARIABLE;
	};
	oFF.QFilterCellValueOperand.prototype.setHigh = function(highValue) {
		this.m_highValue.setString(highValue);
	};
	oFF.QFilterCellValueOperand.prototype.setHighVariable = function(variable) {
		if (oFF.isNull(variable)) {
			this.setHigh(null);
		} else {
			this.m_highValue.setVariableValue(variable);
		}
	};
	oFF.QFilterCellValueOperand.prototype.getComparisonOperator = function() {
		return this.m_operator;
	};
	oFF.QFilterCellValueOperand.prototype.setComparisonOperator = function(
			comparisonOperator) {
		this.m_operator = comparisonOperator;
	};
	oFF.QFilterCellValueOperand.prototype.getLowValue = function() {
		return this.m_lowValue;
	};
	oFF.QFilterCellValueOperand.prototype.getHighValue = function() {
		return this.m_highValue;
	};
	oFF.QFilterCellValueOperand.prototype.getValueAt = function(index) {
		if (index === 0) {
			return this.m_lowValue;
		}
		if (index === 1) {
			return this.m_highValue;
		}
		return null;
	};
	oFF.QFilterCellValueOperand.prototype.size = function() {
		return 2;
	};
	oFF.QFilterCellValueOperand.prototype.isEmpty = function() {
		return false;
	};
	oFF.QFilterCellValueOperand.prototype.hasElements = function() {
		return true;
	};
	oFF.QFilterExpression = function() {
	};
	oFF.QFilterExpression.prototype = new oFF.QModelComponent();
	oFF.QFilterExpression.create = function(context, selector) {
		var filterExp = new oFF.QFilterExpression();
		filterExp.setupFilterExpression(context, selector);
		return filterExp;
	};
	oFF.QFilterExpression._createByApplication = function(context, parentNode) {
		var filterExp = new oFF.QFilterExpression();
		filterExp.setupFilterExpression(context, parentNode);
		return filterExp;
	};
	oFF.QFilterExpression.compareFilter = function(s1, s2) {
		if (oFF.isNull(s1) || oFF.isNull(s2)) {
			throw oFF.XException.createRuntimeException("null comparison");
		}
		if (s1.getComparisonOperator() !== s2.getComparisonOperator()) {
			return false;
		}
		if (s1.getExactness() !== s2.getExactness()) {
			return false;
		}
		if (!oFF.QFilterExpression.compareField(s1.getField(), s2.getField())) {
			return false;
		}
		if (s1.hasDepth() !== s2.hasDepth()) {
			return false;
		}
		if (s1.hasDepth() && s1.getDepth() !== s2.getDepth()) {
			return false;
		}
		if (s1.hasLevelOffset() !== s2.hasLevelOffset()) {
			return false;
		}
		if (s1.getLevelOffset() !== s2.getLevelOffset()) {
			return false;
		}
		if (!oFF.QFilterExpression.compareFilterValueBag(s1.getHigh(), s2
				.getHigh())) {
			return false;
		}
		return oFF.QFilterExpression.compareFilterValueBag(s1.getLow(), s2
				.getLow());
	};
	oFF.QFilterExpression.compareFilterValueBag = function(b1, b2) {
		var starWildcard1;
		var starWildcard2;
		if (b1 === b2) {
			return false;
		}
		if (oFF.isNull(b1) || oFF.isNull(b2)) {
			return false;
		}
		starWildcard1 = b1.supportsStarWildcard() && b1.isStarWildcardEnabled();
		starWildcard2 = b2.supportsStarWildcard() && b2.isStarWildcardEnabled();
		return starWildcard1 === starWildcard2
				&& oFF.QFilterExpression.compareValue(b1.getValue(), b2
						.getValue());
	};
	oFF.QFilterExpression.compareValue = function(v1, v2) {
		if (v1 === v2) {
			return true;
		}
		if (oFF.isNull(v1) || oFF.isNull(v2)) {
			return false;
		}
		if (v1.getValueType() !== v2.getValueType()) {
			return false;
		}
		return v1.isEqualTo(v2);
	};
	oFF.QFilterExpression.compareField = function(f1, f2) {
		if (f1 === f2) {
			return true;
		}
		if (oFF.isNull(f1) || oFF.isNull(f2)) {
			return false;
		}
		return oFF.QFilterExpression.compareDimension(f1.getDimension(), f2
				.getDimension());
	};
	oFF.QFilterExpression.compareDimension = function(d1, d2) {
		if (d1 === d2) {
			return true;
		}
		if (oFF.isNull(d1) || oFF.isNull(d2)) {
			return false;
		}
		if (d1.getQueryModel() !== d2.getQueryModel()) {
			return false;
		}
		return oFF.XString.isEqual(d1.getName(), d2.getName());
	};
	oFF.QFilterExpression.prototype.m_filterRootElement = null;
	oFF.QFilterExpression.prototype.m_supportsComplexFilter = false;
	oFF.QFilterExpression.prototype.m_supportsCellValueOperand = false;
	oFF.QFilterExpression.prototype.m_isLocked = false;
	oFF.QFilterExpression.prototype.m_isSuppressingNulls = false;
	oFF.QFilterExpression.prototype.m_literalFilter = null;
	oFF.QFilterExpression.prototype.m_cellValueOperands = null;
	oFF.QFilterExpression.prototype.m_uniqueId = null;
	oFF.QFilterExpression.prototype.m_filterIdsFromVariables = null;
	oFF.QFilterExpression.prototype.copyFilterExpression = function(origin) {
		var originType;
		var originList;
		var queryModel;
		var size;
		var i;
		var origCellValueOp;
		var cloneCellValueOp;
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		if (oFF.notNull(origin.m_filterRootElement)) {
			originType = origin.m_filterRootElement.getOlapComponentType();
			if (originType === oFF.FilterComponentType.CARTESIAN_PRODUCT) {
				this.m_filterRootElement = oFF.QFilterCartesianProduct._create(
						this, this);
				this.m_filterRootElement
						.copyCartesianProduct(origin.m_filterRootElement);
			} else {
				if (originType === oFF.FilterComponentType.CARTESIAN_LIST) {
					originList = origin.m_filterRootElement;
					queryModel = this.getQueryModel();
					this.m_filterRootElement = oFF.QFilterCartesianList
							._create(this, this, queryModel
									.getFieldByName(originList.getField()
											.getName()), originList
									.getHierarchyName());
					this.m_filterRootElement.copyCartesianList(originList);
				} else {
					if (originType === oFF.FilterComponentType.OPERATION) {
						this.m_filterRootElement = oFF.QFilterOperation
								._create(this, this, this);
						this.m_filterRootElement
								.copyFilterOperation(origin.m_filterRootElement);
					} else {
						if (originType === oFF.OlapComponentType.FILTER_CELL_VALUE_OPERAND) {
							this.m_filterRootElement = oFF.QFilterCellValueOperand
									.createWithExpression(this, this, this);
							this.m_filterRootElement
									.copyCellValueOperand(origin.m_filterRootElement);
						} else {
							if (originType === oFF.FilterComponentType.TUPLE) {
								this.m_filterRootElement = oFF.QFactory
										.newFilterTuple(this);
								this.m_filterRootElement
										.copyTupleOperand(origin.m_filterRootElement);
							} else {
								if (originType === oFF.FilterComponentType.AND) {
									this.m_filterRootElement = oFF.QFactory
											.newFilterAnd(this);
								} else {
									if (originType === oFF.FilterComponentType.OR) {
										this.m_filterRootElement = oFF.QFactory
												.newFilterOr(this);
									} else {
										if (originType === oFF.FilterComponentType.NOT) {
											this.m_filterRootElement = oFF.QFactory
													.newFilterNot(this);
										} else {
											throw oFF.XException
													.createRuntimeException(originType
															.getName());
										}
									}
								}
								this.m_filterRootElement
										.copyFilterAlgebra(origin.m_filterRootElement);
							}
						}
					}
				}
			}
		}
		this.m_supportsComplexFilter = origin.m_supportsComplexFilter;
		this.m_supportsCellValueOperand = origin.m_supportsCellValueOperand;
		this.m_isSuppressingNulls = origin.m_isSuppressingNulls;
		this.m_isLocked = origin.m_isLocked;
		this.m_uniqueId = origin.m_uniqueId;
		if (oFF.notNull(origin.m_literalFilter)) {
			this.m_literalFilter = oFF.QFilterLiteral._create(
					this.getContext(), this);
			this.m_literalFilter.copyFilterLiteral(origin.m_literalFilter);
		}
		if (oFF.notNull(origin.m_cellValueOperands)) {
			this.m_cellValueOperands = oFF.XList.create();
			size = origin.m_cellValueOperands.size();
			for (i = 0; i < size; i++) {
				origCellValueOp = origin.m_cellValueOperands.get(i);
				cloneCellValueOp = oFF.QFilterCellValueOperand
						.createForNullSuppression(this, this);
				cloneCellValueOp.copyCellValueOperand(origCellValueOp);
				this.m_cellValueOperands.add(cloneCellValueOp);
			}
		}
	};
	oFF.QFilterExpression.prototype.setupFilterExpression = function(context,
			parentNode) {
		var filter;
		this.setupModelComponent(context, parentNode);
		this.m_isLocked = false;
		this.m_isSuppressingNulls = false;
		this.m_uniqueId = oFF.XGuid.getGuid();
		filter = parentNode;
		if (oFF.isNull(filter)) {
			this.m_supportsComplexFilter = false;
			this.m_supportsCellValueOperand = false;
		} else {
			this.m_supportsComplexFilter = filter.supportsComplexFilter();
			this.m_supportsCellValueOperand = filter.supportsCellValueOperand();
		}
	};
	oFF.QFilterExpression.prototype.releaseObject = function() {
		this.m_cellValueOperands = oFF.XObjectExt
				.release(this.m_cellValueOperands);
		this.m_literalFilter = oFF.XObjectExt.release(this.m_literalFilter);
		this.m_filterRootElement = null;
		this.m_uniqueId = null;
		this.m_filterIdsFromVariables = oFF.XObjectExt
				.release(this.m_filterIdsFromVariables);
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QFilterExpression.prototype.getUniqueId = function() {
		return this.m_uniqueId;
	};
	oFF.QFilterExpression.prototype.setUniqueId = function(uniqueId) {
		this.m_uniqueId = uniqueId;
	};
	oFF.QFilterExpression.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FILTER_EXPRESSION;
	};
	oFF.QFilterExpression.prototype.isAll = function() {
		return this.isCartesianProduct() || this.isComplexFilter();
	};
	oFF.QFilterExpression.prototype.isLocked = function() {
		return this.m_isLocked;
	};
	oFF.QFilterExpression.prototype.setIsLocked = function(isLocked) {
		this.m_isLocked = isLocked;
	};
	oFF.QFilterExpression.prototype.supportsCellValueOperands = function() {
		return this.m_supportsCellValueOperand;
	};
	oFF.QFilterExpression.prototype.setSupportsComplexFilter = function(
			supportsComplexFilter) {
		this.m_supportsComplexFilter = supportsComplexFilter;
	};
	oFF.QFilterExpression.prototype.supportsComplexFilter = function() {
		return this.m_supportsComplexFilter
				|| this.isLightweightCatalogRequest()
				|| this.supportsComplexTupleFilter();
	};
	oFF.QFilterExpression.prototype.supportsComplexTupleFilter = function() {
		var queryModel = this.getQueryModel();
		return oFF.notNull(queryModel)
				&& queryModel.supportsComplexTupleFilter();
	};
	oFF.QFilterExpression.prototype.isLightweightCatalogRequest = function() {
		var queryManager = this.getQueryManagerBase();
		return oFF.notNull(queryManager) && queryManager.isLightweightSearch();
	};
	oFF.QFilterExpression.prototype.supportsOnlyCartesianProduct = function() {
		return !this.supportsComplexFilter();
	};
	oFF.QFilterExpression.prototype.isCartesianProduct = function() {
		return oFF.notNull(this.m_filterRootElement)
				&& this.m_filterRootElement.getOlapComponentType() === oFF.FilterComponentType.CARTESIAN_PRODUCT;
	};
	oFF.QFilterExpression.prototype.isComplexFilter = function() {
		return oFF.notNull(this.m_filterRootElement)
				&& this.m_filterRootElement.getOlapComponentType() !== oFF.FilterComponentType.CARTESIAN_PRODUCT;
	};
	oFF.QFilterExpression.prototype.setComplexRoot = function(complexFilter) {
		if (oFF.notNull(complexFilter)
				&& !this.supportsComplexFilter()
				&& complexFilter.getOlapComponentType() !== oFF.FilterComponentType.CARTESIAN_PRODUCT) {
			throw oFF.XException
					.createIllegalArgumentException("Only cartesian product allowed!");
		}
		this.m_filterRootElement = complexFilter;
		this.notifyChildAttached(this.m_filterRootElement);
	};
	oFF.QFilterExpression.prototype.getCartesianProductWithDefault = function() {
		if (this.isComplexFilter()) {
			throw oFF.XException
					.createIllegalStateException("A complex selection already exists");
		}
		if (oFF.isNull(this.m_filterRootElement)) {
			this.setCartesianProduct(oFF.QFactory
					.newFilterCartesianProduct(this));
		}
		return this.m_filterRootElement;
	};
	oFF.QFilterExpression.prototype.getComplexRoot = function() {
		return this.isComplexFilter() ? this.m_filterRootElement : null;
	};
	oFF.QFilterExpression.prototype.getCartesianProduct = function() {
		return this.isCartesianProduct() ? this.m_filterRootElement : null;
	};
	oFF.QFilterExpression.prototype.getFilterRootElement = function() {
		return this.m_filterRootElement;
	};
	oFF.QFilterExpression.prototype.setCartesianProduct = function(
			cartesianProduct) {
		this.m_filterRootElement = cartesianProduct;
		this.notifyChildAttached(cartesianProduct);
	};
	oFF.QFilterExpression.prototype.addSingleMemberFilterByType = function(
			structureType, memberName, theOperator) {
		var dimension = this.getDimensionAccessor().getDimensionByType(
				structureType);
		return this.addSingleMemberFilterByDimension(dimension, memberName,
				theOperator);
	};
	oFF.QFilterExpression.prototype.addSingleMemberFilterByName = function(
			dimensionName, memberName, theOperator) {
		var dimension = this.getDimensionAccessor().getDimensionByName(
				dimensionName);
		return oFF.isNull(dimension) ? null : this
				.addSingleMemberFilterByDimension(dimension, memberName,
						theOperator);
	};
	oFF.QFilterExpression.prototype.addSingleMemberFilterByDimension = function(
			dimension, memberName, theOperator) {
		var dimensionMember = dimension.getDimensionMember(memberName);
		return oFF.isNull(dimensionMember) ? null : this
				.addSingleMemberFilterByDimensionMember(dimensionMember,
						theOperator);
	};
	oFF.QFilterExpression.prototype.addSingleMemberFilterByDimensionMember = function(
			dimensionMember, theOperator) {
		var isParentRestrictedMeasure;
		var isMeasureNotSelectable;
		var forbiddenDimensionNames;
		var queryModel;
		var measureDimension;
		var cartesianMeasureList;
		var sizeMeasureList;
		var idxMeasureList;
		var op;
		var low;
		var selectedStructure;
		var dimension;
		var cartesianList;
		var cartesianProduct;
		var memberFilter;
		var size;
		var i;
		var sms;
		oFF.XObjectExt.checkNotNull(dimensionMember,
				"The DimensionMember must not be null!");
		isParentRestrictedMeasure = this.getParentComponent() !== null
				&& this.getParentComponent().getOlapComponentType().isTypeOf(
						oFF.MemberType.RESTRICTED_MEASURE);
		isMeasureNotSelectable = dimensionMember.getMemberType().isTypeOf(
				oFF.MemberType.MEASURE)
				&& !dimensionMember.isSelectionCandidate();
		if (isParentRestrictedMeasure && isMeasureNotSelectable) {
			return null;
		}
		forbiddenDimensionNames = oFF.XListOfString.create();
		queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel)
				&& queryModel.getSystemType().isTypeOf(oFF.SystemType.ABAP)
				&& this.getFilterRootElement() !== null) {
			measureDimension = queryModel.getMeasureDimension();
			cartesianMeasureList = this.getCartesianList(measureDimension);
			if (oFF.notNull(cartesianMeasureList)) {
				sizeMeasureList = cartesianMeasureList.size();
				for (idxMeasureList = 0; idxMeasureList < sizeMeasureList; idxMeasureList++) {
					op = cartesianMeasureList.getOp(idxMeasureList);
					low = op.getLow();
					selectedStructure = low.getDimensionMember();
					if (oFF.isNull(selectedStructure)) {
						selectedStructure = measureDimension
								.getStructureMember(low.getString());
					}
					forbiddenDimensionNames.addAll(selectedStructure
							.getDefaultSelectedDimensionNames());
				}
			}
		}
		dimension = dimensionMember.getDimension();
		if (oFF.isNull(dimension)
				|| dimension.isUniversalDisplayHierarchyDimension()) {
			return null;
		}
		if (forbiddenDimensionNames.contains(dimension.getName())) {
			return null;
		}
		if (!dimension.getKeyField().isFilterable() && oFF.notNull(queryModel)
				&& queryModel.supportsCustomDimensionFilterCapability()) {
			return null;
		}
		if (oFF.notNull(queryModel)
				&& queryModel.isBlendingModel()
				&& queryModel.getBlendingDefinition().getMappingByAliasName(
						dimension.getName()).getLinkType() === oFF.BlendingLinkType.COEXIST
				&& dimension.isHierarchyActive()) {
			throw oFF.XException
					.createRuntimeException("Adding a hierarchy filter to a coexist blended dimension is currently not supported");
		}
		if (this.isComplexFilter()) {
			cartesianList = this.getCartesianListWithDefault(dimension);
		} else {
			cartesianProduct = this.getCartesianProduct();
			if (oFF.isNull(cartesianProduct)) {
				cartesianProduct = oFF.QFactory.newFilterCartesianProduct(this);
				this.setCartesianProduct(cartesianProduct);
			}
			cartesianList = cartesianProduct.getCartesianList(dimension);
			if (oFF.isNull(cartesianList)) {
				cartesianList = dimension.createFilterList();
				cartesianProduct.add(cartesianList);
			}
		}
		if (dimension.isHierarchyActive()) {
			cartesianList.setHierarchyName(dimension.getHierarchyName());
		} else {
			cartesianList.setHierarchyName(null);
		}
		memberFilter = dimensionMember.createFilterOperation();
		memberFilter.getLow().setDimensionMember(dimensionMember);
		memberFilter.setComparisonOperator(theOperator);
		size = cartesianList.size();
		for (i = 0; i < size; i++) {
			sms = cartesianList.getOp(i);
			if (oFF.QFilterExpression.compareFilter(memberFilter, sms)) {
				if (memberFilter.getSetSign() !== sms.getSetSign()) {
					sms.setSetSign(memberFilter.getSetSign());
				}
				return sms;
			}
		}
		cartesianList.add(memberFilter);
		return memberFilter;
	};
	oFF.QFilterExpression.prototype.getCartesianList = function(dimension) {
		var children;
		var component;
		var isList;
		if (this.getFilterRootElement() !== null) {
			children = this.getFilterRootElement().getChildrenIterator();
			while (children.hasNext()) {
				component = children.next();
				isList = component.getOlapComponentType() === oFF.FilterComponentType.CARTESIAN_LIST
						|| component.getOlapComponentType() === oFF.FilterComponentType.CARTESIAN_SPATIAL_LIST;
				if (isList && component.getDimension() === dimension) {
					return component;
				}
			}
		}
		return null;
	};
	oFF.QFilterExpression.prototype.getCartesianListWithDefault = function(
			dimension) {
		var list = this.getCartesianList(dimension);
		if (oFF.isNull(list)) {
			list = dimension.createFilterList();
			this.getFilterRootElement().add(list);
		}
		return list;
	};
	oFF.QFilterExpression.prototype.getCartesianListByField = function(field) {
		var list;
		if (this.isComplexFilter()) {
			list = this.getCartesianListWithDefault(field.getDimension());
			return list.getField() === field ? list : null;
		}
		return this.getCartesianProductWithDefault().getCartesianListByField(
				field);
	};
	oFF.QFilterExpression.prototype.addSingleNodeFilter = function(node,
			theOperator) {
		oFF.XObjectExt.checkNotNull(node, "The node must not be null!");
		if (this.isComplexFilter()) {
			throw oFF.XException
					.createIllegalStateException("Adding single member selection to complex product currently not supported");
		}
		oFF.noSupport();
	};
	oFF.QFilterExpression.prototype.removeSingleMemberFilterByName = function(
			dimensionName, memberName, theOperator) {
		var dimension = this.getDimensionAccessor().getDimensionByName(
				dimensionName);
		if (oFF.notNull(dimension)) {
			this.removeSingleMemberFilterByDimension(dimension, memberName,
					theOperator);
		}
	};
	oFF.QFilterExpression.prototype.removeSingleMemberFilterByDimension = function(
			dimension, memberName, theOperator) {
		var dimensionMember = dimension.getDimensionMember(memberName);
		this.removeSingleMemberFilterByMember(dimensionMember, theOperator);
	};
	oFF.QFilterExpression.prototype.removeSingleMemberFilterByMember = function(
			member, theOperator) {
		var operation = null;
		var cartesianList = null;
		var valueToRemove;
		var len;
		var i;
		var sms;
		var valueInFilter;
		if (this.isCartesianProduct()) {
			operation = this.getCartesianProduct();
			cartesianList = operation.getCartesianList(member.getDimension());
		} else {
			if (this.isComplexFilter()) {
				operation = this.getComplexRoot();
				cartesianList = this.getCartesianList(member.getDimension());
			}
		}
		if (oFF.notNull(operation) && oFF.notNull(cartesianList)) {
			valueToRemove = member.getKeyFieldValue().getString();
			len = cartesianList.size();
			for (i = 0; i < len; i++) {
				sms = cartesianList.getOp(i);
				valueInFilter = sms.getLow().getString();
				if (oFF.XString.isEqual(valueInFilter, valueToRemove)
						&& sms.getComparisonOperator() === theOperator) {
					if (len === 1) {
						operation.removeElement(cartesianList);
					} else {
						cartesianList.removeAt(i);
					}
					return;
				}
			}
		}
	};
	oFF.QFilterExpression.prototype.supportsGlobalLiteralFilter = function() {
		return true;
	};
	oFF.QFilterExpression.prototype.getGlobalLiteralFilter = function() {
		if (oFF.isNull(this.m_literalFilter)) {
			this.m_literalFilter = oFF.QFilterLiteral._create(
					this.getContext(), this);
		}
		return this.m_literalFilter;
	};
	oFF.QFilterExpression.prototype.isComponentNode = function() {
		return true;
	};
	oFF.QFilterExpression.prototype.getIndexedChildren = function() {
		var list = oFF.XList.create();
		list.add(this.m_filterRootElement);
		return list.getIterator();
	};
	oFF.QFilterExpression.prototype.isSuppressingNulls = function() {
		return this.m_isSuppressingNulls;
	};
	oFF.QFilterExpression.prototype.assertSupportsCellValueOperand = function() {
		oFF.XBooleanUtils.checkTrue(this.supportsCellValueOperands(),
				"CellValueOperand is not supported");
	};
	oFF.QFilterExpression.prototype.setIsSuppressingNulls = function(
			isSuppressingNulls) {
		this.assertSupportsCellValueOperand();
		this.m_isSuppressingNulls = isSuppressingNulls;
		this.notifyNodeChanged();
	};
	oFF.QFilterExpression.prototype._loadCellValueOperands = function() {
		if (oFF.isNull(this.m_cellValueOperands)) {
			this.m_cellValueOperands = oFF.XList.create();
		}
	};
	oFF.QFilterExpression.prototype.addNewCellValueFilter = function(lowValue,
			highValue, comparisonOperator) {
		var cellValueFilter;
		this.assertSupportsCellValueOperand();
		this._loadCellValueOperands();
		cellValueFilter = oFF.QFilterCellValueOperand._create(
				this.getContext(), this, lowValue, highValue,
				comparisonOperator);
		this.m_cellValueOperands.add(cellValueFilter);
		this.notifyNodeChanged();
		return cellValueFilter;
	};
	oFF.QFilterExpression.prototype.removeCellValueFilter = function(
			cellValueOperand) {
		this.assertSupportsCellValueOperand();
		this._loadCellValueOperands();
		this.m_cellValueOperands.removeElement(cellValueOperand);
		this.notifyNodeChanged();
	};
	oFF.QFilterExpression.prototype.getCellValueOperands = function() {
		this.assertSupportsCellValueOperand();
		this._loadCellValueOperands();
		return this.m_cellValueOperands;
	};
	oFF.QFilterExpression.prototype.addCellValueFilter = function(
			cellValueOperand) {
		this.assertSupportsCellValueOperand();
		this._loadCellValueOperands();
		this.m_cellValueOperands.add(cellValueOperand);
		this.notifyNodeChanged();
	};
	oFF.QFilterExpression.prototype.clearCellValueFilter = function() {
		this.assertSupportsCellValueOperand();
		if (oFF.notNull(this.m_cellValueOperands)) {
			this.m_cellValueOperands.clear();
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterExpression.prototype.addNewCellValueFilterVariable = function(
			lowVariable, highVariable, comparisonOperator) {
		var cellValueFilter;
		this.assertSupportsCellValueOperand();
		this._loadCellValueOperands();
		cellValueFilter = oFF.QFilterCellValueOperand.createWithVariable(this
				.getContext(), this, lowVariable, highVariable,
				comparisonOperator);
		this.m_cellValueOperands.add(cellValueFilter);
		this.notifyNodeChanged();
		return cellValueFilter;
	};
	oFF.QFilterExpression.prototype.getFilter = function() {
		var parent = this.getParentComponent();
		var olapComponentType;
		if (oFF.notNull(parent)) {
			olapComponentType = parent.getOlapComponentType();
			if (olapComponentType === oFF.OlapComponentType.SELECTOR) {
				return parent;
			}
		}
		return null;
	};
	oFF.QFilterExpression.prototype.getFilterExpression = function() {
		return this;
	};
	oFF.QFilterExpression.prototype.mergeDynamicFilter = function(
			otherDynamicFilter) {
		var otherQueryModel;
		var queryModel;
		var otherCartesianProduct;
		var size;
		var idx;
		var otherCartesianList;
		var dimension;
		var cartesianList;
		var idsBeforeMerge;
		var childrenIterator;
		var uniqueId;
		if (otherDynamicFilter.isCartesianProduct()) {
			otherQueryModel = otherDynamicFilter.getQueryModel();
			queryModel = this.getQueryModel();
			if (oFF.notNull(queryModel) && oFF.notNull(otherQueryModel)) {
				if (oFF.isNull(this.m_filterIdsFromVariables)) {
					this.m_filterIdsFromVariables = oFF.XHashSetOfString
							.create();
				} else {
					this.m_filterIdsFromVariables.clear();
				}
				otherCartesianProduct = otherDynamicFilter
						.getCartesianProduct();
				size = otherCartesianProduct.size();
				for (idx = 0; idx < size; idx++) {
					otherCartesianList = otherCartesianProduct
							.getCartesianChild(idx);
					dimension = queryModel
							.getDimensionByName(otherCartesianList
									.getDimension().getName());
					cartesianList = this.getCartesianList(dimension);
					if (oFF.isNull(cartesianList)) {
						cartesianList = this.getCartesianProductWithDefault()
								.getCartesianListWithDefault(dimension);
					}
					idsBeforeMerge = oFF.XHashSetOfString.create();
					childrenIterator = cartesianList.getIterator();
					while (childrenIterator.hasNext()) {
						idsBeforeMerge.add(childrenIterator.next()
								.getUniqueId());
					}
					cartesianList.copyCartesianList(otherCartesianList);
					childrenIterator = cartesianList.getIterator();
					while (childrenIterator.hasNext()) {
						uniqueId = childrenIterator.next().getUniqueId();
						if (!idsBeforeMerge.contains(uniqueId)) {
							this.m_filterIdsFromVariables.add(uniqueId);
							this.m_filterIdsFromVariables.add(cartesianList
									.getUniqueId());
						}
					}
				}
			}
		} else {
			this.m_filterRootElement = null;
			this.copyFilterExpression(otherDynamicFilter);
		}
	};
	oFF.QFilterExpression.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherObj = other;
		this.m_filterRootElement = null;
		if (oFF.XString.isEqual(this.getName(), "selectionStateContainer")) {
			this.mergeDynamicFilter(otherObj);
		} else {
			this.copyFilterExpression(otherObj);
		}
	};
	oFF.QFilterExpression.prototype.getFilterById = function(uniqueId) {
		if (oFF.XStringUtils.isNotNullAndNotEmpty(uniqueId)
				&& oFF.notNull(this.m_filterRootElement)) {
			if (oFF.XString.isEqual(this.m_uniqueId, uniqueId)) {
				return this;
			}
			if (oFF.XString.isEqual(this.m_filterRootElement.getUniqueId(),
					uniqueId)) {
				return this.m_filterRootElement;
			}
			return this.getChildById(this.m_filterRootElement, uniqueId);
		}
		return null;
	};
	oFF.QFilterExpression.prototype.getChildById = function(parent, uniqueId) {
		var iterator = parent.getChildrenIterator();
		var filterElement;
		var element;
		while (iterator.hasNext()) {
			filterElement = iterator.next();
			if (oFF.XString.isEqual(filterElement.getUniqueId(), uniqueId)) {
				return filterElement;
			}
			element = this.getChildById(filterElement, uniqueId);
			if (oFF.notNull(element)) {
				return element;
			}
		}
		return null;
	};
	oFF.QFilterExpression.prototype.removeFilterById = function(uniqueId) {
		if (oFF.XStringUtils.isNotNullAndNotEmpty(uniqueId)
				&& oFF.notNull(this.m_filterRootElement)
				&& !oFF.XString.isEqual(this.m_uniqueId, uniqueId)) {
			if (oFF.XString.isEqual(this.m_filterRootElement.getUniqueId(),
					uniqueId)) {
				this.setComplexRoot(null);
			} else {
				this.removeChildById(this.m_filterRootElement, uniqueId);
			}
		}
	};
	oFF.QFilterExpression.prototype.removeChildById = function(parent, uniqueId) {
		var iterator = parent.getChildrenIterator();
		var filterElement;
		while (iterator.hasNext()) {
			filterElement = iterator.next();
			if (oFF.XString.isEqual(filterElement.getUniqueId(), uniqueId)) {
				parent.removeElement(filterElement);
				return;
			}
			this.removeChildById(filterElement, uniqueId);
		}
	};
	oFF.QFilterExpression.prototype.getFilterIdsFromVariables = function() {
		return this.m_filterIdsFromVariables;
	};
	oFF.QFilterLiteral = function() {
	};
	oFF.QFilterLiteral.prototype = new oFF.AbstractValueAccessComponent();
	oFF.QFilterLiteral._create = function(context, parentNode) {
		var filter = new oFF.QFilterLiteral();
		filter.setupModelComponent(context, parentNode);
		return filter;
	};
	oFF.QFilterLiteral.prototype.m_filterValue = null;
	oFF.QFilterLiteral.prototype.m_isStarWildcardEnabled = false;
	oFF.QFilterLiteral.prototype.m_isManualInput = false;
	oFF.QFilterLiteral.prototype.copyFilterLiteral = function(origin) {
		oFF.AbstractValueAccessComponent.prototype.copyModelComponent.call(
				this, origin);
		this.m_filterValue = origin.m_filterValue;
		this.m_isStarWildcardEnabled = origin.m_isStarWildcardEnabled;
		this.m_isManualInput = origin.m_isManualInput;
	};
	oFF.QFilterLiteral.prototype.isEqualTo = function(other) {
		var xOther;
		if (this === other) {
			return true;
		}
		if (oFF.isNull(other)) {
			return false;
		}
		xOther = other;
		if (!oFF.XString.isEqual(this.m_filterValue, xOther.m_filterValue)) {
			return false;
		}
		if (this.m_isManualInput !== xOther.m_isManualInput) {
			return false;
		}
		if (this.m_isStarWildcardEnabled !== xOther.m_isStarWildcardEnabled) {
			return false;
		}
		return true;
	};
	oFF.QFilterLiteral.prototype.releaseObject = function() {
		this.m_filterValue = null;
		oFF.AbstractValueAccessComponent.prototype.releaseObject.call(this);
	};
	oFF.QFilterLiteral.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FILTER_LITERAL;
	};
	oFF.QFilterLiteral.prototype.getFilterValue = function() {
		return this.m_filterValue;
	};
	oFF.QFilterLiteral.prototype.setFilterValue = function(filterValue) {
		if (!oFF.XString.isEqual(this.m_filterValue, filterValue)) {
			this.m_filterValue = filterValue;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterLiteral.prototype.supportsStarWildcard = function() {
		return true;
	};
	oFF.QFilterLiteral.prototype.isStarWildcardEnabled = function() {
		return this.m_isStarWildcardEnabled;
	};
	oFF.QFilterLiteral.prototype.setIsStarWildcardEnabled = function(isEnabled) {
		if (this.m_isStarWildcardEnabled !== isEnabled) {
			this.m_isStarWildcardEnabled = isEnabled;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterLiteral.prototype.getDimensionMember = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getFieldValue = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setDimensionMember = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setFieldValue = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setValue = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setVariableValue = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getVariableValue = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setPolygon = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setPoint = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getValueType = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getValue = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getGeometry = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getPolygon = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getPoint = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getString = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getDouble = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getInteger = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getBoolean = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getLong = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getDate = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getTime = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getTimeSpan = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setBoolean = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setString = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setInteger = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setLong = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setDouble = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setDate = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setTime = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setDateTime = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getDateTime = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setTimeSpan = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getFormattedValue = function() {
		return this.m_filterValue;
	};
	oFF.QFilterLiteral.prototype.getField = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getSupplementValues = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getSupplementValueString = oFF.noSupport;
	oFF.QFilterLiteral.prototype.addSupplementValue = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setMultiPolygon = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getMultiPolygon = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setLineString = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getLineString = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setMultiLineString = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getMultiLineString = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getNull = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getFilterValueType = function() {
		return null;
	};
	oFF.QFilterLiteral.prototype.setFilterValueType = oFF.noSupport;
	oFF.QFilterLiteral.prototype.setMultiPoint = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getMultiPoint = oFF.noSupport;
	oFF.QFilterLiteral.prototype.isManualInput = function() {
		return this.m_isManualInput;
	};
	oFF.QFilterLiteral.prototype.setIsManualInput = function(isManualInput) {
		this.m_isManualInput = isManualInput;
	};
	oFF.QFilterLiteral.prototype.hasValue = function() {
		return oFF.notNull(this.m_filterValue);
	};
	oFF.QFilterLiteral.prototype.getMemberNavigations = oFF.noSupport;
	oFF.QFilterLiteral.prototype.getDimension = oFF.noSupport;
	oFF.QFilterOperation = function() {
	};
	oFF.QFilterOperation.prototype = new oFF.QFilterElement();
	oFF.QFilterOperation._create = function(context, selectionContainer,
			parentNode) {
		var object = new oFF.QFilterOperation();
		object.setupFilterOperation(context, selectionContainer, parentNode);
		return object;
	};
	oFF.QFilterOperation.prototype.m_comparisonOperator = null;
	oFF.QFilterOperation.prototype.m_field = null;
	oFF.QFilterOperation.prototype.m_firstValue = null;
	oFF.QFilterOperation.prototype.m_secondValue = null;
	oFF.QFilterOperation.prototype.m_thirdValue = null;
	oFF.QFilterOperation.prototype.m_dataSource = null;
	oFF.QFilterOperation.prototype.m_hierarchyName = null;
	oFF.QFilterOperation.prototype.m_convertToFlatFilter = false;
	oFF.QFilterOperation.prototype.m_exactness = 0;
	oFF.QFilterOperation.prototype.m_levelOffset = 0;
	oFF.QFilterOperation.prototype.m_hasLevelOffset = false;
	oFF.QFilterOperation.prototype.m_depth = 0;
	oFF.QFilterOperation.prototype.m_hasDepth = false;
	oFF.QFilterOperation.prototype.m_setSign = null;
	oFF.QFilterOperation.prototype.isEqualTo = function(other) {
		var xOther;
		if (oFF.isNull(other)) {
			return false;
		}
		if (other === this) {
			return true;
		}
		xOther = other;
		if (this.getField() !== xOther.getField()) {
			return false;
		}
		if (this.m_comparisonOperator !== xOther.m_comparisonOperator) {
			return false;
		}
		if (this.m_exactness !== xOther.m_exactness) {
			return false;
		}
		if (this.m_levelOffset !== xOther.m_levelOffset) {
			return false;
		}
		if (this.m_depth !== xOther.m_depth) {
			return false;
		}
		if (this.m_setSign !== xOther.m_setSign) {
			return false;
		}
		if (this.m_convertToFlatFilter !== xOther.m_convertToFlatFilter) {
			return false;
		}
		if (!oFF.XString.isEqual(this.m_hierarchyName, xOther.m_hierarchyName)) {
			return false;
		}
		if (!oFF.XObjectExt.areEqual(this.m_firstValue, xOther.m_firstValue)) {
			return false;
		}
		if (!oFF.XObjectExt.areEqual(this.m_secondValue, xOther.m_secondValue)) {
			return false;
		}
		if (!oFF.XObjectExt.areEqual(this.m_thirdValue, xOther.m_thirdValue)) {
			return false;
		}
		return true;
	};
	oFF.QFilterOperation.prototype.copyFilterOperation = function(origin) {
		var originField;
		var name;
		var theField;
		oFF.QFilterElement.prototype.copyFilterElement.call(this, origin);
		if (oFF.notNull(origin.m_firstValue)) {
			this.getLow().copyFilterValueBag(origin.m_firstValue);
		}
		if (oFF.notNull(origin.m_secondValue)) {
			this.getHigh().copyFilterValueBag(origin.m_secondValue);
		}
		if (oFF.notNull(origin.m_thirdValue)) {
			this.getThird().copyFilterValueBag(origin.m_thirdValue);
		}
		this.m_comparisonOperator = origin.m_comparisonOperator;
		if (oFF.notNull(origin.m_field)) {
			originField = origin.getField();
			name = originField.getName();
			theField = this.getFieldAccessorSingle().getFieldByName(name);
			this.setField(theField);
		}
		this.m_setSign = origin.m_setSign;
		this.m_hasDepth = origin.m_hasDepth;
		this.m_depth = origin.m_depth;
		this.m_hasLevelOffset = origin.hasLevelOffset();
		this.m_levelOffset = origin.m_levelOffset;
		this.m_exactness = origin.m_exactness;
		this.m_convertToFlatFilter = origin.m_convertToFlatFilter;
		this.m_hierarchyName = origin.m_hierarchyName;
		if (oFF.notNull(origin.m_dataSource)) {
			this.setDataSource(origin.m_dataSource);
		}
	};
	oFF.QFilterOperation.prototype.setupFilterOperation = function(context,
			filterContainer, parentNode) {
		oFF.QFilterElement.prototype.setupFilterElement.call(this, context,
				filterContainer, parentNode);
		this.m_setSign = oFF.SetSign.INCLUDING;
	};
	oFF.QFilterOperation.prototype.releaseObject = function() {
		this.m_firstValue = oFF.XObjectExt.release(this.m_firstValue);
		this.m_secondValue = oFF.XObjectExt.release(this.m_secondValue);
		this.m_thirdValue = oFF.XObjectExt.release(this.m_thirdValue);
		this.m_dataSource = oFF.XObjectExt.release(this.m_dataSource);
		this.m_field = oFF.XObjectExt.release(this.m_field);
		this.m_setSign = null;
		this.m_hierarchyName = null;
		this.m_comparisonOperator = null;
		oFF.QFilterElement.prototype.releaseObject.call(this);
	};
	oFF.QFilterOperation.prototype.getOlapComponentType = function() {
		return oFF.FilterComponentType.OPERATION;
	};
	oFF.QFilterOperation.prototype.setComparisonOperator = function(
			comparisonOperator) {
		if (this.m_comparisonOperator !== comparisonOperator) {
			this.m_comparisonOperator = comparisonOperator;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterOperation.prototype.getComparisonOperator = function() {
		return this.m_comparisonOperator;
	};
	oFF.QFilterOperation.prototype.getLow = function() {
		if (oFF.isNull(this.m_firstValue)) {
			this.m_firstValue = oFF.QFilterValueBag._create(this.getContext(),
					this.getFilterExpression(), this);
		}
		return this.m_firstValue;
	};
	oFF.QFilterOperation.prototype.getHigh = function() {
		if (oFF.isNull(this.m_secondValue)) {
			this.m_secondValue = oFF.QFilterValueBag._create(this.getContext(),
					this.getFilterExpression(), this);
		}
		return this.m_secondValue;
	};
	oFF.QFilterOperation.prototype.getThird = function() {
		if (oFF.isNull(this.m_thirdValue)) {
			this.m_thirdValue = oFF.QFilterValueBag._create(this.getContext(),
					this.getFilterExpression(), this);
		}
		return this.m_thirdValue;
	};
	oFF.QFilterOperation.prototype.setField = function(field) {
		var isVariable = false;
		var isKeyType = false;
		var isValidFilterForBwF4 = false;
		var context = this.getContext();
		var componentType;
		var dimension;
		var isFilterable;
		if (oFF.notNull(context)) {
			componentType = context.getComponentType();
			isVariable = oFF.notNull(componentType)
					&& (componentType
							.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE) || componentType
							.isTypeOf(oFF.OlapComponentType.VARIABLE_MANAGER));
		}
		if (oFF.notNull(field)) {
			isKeyType = field.getPresentationType().isTypeOf(
					oFF.PresentationType.ABSTRACT_KEY);
			dimension = field.getDimension();
			isValidFilterForBwF4 = oFF.notNull(dimension)
					&& dimension.getSelector().isValidFilterForBwF4(field,
							this.getFilterExpression());
			isFilterable = field.isFilterable();
			if (isVariable || isKeyType || isValidFilterForBwF4) {
				isFilterable = true;
			}
			if (!isFilterable) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate3("The field '", field.getName(),
										"' is not filterable!"));
			}
			if (oFF.isNull(context)) {
				this.setContext(field.getContext());
			}
		}
		this.m_field = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFilterOperation.prototype.getField = function() {
		var parentComponent;
		var parentType;
		var cartesianList;
		if (oFF.isNull(this.m_field)) {
			parentComponent = this.getParentComponent();
			if (oFF.notNull(parentComponent)) {
				parentType = parentComponent.getComponentType();
				if (parentType === oFF.FilterComponentType.CARTESIAN_LIST) {
					cartesianList = parentComponent;
					this.m_field = oFF.XWeakReferenceUtil
							.getWeakRef(cartesianList.getField());
				}
			}
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_field);
	};
	oFF.QFilterOperation.prototype.getDimension = function() {
		var field = this.getField();
		return oFF.isNull(field) ? null : field.getDimension();
	};
	oFF.QFilterOperation.prototype.getHierarchyName = function() {
		return this.m_hierarchyName;
	};
	oFF.QFilterOperation.prototype.setHierarchyName = function(name) {
		if (!oFF.XString.isEqual(name, this.m_hierarchyName)) {
			this.m_hierarchyName = name;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterOperation.prototype.getExactness = function() {
		return this.m_exactness;
	};
	oFF.QFilterOperation.prototype.setExactness = function(exactness) {
		this.m_exactness = exactness;
	};
	oFF.QFilterOperation.prototype.getSetSign = function() {
		return this.m_setSign;
	};
	oFF.QFilterOperation.prototype.setSetSign = function(setSign) {
		if (setSign !== this.m_setSign) {
			this.m_setSign = setSign;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterOperation.prototype.hasLevelOffsetChanged = function(
			levelOffset, hasLevelOffSet) {
		return this.m_levelOffset !== levelOffset
				|| this.m_hasLevelOffset !== hasLevelOffSet;
	};
	oFF.QFilterOperation.prototype.hasDepthChanged = function(depth, hasDepth) {
		return this.m_depth !== depth || this.m_hasDepth !== hasDepth;
	};
	oFF.QFilterOperation.prototype.setLevelOffset = function(levelOffset) {
		var supportsHierarchyLevelOffsetFilter = this.getQueryModel()
				.supportsHierarchyLevelOffsetFilter();
		var supportsHierarchyTrapezoidFilter = this.getQueryModel()
				.supportsHierarchyTrapezoidFilter();
		if (!supportsHierarchyTrapezoidFilter
				&& !supportsHierarchyLevelOffsetFilter) {
			throw oFF.XException
					.createIllegalStateException("LevelOffset is not supported by backend!");
		}
		if (this.hasLevelOffsetChanged(levelOffset, true)) {
			this.m_levelOffset = levelOffset;
			this.m_hasLevelOffset = true;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterOperation.prototype.getLevelOffset = function() {
		return this.m_levelOffset;
	};
	oFF.QFilterOperation.prototype.hasLevelOffset = function() {
		return this.m_hasLevelOffset;
	};
	oFF.QFilterOperation.prototype.resetLevelOffset = function() {
		if (this.hasLevelOffsetChanged(0, false)) {
			this.m_levelOffset = 0;
			this.m_hasLevelOffset = false;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterOperation.prototype.setDepth = function(depth) {
		if (!this.getQueryModel().supportsHierarchyTrapezoidFilter()) {
			throw oFF.XException
					.createIllegalStateException("Depth is not supported by backend!");
		}
		if (this.hasDepthChanged(depth, true)) {
			this.m_depth = depth;
			this.m_hasDepth = true;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterOperation.prototype.getDepth = function() {
		return this.m_depth;
	};
	oFF.QFilterOperation.prototype.hasDepth = function() {
		return this.m_hasDepth;
	};
	oFF.QFilterOperation.prototype.resetDepth = function() {
		if (this.hasDepthChanged(-1, false)) {
			this.m_depth = -1;
			this.m_hasDepth = false;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterOperation.prototype.getDataSource = function() {
		return this.m_dataSource;
	};
	oFF.QFilterOperation.prototype.setDataSource = function(dataSource) {
		if (oFF.isNull(this.m_dataSource)) {
			this.m_dataSource = oFF.QFactory.newDataSource();
		}
		this.m_dataSource.copyFrom(dataSource);
	};
	oFF.QFilterOperation.prototype.isConvertToFlatFilter = function() {
		return this.m_convertToFlatFilter;
	};
	oFF.QFilterOperation.prototype.setConvertToFlatFilter = function(
			convertToFlatFilter) {
		if (this.m_convertToFlatFilter !== convertToFlatFilter) {
			this.m_convertToFlatFilter = convertToFlatFilter;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterOperation.prototype.parseStringValues = function(low, high,
			comparisonOperator) {
		var field;
		var valueAccess;
		this.queueEventing();
		if (oFF.notNull(comparisonOperator)) {
			this.setComparisonOperator(comparisonOperator);
		}
		if (comparisonOperator === oFF.ComparisonOperator.MATCH
				|| comparisonOperator === oFF.ComparisonOperator.NOT_MATCH) {
			this.setLowString(low);
			this.setHighString(high);
		} else {
			field = this.getField();
			valueAccess = oFF.XValueAccess.createWithType(field.getValueType());
			valueAccess.parseString(low);
			this._updateValue(this.getLow(), valueAccess.getValue());
			valueAccess.parseString(high);
			this._updateValue(this.getHigh(), valueAccess.getValue());
			oFF.XObjectExt.release(valueAccess);
		}
		this.resumeEventing();
	};
	oFF.QFilterOperation.prototype._updateValue = function(filterValue,
			newValue) {
		if (oFF.isNull(newValue)) {
			filterValue.setValue(null);
		} else {
			filterValue.setValue(newValue.clone());
		}
	};
	oFF.QFilterOperation.prototype.configureBetweenWithMembers = function(
			firstMember, secondMember) {
		this.setComparisonOperator(oFF.ComparisonOperator.BETWEEN);
		this.getLow().setDimensionMember(firstMember);
		this.getHigh().setDimensionMember(secondMember);
	};
	oFF.QFilterOperation.prototype.configureSingleParameterExpression = function(
			value, comparisonOperator) {
		this.setComparisonOperator(comparisonOperator);
		this.getLow().setValue(value);
	};
	oFF.QFilterOperation.prototype.configureDoubleParameterExpression = function(
			firstValue, secondValue, comparisonOperator) {
		this.setComparisonOperator(comparisonOperator);
		this.getLow().setValue(firstValue);
		this.getHigh().setValue(secondValue);
	};
	oFF.QFilterOperation.prototype.configureTripleParameterExpression = function(
			firstValue, secondValue, thirdValue, comparisonOperator) {
		this.setComparisonOperator(comparisonOperator);
		this.getLow().setValue(firstValue);
		this.getHigh().setValue(secondValue);
		this.getThird().setValue(thirdValue);
	};
	oFF.QFilterOperation.prototype.getValueAt = function(index) {
		if (index === 0) {
			return this.getLow();
		}
		if (index === 1) {
			return this.getHigh();
		}
		if (index === 2) {
			return this.getThird();
		}
		return null;
	};
	oFF.QFilterOperation.prototype.size = function() {
		var comparisonOperator = this.getComparisonOperator();
		return oFF.isNull(comparisonOperator) ? 0 : comparisonOperator
				.getNumberOfParameters();
	};
	oFF.QFilterOperation.prototype.isEmpty = function() {
		return this.size() === 0;
	};
	oFF.QFilterOperation.prototype.hasElements = function() {
		return this.size() > 0;
	};
	oFF.QFilterOperation.prototype.setLowString = function(value) {
		this.getLow().setString(value);
	};
	oFF.QFilterOperation.prototype.setHighString = function(value) {
		this.getHigh().setString(value);
	};
	oFF.QFilterTuple = function() {
	};
	oFF.QFilterTuple.prototype = new oFF.QFilterElement();
	oFF.QFilterTuple._create = function(context, filterContainer) {
		var object = new oFF.QFilterTuple();
		object.setupFilterElement(context, filterContainer, null);
		object.m_fieldNames = oFF.XListOfString.create();
		object.m_tuples = oFF.XList.create();
		return object;
	};
	oFF.QFilterTuple.prototype.m_fieldNames = null;
	oFF.QFilterTuple.prototype.m_tuples = null;
	oFF.QFilterTuple.prototype.copyTupleOperand = function(origin) {
		oFF.QFilterElement.prototype.copyFilterElement.call(this, origin);
		this.setFieldNames(origin.m_fieldNames.createListOfStringCopy());
		this.m_tuples = origin.m_tuples.createListCopy();
	};
	oFF.QFilterTuple.prototype.getOlapComponentType = function() {
		return oFF.FilterComponentType.TUPLE;
	};
	oFF.QFilterTuple.prototype.setFieldNames = function(fieldNames) {
		this.m_fieldNames.addAll(fieldNames);
	};
	oFF.QFilterTuple.prototype.addTupleCriteria = function(tupleCriteria) {
		if (tupleCriteria.size() !== this.getNumberOfFields()) {
			throw oFF.XException
					.createIllegalArgumentException("Tuple Criteria size has to be the same as the number of FieldNames.");
		}
		this.m_tuples.add(tupleCriteria);
	};
	oFF.QFilterTuple.prototype.releaseObject = function() {
		this.m_fieldNames = oFF.XObjectExt.release(this.m_fieldNames);
		this.m_tuples = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_tuples);
		oFF.QFilterElement.prototype.releaseObject.call(this);
	};
	oFF.QFilterTuple.prototype.getNumberOfFields = function() {
		return this.m_fieldNames.size();
	};
	oFF.QFilterTuple.prototype.getFieldNames = function() {
		return this.m_fieldNames;
	};
	oFF.QFilterTuple.prototype.getTuples = function() {
		return this.m_tuples;
	};
	oFF.QFilterValueBag = function() {
	};
	oFF.QFilterValueBag.prototype = new oFF.QFilterElement();
	oFF.QFilterValueBag._create = function(context, filterExpression,
			parentNode) {
		var object = new oFF.QFilterValueBag();
		object.setupValueBag(context, filterExpression, parentNode);
		return object;
	};
	oFF.QFilterValueBag.prototype.m_fieldValue = null;
	oFF.QFilterValueBag.prototype.m_filterValue = null;
	oFF.QFilterValueBag.prototype.m_isStarWildcardEnabled = false;
	oFF.QFilterValueBag.prototype.m_isManualInput = false;
	oFF.QFilterValueBag.prototype.m_supplements = null;
	oFF.QFilterValueBag.prototype.m_filterValueType = null;
	oFF.QFilterValueBag.prototype.m_memberNavigations = null;
	oFF.QFilterValueBag.prototype.isEqualTo = function(other) {
		var xOther;
		if (oFF.isNull(other)) {
			return false;
		}
		if (other === this) {
			return true;
		}
		xOther = other;
		if (!oFF.XString.isEqual(this.m_filterValue, xOther.m_filterValue)) {
			return false;
		}
		if (this.m_isStarWildcardEnabled !== xOther.m_isStarWildcardEnabled) {
			return false;
		}
		if (this.m_isManualInput !== xOther.m_isManualInput) {
			return false;
		}
		if (this.m_filterValueType !== xOther.m_filterValueType) {
			return false;
		}
		if (!this.m_fieldValue.isEqualTo(xOther.m_fieldValue)) {
			return false;
		}
		if (!oFF.XObjectExt.areEqual(this.m_memberNavigations,
				xOther.m_memberNavigations)) {
			return false;
		}
		if (!oFF.XObjectExt.areEqual(this.m_supplements, xOther.m_supplements)) {
			return false;
		}
		return true;
	};
	oFF.QFilterValueBag.prototype.copyFilterValueBag = function(origin) {
		oFF.QFilterElement.prototype.copyFilterElement.call(this, origin);
		this.m_filterValue = origin.m_filterValue;
		this.m_fieldValue.copyFieldValue(origin.m_fieldValue);
		this.m_isStarWildcardEnabled = origin.m_isStarWildcardEnabled;
		this.m_isManualInput = origin.m_isManualInput;
		if (oFF.notNull(origin.m_supplements)) {
			this.m_supplements = origin.m_supplements.createListCopy();
		}
		if (oFF.notNull(origin.m_memberNavigations)) {
			this.m_memberNavigations = origin.m_memberNavigations
					.createListCopy();
		}
		this.m_filterValueType = origin.m_filterValueType;
	};
	oFF.QFilterValueBag.prototype.setupValueBag = function(context,
			filterExpression, parentNode) {
		this.setupFilterElement(context, filterExpression, parentNode);
		this.m_supplements = oFF.XList.create();
		this.m_fieldValue = oFF.QFieldValue._create(context);
	};
	oFF.QFilterValueBag.prototype.releaseObject = function() {
		this.m_supplements = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_supplements);
		this.m_memberNavigations = oFF.XObjectExt
				.release(this.m_memberNavigations);
		this.m_fieldValue = oFF.XObjectExt.release(this.m_fieldValue);
		this.m_filterValue = null;
		this.m_filterValueType = null;
		oFF.QFilterElement.prototype.releaseObject.call(this);
	};
	oFF.QFilterValueBag.prototype.getFilterValueType = function() {
		return this.m_filterValueType;
	};
	oFF.QFilterValueBag.prototype.setFilterValueType = function(valueType) {
		this.m_filterValueType = valueType;
	};
	oFF.QFilterValueBag.prototype.getValueType = function() {
		var value;
		if (oFF.isNull(this.m_filterValueType)) {
			value = this.getValue();
			return oFF.isNull(value) ? null : value.getValueType();
		}
		return this.getFilterValueType();
	};
	oFF.QFilterValueBag.prototype.getFieldValue = function() {
		return this.m_fieldValue;
	};
	oFF.QFilterValueBag.prototype.setFieldValue = function(fieldValue) {
		this.m_fieldValue.setFieldValue(fieldValue);
		this.notifyNodeChanged();
	};
	oFF.QFilterValueBag.prototype.setDimensionMember = function(member) {
		var fieldValue;
		var dimension;
		if (oFF.isNull(member)) {
			this.setFieldValue(null);
		} else {
			fieldValue = member.getKeyFieldValue();
			if (oFF.isNull(fieldValue)) {
				dimension = member.getDimension();
				if (oFF.notNull(dimension)) {
					fieldValue = member.getFieldValue(dimension
							.getFlatKeyField());
					if (oFF.isNull(fieldValue)) {
						fieldValue = member.getFieldValue(dimension
								.getHierarchyKeyField());
					}
				}
			}
			this.setFieldValue(fieldValue);
		}
	};
	oFF.QFilterValueBag.prototype.getVariableValue = function() {
		var value = this.getValue();
		var valueType;
		var varValue;
		if (oFF.notNull(value)) {
			valueType = value.getValueType();
			if (valueType === oFF.XValueType.VARIABLE) {
				varValue = value;
				return varValue.getVariable();
			}
		}
		return null;
	};
	oFF.QFilterValueBag.prototype.setVariableValue = function(variable) {
		if (oFF.isNull(variable)) {
			this.setValue(null);
		} else {
			this.setValue(variable.newVariableValue());
		}
		this.setFilterValueType(oFF.XValueType.VARIABLE);
	};
	oFF.QFilterValueBag.prototype.getFilterValue = function() {
		return this.m_filterValue;
	};
	oFF.QFilterValueBag.prototype.setFilterValue = function(filterValue) {
		if (!oFF.XString.isEqual(this.m_filterValue, filterValue)) {
			this.m_filterValue = filterValue;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterValueBag.prototype.getSupplementValueString = function(fieldName) {
		var i;
		var pair;
		for (i = 0; i < this.m_supplements.size(); i++) {
			pair = this.m_supplements.get(i);
			if (oFF.XString.isEqual(pair.getKey().toString(), fieldName)) {
				return pair.getValue().toString();
			}
		}
		return null;
	};
	oFF.QFilterValueBag.prototype.addSupplementValue = function(fieldName,
			value) {
		var pair;
		if (oFF.notNull(fieldName) && oFF.notNull(value)) {
			pair = oFF.XKeyValuePair.create();
			pair.setKeyValue(oFF.XStringValue.create(fieldName),
					oFF.XStringValue.create(value));
			this.m_supplements.add(pair);
		}
	};
	oFF.QFilterValueBag.prototype.getSupplementValues = function() {
		return this.m_supplements.getValuesAsReadOnlyList();
	};
	oFF.QFilterValueBag.prototype.isManualInput = function() {
		return this.m_isManualInput;
	};
	oFF.QFilterValueBag.prototype.setIsManualInput = function(isManualInput) {
		this.m_isManualInput = isManualInput;
	};
	oFF.QFilterValueBag.prototype.getMemberNavigations = function() {
		if (oFF.isNull(this.m_memberNavigations)) {
			this.m_memberNavigations = oFF.XList.create();
		}
		return this.m_memberNavigations;
	};
	oFF.QFilterValueBag.prototype.setMultiPolygon = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getMultiPolygon = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setLineString = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getLineString = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setMultiLineString = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getMultiLineString = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setMultiPoint = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getMultiPoint = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.getNull = oFF.noSupport;
	oFF.QFilterValueBag.prototype.getString = function() {
		var variable;
		if (this.getValue() === null) {
			return null;
		}
		if (this.getValueType().isSpatial()) {
			return this.getValue().toWKT();
		} else {
			if (this.getValueType().isVariable()) {
				variable = this.getValue();
				return variable.getVariable().getName();
			}
		}
		return this.getValue().toString();
	};
	oFF.QFilterValueBag.prototype.setString = function(value) {
		this.setValue(oFF.XStringValue.create(value));
	};
	oFF.QFilterValueBag.prototype.getInteger = function() {
		return this.getValue().getInteger();
	};
	oFF.QFilterValueBag.prototype.setInteger = function(value) {
		this.assertNumeric(value);
		this.setValue(oFF.XIntegerValue.create(value));
	};
	oFF.QFilterValueBag.prototype.getLong = function() {
		var value = this.getValue();
		var valueType;
		if (oFF.isNull(value)) {
			return 0;
		}
		valueType = value.getValueType();
		oFF.XBooleanUtils.checkTrue(valueType === oFF.XValueType.LONG,
				oFF.XStringUtils.concatenate2("Wrong type: ", valueType
						.getName()));
		return value.getLong();
	};
	oFF.QFilterValueBag.prototype.setLong = function(value) {
		this.assertNumeric(value);
		this.setValue(oFF.XLongValue.create(value));
	};
	oFF.QFilterValueBag.prototype.getDouble = function() {
		return this.getValue().getDouble();
	};
	oFF.QFilterValueBag.prototype.assertNumeric = function(value) {
		if (oFF.XMath.isNaN(value)) {
			throw oFF.XException
					.createIllegalArgumentException("The value must not be NaN!");
		}
	};
	oFF.QFilterValueBag.prototype.setDouble = function(value) {
		this.assertNumeric(value);
		this.setValue(oFF.XDoubleValue.create(value));
	};
	oFF.QFilterValueBag.prototype.getGeometry = function() {
		var value = this.getValue();
		return value;
	};
	oFF.QFilterValueBag.prototype.getPolygon = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setPolygon = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getPoint = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setPoint = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getDate = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setDate = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getTime = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setTime = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getDateTime = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setDateTime = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getTimeSpan = function() {
		return this.getValue();
	};
	oFF.QFilterValueBag.prototype.setTimeSpan = function(value) {
		this.setValue(value);
	};
	oFF.QFilterValueBag.prototype.getBoolean = function() {
		return this.getValue().getBoolean();
	};
	oFF.QFilterValueBag.prototype.setBoolean = function(value) {
		this.setValue(oFF.XBooleanValue.create(value));
	};
	oFF.QFilterValueBag.prototype.getDimensionMember = function() {
		var varValue;
		var dimvar;
		var fieldValue;
		if (this.m_filterValueType === oFF.XValueType.VARIABLE) {
			varValue = this.getVariableValue();
			if (varValue.getVariableType() === oFF.VariableType.DIMENSION_MEMBER_VARIABLE) {
				dimvar = varValue;
				return dimvar.getDimensionMember();
			}
		}
		fieldValue = this.getFieldValue();
		return oFF.isNull(fieldValue) ? null : fieldValue.getDimensionMember();
	};
	oFF.QFilterValueBag.prototype.getValue = function() {
		return this.m_fieldValue.getValue();
	};
	oFF.QFilterValueBag.prototype.setValue = function(value) {
		this.m_fieldValue.setValue(value);
		this.notifyNodeChanged();
	};
	oFF.QFilterValueBag.prototype.hasValue = function() {
		return this.m_fieldValue.hasValue();
	};
	oFF.QFilterValueBag.prototype.isStarWildcardEnabled = function() {
		return this.m_isStarWildcardEnabled;
	};
	oFF.QFilterValueBag.prototype.setIsStarWildcardEnabled = function(isEnabled) {
		if (this.m_isStarWildcardEnabled !== isEnabled) {
			this.m_isStarWildcardEnabled = isEnabled;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterValueBag.prototype.getDimension = function() {
		var fieldValue = this.getFieldValue();
		return oFF.isNull(fieldValue) ? null : fieldValue.getDimension();
	};
	oFF.QFilterValueBag.prototype.getField = function() {
		var fieldValue = this.getFieldValue();
		return oFF.isNull(fieldValue) ? null : fieldValue.getField();
	};
	oFF.QFilterValueBag.prototype.getFormattedValue = function() {
		var fieldValue = this.getFieldValue();
		return oFF.isNull(fieldValue) ? null : fieldValue.getFormattedValue();
	};
	oFF.QFilterValueBag.prototype.supportsStarWildcard = function() {
		return false;
	};
	oFF.QFilterVirtualDatasource = function() {
	};
	oFF.QFilterVirtualDatasource.prototype = new oFF.QFilterElement();
	oFF.QFilterVirtualDatasource._create = function(context, filterContainer) {
		var object = new oFF.QFilterVirtualDatasource();
		object.setupFilterElement(context, filterContainer, null);
		return object;
	};
	oFF.QFilterVirtualDatasource.prototype.m_schemaName = null;
	oFF.QFilterVirtualDatasource.prototype.m_packageName = null;
	oFF.QFilterVirtualDatasource.prototype.m_objectName = null;
	oFF.QFilterVirtualDatasource.prototype.releaseObject = function() {
		this.m_schemaName = null;
		this.m_packageName = null;
		this.m_objectName = null;
		oFF.QFilterElement.prototype.releaseObject.call(this);
	};
	oFF.QFilterVirtualDatasource.prototype.setDetails = function(schemaName,
			packageName, objectName) {
		this.m_schemaName = schemaName;
		this.m_packageName = packageName;
		this.m_objectName = objectName;
	};
	oFF.QFilterVirtualDatasource.prototype.getSchemaName = function() {
		return this.m_schemaName;
	};
	oFF.QFilterVirtualDatasource.prototype.getPackageName = function() {
		return this.m_packageName;
	};
	oFF.QFilterVirtualDatasource.prototype.getObjectName = function() {
		return this.m_objectName;
	};
	oFF.QFilterVirtualDatasource.prototype.getOlapComponentType = function() {
		return oFF.FilterComponentType.VIRTUAL_DATASOURCE;
	};
	oFF.QLeveledHierarchy = function() {
	};
	oFF.QLeveledHierarchy.prototype = new oFF.QModelComponent();
	oFF.QLeveledHierarchy.create = function(context, dimension, name) {
		var object = new oFF.QLeveledHierarchy();
		object.setupLeveledHierarchy(context, dimension, name);
		if (oFF.notNull(dimension)) {
			object.m_dimensionName = dimension.getName();
		}
		return object;
	};
	oFF.QLeveledHierarchy.prototype.m_dateFrom = null;
	oFF.QLeveledHierarchy.prototype.m_dateTo = null;
	oFF.QLeveledHierarchy.prototype.m_dueDate = null;
	oFF.QLeveledHierarchy.prototype.m_hierarchyDescription = null;
	oFF.QLeveledHierarchy.prototype.m_hierId = null;
	oFF.QLeveledHierarchy.prototype.m_hierType = null;
	oFF.QLeveledHierarchy.prototype.m_isRemote = false;
	oFF.QLeveledHierarchy.prototype.m_isModeled = false;
	oFF.QLeveledHierarchy.prototype.m_level = null;
	oFF.QLeveledHierarchy.prototype.m_objectVersion = null;
	oFF.QLeveledHierarchy.prototype.m_owner = null;
	oFF.QLeveledHierarchy.prototype.m_uniqueName = null;
	oFF.QLeveledHierarchy.prototype.m_version = null;
	oFF.QLeveledHierarchy.prototype.m_versionDescription = null;
	oFF.QLeveledHierarchy.prototype.m_hierarchyType = null;
	oFF.QLeveledHierarchy.prototype.m_dimensionName = null;
	oFF.QLeveledHierarchy.prototype.getDimensionName = function() {
		return this.m_dimensionName;
	};
	oFF.QLeveledHierarchy.prototype.setDimensionName = function(dimensionName) {
		this.m_dimensionName = dimensionName;
	};
	oFF.QLeveledHierarchy.prototype.isEqualTo = function(other) {
		var xOther;
		if (oFF.isNull(other)) {
			return false;
		}
		if (this === other) {
			return true;
		}
		xOther = other;
		return oFF.XString.isEqual(this.getHierarchyUniqueName(), xOther
				.getHierarchyUniqueName())
				&& oFF.XString.isEqual(this.getHierarchyName(), xOther
						.getHierarchyName())
				&& oFF.XString.isEqual(this.getDimensionName(), xOther
						.getDimensionName())
				&& oFF.XObjectExt.areEqual(this.getDateFrom(), xOther
						.getDateFrom())
				&& oFF.XObjectExt
						.areEqual(this.getDateTo(), xOther.getDateTo())
				&& oFF.XString.isEqual(this.getHierarchyVersion(), xOther
						.getHierarchyVersion());
	};
	oFF.QLeveledHierarchy.prototype.cloneOlapComponent = function(context,
			parent) {
		var clone = oFF.QLeveledHierarchy.create(context, parent, this
				.getName());
		var iterator;
		clone.setDateFrom(oFF.XObjectExt.cloneIfNotNull(this.getDateFrom()));
		clone.setDateTo(oFF.XObjectExt.cloneIfNotNull(this.getDateTo()));
		clone.setHierarchyDueDate(oFF.XObjectExt.cloneIfNotNull(this
				.getHierarchyDueDate()));
		clone.setHierarchyDescription(this.getHierarchyDescription());
		clone.setHierarchyUniqueName(this.getHierarchyUniqueName());
		clone.setHierId(this.getHierId());
		clone.setHierType(this.getHierType());
		clone.setIsRemote(this.isRemote());
		clone.setIsModeled(this.isModeled());
		clone.setObjectVersion(this.getObjectVersion());
		clone.setOwner(this.getOwner());
		clone.setHierarchyVersion(this.getHierarchyVersion());
		clone.setVersionDescription(this.getVersionDescription());
		clone.setHierarchyType(this.getHierarchyType());
		clone.setDimensionName(this.getDimensionName());
		iterator = this.m_level.getIterator();
		while (iterator.hasNext()) {
			clone.getAllLevelBase().add(iterator.next().clone());
		}
		oFF.XObjectExt.release(iterator);
		return clone;
	};
	oFF.QLeveledHierarchy.prototype.setupLeveledHierarchy = function(context,
			dimension, name) {
		oFF.QModelComponent.prototype.setupModelComponentWithName.call(this,
				context, dimension, name);
		this.m_level = oFF.XList.create();
	};
	oFF.QLeveledHierarchy.prototype.releaseObject = function() {
		this.m_level = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_level);
		this.m_dateFrom = oFF.XObjectExt.release(this.m_dateFrom);
		this.m_dateTo = oFF.XObjectExt.release(this.m_dateTo);
		this.m_dueDate = oFF.XObjectExt.release(this.m_dueDate);
		this.m_hierarchyDescription = null;
		this.m_hierId = null;
		this.m_hierType = null;
		this.m_objectVersion = null;
		this.m_owner = null;
		this.m_uniqueName = null;
		this.m_version = null;
		this.m_versionDescription = null;
		this.m_hierarchyType = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QLeveledHierarchy.prototype.getAllLevel = function() {
		return this.m_level;
	};
	oFF.QLeveledHierarchy.prototype.getHierarchyLevels = function() {
		return this.getAllLevel();
	};
	oFF.QLeveledHierarchy.prototype.getAllLevelBase = function() {
		return this.m_level;
	};
	oFF.QLeveledHierarchy.prototype.getDateFrom = function() {
		return this.m_dateFrom;
	};
	oFF.QLeveledHierarchy.prototype.getDateTo = function() {
		return this.m_dateTo;
	};
	oFF.QLeveledHierarchy.prototype.getDimension = function() {
		return this.getParentComponent();
	};
	oFF.QLeveledHierarchy.prototype.getHierarchyDueDate = function() {
		return this.m_dueDate;
	};
	oFF.QLeveledHierarchy.prototype.getDueDate = function() {
		return this.m_dueDate;
	};
	oFF.QLeveledHierarchy.prototype.getHierarchyDescription = function() {
		return this.m_hierarchyDescription;
	};
	oFF.QLeveledHierarchy.prototype.getHierarchyName = function() {
		return this.getName();
	};
	oFF.QLeveledHierarchy.prototype.getHierarchyUniqueName = function() {
		return this.m_uniqueName;
	};
	oFF.QLeveledHierarchy.prototype.getHierId = function() {
		return this.m_hierId;
	};
	oFF.QLeveledHierarchy.prototype.getHierType = function() {
		return this.m_hierType;
	};
	oFF.QLeveledHierarchy.prototype.getLevel = function(level) {
		var lvlIt = this.m_level.getIterator();
		var lvl;
		while (lvlIt.hasNext()) {
			lvl = lvlIt.next();
			if (lvl.getLevelNumber() === level) {
				oFF.XObjectExt.release(lvlIt);
				return lvl;
			}
		}
		oFF.XObjectExt.release(lvlIt);
		return null;
	};
	oFF.QLeveledHierarchy.prototype.getLevelByType = function(type) {
		var lvlIt = this.m_level.getIterator();
		var lvl;
		while (lvlIt.hasNext()) {
			lvl = lvlIt.next();
			if (lvl.getLevelType().isEqualTo(type)) {
				oFF.XObjectExt.release(lvlIt);
				return lvl;
			}
		}
		oFF.XObjectExt.release(lvlIt);
		return null;
	};
	oFF.QLeveledHierarchy.prototype.getObjectVersion = function() {
		return this.m_objectVersion;
	};
	oFF.QLeveledHierarchy.prototype.getOwner = function() {
		return this.m_owner;
	};
	oFF.QLeveledHierarchy.prototype.getHierarchyVersion = function() {
		return this.m_version;
	};
	oFF.QLeveledHierarchy.prototype.getVersion = function() {
		return this.m_version;
	};
	oFF.QLeveledHierarchy.prototype.getVersionDescription = function() {
		return this.m_versionDescription;
	};
	oFF.QLeveledHierarchy.prototype.isRemote = function() {
		return this.m_isRemote;
	};
	oFF.QLeveledHierarchy.prototype.isModeled = function() {
		return this.m_isModeled;
	};
	oFF.QLeveledHierarchy.prototype.setIsModeled = function(isModeled) {
		this.m_isModeled = isModeled;
	};
	oFF.QLeveledHierarchy.prototype.setDateFrom = function(dateFrom) {
		this.m_dateFrom = dateFrom;
	};
	oFF.QLeveledHierarchy.prototype.setDateTo = function(dateTo) {
		this.m_dateTo = dateTo;
	};
	oFF.QLeveledHierarchy.prototype.setHierarchyDueDate = function(dueDate) {
		this.m_dueDate = dueDate;
	};
	oFF.QLeveledHierarchy.prototype.setHierarchyDescription = function(
			hierarchyDescription) {
		this.m_hierarchyDescription = hierarchyDescription;
	};
	oFF.QLeveledHierarchy.prototype.setHierarchyUniqueName = function(
			uniqueName) {
		this.m_uniqueName = uniqueName;
	};
	oFF.QLeveledHierarchy.prototype.setHierId = function(hierId) {
		this.m_hierId = hierId;
	};
	oFF.QLeveledHierarchy.prototype.setHierType = function(hierType) {
		this.m_hierType = hierType;
	};
	oFF.QLeveledHierarchy.prototype.setIsRemote = function(isRemote) {
		this.m_isRemote = isRemote;
	};
	oFF.QLeveledHierarchy.prototype.setObjectVersion = function(objectVersion) {
		this.m_objectVersion = objectVersion;
	};
	oFF.QLeveledHierarchy.prototype.setOwner = function(owner) {
		this.m_owner = owner;
	};
	oFF.QLeveledHierarchy.prototype.setHierarchyVersion = function(version) {
		this.m_version = version;
	};
	oFF.QLeveledHierarchy.prototype.setHierarchyName = function(name) {
		this.setName(name);
	};
	oFF.QLeveledHierarchy.prototype.setVersionDescription = function(
			versionDescription) {
		this.m_versionDescription = versionDescription;
	};
	oFF.QLeveledHierarchy.prototype.getHierarchyType = function() {
		return this.m_hierarchyType;
	};
	oFF.QLeveledHierarchy.prototype.setHierarchyType = function(hierarchyType) {
		this.m_hierarchyType = hierarchyType;
	};
	oFF.QLeveledHierarchy.prototype.supportsHierarchyLevels = function() {
		return oFF.XCollectionUtils.hasElements(this.m_level);
	};
	oFF.QueryManager = function() {
	};
	oFF.QueryManager.prototype = new oFF.DfService();
	oFF.QueryManager.prototype.m_lifeCycleState = null;
	oFF.QueryManager.prototype.m_systemDescription = null;
	oFF.QueryManager.prototype.m_queryModel = null;
	oFF.QueryManager.prototype.m_activeContainer = null;
	oFF.QueryManager.prototype.m_convenienceCmds = null;
	oFF.QueryManager.prototype.m_metadataModel = null;
	oFF.QueryManager.prototype.m_directVariableTransferConsumer = false;
	oFF.QueryManager.prototype.m_mode = null;
	oFF.QueryManager.prototype.m_processorStateListeners = null;
	oFF.QueryManager.prototype.m_activeReturnedDataSelections = null;
	oFF.QueryManager.prototype.m_inactiveReturnedDataSelections = null;
	oFF.QueryManager.prototype.m_queryExecutedListener = null;
	oFF.QueryManager.prototype.m_variableProcessorPreviousState = null;
	oFF.QueryManager.prototype.m_variableProcessorState = null;
	oFF.QueryManager.prototype.m_hasPreparedAfterVariables = false;
	oFF.QueryManager.prototype.m_planningManager = null;
	oFF.QueryManager.prototype.m_dimensionsToClone = null;
	oFF.QueryManager.prototype.m_dimensionsRequestedFromClient = null;
	oFF.QueryManager.prototype.m_preQueryExecutor = null;
	oFF.QueryManager.prototype.m_enableHierarchyToUDHConversion = false;
	oFF.QueryManager.prototype.m_includePerformanceData = null;
	oFF.QueryManager.prototype.setupValues = function() {
		var olapEnvironmentBase;
		var defaultArea;
		this.m_lifeCycleState = oFF.LifeCycleState.INITIAL;
		this.m_activeContainer = oFF.ResultSetContainer.create(this, null);
		this.m_variableProcessorState = oFF.VariableProcessorState.CHANGEABLE_STARTUP;
		olapEnvironmentBase = this.getOlapEnvironmentBase();
		defaultArea = olapEnvironmentBase.getDefaultArea();
		defaultArea.registerQueryManager(this);
		this.m_queryExecutedListener = oFF.XSimpleMap.create();
		this.m_activeReturnedDataSelections = oFF.XHashSetOfString.create();
		this.m_inactiveReturnedDataSelections = oFF.XHashSetOfString.create();
		this.m_includePerformanceData = oFF.TriStateBool._DEFAULT;
		if (this.getApplication().getVersion() >= oFF.XVersion.V114_DONT_REQUEST_PERFORMANCE_DATA_BY_DEFAULT) {
			this.setRequestPerformanceData(false);
		}
	};
	oFF.QueryManager.prototype.setRequestPerformanceData = function(
			requestPerformanceData) {
		if (this.getSystemType().isTypeOf(oFF.SystemType.HANA)) {
			this.m_includePerformanceData = oFF.TriStateBool
					.lookup(requestPerformanceData);
		}
	};
	oFF.QueryManager.prototype.isRequestingPerformanceData = function() {
		return this.m_includePerformanceData.getBoolean() === true;
	};
	oFF.QueryManager.prototype._createPlanningManager = function() {
		if (oFF.isNull(this.m_planningManager)) {
			this.m_planningManager = oFF.PlanningFactory
					.createPlanningManager(this);
		}
		return oFF.notNull(this.m_planningManager);
	};
	oFF.QueryManager.prototype.getLifeCycleState = function() {
		return this.m_lifeCycleState;
	};
	oFF.QueryManager.prototype.setLifeCycleState = function(
			desiredLifeCycleState) {
		var buffer;
		if (desiredLifeCycleState === oFF.LifeCycleState.TERMINATED
				&& this.m_lifeCycleState === oFF.LifeCycleState.RELEASED) {
			return;
		}
		if (desiredLifeCycleState.getCode() < this.m_lifeCycleState.getCode()) {
			buffer = oFF.XStringBuffer.create();
			buffer.append("QueryManager: cannot change lifeCycle from ");
			buffer.append(this.m_lifeCycleState.getName()).append(" to ");
			buffer.append(desiredLifeCycleState.getName());
			throw oFF.XException.createIllegalStateException(buffer.toString());
		}
		this.m_lifeCycleState = desiredLifeCycleState;
	};
	oFF.QueryManager.prototype.processCancel = function(syncType) {
		this.processProviderCancelThreads(syncType, null, null);
	};
	oFF.QueryManager.prototype.processClearCache = function(syncType, timestamp) {
		this.processProviderClearCache(syncType, null, null, timestamp);
	};
	oFF.QueryManager.prototype.processShutdown = function(syncType, listener,
			customIdentifier) {
		return oFF.QmShutdownAction.createAndRun(syncType, listener,
				customIdentifier, this);
	};
	oFF.QueryManager.prototype.releaseObject = function() {
		var olapEnvironmentBase = this.getOlapEnvironmentBase();
		var defaultArea;
		if (oFF.notNull(olapEnvironmentBase)) {
			defaultArea = olapEnvironmentBase.getDefaultArea();
			defaultArea.unregisterQueryManager(this);
		}
		this.m_convenienceCmds = oFF.XObjectExt.release(this.m_convenienceCmds);
		this.m_activeReturnedDataSelections = oFF.XObjectExt
				.release(this.m_activeReturnedDataSelections);
		this.m_inactiveReturnedDataSelections = oFF.XObjectExt
				.release(this.m_inactiveReturnedDataSelections);
		this.m_activeContainer = oFF.XObjectExt.release(this.m_activeContainer);
		this.m_processorStateListeners = oFF.XObjectExt
				.release(this.m_processorStateListeners);
		this.m_queryModel = oFF.XObjectExt.release(this.m_queryModel);
		this.setLifeCycleState(oFF.LifeCycleState.RELEASED);
		this.m_metadataModel = oFF.XObjectExt.release(this.m_metadataModel);
		this.m_planningManager = oFF.XObjectExt.release(this.m_planningManager);
		this.m_preQueryExecutor = oFF.XObjectExt
				.release(this.m_preQueryExecutor);
		this.m_systemDescription = null;
		this.m_variableProcessorPreviousState = null;
		this.m_variableProcessorState = null;
		this.m_queryExecutedListener = null;
		this.m_dimensionsToClone = oFF.XObjectExt
				.release(this.m_dimensionsToClone);
		this.m_dimensionsRequestedFromClient = oFF.XObjectExt
				.release(this.m_dimensionsRequestedFromClient);
		this.m_includePerformanceData = null;
		oFF.DfService.prototype.releaseObject.call(this);
	};
	oFF.QueryManager.prototype.assertLifeCycleActive = function() {
		if (this.m_lifeCycleState !== oFF.LifeCycleState.ACTIVE
				&& this.m_lifeCycleState !== oFF.LifeCycleState.STARTING_UP) {
			throw oFF.XException
					.createIllegalStateException("Query manager is not active");
		}
	};
	oFF.QueryManager.prototype.setupClone = function(origin, cloneMode,
			dataSource) {
		var application = origin.getApplication();
		var serviceConfig = origin.getServiceConfig();
		var serviceConfigClone;
		var connectionPool;
		var origSystemDescription;
		var originConnection;
		var cloneConnection;
		var variableVariants;
		var sizeVariants;
		var idxVariants;
		var originQueryModel;
		var capabilities;
		var serverBaseSerialization;
		var serializer;
		var inaQueryModel;
		var deserializer;
		var deserializer2;
		var instanceId;
		var dataSourceBase;
		if (cloneMode === oFF.QueryCloneMode.MICRO_CUBE) {
			serviceConfigClone = serviceConfig
					.cloneUsingExtDataSource(dataSource);
		} else {
			serviceConfigClone = serviceConfig.clone();
		}
		oFF.DfService.prototype.setupService.call(this, serviceConfigClone);
		serviceConfigClone.linkToQueryManager(this);
		connectionPool = application.getConnectionPool();
		origSystemDescription = origin.getSystemDescription();
		originConnection = origin.getConnection();
		cloneConnection = originConnection;
		if (oFF.isNull(originConnection)) {
			cloneConnection = connectionPool
					.getConnection(origSystemDescription.getSystemName());
		} else {
			if (originConnection.useSessionUrlRewrite()
					&& connectionPool
							.getMaximumSharedConnections(origSystemDescription
									.getSystemName()) > 1) {
				cloneConnection = connectionPool.getConnectionExt(
						origSystemDescription.getSystemName(), false,
						originConnection.getName());
			}
		}
		this.setConnection(cloneConnection);
		this.setSystemDescription(origSystemDescription);
		this.getInitSettings().setDataRequest(
				origin.getInitSettings().getDataRequest());
		this.setupValues();
		this.m_includePerformanceData = origin.m_includePerformanceData;
		if (origin.getQueryModel() !== null) {
			this.initQueryModel();
		}
		this.m_lifeCycleState = oFF.LifeCycleState.STARTING_UP;
		this.m_mode = origin.getMode();
		this.m_activeContainer = oFF.ResultSetContainer.create(this, origin
				.getActiveResultSetContainer());
		this.m_enableHierarchyToUDHConversion = origin.m_enableHierarchyToUDHConversion;
		this.m_metadataModel = origin.getMetadataModel().cloneOlapComponent(
				null, null);
		this.setOffsetColumns(origin.getOffsetColumns());
		this.setOffsetRows(origin.getOffsetRows());
		this.setMaxRows(origin.getMaxRows());
		this.setMaxColumns(origin.getMaxColumns());
		this.setSuppressExitVariableValuesInRepoMode(origin
				.isSuppressExitVariableValuesInRepoMode());
		if (origin.supportsReturnedDataSelection()) {
			this.m_activeReturnedDataSelections = oFF.XHashSetOfString.create();
			this.m_activeReturnedDataSelections.putAll(origin
					.getAllEnabledReturnedDataSelections());
			this.m_inactiveReturnedDataSelections = oFF.XHashSetOfString
					.create();
			this.m_inactiveReturnedDataSelections.putAll(origin
					.getAllDisabledReturnedDataSelections());
		}
		if (cloneMode !== oFF.QueryCloneMode.MICRO_CUBE) {
			variableVariants = origin.getVariableVariants();
			if (oFF.notNull(variableVariants)) {
				sizeVariants = variableVariants.size();
				for (idxVariants = 0; idxVariants < sizeVariants; idxVariants++) {
					this.addVariableVariant(variableVariants.get(idxVariants)
							.clone());
				}
			}
		}
		if (oFF.XCollectionUtils.hasElements(serviceConfig
				.getRequiredDimensions())) {
			serviceConfigClone.setRequiredDimensions(serviceConfig
					.getRequiredDimensions().createListOfStringCopy());
		}
		if (oFF.XCollectionUtils.hasElements(origin.getDimensionsToClone())) {
			this.setDimensionsToClone(origin.getDimensionsToClone()
					.createSetCopy());
			this.setDimensionsRequestedFromClient(origin
					.getDimensionsRequestedFromClient().createSetCopy());
		}
		originQueryModel = origin.getQueryModel();
		if (oFF.notNull(originQueryModel)) {
			capabilities = this.getMainCapabilities();
			serverBaseSerialization = null;
			if (cloneMode === oFF.QueryCloneMode.BASE_STATE) {
				serverBaseSerialization = originQueryModel
						.getServerBaseSerializationForBaseState();
			} else {
				serverBaseSerialization = originQueryModel
						.getServerBaseSerialization();
			}
			if (cloneMode === oFF.QueryCloneMode.CURRENT_STATE
					|| cloneMode === oFF.QueryCloneMode.MICRO_CUBE) {
				this.m_queryModel.copyQueryModel(originQueryModel, cloneMode);
			} else {
				if (cloneMode === oFF.QueryCloneMode.CURRENT_STATE_INA) {
					serializer = oFF.QInAExportFactory.createForCloning(
							application, capabilities);
					inaQueryModel = serializer.exportQueryModel(
							originQueryModel, true, true);
					deserializer = oFF.QInAImportFactory.createForCloning(
							application, capabilities);
					deserializer.importQueryModel(inaQueryModel,
							this.m_queryModel);
					oFF.MessageUtil.checkNoError(deserializer);
				} else {
					if (cloneMode === oFF.QueryCloneMode.BASE_STATE) {
						deserializer2 = oFF.QInAImportFactory.create(
								application, oFF.QModelFormat.INA_METADATA,
								capabilities);
						deserializer2.importQueryModel(serverBaseSerialization,
								this.m_queryModel);
					} else {
						throw oFF.XException
								.createRuntimeException(oFF.XStringUtils
										.concatenate2(
												"Mode not yet supported: ",
												cloneMode.toString()));
					}
				}
			}
			this.m_queryModel.getDrillManager()
					.setValidateContextFreeNavigations(
							originQueryModel.getDrillManager()
									.isValidatingContextFreeNavigations());
			this.m_queryModel.setExportFixedFilter(originQueryModel
					.isExportingFixedFilter());
			this.m_queryModel.setExportVariables(originQueryModel
					.isExportingVariables());
			this.m_queryModel.setRequestTextFieldAlways(originQueryModel
					.isExportingTextFieldAlways());
			this.m_queryModel
					.setServerBaseSerialization(serverBaseSerialization);
			this.reorderStructureMember(
					this.m_queryModel.getMeasureDimension(), originQueryModel
							.getMeasureDimension());
			this.reorderStructureMember(this.m_queryModel
					.getNonMeasureDimension(), originQueryModel
					.getNonMeasureDimension());
			this.reorderStructureMember(this.m_queryModel
					.getNonMeasureDimension2(), originQueryModel
					.getNonMeasureDimension2());
			this.reorderStructureMember(
					this.m_queryModel.getAccountDimension(), originQueryModel
							.getAccountDimension());
		}
		if (oFF.notNull(this.m_queryModel)) {
			instanceId = serviceConfigClone.getInstanceId();
			dataSourceBase = this.m_queryModel.getDataSourceBase();
			dataSourceBase.setInstanceId(instanceId);
		}
		if (this.getResultSetPersistenceIdentifier() !== null) {
			this.setResultSetPersistenceIdentifier(null);
			this.setResultSetPersistanceTargetSchema(null);
			this.setResultSetPersistanceTargetTable(null);
		}
		this.setLifeCycleState(oFF.LifeCycleState.ACTIVE);
		if (oFF.VariableProcessorState.PROCESSING_EMPTY_VARIABLE_DEFINITION === origin
				.getVariableProcessorState()) {
			this.setVariableProcessorState(origin.getVariableProcessorState());
		}
		this.m_includePerformanceData = origin.m_includePerformanceData;
	};
	oFF.QueryManager.prototype.reorderStructureMember = function(
			cloneDimension, origDimension) {
		if (oFF.notNull(cloneDimension) && oFF.notNull(origDimension)) {
			cloneDimension.reOrderStructureMembers(origDimension
					.getOrderedStructureMemberNames());
		}
	};
	oFF.QueryManager.prototype.cloneOlapComponent = function(context, parent) {
		return this.cloneQueryManagerExt(oFF.QueryCloneMode.CURRENT_STATE);
	};
	oFF.QueryManager.prototype.cloneQueryManagerExt = function(cloneMode) {
		var queryManagerClone;
		if (this.getMode() === oFF.QueryManagerMode.BLENDING) {
			queryManagerClone = this.cloneQueryManager();
			if (cloneMode === oFF.QueryCloneMode.BASE_STATE) {
				queryManagerClone.getConvenienceCommands().resetToDefault();
			}
			return queryManagerClone;
		}
		return this.cloneQueryManagerBase(cloneMode);
	};
	oFF.QueryManager.prototype.cloneQueryManager = function() {
		var serviceConfig;
		var blendingDefinition;
		var blendingServiceConfig;
		var extBlendingManager;
		var queryManagerClone;
		var queryModelClone;
		var queryModel;
		var originalModel;
		var deserializeExt;
		var dimensions;
		var dimensionsSize;
		var dimensionIndex;
		var dimension;
		var cloneDimension;
		if (this.getMode() === oFF.QueryManagerMode.BLENDING) {
			serviceConfig = this.getServiceConfig();
			blendingDefinition = serviceConfig.getBlendingDefinition();
			blendingServiceConfig = oFF.QueryServiceConfig
					.createWithBlendingDefinition(this.getApplication(),
							blendingDefinition.cloneBlendingDefinition());
			blendingServiceConfig.activateExperimentalFeatureSet(serviceConfig
					.getExperimentalFeatureSet());
			extBlendingManager = blendingServiceConfig
					.processQueryManagerCreation(oFF.SyncType.BLOCKING, null,
							null);
			oFF.MessageUtil.checkNoError(extBlendingManager);
			queryManagerClone = extBlendingManager.getData();
			queryModelClone = queryManagerClone.getQueryModel();
			queryModel = this.getQueryModel();
			queryModelClone.getDrillManager()
					.setValidateContextFreeNavigations(
							queryModel.getDrillManager()
									.isValidatingContextFreeNavigations());
			originalModel = queryModel.serialize(
					oFF.QModelFormat.INA_REPOSITORY, null);
			deserializeExt = queryModelClone.deserializeExt(
					oFF.QModelFormat.INA_REPOSITORY, originalModel);
			dimensions = queryModel.getDimensions();
			if (oFF.notNull(dimensions)) {
				dimensionsSize = dimensions.size();
				for (dimensionIndex = 0; dimensionIndex < dimensionsSize; dimensionIndex++) {
					dimension = dimensions.get(dimensionIndex);
					if (oFF.isNull(dimension)) {
						continue;
					}
					cloneDimension = queryModelClone
							.getDimensionByNameFromExistingMetadata(dimension
									.getName());
					if (oFF.isNull(cloneDimension)) {
						continue;
					}
					cloneDimension.reOrderStructureMembers(dimension
							.getOrderedStructureMemberNames());
				}
			}
			oFF.MessageUtil.checkNoError(deserializeExt);
			return queryManagerClone;
		}
		return this.cloneQueryManagerBase(oFF.QueryCloneMode.CURRENT_STATE);
	};
	oFF.QueryManager.prototype.initQueryModel = function() {
		var capabilities = this.getCapabilitiesBase();
		var dataSource;
		this.m_queryModel = oFF.QueryModel.create(this.getOlapEnv(), this,
				capabilities);
		dataSource = this.getDataSource();
		if (oFF.notNull(dataSource)) {
			this.m_queryModel.getDataSourceBase().copyFrom(dataSource);
		}
		return this.m_queryModel;
	};
	oFF.QueryManager.prototype.invalidateState = function() {
		if (this._createPlanningManager()) {
			this.m_planningManager.setPublicVersionEditPossible(false);
		}
		if (this.getMode() === oFF.QueryManagerMode.RAW_QUERY) {
			this.getResultsetContainer(true);
		} else {
			this.getQueryModelBase().notifyNodeChanged();
		}
	};
	oFF.QueryManager.prototype.lazyLoadMetadataModel = function() {
		if (oFF.isNull(this.m_metadataModel)) {
			this.m_metadataModel = oFF.QMetadataModel.create(this.m_queryModel);
		}
	};
	oFF.QueryManager.prototype.getMetadataModelBase = function() {
		this.lazyLoadMetadataModel();
		return this.m_metadataModel;
	};
	oFF.QueryManager.prototype.getMetadataModel = function() {
		this.lazyLoadMetadataModel();
		return this.m_metadataModel;
	};
	oFF.QueryManager.prototype.processQueryExecution = function(syncType,
			listener, customIdentifier) {
		return this.processQueryExecutionInternal(syncType, listener,
				customIdentifier,
				this.getMode() === oFF.QueryManagerMode.BLENDING);
	};
	oFF.QueryManager.prototype.processQueryExecutionAsBlendingSource = function(
			syncType, listener, customIdentifier) {
		return this.processQueryExecutionInternal(syncType, listener,
				customIdentifier, true);
	};
	oFF.QueryManager.prototype.processQueryExecutionAsRemotePreQuery = function(
			syncType, listener, customIdentifier) {
		this.getActiveResultSetContainerBase().setIsRemotePreQuery(true);
		return this.processQueryExecutionInternal(syncType, listener,
				customIdentifier, true);
	};
	oFF.QueryManager.prototype.processQueryExecutionInternal = function(
			syncType, listener, customIdentifier, isBlendingProcess) {
		var sequence;
		var submitAction;
		var resultAction;
		var queryModel;
		this.assertLifeCycleActive();
		if (syncType === oFF.SyncType.REGISTER) {
			this.m_queryExecutedListener.put(listener, oFF.XPair.create(
					listener, customIdentifier));
			this.getActiveResultSetContainerBase().attachListener(listener,
					oFF.ListenerType.SPECIFIC, customIdentifier);
			return null;
		} else {
			if (syncType === oFF.SyncType.UNREGISTER) {
				this.m_queryExecutedListener.remove(listener);
				return null;
			}
		}
		if (this.variablesRequireImplicitSubmit()) {
			sequence = oFF.SyncActionSequence.create(this);
			submitAction = this.submitVariables(oFF.SyncType.DELAYED, null,
					null);
			sequence.addAction(submitAction);
			resultAction = this.getActiveResultSetContainer().processExecution(
					oFF.SyncType.DELAYED, null, null);
			sequence.setMainAction(resultAction);
			sequence.attachAllListeners(this.m_queryExecutedListener
					.getValuesAsReadOnlyList());
			return sequence.processSyncAction(syncType, listener,
					customIdentifier);
		}
		this.prepareAfterVariables();
		this.getActiveResultSetContainerBase().attachAllListeners(
				this.m_queryExecutedListener.getValuesAsReadOnlyList());
		queryModel = this.getQueryModel();
		if (this.getPreQueryName() !== null || oFF.notNull(queryModel)
				&& queryModel.isBasedOnMicroCube()) {
			this.getResultsetContainer(true);
		}
		if (!isBlendingProcess
				&& this.getResultSetPersistenceIdentifier() !== null) {
			this.cleanPersistencySettings();
		}
		return this.getActiveResultSetContainer().processExecution(syncType,
				listener, customIdentifier);
	};
	oFF.QueryManager.prototype.cleanPersistencySettings = function() {
		this.setResultSetPersistenceIdentifier(null);
		this.setResultSetPersistanceTargetSchema(null);
		this.setResultSetPersistanceTargetTable(null);
		this.getActiveResultSetContainerBase().setSerializedData(null, null);
	};
	oFF.QueryManager.prototype.onModelChange = function(phase) {
		if (phase === oFF.QDeltaBroadcastPhase.BEFORE_EVENTS_BROADCAST) {
			this.getResultsetContainer(true);
		}
	};
	oFF.QueryManager.prototype.getResultsetContainer = function(
			enforceOutOfSync) {
		var oldContainer;
		if (oFF.isNull(this.m_activeContainer)
				|| this.m_activeContainer.isReleased()
				|| enforceOutOfSync
				&& this.m_activeContainer.getSyncState() !== oFF.SyncState.OUT_OF_SYNC) {
			oldContainer = this.m_activeContainer;
			this.m_activeContainer = oFF.ResultSetContainer.create(this,
					this.m_activeContainer);
			if (oFF.notNull(oldContainer)) {
				oldContainer.setSerializedData(null, null);
			}
		}
		return this.m_activeContainer;
	};
	oFF.QueryManager.prototype.getClassicResultSet = function() {
		this.assertLifeCycleActive();
		return this.getActiveResultSetContainer().getClassicResultSet();
	};
	oFF.QueryManager.prototype.isClassicResultSetAvailable = function() {
		this.assertLifeCycleActive();
		return this.getActiveResultSetContainer().isClassicResultSetAvailable();
	};
	oFF.QueryManager.prototype.getCursorResultSet = function() {
		this.assertLifeCycleActive();
		return this.getActiveResultSetContainer().getCursorResultSet();
	};
	oFF.QueryManager.prototype.getAbstractRendering = function(type, protocol) {
		this.assertLifeCycleActive();
		return this.getActiveResultSetContainer().getAbstractRendering(type,
				protocol);
	};
	oFF.QueryManager.prototype.isCursorResultSetAvailable = function() {
		this.assertLifeCycleActive();
		return this.getActiveResultSetContainer().isCursorResultSetAvailable();
	};
	oFF.QueryManager.prototype.setOffsetRows = function(offset) {
		if (this.getResultsetContainer(false).getOffsetRows() !== offset) {
			this.getResultsetContainer(true).setOffsetRows(offset);
		}
		return null;
	};
	oFF.QueryManager.prototype.getOffsetRows = function() {
		return this.getResultsetContainer(false).getOffsetRows();
	};
	oFF.QueryManager.prototype.setOffsetColumns = function(offset) {
		if (this.getResultsetContainer(false).getOffsetColumns() !== offset) {
			this.getResultsetContainer(true).setOffsetColumns(offset);
		}
		return null;
	};
	oFF.QueryManager.prototype.getOffsetColumns = function() {
		return this.getResultsetContainer(false).getOffsetColumns();
	};
	oFF.QueryManager.prototype.setSuppressKeyfigureCalculation = function(
			doSupress) {
		if (this.getResultsetContainer(false)
				.isKeyfigureCalculationSuppressed() !== doSupress) {
			this.getResultsetContainer(true).setSuppressKeyfigureCalculation(
					doSupress);
		}
		return null;
	};
	oFF.QueryManager.prototype.isKeyfigureCalculationSuppressed = function() {
		return this.getResultsetContainer(false)
				.isKeyfigureCalculationSuppressed();
	};
	oFF.QueryManager.prototype.setMaxRows = function(max) {
		if (this.getResultsetContainer(false).getMaxRows() !== max) {
			this.getResultsetContainer(true).setMaxRows(max);
		}
		return null;
	};
	oFF.QueryManager.prototype.getMaxRows = function() {
		return this.getResultsetContainer(false).getMaxRows();
	};
	oFF.QueryManager.prototype.setMaxColumns = function(max) {
		if (this.getResultsetContainer(false).getMaxColumns() !== max) {
			this.getResultsetContainer(true).setMaxColumns(max);
		}
		return null;
	};
	oFF.QueryManager.prototype.getMaxColumns = function() {
		return this.getResultsetContainer(false).getMaxColumns();
	};
	oFF.QueryManager.prototype.getMaxResultRecords = function() {
		return this.getResultsetContainer(false).getMaxResultRecords();
	};
	oFF.QueryManager.prototype.setMaxResultRecords = function(maxResultRecords) {
		if (this.getResultsetContainer(false).getMaxResultRecords() !== maxResultRecords) {
			this.getResultsetContainer(true).setMaxResultRecords(
					maxResultRecords);
		}
		return null;
	};
	oFF.QueryManager.prototype.resetMaxResultRecords = function() {
		this.getResultsetContainer(true).resetMaxResultRecords();
		return null;
	};
	oFF.QueryManager.prototype.setResultSetPersistanceTargetSchema = function(
			resultSetPersistenceSchema) {
		var currentSchema = this.getResultsetContainer(false)
				.getResultSetPersistenceSchema();
		if (!oFF.XString.isEqual(currentSchema, resultSetPersistenceSchema)) {
			this.getResultsetContainer(true)
					.setResultSetPersistanceTargetSchema(
							resultSetPersistenceSchema);
		}
		return null;
	};
	oFF.QueryManager.prototype.setResultSetPersistanceTargetTable = function(
			resultSetPersistenceTable) {
		var currentTable = this.getResultsetContainer(false)
				.getResultSetPersistenceTable();
		if (!oFF.XString.isEqual(currentTable, resultSetPersistenceTable)) {
			this.getResultsetContainer(true)
					.setResultSetPersistanceTargetTable(
							resultSetPersistenceTable);
		}
		return null;
	};
	oFF.QueryManager.prototype.setResultSetPersistenceIdentifier = function(
			resultSetPersistenceIdentifier) {
		var currentIdentifier = this.getResultsetContainer(false)
				.getResultSetPersistenceIdentifier();
		if (!oFF.XString.isEqual(currentIdentifier,
				resultSetPersistenceIdentifier)) {
			this.getResultsetContainer(true).setResultSetPersistenceIdentifier(
					resultSetPersistenceIdentifier);
		}
		return null;
	};
	oFF.QueryManager.prototype.getResultSetPersistenceSchema = function() {
		return this.getResultsetContainer(false)
				.getResultSetPersistenceSchema();
	};
	oFF.QueryManager.prototype.getResultSetPersistenceTable = function() {
		return this.getResultsetContainer(false).getResultSetPersistenceTable();
	};
	oFF.QueryManager.prototype.getResultSetPersistenceIdentifier = function() {
		return this.getResultsetContainer(false)
				.getResultSetPersistenceIdentifier();
	};
	oFF.QueryManager.prototype.setExecuteRequestOnOldResultSet = function(
			executeRequestOnOldResultSet) {
		if (this.getResultsetContainer(false).getExecuteRequestOnOldResultSet() !== executeRequestOnOldResultSet) {
			this.getResultsetContainer(true).setExecuteRequestOnOldResultSet(
					executeRequestOnOldResultSet);
		}
		return null;
	};
	oFF.QueryManager.prototype.isResultSetTransportEnabled = function() {
		return this.getResultsetContainer(false).isResultSetTransportEnabled();
	};
	oFF.QueryManager.prototype.setResultSetTransportEnabled = function(
			isEnabled) {
		if (this.getResultsetContainer(false).isResultSetTransportEnabled() !== isEnabled) {
			this.getResultsetContainer(true).setResultSetTransportEnabled(
					isEnabled);
		}
		return null;
	};
	oFF.QueryManager.prototype.setDataRefreshEnabled = function(
			dataRefreshEnabled) {
		if (this.getResultsetContainer(false).getDataRefreshEnabled() !== dataRefreshEnabled) {
			this.getResultsetContainer(true).setDataRefreshEnabled(
					dataRefreshEnabled);
		}
	};
	oFF.QueryManager.prototype.getDataRefreshEnabled = function() {
		return this.getResultsetContainer(false).getDataRefreshEnabled();
	};
	oFF.QueryManager.prototype.getExecuteRequestOnOldResultSet = function() {
		return this.getActiveResultSetContainer()
				.getExecuteRequestOnOldResultSet();
	};
	oFF.QueryManager.prototype.getActiveResultSetContainer = function() {
		return this.getResultsetContainer(false);
	};
	oFF.QueryManager.prototype.getActiveResultSetContainerBase = function() {
		return this.getResultsetContainer(false);
	};
	oFF.QueryManager.prototype.getResultSetSyncState = function() {
		return this.getActiveResultSetContainer().getResultSetSyncState();
	};
	oFF.QueryManager.prototype.getResultSetMessages = function() {
		return this.getActiveResultSetContainer();
	};
	oFF.QueryManager.prototype.hasChangedValues = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.hasChangedValues() : false;
	};
	oFF.QueryManager.prototype.hasChangedValueLocks = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.hasChangedValueLocks() : false;
	};
	oFF.QueryManager.prototype.hasChangedCells = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.hasChangedCells() : false;
	};
	oFF.QueryManager.prototype.transferNewValues = function() {
		if (this._createPlanningManager()) {
			this.m_planningManager.transferNewValues();
		}
	};
	oFF.QueryManager.prototype.resetNewValues = function() {
		if (this._createPlanningManager()) {
			this.m_planningManager.resetNewValues();
		}
	};
	oFF.QueryManager.prototype.hasNewValues = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.hasNewValues() : false;
	};
	oFF.QueryManager.prototype.setDataEntryReadOnly = function(
			dataEntryReadOnly) {
		if (this._createPlanningManager()) {
			this.m_planningManager.setDataEntryReadOnly(dataEntryReadOnly);
		}
	};
	oFF.QueryManager.prototype.isDataEntryReadOnly = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.isDataEntryReadOnly() : true;
	};
	oFF.QueryManager.prototype.setDataEntryEnabled = function(dataEntryEnabled) {
		if (this._createPlanningManager()) {
			this.m_planningManager.setDataEntryEnabled(dataEntryEnabled);
		}
	};
	oFF.QueryManager.prototype.isDataEntryEnabled = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.isDataEntryEnabled() : false;
	};
	oFF.QueryManager.prototype.initializeDataAreaState = function() {
		if (this._createPlanningManager()) {
			return this.m_planningManager.initializeDataAreaState();
		}
		return oFF.MessageManager.createMessageManagerExt(this.getSession());
	};
	oFF.QueryManager.prototype.getConvenienceCommands = function() {
		if (oFF.isNull(this.m_convenienceCmds)) {
			this.m_convenienceCmds = this.getOlapEnv().selectCmds(this);
		}
		return this.m_convenienceCmds;
	};
	oFF.QueryManager.prototype.getSystemDescription = function() {
		var initSettings;
		var systemDescription;
		if (oFF.isNull(this.m_systemDescription)) {
			initSettings = this.getInitSettings();
			systemDescription = initSettings.getSystemDescription();
			this.m_systemDescription = oFF.XWeakReferenceUtil
					.getWeakRef(systemDescription);
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_systemDescription);
	};
	oFF.QueryManager.prototype.setSystemDescription = function(
			systemDescription) {
		this.m_systemDescription = oFF.XWeakReferenceUtil
				.getWeakRef(systemDescription);
	};
	oFF.QueryManager.prototype.getDataSource = function() {
		return this.getInitSettings().getDataSource();
	};
	oFF.QueryManager.prototype.setDataSource = function(dataSource) {
		this.getInitSettings().setDataSource(dataSource);
	};
	oFF.QueryManager.prototype.getMode = function() {
		if (oFF.isNull(this.m_mode)) {
			this.m_mode = this.getInitSettings().getMode();
		}
		return this.m_mode;
	};
	oFF.QueryManager.prototype.setMode = function(mode) {
		this.m_mode = mode;
	};
	oFF.QueryManager.prototype.getInstanceId = function() {
		return this.getInitSettings().getInstanceId();
	};
	oFF.QueryManager.prototype.isOpenForEdit = function() {
		return this.getInitSettings().isOpenForEdit();
	};
	oFF.QueryManager.prototype.getProviderType = function() {
		return this.getInitSettings().getProviderType();
	};
	oFF.QueryManager.prototype.getDefinitionType = function() {
		return this.getInitSettings().getDefinitionType();
	};
	oFF.QueryManager.prototype.getDefinitionAsJson = function() {
		return this.getInitSettings().getDefinitionAsJson();
	};
	oFF.QueryManager.prototype.getDefinition = function() {
		return this.getInitSettings().getDefinition();
	};
	oFF.QueryManager.prototype.getDefinitionAsStructure = function() {
		return this.getInitSettings().getDefinitionAsStructure();
	};
	oFF.QueryManager.prototype.getServerCustomizations = function() {
		return this.getInitSettings().getServerCustomizations();
	};
	oFF.QueryManager.prototype.getInitSettings = function() {
		return this.getServiceConfig();
	};
	oFF.QueryManager.prototype.hasVariables = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		return oFF.notNull(queryModel) && queryModel.hasVariables();
	};
	oFF.QueryManager.prototype.hasInputEnabledVariables = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		return oFF.notNull(queryModel) && queryModel.hasInputEnabledVariables();
	};
	oFF.QueryManager.prototype.clearExternalVariablesRepresentations = function() {
		this.assertLifeCycleActive();
		this.getQueryModel().clearExternalVariablesRepresentations();
	};
	oFF.QueryManager.prototype.hasMandatoryVariables = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		return oFF.notNull(queryModel) && queryModel.hasMandatoryVariables();
	};
	oFF.QueryManager.prototype.getVariables = function() {
		this.assertLifeCycleActive();
		return this.getQueryModel().getVariables();
	};
	oFF.QueryManager.prototype.getInputEnabledVariables = function() {
		this.assertLifeCycleActive();
		return this.getQueryModel().getInputEnabledVariables();
	};
	oFF.QueryManager.prototype.addVariable = function(variable) {
		var variableManagerBase;
		this.assertLifeCycleActive();
		variableManagerBase = this.getQueryModelBase().getVariableManagerBase();
		variableManagerBase.addVariable(variable);
	};
	oFF.QueryManager.prototype.getVariableBaseAt = function(index) {
		var variableManagerBase;
		this.assertLifeCycleActive();
		variableManagerBase = this.getQueryModelBase().getVariableManagerBase();
		return variableManagerBase.getVariableBaseAt(index);
	};
	oFF.QueryManager.prototype.getVariableBaseByName = function(name) {
		var variableManagerBase;
		this.assertLifeCycleActive();
		variableManagerBase = this.getQueryModelBase().getVariableManagerBase();
		return variableManagerBase.getVariableBaseByName(name);
	};
	oFF.QueryManager.prototype.getVariable = function(name) {
		var variableManagerBase;
		this.assertLifeCycleActive();
		variableManagerBase = this.getQueryModelBase().getVariableManagerBase();
		return variableManagerBase.getVariableBaseByName(name);
	};
	oFF.QueryManager.prototype.removeVariable = function(name) {
		var variableManagerBase;
		this.assertLifeCycleActive();
		variableManagerBase = this.getQueryModelBase().getVariableManagerBase();
		variableManagerBase.removeVariable(name);
	};
	oFF.QueryManager.prototype.clearVariables = function() {
		var variableManagerBase;
		this.assertLifeCycleActive();
		variableManagerBase = this.getQueryModelBase().getVariableManagerBase();
		variableManagerBase.clearVariables();
	};
	oFF.QueryManager.prototype.registerVariableProcessorStateChangedListener = function(
			listener, customIdentifier) {
		if (oFF.notNull(listener)) {
			if (oFF.isNull(this.m_processorStateListeners)) {
				this.m_processorStateListeners = oFF.XList.create();
			}
			this.m_processorStateListeners.add(oFF.ListenerPair.create(
					listener, customIdentifier));
		}
	};
	oFF.QueryManager.prototype.unregisterVariableProcessorStateChangedListener = function(
			listener) {
		var i;
		var listenerPair;
		if (oFF.notNull(this.m_processorStateListeners)) {
			for (i = 0; i < this.m_processorStateListeners.size();) {
				listenerPair = this.m_processorStateListeners.get(i);
				if (listenerPair.getListener() === listener) {
					this.m_processorStateListeners.removeAt(i);
				} else {
					i++;
				}
			}
		}
	};
	oFF.QueryManager.prototype.setVariableProcessorState = function(
			variableProcessorState) {
		var processorStateListenersSize;
		var i;
		var listenerPair;
		var listener;
		if (variableProcessorState === oFF.VariableProcessorState.VALUE_HELP) {
			this.m_variableProcessorPreviousState = variableProcessorState;
			this.m_variableProcessorState = variableProcessorState;
		} else {
			if (this.m_variableProcessorState !== variableProcessorState) {
				this.m_variableProcessorPreviousState = this.m_variableProcessorState;
				this.m_variableProcessorState = variableProcessorState;
				if (oFF.notNull(this.m_processorStateListeners)) {
					processorStateListenersSize = this.m_processorStateListeners
							.size();
					for (i = 0; i < processorStateListenersSize; i++) {
						listenerPair = this.m_processorStateListeners.get(i);
						listener = listenerPair.getListener();
						listener.onVariableProcessorStateChanged(this,
								listenerPair.getCustomIdentifier());
					}
				}
			}
		}
	};
	oFF.QueryManager.prototype.getVariableProcessorState = function() {
		return this.m_variableProcessorState;
	};
	oFF.QueryManager.prototype.isSubmitNeeded = function() {
		return this.getVariableProcessorState().isSubmitNeeded();
	};
	oFF.QueryManager.prototype.isReinitNeeded = function() {
		return this.getVariableProcessorState().isReinitNeeded();
	};
	oFF.QueryManager.prototype.isCancelNeeded = function() {
		return this.getVariableProcessorState().isCancelNeeded();
	};
	oFF.QueryManager.prototype.isSubmitted = function() {
		return this.m_variableProcessorState
				.isTypeOf(oFF.VariableProcessorState.SUBMITTED);
	};
	oFF.QueryManager.prototype.returnToPreviousProcessorState = function() {
		var tmp;
		if (this.m_variableProcessorPreviousState === oFF.VariableProcessorState.PROCESSING_REINIT) {
			this.m_variableProcessorPreviousState = oFF.VariableProcessorState.CHANGEABLE_REINIT;
		} else {
			if (this.m_variableProcessorPreviousState === oFF.VariableProcessorState.PROCESSING_SUBMIT
					|| this.m_variableProcessorPreviousState === oFF.VariableProcessorState.PROCESSING_SUBMIT_AFTER_REINIT) {
				this.m_variableProcessorPreviousState = oFF.VariableProcessorState.SUBMITTED;
			}
		}
		if (this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.CHANGEABLE_REINIT
				&& this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.CHANGEABLE_STARTUP
				&& this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.SUBMITTED
				&& this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.VALUE_HELP
				&& this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.PROCESSING_EMPTY_VARIABLE_DEFINITION
				&& this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.CHANGEABLE_DIRECT_VALUE_TRANSFER) {
			oFF.XObjectExt.checkNotNull(this.m_variableProcessorPreviousState,
					"Not allowed to return to previous state: [null]");
			throw oFF.XException.createIllegalStateException(oFF.XStringUtils
					.concatenate2("Not allowed to return to previous state: ",
							this.m_variableProcessorPreviousState.getName()));
		}
		tmp = this.m_variableProcessorPreviousState;
		this.setVariableProcessorState(tmp);
		this.m_variableProcessorPreviousState = null;
	};
	oFF.QueryManager.prototype.getVariableContainer = function() {
		return this.getVariableContainerBase();
	};
	oFF.QueryManager.prototype.getVariableContainerBase = function() {
		var queryModelBase = this.getQueryModelBase();
		return oFF.isNull(queryModelBase) ? null : queryModelBase
				.getVariableManagerBase();
	};
	oFF.QueryManager.prototype.reInitVariablesAfterSubmit = function(syncType,
			listener, customIdentifier) {
		return this.processReInitVariableAfterSubmit(syncType, listener,
				customIdentifier);
	};
	oFF.QueryManager.prototype.submitVariables = function(syncType, listener,
			customIdentifier) {
		if (!this.supportsAndAllowsEmptyExtendedVarDefinition()
				&& !this.hasVariables()) {
			return null;
		}
		return this.processVariableSubmit(syncType, listener, customIdentifier);
	};
	oFF.QueryManager.prototype.cancelReInitVariables = function(syncType,
			listener, customIdentifier) {
		return this.processVariableCancel(syncType, listener, customIdentifier);
	};
	oFF.QueryManager.prototype.isDirectVariableTransferEnabled = function() {
		return this.m_directVariableTransferConsumer;
	};
	oFF.QueryManager.prototype.setDirectVariableTransferEnabled = function(
			directVariableTransfer) {
		if (this.m_directVariableTransferConsumer !== directVariableTransfer) {
			if (this.supportsDirectVariableTransfer()) {
				this.m_directVariableTransferConsumer = directVariableTransfer;
				this.setDirectVariableTransfer(directVariableTransfer);
				this
						.setIsVariableSubmitNeeded(!this.m_directVariableTransferConsumer);
				if (this.getQueryModelBase() !== null) {
					this.getQueryModelBase().notifyNodeChanged();
				}
				if (this.m_directVariableTransferConsumer) {
					this
							.setVariableProcessorState(oFF.VariableProcessorState.CHANGEABLE_DIRECT_VALUE_TRANSFER);
				} else {
					this
							.setVariableProcessorState(oFF.VariableProcessorState.CHANGEABLE_REINIT);
				}
			}
		}
	};
	oFF.QueryManager.prototype.checkVariables = function(syncType, listener,
			customIdentifier) {
		return this.processCheckVariables(syncType, listener, customIdentifier);
	};
	oFF.QueryManager.prototype.variablesRequireImplicitSubmit = function() {
		if (this.isDirectVariableTransferEnabled()) {
			return false;
		}
		return (this.supportsAndAllowsEmptyExtendedVarDefinition() || this
				.hasVariables())
				&& !this.isSubmitted();
	};
	oFF.QueryManager.prototype.supportsAndAllowsEmptyExtendedVarDefinition = function() {
		var type = this.getDataSource().getType();
		return this.getQueryModel().getModelCapabilities()
				.supportsExtendedVariableDefinition()
				&& this.getQueryServiceConfig()
						.getMakeEmptyVariableDefinitionInsteadOfMetadata()
				&& (oFF.MetaObjectType.QUERY === type
						|| oFF.MetaObjectType.DEFAULT_PLAN_QUERY === type
						|| oFF.MetaObjectType.DEFAULT_REPORT_QUERY === type
						|| oFF.MetaObjectType.LOCAL_QUERY === type || oFF.MetaObjectType.QUERY_VIEW === type);
	};
	oFF.QueryManager.prototype.getVariableProcessor = function() {
		return this;
	};
	oFF.QueryManager.prototype.setVariableProcessorBase = oFF.noSupport;
	oFF.QueryManager.prototype.getOlapEnvironmentBase = function() {
		var application = this.getApplication();
		return oFF.isNull(application) ? null : application
				.getOlapEnvironment();
	};
	oFF.QueryManager.prototype.getTagging = function() {
		return this.getServiceConfig().getTagging();
	};
	oFF.QueryManager.prototype.getSelectionTagging = function() {
		return null;
	};
	oFF.QueryManager.prototype.enableReturnedDataSelection = function(
			dataSelection) {
		var name;
		if (this.supportsReturnedDataSelection()) {
			if (dataSelection === oFF.ReturnedDataSelection.INPUT_READINESS_STATES) {
				if (!this.supportsInputReadinessStates()) {
					return;
				}
			}
			name = dataSelection.getName();
			this.m_activeReturnedDataSelections.add(name);
			this.m_inactiveReturnedDataSelections.removeElement(name);
			this.getQueryModelBase().notifyNodeChanged();
		}
	};
	oFF.QueryManager.prototype.getAllEnabledReturnedDataSelections = function() {
		return this.supportsReturnedDataSelection() ? this.m_activeReturnedDataSelections
				.getValuesAsReadOnlyListOfString()
				: null;
	};
	oFF.QueryManager.prototype.clearDataSelections = function() {
		this.m_activeReturnedDataSelections.clear();
		this.m_inactiveReturnedDataSelections.clear();
	};
	oFF.QueryManager.prototype.disableReturnedDataSelection = function(
			dataSelection) {
		var name;
		if (this.supportsReturnedDataSelection()) {
			if (dataSelection === oFF.ReturnedDataSelection.INPUT_READINESS_STATES) {
				if (!this.supportsInputReadinessStates()) {
					return;
				}
			}
			name = dataSelection.getName();
			this.m_inactiveReturnedDataSelections.add(name);
			this.m_activeReturnedDataSelections.removeElement(name);
			this.getQueryModelBase().notifyNodeChanged();
		}
	};
	oFF.QueryManager.prototype.getAllDisabledReturnedDataSelections = function() {
		return !this.supportsReturnedDataSelection() ? null
				: this.m_inactiveReturnedDataSelections
						.getValuesAsReadOnlyListOfString();
	};
	oFF.QueryManager.prototype.getPlanningMode = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.getPlanningMode() : oFF.PlanningMode.SERVER_DEFAULT;
	};
	oFF.QueryManager.prototype.setPlanningMode = function(planningMode) {
		if (this._createPlanningManager()) {
			this.m_planningManager.setPlanningMode(planningMode);
		}
	};
	oFF.QueryManager.prototype.getPlanningRestriction = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.getPlanningRestriction()
				: oFF.PlanningVersionRestrictionType.SERVER_DEFAULT;
	};
	oFF.QueryManager.prototype.setPlanningRestriction = function(
			restrictionType) {
		if (this._createPlanningManager()) {
			this.m_planningManager.setPlanningRestriction(restrictionType);
		}
	};
	oFF.QueryManager.prototype.supportsDirectVariableTransfer = function() {
		return this.getCapabilitiesBase().supportsDirectVariableTransfer();
	};
	oFF.QueryManager.prototype.supportsCheckVariables = function() {
		return this.getCapabilitiesBase().supportsCheckVariables();
	};
	oFF.QueryManager.prototype.supportsReInitVariables = function() {
		return this
				.supportsAnalyticCapabilityActive(oFF.InACapabilities.VARIABLE_RE_SUBMIT);
	};
	oFF.QueryManager.prototype.supportsHierarchyPath = function() {
		return this
				.supportsAnalyticCapabilityActive(oFF.InACapabilities.HIERARCHY_PATH);
	};
	oFF.QueryManager.prototype.supportsReturnedDataSelection = function() {
		return this
				.supportsAnalyticCapabilityActive(oFF.InACapabilities.RETURNED_DATA_SELECTION);
	};
	oFF.QueryManager.prototype.supportsInputReadinessStates = function() {
		return this
				.supportsAnalyticCapabilityActive(oFF.InACapabilities.INPUT_READINESS_STATES);
	};
	oFF.QueryManager.prototype.supportsShutdown = function() {
		return this.getCapabilitiesBase().supportsShutdown();
	};
	oFF.QueryManager.prototype.supportsDataEntryReadOnly = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.supportsDataEntryReadOnly() : false;
	};
	oFF.QueryManager.prototype.supportsAnalyticCapability = function(
			capabilityName) {
		var connectionContainer;
		if (oFF.XStringUtils.isNullOrEmpty(capabilityName)) {
			return false;
		}
		connectionContainer = this.getConnection();
		return oFF.notNull(connectionContainer)
				&& connectionContainer
						.supportsAnalyticCapability(capabilityName);
	};
	oFF.QueryManager.prototype.supportsAnalyticCapabilityActive = function(
			capabilityName) {
		var capabilityContainer = this.getMainCapabilities();
		return oFF.notNull(capabilityContainer)
				&& capabilityContainer.containsKey(capabilityName);
	};
	oFF.QueryManager.prototype.getPlanningVersionIdentifier = function(
			versionId, sharedVersion, versionOwner) {
		return this._createPlanningManager() ? this.m_planningManager
				.getPlanningVersionIdentifier(versionId, sharedVersion,
						versionOwner) : null;
	};
	oFF.QueryManager.prototype.getPlanningVersionSettings = function(
			versionIdentifier, sequenceId, useExternalView) {
		return this._createPlanningManager() ? this.m_planningManager
				.getPlanningVersionSettings(versionIdentifier, sequenceId,
						useExternalView) : null;
	};
	oFF.QueryManager.prototype.getPlanningVersionSettingsSimple = function(
			versionId, sequenceId, useExternalView) {
		return this._createPlanningManager() ? this.m_planningManager
				.getPlanningVersionSettingsSimple(versionId, sequenceId,
						useExternalView) : null;
	};
	oFF.QueryManager.prototype.addPlanningVersionSettings = function(
			sequenceSettings) {
		return this._createPlanningManager() ? this.m_planningManager
				.addPlanningVersionSettings(sequenceSettings) : null;
	};
	oFF.QueryManager.prototype.deletePlanningVersionSettings = function(
			versionIdentifier) {
		return this._createPlanningManager() ? this.m_planningManager
				.deletePlanningVersionSettings(versionIdentifier) : null;
	};
	oFF.QueryManager.prototype.getAllPlanningVersionSettings = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.getAllPlanningVersionSettings() : null;
	};
	oFF.QueryManager.prototype.setPlanningVersionSettingsMode = function(
			settingsMode) {
		if (this._createPlanningManager()) {
			this.m_planningManager.setPlanningVersionSettingsMode(settingsMode);
		}
	};
	oFF.QueryManager.prototype.getPlanningVersionSettingsMode = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.getPlanningVersionSettingsMode() : null;
	};
	oFF.QueryManager.prototype.getComponentType = function() {
		return this.getOlapComponentType();
	};
	oFF.QueryManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.QUERY_MANAGER;
	};
	oFF.QueryManager.prototype.registerChangedListener = oFF.noSupport;
	oFF.QueryManager.prototype.unregisterChangedListener = oFF.noSupport;
	oFF.QueryManager.prototype.getPlanningModel = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.getPlanningModel() : null;
	};
	oFF.QueryManager.prototype.getDataArea = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.getDataArea() : null;
	};
	oFF.QueryManager.prototype.getContext = function() {
		return this;
	};
	oFF.QueryManager.prototype.getOlapEnv = function() {
		var application = this.getApplication();
		return oFF.isNull(application) ? null : application
				.getOlapEnvironment();
	};
	oFF.QueryManager.prototype.getQueryManager = function() {
		return this;
	};
	oFF.QueryManager.prototype.getQueryModel = function() {
		return this.m_queryModel;
	};
	oFF.QueryManager.prototype.getQueryModelBase = function() {
		return this.m_queryModel;
	};
	oFF.QueryManager.prototype.getModelCapabilities = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		return oFF.isNull(queryModel) ? null : queryModel
				.getModelCapabilities();
	};
	oFF.QueryManager.prototype.getFieldAccessorSingle = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		return oFF.isNull(queryModel) ? null : queryModel
				.getFieldAccessorSingle();
	};
	oFF.QueryManager.prototype.getDimensionAccessor = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		return oFF.isNull(queryModel) ? null : queryModel
				.getDimensionAccessor();
	};
	oFF.QueryManager.prototype.getDrillManager = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		return oFF.isNull(queryModel) ? null : queryModel.getDrillManager();
	};
	oFF.QueryManager.prototype.queueEventing = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel)) {
			queryModel.queueEventing();
		}
	};
	oFF.QueryManager.prototype.stopEventing = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel)) {
			queryModel.stopEventing();
		}
	};
	oFF.QueryManager.prototype.isEventingStopped = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		return oFF.notNull(queryModel) && queryModel.isEventingStopped();
	};
	oFF.QueryManager.prototype.resumeEventing = function() {
		var queryModel;
		this.assertLifeCycleActive();
		queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel)) {
			queryModel.resumeEventing();
		}
	};
	oFF.QueryManager.prototype.isPublicVersionEditPossible = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.isPublicVersionEditPossible() : false;
	};
	oFF.QueryManager.prototype.setPublicVersionEditPossible = function(
			publicVersionEdit) {
		if (this._createPlanningManager()) {
			this.m_planningManager
					.setPublicVersionEditPossible(publicVersionEdit);
		}
	};
	oFF.QueryManager.prototype.isSystemMappingValid = function(
			remoteQueryManager) {
		return this.getSystemDescription().isSystemMappingValid(
				remoteQueryManager.getSystemDescription());
	};
	oFF.QueryManager.prototype.prepareAfterVariables = function() {
		var state;
		var hasVariables;
		var definitionType;
		var definitionAsStructure;
		var preparator;
		if (!this.m_hasPreparedAfterVariables) {
			state = this.getVariableProcessorState();
			hasVariables = this.hasVariables();
			if (!hasVariables
					|| state === oFF.VariableProcessorState.SUBMITTED
					|| state === oFF.VariableProcessorState.CHANGEABLE_DIRECT_VALUE_TRANSFER) {
				definitionType = this.getDefinitionType();
				definitionAsStructure = this.getDefinitionAsStructure();
				if (oFF.notNull(definitionType)
						&& oFF.notNull(definitionAsStructure)) {
					preparator = oFF.QueryPreparatorFactory
							.newInstance(definitionType);
					if (oFF.notNull(preparator)) {
						preparator.prepareAfterVariables(this,
								definitionAsStructure);
					}
				}
				this.m_hasPreparedAfterVariables = true;
			}
		}
	};
	oFF.QueryManager.prototype.getQueryServiceConfig = function() {
		return this.getServiceConfig();
	};
	oFF.QueryManager.prototype.isLightweightSearch = function() {
		var dataSource = this.getDataSource();
		return oFF.notNull(dataSource)
				&& dataSource.getType() === oFF.MetaObjectType.CATALOG_VIEW_2;
	};
	oFF.QueryManager.prototype.getPreviousVariableProcessorState = function() {
		return this.m_variableProcessorPreviousState;
	};
	oFF.QueryManager.prototype.getDimensionsToClone = function() {
		return this.m_dimensionsToClone;
	};
	oFF.QueryManager.prototype.setDimensionsToClone = function(
			dimensionsToClone) {
		this.m_dimensionsToClone = dimensionsToClone;
	};
	oFF.QueryManager.prototype.getDimensionsRequestedFromClient = function() {
		return this.m_dimensionsRequestedFromClient;
	};
	oFF.QueryManager.prototype.setDimensionsRequestedFromClient = function(
			dimensionsRequestedFromClient) {
		this.m_dimensionsRequestedFromClient = dimensionsRequestedFromClient;
	};
	oFF.QueryManager.prototype.setVersionAliasById = function(aliasName,
			versionId) {
		if (this._createPlanningManager()) {
			this.m_planningManager.setVersionAliasById(aliasName, versionId);
			this.invalidateState();
		}
	};
	oFF.QueryManager.prototype.removeVersionAlias = function(aliasName) {
		if (this._createPlanningManager()) {
			this.m_planningManager.removeVersionAlias(aliasName);
			this.invalidateState();
		}
	};
	oFF.QueryManager.prototype.clearVersionAliases = function() {
		if (this._createPlanningManager()) {
			this.m_planningManager.clearVersionAliases();
			this.invalidateState();
		}
	};
	oFF.QueryManager.prototype.getVersionAliases = function() {
		return this._createPlanningManager() ? this.m_planningManager
				.getVersionAliases() : null;
	};
	oFF.QueryManager.prototype.getPreQueryExecutor = function() {
		if (oFF.isNull(this.m_preQueryExecutor)) {
			this.m_preQueryExecutor = oFF.PreQueryExecutor.create(this);
		}
		return this.m_preQueryExecutor;
	};
	oFF.QueryManager.prototype.enableHierarchyToUDHConversion = function(
			enableConversion) {
		if (this.getSystemType().isTypeOf(oFF.SystemType.BW)
				&& this.getQueryModel()
						.supportsUniversalDisplayHierarchiesCustomDimensions()) {
			this.m_enableHierarchyToUDHConversion = enableConversion;
			this.invalidateState();
		}
	};
	oFF.QueryManager.prototype.isHierarchyToUDHConversionEnabled = function() {
		return this.m_enableHierarchyToUDHConversion;
	};
	oFF.QueryModel = function() {
	};
	oFF.QueryModel.prototype = new oFF.QModelComponent();
	oFF.QueryModel.create = function(application, manager, capabilities) {
		var query = new oFF.QueryModel();
		query.setupQuery(application, manager, capabilities);
		query.setNotificationListener(manager);
		return query;
	};
	oFF.QueryModel.prototype.m_preQueries = null;
	oFF.QueryModel.prototype.m_isMetadataExportReduced = false;
	oFF.QueryModel.prototype.m_supportsDimensionLazyLoad = false;
	oFF.QueryModel.prototype.m_application = null;
	oFF.QueryModel.prototype.m_queryManager = null;
	oFF.QueryModel.prototype.m_axesManager = null;
	oFF.QueryModel.prototype.m_dimensionManager = null;
	oFF.QueryModel.prototype.m_exceptionAggregationManager = null;
	oFF.QueryModel.prototype.m_filterManager = null;
	oFF.QueryModel.prototype.m_drillManager = null;
	oFF.QueryModel.prototype.m_variableManager = null;
	oFF.QueryModel.prototype.m_sortManager = null;
	oFF.QueryModel.prototype.m_vizManager = null;
	oFF.QueryModel.prototype.m_exceptionManager = null;
	oFF.QueryModel.prototype.m_conditionManager = null;
	oFF.QueryModel.prototype.m_resultStructureController = null;
	oFF.QueryModel.prototype.m_universalDisplayHierarchies = null;
	oFF.QueryModel.prototype.m_queryCapabilities = null;
	oFF.QueryModel.prototype.m_protocolCapabilities = null;
	oFF.QueryModel.prototype.m_metadataProperties = null;
	oFF.QueryModel.prototype.m_definitionName = null;
	oFF.QueryModel.prototype.m_keepOriginalTexts = false;
	oFF.QueryModel.prototype.m_dataSource = null;
	oFF.QueryModel.prototype.m_baseDataSource = null;
	oFF.QueryModel.prototype.m_infoProvider = null;
	oFF.QueryModel.prototype.m_blendingDefinition = null;
	oFF.QueryModel.prototype.m_serverBaseSerializationKey = null;
	oFF.QueryModel.prototype.m_dataCells = null;
	oFF.QueryModel.prototype.m_supportsDataEntryReadOnly = false;
	oFF.QueryModel.prototype.m_dataEntryEnabled = false;
	oFF.QueryModel.prototype.m_dataEntryReadOnly = false;
	oFF.QueryModel.prototype.m_planningMode = null;
	oFF.QueryModel.prototype.m_hasProcessingStep = false;
	oFF.QueryModel.prototype.m_exportFixedFilter = false;
	oFF.QueryModel.prototype.m_exportVariables = false;
	oFF.QueryModel.prototype.m_requestTextField = false;
	oFF.QueryModel.prototype.m_uniqueHierarchyNames = null;
	oFF.QueryModel.prototype.m_optimizerHints = null;
	oFF.QueryModel.prototype.m_nameForMicroCubeUse = null;
	oFF.QueryModel.prototype.m_isBatchForMicroCube = false;
	oFF.QueryModel.prototype.m_deactivateCumulative = false;
	oFF.QueryModel.prototype.m_exportEachMeasure = false;
	oFF.QueryModel.prototype.m_currencyTranslationDetails = null;
	oFF.QueryModel.prototype.m_resetCurrencyTranslationDetails = false;
	oFF.QueryModel.prototype.m_metadata = null;
	oFF.QueryModel.prototype.cloneOlapComponent = function(context, parent) {
		var olapEnv = context.getOlapEnv();
		var queryManager = context.getQueryManager();
		var capabilities = queryManager.getCapabilitiesBase();
		var clone = oFF.QueryModel.create(olapEnv, queryManager, capabilities);
		clone.copyQueryModel(this, null);
		return clone;
	};
	oFF.QueryModel.prototype.copyQueryModel = function(origin, cloneMode) {
		var size;
		var i;
		var originDataCell;
		var cloneDataCell;
		var engineIt;
		var engineName;
		this.stopEventing();
		if (cloneMode !== oFF.QueryCloneMode.MICRO_CUBE) {
			oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
			this.m_dataSource.copyFrom(origin.m_dataSource);
			if (oFF.notNull(origin.m_baseDataSource)) {
				this.setBaseDataSource(origin.m_baseDataSource);
				this.setInfoProvider(oFF.QInfoProvider.createInfoProvider(this,
						this.m_baseDataSource.getObjectName(),
						this.m_baseDataSource.getObjectName(), null));
			}
		}
		if (this.m_queryCapabilities !== origin.m_queryCapabilities) {
			this.m_queryCapabilities = origin.m_queryCapabilities;
		}
		this.m_deactivateCumulative = origin.m_deactivateCumulative;
		this.m_requestTextField = origin.m_requestTextField;
		this.m_isMetadataExportReduced = origin.m_isMetadataExportReduced;
		this.m_supportsDimensionLazyLoad = origin.m_supportsDimensionLazyLoad;
		this.m_protocolCapabilities
				.copyProtocolCapabilities(origin.m_protocolCapabilities);
		this.m_definitionName = origin.m_definitionName;
		this.m_keepOriginalTexts = origin.m_keepOriginalTexts;
		this.m_exportFixedFilter = origin.m_exportFixedFilter;
		this.m_exportVariables = origin.m_exportVariables;
		this.m_exportEachMeasure = origin.m_exportEachMeasure;
		if (this.supportsQueryCurrencyTranslation()
				&& oFF.notNull(origin.m_currencyTranslationDetails)) {
			this.m_currencyTranslationDetails
					.copyCurrencyTranslationDetails(origin.m_currencyTranslationDetails);
		}
		this.m_resultStructureController
				.copyResultStructureController(origin.m_resultStructureController);
		this.m_dimensionManager.copyDimensionManager(origin.m_dimensionManager);
		if (cloneMode !== oFF.QueryCloneMode.MICRO_CUBE) {
			this.m_variableManager
					.copyVariableManager(origin.m_variableManager);
		}
		this.m_dimensionManager
				.copyDimensionManagerMember(origin.m_dimensionManager);
		this.m_filterManager.copyFilterManager(origin.m_filterManager);
		this.m_axesManager.copyAxesManager(origin.m_axesManager);
		this.m_sortManager.copySortManager(origin.m_sortManager);
		if (oFF.isNull(origin.m_exceptionAggregationManager)) {
			this.m_exceptionAggregationManager = null;
		} else {
			this._loadExceptionAggregationManager();
			if (oFF.notNull(this.m_exceptionAggregationManager)) {
				this.m_exceptionAggregationManager
						._copyExceptionAggregationManager(origin.m_exceptionAggregationManager);
			}
		}
		if (oFF.notNull(this.m_vizManager) && oFF.notNull(origin.m_vizManager)) {
			this.getVizManager().copyVizManager(origin.m_vizManager);
		}
		this.m_drillManager.copyDrillManager(origin.m_drillManager);
		this.m_universalDisplayHierarchies
				.copyUniversalDisplayHierarchies(origin.m_universalDisplayHierarchies);
		if (oFF.notNull(origin.m_exceptionManager)) {
			this.getExceptionManager().copyExceptionManager(
					origin.m_exceptionManager);
		}
		if (oFF.notNull(origin.m_conditionManager)) {
			this.getConditionManager().copyConditionManager(
					origin.m_conditionManager);
		}
		if (oFF.notNull(origin.m_dataCells)) {
			this.m_dataCells = oFF.QDataCellList.createQueryDataCellList(this);
			size = origin.m_dataCells.size();
			for (i = 0; i < size; i++) {
				originDataCell = origin.m_dataCells.get(i);
				cloneDataCell = this.m_dataCells
						.newQueryDataCell(originDataCell.getName());
				cloneDataCell.copyDataCell(originDataCell);
			}
		}
		this.m_uniqueHierarchyNames = origin.m_uniqueHierarchyNames
				.createSetCopy();
		this.m_metadataProperties = oFF.XProperties
				.createPropertiesCopy(origin.m_metadataProperties);
		this.m_supportsDataEntryReadOnly = origin.m_supportsDataEntryReadOnly;
		this.m_dataEntryEnabled = origin.m_dataEntryEnabled;
		this.m_dataEntryReadOnly = origin.m_dataEntryReadOnly;
		this.m_planningMode = origin.m_planningMode;
		if (cloneMode !== oFF.QueryCloneMode.MICRO_CUBE) {
			if (oFF.notNull(origin.m_optimizerHints)) {
				this.m_optimizerHints = oFF.XHashMapByString.create();
				engineIt = origin.m_optimizerHints.getKeysAsIteratorOfString();
				while (engineIt.hasNext()) {
					engineName = engineIt.next();
					this.m_optimizerHints.put(engineName,
							origin.m_optimizerHints.getByKey(engineName)
									.createMapOfStringByStringCopy());
				}
			}
			if (oFF.notNull(origin.m_preQueries)) {
				this.m_preQueries = oFF.XListOfNameObject.create();
				this.m_preQueries.addAll(origin.m_preQueries);
			}
		}
		this.resumeEventing();
	};
	oFF.QueryModel.prototype.setupQuery = function(application, queryManager,
			capabilities) {
		this.setupModelComponent(application.getContext(), null);
		this.m_application = oFF.XWeakReferenceUtil.getWeakRef(application);
		if (oFF.isNull(capabilities)) {
			this.m_queryCapabilities = oFF.QCapabilities.create();
		} else {
			this.m_queryCapabilities = capabilities;
		}
		this.m_dataSource = oFF.QFactory.newDataSourceExt(this);
		this.m_queryManager = oFF.XWeakReferenceUtil.getWeakRef(queryManager);
		this.m_dimensionManager = oFF.QDimensionManager.create(this);
		this.m_drillManager = oFF.QDrillManager.create(this, this);
		this.m_sortManager = oFF.QSortingManager.create(this);
		this.m_metadataProperties = oFF.XProperties.create();
		this.m_axesManager = oFF.QAxesManager.create(this);
		this.m_filterManager = oFF.QFilter.create(this);
		this.m_variableManager = oFF.QVariableManager.create(this);
		this.m_protocolCapabilities = oFF.QProtocolCapabilities.create(this);
		this.m_resultStructureController = oFF.QResultStructureController
				._create(this, this, oFF.QModelLevel.QUERY);
		this.m_uniqueHierarchyNames = oFF.XHashSetOfString.create();
		this.m_universalDisplayHierarchies = oFF.QUniversalDisplayHierarchies
				.create(this, this);
		if (this.supportsQueryCurrencyTranslation()) {
			this.m_currencyTranslationDetails = oFF.QCurrencyTranslationDetails
					.create(this);
		}
		this.m_planningMode = oFF.PlanningMode.FOR_PRIVATE_VERSIONS_ONLY;
		this.m_exportFixedFilter = true;
		this.m_exportVariables = true;
		this.m_requestTextField = true;
		this.m_supportsDimensionLazyLoad = true;
		this.m_exportEachMeasure = true;
	};
	oFF.QueryModel.prototype.releaseObject = function() {
		var olapEnv;
		if (!this.isReleased()) {
			this.m_preQueries = oFF.XObjectExt.release(this.m_preQueries);
			this.m_definitionName = null;
			this.m_infoProvider = null;
			this.m_blendingDefinition = null;
			if (this.supportsCeScenarioParams()) {
				this.m_optimizerHints = oFF.XCollectionUtils
						.releaseEntriesAndCollectionIfNotNull(this.m_optimizerHints);
			}
			this.m_resultStructureController = oFF.XObjectExt
					.release(this.m_resultStructureController);
			this.m_uniqueHierarchyNames = oFF.XObjectExt
					.release(this.m_uniqueHierarchyNames);
			this.m_dataSource = oFF.XObjectExt.release(this.m_dataSource);
			this.m_dimensionManager = oFF.XObjectExt
					.release(this.m_dimensionManager);
			this.m_drillManager = oFF.XObjectExt.release(this.m_drillManager);
			this.m_exceptionAggregationManager = oFF.XObjectExt
					.release(this.m_exceptionAggregationManager);
			this.m_sortManager = oFF.XObjectExt.release(this.m_sortManager);
			this.m_vizManager = oFF.XObjectExt.release(this.m_vizManager);
			this.m_metadataProperties = oFF.XObjectExt
					.release(this.m_metadataProperties);
			this.m_axesManager = oFF.XObjectExt.release(this.m_axesManager);
			this.m_exceptionManager = oFF.XObjectExt
					.release(this.m_exceptionManager);
			this.m_conditionManager = oFF.XObjectExt
					.release(this.m_conditionManager);
			this.m_filterManager = oFF.XObjectExt.release(this.m_filterManager);
			this.m_dataCells = oFF.XObjectExt.release(this.m_dataCells);
			this.m_variableManager = oFF.XObjectExt
					.release(this.m_variableManager);
			this.m_protocolCapabilities = oFF.XObjectExt
					.release(this.m_protocolCapabilities);
			this.m_universalDisplayHierarchies = oFF.XObjectExt
					.release(this.m_universalDisplayHierarchies);
			olapEnv = this.getOlapEnv();
			olapEnv.removeMicroCubeName(this.m_nameForMicroCubeUse);
			this.m_nameForMicroCubeUse = null;
			olapEnv.releaseQueryMetadata(this.m_serverBaseSerializationKey);
			this.m_serverBaseSerializationKey = null;
			this.m_queryCapabilities = null;
			this.m_currencyTranslationDetails = oFF.XObjectExt
					.release(this.m_currencyTranslationDetails);
			this.m_metadata = oFF.XObjectExt.release(this.m_metadata);
			oFF.QModelComponent.prototype.releaseObject.call(this);
		}
	};
	oFF.QueryModel.prototype.isBlendingModel = function() {
		return this.getQueryManager().getMode() === oFF.QueryManagerMode.BLENDING;
	};
	oFF.QueryModel.prototype.assertHierarchyUniqueName = function(
			usedHierarchyUniqueName, isActivated) {
		if (isActivated) {
			if (this.m_uniqueHierarchyNames.contains(usedHierarchyUniqueName)) {
				throw oFF.XException
						.createIllegalStateException(oFF.XStringUtils
								.concatenate3("The hierarchy unique name '",
										usedHierarchyUniqueName,
										"' is already activated!"));
			}
			this.m_uniqueHierarchyNames.add(usedHierarchyUniqueName);
		} else {
			this.m_uniqueHierarchyNames.removeElement(usedHierarchyUniqueName);
		}
	};
	oFF.QueryModel.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.QUERY_MODEL;
	};
	oFF.QueryModel.prototype.setInfoProvider = function(infoProvider) {
		this.m_infoProvider = infoProvider;
	};
	oFF.QueryModel.prototype.getDynamicAxis = function() {
		return this.m_axesManager.getDynamicAxis();
	};
	oFF.QueryModel.prototype.getColumnsAxis = function() {
		return this.m_axesManager.getColumnsAxis();
	};
	oFF.QueryModel.prototype.getRowsAxis = function() {
		return this.m_axesManager.getRowsAxis();
	};
	oFF.QueryModel.prototype.getFreeAxis = function() {
		return this.m_axesManager.getFreeAxis();
	};
	oFF.QueryModel.prototype.getRepositoryAxis = function() {
		return this.m_axesManager.getRepositoryAxis();
	};
	oFF.QueryModel.prototype.getVirtualAxis = function() {
		return this.m_axesManager.getVirtualAxis();
	};
	oFF.QueryModel.prototype.getFilterAxis = function() {
		return this.m_axesManager.getFilterAxis();
	};
	oFF.QueryModel.prototype.getAxis = function(axisType) {
		return this.m_axesManager.getAxis(axisType);
	};
	oFF.QueryModel.prototype.getAxisBase = function(axis) {
		return this.m_axesManager.getAxisBase(axis);
	};
	oFF.QueryModel.prototype.getFilter = function() {
		return this.m_filterManager;
	};
	oFF.QueryModel.prototype.getFilterBase = function() {
		return this.m_filterManager;
	};
	oFF.QueryModel.prototype.getMetadataProperties = function() {
		return this.m_metadataProperties;
	};
	oFF.QueryModel.prototype.getMetadataPropertiesBase = function() {
		return this.m_metadataProperties;
	};
	oFF.QueryModel.prototype.setMetadataPropertiesBase = function(properties) {
		this.m_metadataProperties = properties;
	};
	oFF.QueryModel.prototype.getDataSource = function() {
		return this.m_dataSource;
	};
	oFF.QueryModel.prototype.getDataSourceBase = function() {
		return this.m_dataSource;
	};
	oFF.QueryModel.prototype.setDataSource = function(datasource) {
		var dataArea;
		this.m_dataSource.extendWithDataSource(datasource);
		this.setName(this.m_dataSource.getFullQualifiedName());
		if (oFF.notNull(datasource)) {
			dataArea = datasource.getDataArea();
			if (oFF.XStringUtils.isNotNullAndNotEmpty(dataArea)) {
				this.setDataArea(dataArea);
			}
		}
	};
	oFF.QueryModel.prototype.getBaseDataSource = function() {
		return this.m_baseDataSource;
	};
	oFF.QueryModel.prototype.setBaseDataSource = function(baseDatasource) {
		this.m_baseDataSource = baseDatasource;
	};
	oFF.QueryModel.prototype.getNonStructureCount = function() {
		return this.m_dimensionManager.getNonStructureCount();
	};
	oFF.QueryModel.prototype.getDimensionNameByType = function(type) {
		return this.m_dimensionManager.getDimensionNameByType(type);
	};
	oFF.QueryModel.prototype.getQueryManager = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_queryManager);
	};
	oFF.QueryModel.prototype.getQueryManagerBase = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_queryManager);
	};
	oFF.QueryModel.prototype.getInfoProvider = function() {
		return this.m_infoProvider;
	};
	oFF.QueryModel.prototype.getCreatedBy = function() {
		return this.getMetadataPropertiesBase().getStringByKey("CreatedBy");
	};
	oFF.QueryModel.prototype.getCreatedOn = function() {
		var createdOn = this.getMetadataPropertiesBase().getStringByKey(
				"CreatedOn");
		return this.convertStringToDateTime(createdOn);
	};
	oFF.QueryModel.prototype.convertStringToDateTime = function(dateString) {
		var date;
		var dateTime;
		if (oFF.isNull(dateString)) {
			return null;
		}
		if (this.supportsAnalyticCapability(oFF.InACapabilities.SAP_DATE)) {
			date = oFF.XDate.createDateFromSAPFormat(dateString);
			if (oFF.isNull(date)) {
				dateTime = oFF.XDateTime
						.createDateTimeFromSAPFormat(dateString);
			} else {
				dateTime = oFF.XDateTime.createDateTime();
				dateTime.resetValue(date);
			}
			return dateTime;
		}
		return oFF.XDateTime.createDateTimeFromIsoFormat(dateString);
	};
	oFF.QueryModel.prototype.getUpdatedBy = function() {
		return this.getMetadataPropertiesBase().getStringByKey(
				"LastDataUpdateBy");
	};
	oFF.QueryModel.prototype.getUpdatedOn = function() {
		var metadataPropertiesBase = this.getMetadataPropertiesBase();
		var updatedOn;
		if (metadataPropertiesBase.containsKey("LastDataUpdateOn")) {
			updatedOn = metadataPropertiesBase
					.getStringByKey("LastDataUpdateOn");
		} else {
			updatedOn = metadataPropertiesBase.getStringByKey("LastDataUpdate");
		}
		return this.convertStringToDateTime(updatedOn);
	};
	oFF.QueryModel.prototype.getDueDate = function() {
		var dueDate = this.getMetadataPropertiesBase()
				.getStringByKey("DueDate");
		return this.convertStringToDateTime(dueDate);
	};
	oFF.QueryModel.prototype.getFirstFieldByType = function(type) {
		return this.m_dimensionManager.getFirstFieldByType(type);
	};
	oFF.QueryModel.prototype.getDataArea = function() {
		return this.getDataSource().getDataArea();
	};
	oFF.QueryModel.prototype.setDataArea = function(dataArea) {
		this.getDataSourceBase().setDataArea(dataArea);
	};
	oFF.QueryModel.prototype.setResultVisibility = function(visibility) {
		this.m_resultStructureController.setResultVisibility(visibility);
	};
	oFF.QueryModel.prototype.setResultVisibilityByElement = function(element,
			visibility) {
		this.m_resultStructureController.setResultVisibilityByElement(element,
				visibility);
	};
	oFF.QueryModel.prototype.setResultVisibilityByElementAndAlignment = function(
			alignment, element, visibility) {
		this.m_resultStructureController
				.setResultVisibilityByElementAndAlignment(alignment, element,
						visibility);
	};
	oFF.QueryModel.prototype.getResultVisibility = function() {
		return this.m_resultStructureController.getResultVisibility();
	};
	oFF.QueryModel.prototype.clearResultVisibilitySettings = function() {
		this.m_resultStructureController.clearResultVisibilitySettings();
	};
	oFF.QueryModel.prototype.getResultVisibilitySettings = function() {
		return this.m_resultStructureController.getResultVisibilitySettings();
	};
	oFF.QueryModel.prototype.getResultVisibilityByElement = function(element) {
		return this.m_resultStructureController
				.getResultVisibilityByElement(element);
	};
	oFF.QueryModel.prototype.getResultVisibilityByElementAndAlignment = function(
			alignment, element) {
		return this.m_resultStructureController
				.getResultVisibilityByElementAndAlignment(alignment, element);
	};
	oFF.QueryModel.prototype.supportsResultAlignment = function() {
		return this.m_resultStructureController.supportsResultAlignment();
	};
	oFF.QueryModel.prototype.supportsResultVisibility = function() {
		return this.m_resultStructureController.supportsResultVisibility();
	};
	oFF.QueryModel.prototype.setResultAlignment = function(alignment) {
		this.m_resultStructureController.setResultAlignment(alignment);
	};
	oFF.QueryModel.prototype.getResultAlignment = function() {
		return this.m_resultStructureController.getResultAlignment();
	};
	oFF.QueryModel.prototype.getParentResultStructureController = function() {
		return null;
	};
	oFF.QueryModel.prototype.getResultStructureController = function() {
		return this.m_resultStructureController;
	};
	oFF.QueryModel.prototype.getResultStructureControllerBase = function() {
		return this.m_resultStructureController;
	};
	oFF.QueryModel.prototype.getResultStructureChildren = function() {
		var list = oFF.XList.create();
		list.add(this.getRowsAxis().getResultStructureControllerBase());
		list.add(this.getColumnsAxis().getResultStructureControllerBase());
		return list.getIterator();
	};
	oFF.QueryModel.prototype.supportsTotals = function() {
		return this.m_resultStructureController.supportsTotals();
	};
	oFF.QueryModel.prototype.isTotalsAlignmentOnDefault = function() {
		return this.m_resultStructureController.isTotalsAlignmentOnDefault();
	};
	oFF.QueryModel.prototype.isTotalsVisibilityOnDefault = function() {
		return this.m_resultStructureController.isTotalsVisibilityOnDefault();
	};
	oFF.QueryModel.prototype.isTotalsStructureOnDefault = function() {
		return this.m_resultStructureController.isTotalsStructureOnDefault();
	};
	oFF.QueryModel.prototype.restoreTotalsAlignment = function(restoreAction,
			recurseChildren) {
		this.m_resultStructureController.restoreTotalsAlignment(restoreAction,
				recurseChildren);
	};
	oFF.QueryModel.prototype.restoreTotalsVisibility = function(restoreAction,
			recurseChildren) {
		this.m_resultStructureController.restoreTotalsVisibility(restoreAction,
				recurseChildren);
	};
	oFF.QueryModel.prototype.getModelLevel = function() {
		return this.m_resultStructureController.getModelLevel();
	};
	oFF.QueryModel.prototype.getDrillManager = function() {
		return this.m_drillManager;
	};
	oFF.QueryModel.prototype.getDrillManagerBase = function() {
		return this.m_drillManager;
	};
	oFF.QueryModel.prototype._getExceptionAggregationManagerBase = function() {
		this._loadExceptionAggregationManager();
		return this.m_exceptionAggregationManager;
	};
	oFF.QueryModel.prototype._loadExceptionAggregationManager = function() {
		if (this.supportsExceptionAggregationDimsFormulas()
				&& oFF.isNull(this.m_exceptionAggregationManager)) {
			this.m_exceptionAggregationManager = oFF.QExceptionAggregationManager
					._create(this);
		}
	};
	oFF.QueryModel.prototype.getSortingManager = function() {
		return this.m_sortManager;
	};
	oFF.QueryModel.prototype.getSortingManagerBase = function() {
		return this.m_sortManager;
	};
	oFF.QueryModel.prototype.getVizManager = function() {
		if (oFF.isNull(this.m_vizManager) && !this.isReleased()) {
			this.m_vizManager = oFF.QVizManager.create(this);
		}
		return this.m_vizManager;
	};
	oFF.QueryModel.prototype.hasVariables = function() {
		return this.m_variableManager.hasVariables();
	};
	oFF.QueryModel.prototype.hasInputEnabledVariables = function() {
		return this.m_variableManager.hasInputEnabledVariables();
	};
	oFF.QueryModel.prototype.clearExternalVariablesRepresentations = function() {
		this.m_variableManager.clearExternalVariablesRepresentations();
	};
	oFF.QueryModel.prototype.hasMandatoryVariables = function() {
		return this.m_variableManager.hasMandatoryVariables();
	};
	oFF.QueryModel.prototype.getVariables = function() {
		return this.m_variableManager.getVariables();
	};
	oFF.QueryModel.prototype.getInputEnabledVariables = function() {
		return this.m_variableManager.getInputEnabledVariables();
	};
	oFF.QueryModel.prototype.setDataEntryReadOnly = function(dataEntryReadOnly) {
		if (!this.supportsDataEntryReadOnly() && !dataEntryReadOnly) {
			return;
		}
		if (this.m_dataEntryReadOnly === dataEntryReadOnly) {
			return;
		}
		this.m_dataEntryReadOnly = dataEntryReadOnly;
		this.notifyNodeChanged();
	};
	oFF.QueryModel.prototype.isDataEntryReadOnly = function() {
		return this.m_dataEntryReadOnly;
	};
	oFF.QueryModel.prototype.setDataEntryEnabled = function(dataEntryEnabled) {
		this.m_dataEntryEnabled = dataEntryEnabled;
	};
	oFF.QueryModel.prototype.isDataEntryEnabled = function() {
		return this.m_dataEntryEnabled;
	};
	oFF.QueryModel.prototype.supportsDataEntryReadOnly = function() {
		return this.m_supportsDataEntryReadOnly;
	};
	oFF.QueryModel.prototype.setSupportsDataEntryReadOnly = function(
			supportsDataEntryReadOnly) {
		this.m_supportsDataEntryReadOnly = supportsDataEntryReadOnly;
	};
	oFF.QueryModel.prototype.getPlanningMode = function() {
		return this.m_planningMode;
	};
	oFF.QueryModel.prototype.setPlanningMode = function(planningMode) {
		if (this.m_planningMode !== planningMode) {
			this.m_planningMode = planningMode;
			this.notifyNodeChanged();
		}
	};
	oFF.QueryModel.prototype.getExceptionManager = function() {
		if (oFF.isNull(this.m_exceptionManager) && !this.isReleased()) {
			this.m_exceptionManager = oFF.QExceptionManager
					.createExceptionManager(this);
		}
		return this.m_exceptionManager;
	};
	oFF.QueryModel.prototype.lazyLoadQueryDataCells = function() {
		if (oFF.isNull(this.m_dataCells)) {
			this.m_dataCells = oFF.QDataCellList.createQueryDataCellList(this);
		}
	};
	oFF.QueryModel.prototype.getQueryDataCells = function() {
		this.lazyLoadQueryDataCells();
		return this.m_dataCells;
	};
	oFF.QueryModel.prototype.getQueryDataCellsBase = function() {
		this.lazyLoadQueryDataCells();
		return this.m_dataCells;
	};
	oFF.QueryModel.prototype.getQueryDataCell = function(name) {
		return oFF.isNull(this.m_dataCells) ? null : this.m_dataCells
				.getByKey(name);
	};
	oFF.QueryModel.prototype.isComponentNode = function() {
		return true;
	};
	oFF.QueryModel.prototype.getNamedChildren = function() {
		var children = oFF.XHashMapByString.create();
		children.put("AxesManager", this.m_axesManager);
		children.put("FilterManager", this.m_filterManager);
		if (this.getQueryManager().supportsDirectVariableTransfer()) {
			children.put("VariableManager", this.m_variableManager);
		}
		children.put("DimensionManager", this.m_dimensionManager);
		children.put("ResultStructureController",
				this.m_resultStructureController);
		children.put("DrillManager", this.m_drillManager);
		children.put("ExceptionAggregationManager",
				this.m_exceptionAggregationManager);
		children.put("SortManager", this.m_sortManager);
		children.put("ExceptionManager", this.m_exceptionManager);
		children.put("ConditionManager", this.m_conditionManager);
		children.put("UniversalDisplayHierarchies",
				this.m_universalDisplayHierarchies);
		return children;
	};
	oFF.QueryModel.prototype.getPropertyStringValue = function(type) {
		if (type === oFF.OlapProperty.DATASOURCE) {
			return this.m_dataSource.getFullQualifiedName();
		}
		return oFF.QModelComponent.prototype.getPropertyStringValue.call(this,
				type);
	};
	oFF.QueryModel.prototype.getPropertyConstantValue = function(type) {
		if (type === oFF.OlapProperty.SIGN_PRESENTATION) {
			return oFF.SignPresentation.BEFORE_NUMBER;
		}
		return oFF.QModelComponent.prototype.getPropertyConstantValue.call(
				this, type);
	};
	oFF.QueryModel.prototype.getVariableManager = function() {
		return this.m_variableManager;
	};
	oFF.QueryModel.prototype.getVariableContainer = function() {
		return this.m_variableManager;
	};
	oFF.QueryModel.prototype.getVariableManagerBase = function() {
		return this.m_variableManager;
	};
	oFF.QueryModel.prototype.getQueryModel = function() {
		return this;
	};
	oFF.QueryModel.prototype.onModelChangeBeforeBroadcast = function(
			changedNodes) {
		var size = changedNodes.size();
		var i;
		var changedNode;
		var componentType;
		for (i = 0; i < size; i++) {
			changedNode = changedNodes.get(i);
			componentType = changedNode.getComponentType();
			if (componentType.isTypeOf(oFF.OlapComponentType.AXIS)
					|| componentType
							.isTypeOf(oFF.OlapComponentType.DIMENSION_MANAGER)
					|| componentType
							.isTypeOf(oFF.OlapComponentType.UNIVERSAL_DISPLAY_HIERARCHY)) {
				this.m_drillManager.removeInvalidDrillOperations(changedNode);
				break;
			}
		}
		oFF.QModelComponent.prototype.onModelChangeBeforeBroadcast.call(this,
				changedNodes);
	};
	oFF.QueryModel.prototype.getProtocolCapabilities = function() {
		return this.m_protocolCapabilities;
	};
	oFF.QueryModel.prototype.getResultStructureReorderingCapability = function() {
		return this.m_queryCapabilities
				.getResultStructureReorderingCapability();
	};
	oFF.QueryModel.prototype.getSupportedConditionalResults = function() {
		return this.m_queryCapabilities.getSupportedConditionalResults();
	};
	oFF.QueryModel.prototype.getDefinitionName = function() {
		return this.m_definitionName;
	};
	oFF.QueryModel.prototype.setDefinitionName = function(definitionName) {
		this.m_definitionName = definitionName;
	};
	oFF.QueryModel.prototype.getNameForMicroCubeUse = function() {
		return this.m_nameForMicroCubeUse;
	};
	oFF.QueryModel.prototype.isBasedOnMicroCube = function() {
		return this.m_dataSource.isBasedOnMicroCube();
	};
	oFF.QueryModel.prototype.setNameForMicroCubeUse = function(name) {
		oFF.XBooleanUtils.checkTrue(this.getOlapEnv().addMicroCubeName(name),
				oFF.XStringUtils.concatenate2(
						"MicroCube's name is not valid or already exists: ",
						name));
		this.m_nameForMicroCubeUse = name;
	};
	oFF.QueryModel.prototype.setBatchModeForMicroCube = function(state) {
		this.m_isBatchForMicroCube = state;
	};
	oFF.QueryModel.prototype.isBatchModeForMicroCube = function() {
		return this.m_isBatchForMicroCube;
	};
	oFF.QueryModel.prototype.getExtendedDimensions = function() {
		if (oFF.isNull(this.m_baseDataSource) && oFF.isNull(this.m_dataSource)) {
			return null;
		}
		if (oFF.notNull(this.m_baseDataSource)) {
			return this.m_baseDataSource.getExtendedDimensions();
		}
		return this.m_dataSource.getExtendedDimensions();
	};
	oFF.QueryModel.prototype.addExtendedDimension = function(extendedDimension) {
		this.assertNotBlendingMode();
		this.m_dataSource.getExtendedDimensionsBase().add(extendedDimension);
		this.notifyNodeChanged();
	};
	oFF.QueryModel.prototype.removeExtendedDimensionAt = function(index) {
		this.assertNotBlendingMode();
		this.m_dataSource.getExtendedDimensionsBase().removeAt(index);
		this.notifyNodeChanged();
	};
	oFF.QueryModel.prototype.removeExtendedDimension = function(
			extendedDimension) {
		this.assertNotBlendingMode();
		this.m_dataSource.getExtendedDimensionsBase().removeElement(
				extendedDimension);
		this.notifyNodeChanged();
	};
	oFF.QueryModel.prototype.assertNotBlendingMode = function() {
		if (this.isBlendingModel()) {
			oFF.noSupport();
		}
	};
	oFF.QueryModel.prototype.assertBlendingMode = function() {
		if (!this.isBlendingModel()) {
			oFF.noSupport();
		}
	};
	oFF.QueryModel.prototype.getBlendingSources = function() {
		this.assertBlendingMode();
		if (oFF.isNull(this.m_blendingDefinition)) {
			return null;
		}
		return this.getBlendingDefinition().getSources();
	};
	oFF.QueryModel.prototype.setBlendingDefinition = function(
			blendingDefinition) {
		this.assertBlendingMode();
		blendingDefinition.setQueryModel(this);
		this.m_blendingDefinition = oFF.XWeakReferenceUtil
				.getWeakRef(blendingDefinition);
	};
	oFF.QueryModel.prototype.getBlendingDefinition = function() {
		this.assertBlendingMode();
		return oFF.XWeakReferenceUtil.getHardRef(this.m_blendingDefinition);
	};
	oFF.QueryModel.prototype.getVariableMode = function() {
		var queryManager = this.getQueryManager();
		if (oFF.isNull(queryManager)) {
			return null;
		}
		return queryManager.getVariableMode();
	};
	oFF.QueryModel.prototype.getMdResultStructureControllerBase = function() {
		return this.m_resultStructureController;
	};
	oFF.QueryModel.prototype.supportsResultsetFacets = function() {
		return this.m_queryCapabilities.supportsResultsetFacets();
	};
	oFF.QueryModel.prototype.supportsSpatialTransformation = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.SPATIAL_TRANSFORMATIONS);
	};
	oFF.QueryModel.prototype.supportsUniqueHierarchyPath = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.HIERARCHY_PATH)
				&& this.getQueryManager().supportsAnalyticCapabilityActive(
						oFF.InACapabilities.HIERARCHY_PATH_UNIQUE_NAME);
	};
	oFF.QueryModel.prototype.supportsMemberVisibility = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.MEMBER_VISIBILITY);
	};
	oFF.QueryModel.prototype.getSupportedResultAlignmentLevel = function() {
		return this.m_queryCapabilities.getSupportedResultAlignmentLevel();
	};
	oFF.QueryModel.prototype.getSupportedResultVisibilityLevel = function() {
		return this.m_queryCapabilities.getSupportedResultVisibilityLevel();
	};
	oFF.QueryModel.prototype.getSupportedResultAlignments = function() {
		return this.m_queryCapabilities.getSupportedResultAlignments();
	};
	oFF.QueryModel.prototype.supportsResultAlignmentType = function(
			resultAlignment) {
		return this.m_queryCapabilities
				.supportsResultAlignmentType(resultAlignment);
	};
	oFF.QueryModel.prototype.supportsCubeBlending = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.CUBE_BLENDING);
	};
	oFF.QueryModel.prototype.supportsConditionalResultVisibility = function() {
		return this.m_queryCapabilities.supportsConditionalResultVisibility();
	};
	oFF.QueryModel.prototype.supportsConditionalResults = function() {
		return this.m_queryCapabilities.supportsConditionalResults();
	};
	oFF.QueryModel.prototype.getServerBaseSerialization = function() {
		if (this.isPartialResponse(this.getQueryManagerBase())
				|| this.hasPartialAxes(this.getQueryManagerBase())) {
			return this.m_metadata;
		}
		return this.getOlapEnv().getQueryMetadata(
				this.m_serverBaseSerializationKey);
	};
	oFF.QueryModel.prototype.getServerBaseSerializationForBaseState = function() {
		return this.getOlapEnv().getQueryMetadata(
				oFF.XStringUtils.concatenate2(
						this.m_serverBaseSerializationKey,
						oFF.QueryCloneMode.BASE_STATE.getName()));
	};
	oFF.QueryModel.prototype.getServerBaseSerializationKey = function() {
		return this.m_serverBaseSerializationKey;
	};
	oFF.QueryModel.prototype.setServerBaseSerialization = function(
			serialization) {
		var queryManager = this.getQueryManagerBase();
		var cacheKeyForBaseCloning;
		var olapEnv;
		if (oFF.notNull(serialization) && oFF.notNull(queryManager)) {
			this.setServerBaseSerializationKey(serialization, queryManager);
			if (this.isPartialResponse(queryManager)
					|| this.hasPartialAxes(queryManager)) {
				this.setQueryMetadata(serialization);
				return;
			}
			if (!queryManager.isMetadataCached()) {
				this.getOlapEnv().setQueryMetadata(
						this.m_serverBaseSerializationKey, serialization);
				cacheKeyForBaseCloning = oFF.XStringUtils.concatenate2(
						this.m_serverBaseSerializationKey,
						oFF.QueryCloneMode.BASE_STATE.getName());
				this.getOlapEnv().setQueryMetadata(cacheKeyForBaseCloning,
						serialization);
				queryManager.setIsMetadataCached(true);
			} else {
				olapEnv = this.getOlapEnv();
				olapEnv.overwriteQueryMetadata(
						this.m_serverBaseSerializationKey, serialization);
				if (olapEnv.getdatasourceKeysToListeners().getByKey(
						this.m_serverBaseSerializationKey) !== null) {
					this.notifyListeners(serialization, queryManager, olapEnv);
				}
			}
		}
	};
	oFF.QueryModel.prototype.hasPartialAxes = function(queryManager) {
		return oFF.XCollectionUtils.hasElements(queryManager
				.getQueryServiceConfig().getDimensionsOnAxes())
				&& queryManager.getQueryModel()
						.supportsExpandQueryAndDetailedResponse();
	};
	oFF.QueryModel.prototype.getMetadata = function() {
		return this.m_metadata;
	};
	oFF.QueryModel.prototype.setQueryMetadata = function(serialization) {
		this.m_metadata = serialization;
	};
	oFF.QueryModel.prototype.isPartialResponse = function(queryManager) {
		return oFF.XCollectionUtils.hasElements(queryManager
				.getQueryServiceConfig().getRequiredDimensions())
				&& queryManager.getQueryModel()
						.supportsExpandQueryAndDetailedResponse();
	};
	oFF.QueryModel.prototype.notifyListeners = function(serialization,
			queryManager, olapEnv) {
		var listOfQueryManagers = olapEnv.getdatasourceKeysToListeners()
				.getByKey(this.m_serverBaseSerializationKey);
		var i;
		var listenerAndTheCorrespondingQM;
		var keysAsIterator;
		var qsc;
		var responseWithDataFromCache;
		var extResult;
		var queryManagerToClone;
		var originQueryModel;
		var cloneQueryModel;
		for (i = 1; i < listOfQueryManagers.size();) {
			listenerAndTheCorrespondingQM = listOfQueryManagers.removeAt(i);
			keysAsIterator = listenerAndTheCorrespondingQM.getKeysAsIterator();
			while (keysAsIterator.hasNext()) {
				qsc = keysAsIterator.next();
				responseWithDataFromCache = oFF.RpcResponse.create(null);
				responseWithDataFromCache.setRootElement(serialization, null);
				extResult = oFF.ExtResult.create(responseWithDataFromCache,
						null);
				queryManagerToClone = listenerAndTheCorrespondingQM
						.getByKey(qsc);
				originQueryModel = queryManager.getQueryModel();
				cloneQueryModel = queryManagerToClone.getQueryModel();
				cloneQueryModel.copyQueryModel(originQueryModel,
						oFF.QueryCloneMode.CURRENT_STATE);
				cloneQueryModel.setServerBaseSerialization(serialization);
				qsc.onFunctionExecuted(extResult, responseWithDataFromCache,
						null);
			}
		}
	};
	oFF.QueryModel.prototype.setServerBaseSerializationKey = function(
			serialization, queryManager) {
		var dataSource = this.getDataSourceBase();
		var key;
		var extendedDimensions;
		if (this.isBasedOnMicroCube()) {
			this.m_serverBaseSerializationKey = dataSource.getMicroCube()
					.getServerBaseSerializationKey();
		} else {
			key = oFF.XStringBuffer.create();
			key.append(dataSource.getFullQualifiedName());
			extendedDimensions = dataSource.getExtendedDimensions();
			if (oFF.notNull(extendedDimensions)) {
				key.append(extendedDimensions.toString());
			} else {
				key.append("[]");
			}
			key.append(":");
			key.append(queryManager.getProviderType().getName());
			if (oFF.SystemType.UNV === queryManager.getSystemType()) {
				this.includeDimensionNamesToKey(key, serialization);
			}
			this.m_serverBaseSerializationKey = key.toString();
		}
	};
	oFF.QueryModel.prototype.includeDimensionNamesToKey = function(key,
			queryMetadata) {
		var inaDimensions = queryMetadata.getListByKey("Dimensions");
		var len = inaDimensions.size();
		var dimensionNames = oFF.XStringBuffer.create();
		var i;
		var inaDimension;
		var uniqueIdOfDimNames;
		for (i = 0; i < len; i++) {
			inaDimension = inaDimensions.getStructureAt(i);
			dimensionNames.append(inaDimension.getStringByKey("Name")).append(
					" ");
		}
		uniqueIdOfDimNames = oFF.XSha1.createSHA1(dimensionNames.toString());
		key.append(":").append(uniqueIdOfDimNames);
	};
	oFF.QueryModel.prototype.getSupportsMetadataDataCategory = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.METADATA_DATA_CATEGORY);
	};
	oFF.QueryModel.prototype.supportsExpandBottomUp = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.EXPAND_BOTTOM_UP);
	};
	oFF.QueryModel.prototype.supportsDataCells = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.QUERY_DATA_CELLS);
	};
	oFF.QueryModel.prototype.supportsExtendedSort = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.EXTENDED_SORT);
	};
	oFF.QueryModel.prototype.supportsConditions = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.CONDITIONS);
	};
	oFF.QueryModel.prototype.lazyLoadConditionManager = function() {
		if (oFF.isNull(this.m_conditionManager)) {
			this.m_conditionManager = oFF.QConditionManager.create(this, this);
		}
	};
	oFF.QueryModel.prototype.getConditionManager = function() {
		if (this.supportsConditions()) {
			this.lazyLoadConditionManager();
			return this.m_conditionManager;
		}
		return null;
	};
	oFF.QueryModel.prototype.getConditionManagerBase = function() {
		if (this.supportsConditions()) {
			this.lazyLoadConditionManager();
			return this.m_conditionManager;
		}
		return null;
	};
	oFF.QueryModel.prototype.supportsExceptionAggregationDimsFormulas = function() {
		return this
				.getQueryManager()
				.supportsAnalyticCapabilityActive(
						oFF.InACapabilities.EXCEPTION_AGGREGATION_DIMENSIONS_AND_FORMULAS);
	};
	oFF.QueryModel.prototype.supportsIgnoreExternalDimensions = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.IGNORE_EXTERNAL_DIMENSIONS);
	};
	oFF.QueryModel.prototype.getContext = function() {
		return this;
	};
	oFF.QueryModel.prototype.supportsExceptions = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.EXCEPTIONS);
	};
	oFF.QueryModel.prototype.supportsExceptionSettings = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.EXCEPTION_SETTINGS);
	};
	oFF.QueryModel.prototype.getInputEnabledVariable = function(name) {
		return this.getVariableContainer().getInputEnabledVariable(name);
	};
	oFF.QueryModel.prototype.getVariable = function(name) {
		return this.getVariableContainer().getVariable(name);
	};
	oFF.QueryModel.prototype.getHierarchyNodeVariable = function(name) {
		return this.getVariableContainer().getHierarchyNodeVariable(name);
	};
	oFF.QueryModel.prototype.getHierarchyNameVariable = function(name) {
		return this.getVariableContainer().getHierarchyNameVariable(name);
	};
	oFF.QueryModel.prototype.getHierarchyNameVariables = function() {
		return this.getVariableContainer().getHierarchyNameVariables();
	};
	oFF.QueryModel.prototype.getDimensionMemberVariables = function() {
		return this.getVariableContainer().getDimensionMemberVariables();
	};
	oFF.QueryModel.prototype.supportsHierarchyNavigationDeltaMode = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.HIERARCHY_NAVIGATION_DELTA_MODE);
	};
	oFF.QueryModel.prototype.supportsCubeBlendingProperties = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.CUBE_BLENDING_PROPERTIES);
	};
	oFF.QueryModel.prototype.supportsHierarchyLevelMetadata = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.METADATA_HIERARCHY_LEVELS);
	};
	oFF.QueryModel.prototype.supportsDimensionHierarchyLevels = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.DIMENSION_HIERARCHY_LEVELS);
	};
	oFF.QueryModel.prototype.supportsHierarchyMetadata = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.METADATA_HIERARCHY_STRUCTURE);
	};
	oFF.QueryModel.prototype.updateCubeBlendingMappings = function() {
		var exporter;
		var exportBlendingMappings;
		if (oFF.notNull(this.m_blendingDefinition)) {
			exporter = oFF.QInAExportFactory.createForData(this
					.getApplication(), null);
			exportBlendingMappings = exporter.exportBlendingMappings(this
					.getBlendingDefinition().getMappings());
			this.m_dataSource.setMappings(exportBlendingMappings);
			this.notifyNodeChanged();
		}
	};
	oFF.QueryModel.prototype.supportsSortNewValues = function() {
		return this.m_queryCapabilities.supportsSortNewValues();
	};
	oFF.QueryModel.prototype.getDimensionByName = function(name) {
		return this.m_dimensionManager.getDimensionByName(name);
	};
	oFF.QueryModel.prototype.getDimensionByNameFromExistingMetadata = function(
			name) {
		return this.m_dimensionManager
				.getDimensionByNameFromExistingMetadata(name);
	};
	oFF.QueryModel.prototype.getDimensionByNameInternal = function(name) {
		return this.m_dimensionManager.getDimensionByNameInternal(name);
	};
	oFF.QueryModel.prototype.addDimension = function(dimension) {
		this.m_dimensionManager.addDimension(dimension);
	};
	oFF.QueryModel.prototype.removeDimension = function(dimension) {
		this.m_dimensionManager.removeDimension(dimension);
	};
	oFF.QueryModel.prototype.getDimensionNames = function() {
		return this.m_dimensionManager.getDimensionNames();
	};
	oFF.QueryModel.prototype.getLoadedDimensions = function() {
		return this.m_dimensionManager.getLoadedDimensions();
	};
	oFF.QueryModel.prototype.addDimensionReference = function(name,
			dimensionType) {
		this.m_dimensionManager.addDimensionReference(name, dimensionType);
	};
	oFF.QueryModel.prototype.getDimensionReferences = function() {
		return this.m_dimensionManager.getDimensionReferences();
	};
	oFF.QueryModel.prototype.getDimensions = function() {
		return this.m_dimensionManager.getDimensions();
	};
	oFF.QueryModel.prototype.getDimensionByType = function(type) {
		return this.m_dimensionManager.getDimensionByType(type);
	};
	oFF.QueryModel.prototype.getStructureCount = function() {
		return this.m_dimensionManager.getStructureCount();
	};
	oFF.QueryModel.prototype.getDimensionCount = function() {
		return this.m_dimensionManager.getDimensionCount();
	};
	oFF.QueryModel.prototype.getNonMeasureDimension = function() {
		return this.m_dimensionManager.getNonMeasureDimension();
	};
	oFF.QueryModel.prototype.getNonMeasureDimension2 = function() {
		return this.m_dimensionManager.getNonMeasureDimension2();
	};
	oFF.QueryModel.prototype.getMeasureDimension = function() {
		return this.m_dimensionManager.getMeasureDimension();
	};
	oFF.QueryModel.prototype.getAccountDimension = function() {
		return this.m_dimensionManager.getAccountDimension();
	};
	oFF.QueryModel.prototype.getFields = function() {
		return this.m_dimensionManager.getFields();
	};
	oFF.QueryModel.prototype.getFieldIterator = function() {
		return this.m_dimensionManager.getFieldIterator();
	};
	oFF.QueryModel.prototype.getFieldByNameOrAlias = function(name) {
		return this.m_dimensionManager.getFieldByNameOrAlias(name);
	};
	oFF.QueryModel.prototype.getFieldByName = function(name) {
		return this.m_dimensionManager.getFieldByName(name);
	};
	oFF.QueryModel.prototype.convertToFieldLayoutType = function(type) {
		this.m_dimensionManager.convertToFieldLayoutType(type);
	};
	oFF.QueryModel.prototype.getAxesManager = function() {
		return this.m_axesManager;
	};
	oFF.QueryModel.prototype.getDimensionManagerBase = function() {
		return this.m_dimensionManager;
	};
	oFF.QueryModel.prototype.getDimensionAccessor = function() {
		return this.m_dimensionManager;
	};
	oFF.QueryModel.prototype.getFieldAccessorSingle = function() {
		return this.m_dimensionManager;
	};
	oFF.QueryModel.prototype.getOlapEnv = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_application);
	};
	oFF.QueryModel.prototype.supportsSpatialClustering = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.SPATIAL_CLUSTERING);
	};
	oFF.QueryModel.prototype.getSupportedFormulaOperators = function() {
		return oFF.FormulaOperator.getSupportedFormulaOperator(this
				.getSystemType());
	};
	oFF.QueryModel.prototype.supportsRestrictedMeasures = function() {
		return this.m_queryCapabilities.supportsRestrictedMeasures();
	};
	oFF.QueryModel.prototype.supportsFormulaMeasures = function() {
		return this.m_queryCapabilities.supportsFormulaMeasures();
	};
	oFF.QueryModel.prototype.supportsKeepOriginalTexts = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.ORIGINAL_TEXTS);
	};
	oFF.QueryModel.prototype.setKeepOriginalTexts = function(keepOriginalTexts) {
		if (this.supportsKeepOriginalTexts()) {
			this.m_keepOriginalTexts = keepOriginalTexts;
		}
	};
	oFF.QueryModel.prototype.isKeepingOriginalTexts = function() {
		if (this.supportsKeepOriginalTexts()) {
			return this.m_keepOriginalTexts;
		}
		return false;
	};
	oFF.QueryModel.prototype.supportsAverageCountNullZero = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.AVERAGE_COUNT_IGNORE_NULL_ZERO);
	};
	oFF.QueryModel.prototype.supportsUnifiedDataCells = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.UNIFIED_DATA_CELLS);
	};
	oFF.QueryModel.prototype.supportsHierarchyTrapezoidFilter = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.HIERARCHY_TRAPEZOID_FILTER);
	};
	oFF.QueryModel.prototype.supportsHierarchyLevelOffsetFilter = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.HIERARCHY_LEVEL_OFFSET_FILTER);
	};
	oFF.QueryModel.prototype.supportsCartesianFilterIntersect = function() {
		return this.m_queryCapabilities.supportsCartesianFilterIntersect();
	};
	oFF.QueryModel.prototype.supportsCustomDimensionFilterCapability = function() {
		return this.m_queryCapabilities
				.supportsCustomDimensionFilterCapability();
	};
	oFF.QueryModel.prototype.supportsLocaleSorting = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.LOCALE_SORTING);
	};
	oFF.QueryModel.prototype.supportsCeScenarioParams = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.CE_SCENARIO_PARAMS);
	};
	oFF.QueryModel.prototype.supportsComplexFilter = function() {
		return this.m_queryCapabilities.supportsComplexFilter()
				|| this.supportsComplexTupleFilter();
	};
	oFF.QueryModel.prototype.supportsCellValueOperand = function() {
		return this.m_queryCapabilities.supportsCellValueOperand();
	};
	oFF.QueryModel.prototype.supportsIntersectLayers = function() {
		return this.m_queryCapabilities.supportsIntersectLayers();
	};
	oFF.QueryModel.prototype.supportsVisibilityFilter = function() {
		return this.m_queryCapabilities.supportsVisibilityFilter();
	};
	oFF.QueryModel.prototype.supportsUniversalDisplayHierarchies = function() {
		return this.m_queryCapabilities.supportsUniversalDisplayHierarchies();
	};
	oFF.QueryModel.prototype.supportsUniversalDisplayHierarchiesCustomDimensions = function() {
		return this.m_queryCapabilities
				.supportsUniversalDisplayHierarchiesCustomDimensions();
	};
	oFF.QueryModel.prototype.supportsInaCurrentMember = function() {
		return this.m_queryCapabilities.supportsInaCurrentMember();
	};
	oFF.QueryModel.prototype.getSystemType = function() {
		return this.m_queryCapabilities.getSystemType();
	};
	oFF.QueryModel.prototype.getOptimizerHintsByExecutionEngine = function(
			executionEngine) {
		if (!this.supportsCeScenarioParams()
				|| oFF.isNull(this.m_optimizerHints)) {
			return null;
		}
		return this.m_optimizerHints.getByKey(executionEngine.getName());
	};
	oFF.QueryModel.prototype.addOptimizerHint = function(executionEngine,
			hintKey, hintValue) {
		var optimizerHintsByEngine;
		if (this.supportsCeScenarioParams()) {
			if (oFF.isNull(this.m_optimizerHints)) {
				this.m_optimizerHints = oFF.XHashMapByString.create();
			}
			optimizerHintsByEngine = this.m_optimizerHints
					.getByKey(executionEngine.getName());
			if (oFF.isNull(optimizerHintsByEngine)) {
				optimizerHintsByEngine = oFF.XHashMapOfStringByString.create();
				this.m_optimizerHints.put(executionEngine.getName(),
						optimizerHintsByEngine);
				this.notifyNodeChanged();
			}
			optimizerHintsByEngine.put(hintKey, hintValue);
		}
	};
	oFF.QueryModel.prototype.removeOptimizerHint = function(executionEngine,
			hintKey) {
		var optimizerHintsByEngine;
		if (this.supportsCeScenarioParams()
				&& oFF.notNull(this.m_optimizerHints)) {
			optimizerHintsByEngine = this.m_optimizerHints
					.getByKey(executionEngine.getName());
			if (oFF.notNull(optimizerHintsByEngine)) {
				optimizerHintsByEngine.remove(hintKey);
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QueryModel.prototype.setOptimizedExportMode = function(isActive) {
		this.m_isMetadataExportReduced = isActive;
	};
	oFF.QueryModel.prototype.isOptimizedExportModeActive = function() {
		return this.m_isMetadataExportReduced;
	};
	oFF.QueryModel.prototype.hasProcessingStep = function() {
		return this.m_hasProcessingStep;
	};
	oFF.QueryModel.prototype.setHasProcessingStep = function(hasProcessingStep) {
		this.m_hasProcessingStep = hasProcessingStep;
	};
	oFF.QueryModel.prototype.isNode = function() {
		return true;
	};
	oFF.QueryModel.prototype.getChildSetState = function() {
		return oFF.ChildSetState.COMPLETE;
	};
	oFF.QueryModel.prototype.hasChildren = function() {
		return true;
	};
	oFF.QueryModel.prototype.getChildElements = function() {
		var list = oFF.XList.create();
		list.add(this.m_dataSource);
		list.add(this.m_dimensionManager);
		return list;
	};
	oFF.QueryModel.prototype.processChildFetch = oFF.noSupport;
	oFF.QueryModel.prototype.getModelCapabilitiesBase = function() {
		return this.m_queryCapabilities;
	};
	oFF.QueryModel.prototype.getModelCapabilities = function() {
		return this.m_queryCapabilities;
	};
	oFF.QueryModel.prototype.mergeDeepRecursive = function(settings, other) {
		var otherQm = other;
		var otherDataSource = otherQm.getDataSource();
		var text = otherDataSource.getText();
		var otherExcepAggrMgr;
		this.m_dataSource.setText(text);
		this.setText(text);
		this.setMetadataPropertiesBase(otherQm.getMetadataProperties().clone());
		this.m_dimensionManager.mergeDeepRecursive(settings, otherQm
				.getDimensionManagerBase());
		this.m_filterManager.mergeDeepRecursive(settings, otherQm.getFilter());
		otherExcepAggrMgr = otherQm._getExceptionAggregationManagerBase();
		if (oFF.isNull(otherExcepAggrMgr)) {
			this.m_exceptionAggregationManager = null;
		} else {
			this._loadExceptionAggregationManager();
			if (oFF.notNull(this.m_exceptionAggregationManager)) {
				this.m_exceptionAggregationManager.mergeDeepRecursive(settings,
						otherExcepAggrMgr);
			}
		}
		if (oFF.notNull(this.m_conditionManager)) {
			this.m_conditionManager.mergeDeepRecursive(settings, otherQm
					.getConditionManager());
		}
		if (oFF.notNull(this.m_exceptionManager)) {
			this.m_exceptionManager.mergeDeepRecursive(settings, otherQm
					.getExceptionManager());
		}
		this.m_variableManager.mergeDeepRecursive(settings, otherQm
				.getVariableManager());
		this.m_sortManager.mergeDeepRecursive(settings, otherQm
				.getSortingManager());
		this.m_universalDisplayHierarchies.mergeDeepRecursive(settings, otherQm
				.getUniversalDisplayHierarchies());
	};
	oFF.QueryModel.prototype.supportsCubeBlendingOutOfContext = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.CUBE_BLENDING_OUT_OF_CONTEXT);
	};
	oFF.QueryModel.prototype.addNewCalculatedDimensionWithName = function(
			calculatedDimensionName) {
		return this.m_dimensionManager
				.addNewCalculatedDimensionWithName(calculatedDimensionName);
	};
	oFF.QueryModel.prototype.removeCalculatedDimensionByName = function(
			calculatedDimensionName) {
		this.m_dimensionManager
				.removeCalculatedDimensionByName(calculatedDimensionName);
	};
	oFF.QueryModel.prototype.clearCalculatedDimensions = function() {
		this.m_dimensionManager.clearAllCalculatedDimensions();
	};
	oFF.QueryModel.prototype.addNewCalculatedDimensionWithNameAndPreQueryName = function(
			calculatedDimensionName, preQueryName) {
		var newCalculatedDimension;
		this.assertNotBlendingMode();
		newCalculatedDimension = this
				.addNewCalculatedDimensionWithName(calculatedDimensionName);
		newCalculatedDimension.setPreQueryName(preQueryName);
		return newCalculatedDimension;
	};
	oFF.QueryModel.prototype.addPreQueryWithName = function(preQuery,
			preQueryName) {
		var newPreQuery;
		if (oFF.isNull(preQuery)) {
			this.removePreQueryByName(preQueryName);
			return;
		}
		this.assertNoPreQueryCycle(preQuery, this);
		newPreQuery = oFF.XNameWeakGenericPair.create(preQueryName, preQuery);
		if (oFF.isNull(this.m_preQueries)) {
			this.m_preQueries = oFF.XListOfNameObject.create();
		}
		this.m_preQueries.add(newPreQuery);
	};
	oFF.QueryModel.prototype.assertNoPreQueryCycle = function(preQuery,
			mainQuery) {
		var preQueries;
		var sizePreQueries;
		var idxPreQueries;
		if (preQuery.isReleased()) {
			throw oFF.XException
					.createIllegalStateException("A pre query must not be released!");
		}
		preQueries = preQuery.getPreQueries();
		if (oFF.notNull(preQueries)) {
			sizePreQueries = preQueries.size();
			for (idxPreQueries = 0; idxPreQueries < sizePreQueries; idxPreQueries++) {
				this.assertNoPreQueryCycle(preQueries.get(idxPreQueries)
						.getObject(), mainQuery);
			}
		}
		if (mainQuery === preQuery) {
			throw oFF.XException
					.createIllegalArgumentException("Cylce of pre queries and main query detected!");
		}
	};
	oFF.QueryModel.prototype.getPreQueryByName = function(preQueryName) {
		var preQuery;
		if (oFF.isNull(this.m_preQueries)) {
			return null;
		}
		preQuery = this.m_preQueries.getByKey(preQueryName);
		if (oFF.isNull(preQuery)) {
			return null;
		}
		return preQuery.getObject();
	};
	oFF.QueryModel.prototype.getPreQueries = function() {
		if (oFF.isNull(this.m_preQueries)) {
			return null;
		}
		return this.m_preQueries.getValuesAsReadOnlyList();
	};
	oFF.QueryModel.prototype.removePreQueryByName = function(preQueryName) {
		if (oFF.notNull(this.m_preQueries)) {
			this.m_preQueries.removeElement(this.m_preQueries
					.getByKey(preQueryName));
		}
	};
	oFF.QueryModel.prototype.clearPreQueries = function() {
		if (oFF.notNull(this.m_preQueries)) {
			this.m_preQueries.clear();
		}
	};
	oFF.QueryModel.prototype.supportsIgnoreUnitOfZeroValueInAggregation = function() {
		return this.m_queryCapabilities
				.supportsIgnoreUnitOfZeroValueInAggregation();
	};
	oFF.QueryModel.prototype.supportsCubeBlendingWithNSubqueries = function() {
		return this.m_queryCapabilities.supportsCubeBlendingWithNSubqueries();
	};
	oFF.QueryModel.prototype.supportsExtendedDimensionsChangeDefaultRenamingAndDescription = function() {
		return this.m_queryCapabilities
				.supportsExtendedDimensionsChangeDefaultRenamingAndDescription();
	};
	oFF.QueryModel.prototype.supportsExtendedDimensionsCopyAllHierarchies = function() {
		return this.m_queryCapabilities
				.supportsExtendedDimensionsCopyAllHierarchies();
	};
	oFF.QueryModel.prototype.supportsFixMetadataHierarchyAttributes = function() {
		return this.m_queryCapabilities
				.supportsFixMetadataHierarchyAttributes();
	};
	oFF.QueryModel.prototype.supportsExceptionsV2 = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.EXCEPTIONS_V2);
	};
	oFF.QueryModel.prototype.getUniversalDisplayHierarchiesBase = function() {
		return this.m_universalDisplayHierarchies;
	};
	oFF.QueryModel.prototype.getUniversalDisplayHierarchies = function() {
		return this.m_universalDisplayHierarchies;
	};
	oFF.QueryModel.prototype.supportsRemoteBlending = function() {
		return this.m_queryCapabilities.supportsRemoteBlending();
	};
	oFF.QueryModel.prototype.supportsCubeCache = function() {
		return this.m_queryCapabilities.supportsCubeCache();
	};
	oFF.QueryModel.prototype.setExportFixedFilter = function(exportFixedFilter) {
		if (this
				.supportsAnalyticCapability(oFF.InACapabilities.STATEFUL_SERVER)) {
			this.m_exportFixedFilter = exportFixedFilter;
		}
		return this.m_exportFixedFilter;
	};
	oFF.QueryModel.prototype.isExportingFixedFilter = function() {
		return this.m_exportFixedFilter;
	};
	oFF.QueryModel.prototype.setExportVariables = function(exportVariables) {
		if (this
				.supportsAnalyticCapability(oFF.InACapabilities.STATEFUL_SERVER)) {
			this.m_exportVariables = exportVariables;
		}
		return this.m_exportVariables;
	};
	oFF.QueryModel.prototype.isExportingVariables = function() {
		return this.m_exportVariables;
	};
	oFF.QueryModel.prototype.supportsCatalogServiceV2 = function() {
		return this.m_queryCapabilities.supportsCatalogServiceV2();
	};
	oFF.QueryModel.prototype.supportsExtendedVariableDefinition = function() {
		return this.getQueryManagerBase()
				.supportsAndAllowsEmptyExtendedVarDefinition();
	};
	oFF.QueryModel.prototype.supportsDimensionLazyLoad = function() {
		return this.m_supportsDimensionLazyLoad;
	};
	oFF.QueryModel.prototype.setSupportsDimensionLazyLoad = function(
			supportsDimensionLazyLoad) {
		this.m_supportsDimensionLazyLoad = supportsDimensionLazyLoad;
	};
	oFF.QueryModel.prototype.isExportingTextFieldAlways = function() {
		return this.m_requestTextField;
	};
	oFF.QueryModel.prototype.setRequestTextFieldAlways = function(
			requestTextField) {
		this.m_requestTextField = requestTextField;
	};
	oFF.QueryModel.prototype.supportsCustomSort = function() {
		return this.m_queryCapabilities.supportsCustomSort();
	};
	oFF.QueryModel.prototype.supportsDataRefreshAndDataTopicality = function() {
		return this.m_queryCapabilities.supportsDataRefreshAndDataTopicality();
	};
	oFF.QueryModel.prototype.supportsRemoteBlendingBW = function() {
		return this.m_queryCapabilities.supportsRemoteBlendingBW();
	};
	oFF.QueryModel.prototype.getDataRollUpMax = function() {
		var dataRollUpMax = this.m_metadataProperties
				.getStringByKey("DataRollupMax");
		return this.convertStringToDateTime(dataRollUpMax);
	};
	oFF.QueryModel.prototype.getDataRollUpMin = function() {
		var dataRollUpMin = this.m_metadataProperties
				.getStringByKey("DataRollupMin");
		return this.convertStringToDateTime(dataRollUpMin);
	};
	oFF.QueryModel.prototype.supportsResultSetUnitIndex = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InactiveCapabilities.RESULTSET_UNIT_INDEX.getName());
	};
	oFF.QueryModel.prototype.supportsTuplesOperand = function() {
		return this.m_queryCapabilities.supportsTuplesOperand();
	};
	oFF.QueryModel.prototype.supportsCustomMeasureSortOrder = function() {
		return this.m_queryCapabilities.supportsCustomMeasureSortOrder();
	};
	oFF.QueryModel.prototype.supportsComplexTupleFilter = function() {
		return this.m_queryCapabilities.supportsComplexTupleFilter();
	};
	oFF.QueryModel.prototype.supportsF4FilterForTextField = function() {
		return this.m_queryCapabilities.supportsF4FilterForTextField();
	};
	oFF.QueryModel.prototype.supportsHierarchyNavigationField = function() {
		return this.m_queryCapabilities.supportsHierarchyNavigationField();
	};
	oFF.QueryModel.prototype.supportsExceptionAggregationAvgNullSelectionMember = function() {
		return this.m_queryCapabilities
				.supportsExceptionAggregationAvgNullSelectionMember();
	};
	oFF.QueryModel.prototype.supportsExceptionAggregationCountNullSelectionMember = function() {
		return this.m_queryCapabilities
				.supportsExceptionAggregationCountNullSelectionMember();
	};
	oFF.QueryModel.prototype.supportsStructureRestrictionsInValueHelp = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.STRUCTURE_RESTRICTIONS_IN_VALUE_HELP);
	};
	oFF.QueryModel.prototype.supportsStatisticalAggregations = function() {
		return this.m_queryCapabilities.supportsStatisticalAggregations();
	};
	oFF.QueryModel.prototype.setLastDataUpdate = function(lastDataUpdate) {
		this.getMetadataPropertiesBase().putString("LastDataUpdate",
				lastDataUpdate);
	};
	oFF.QueryModel.prototype.setDataRollUp = function(rollupMin, rollupMax) {
		var metadataProperties = this.getMetadataPropertiesBase();
		metadataProperties.putString("DataRollupMin", rollupMin);
		metadataProperties.putString("DataRollupMax", rollupMax);
	};
	oFF.QueryModel.prototype.supportsAnalyticCapability = function(
			capabilityName) {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				capabilityName);
	};
	oFF.QueryModel.prototype.supportsAnalyticCapabilityActive = function(
			capabilityName) {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				capabilityName);
	};
	oFF.QueryModel.prototype.supportsVarianceOperator = function() {
		return this.m_queryCapabilities.supportsVarianceOperator();
	};
	oFF.QueryModel.prototype.deactivateCumulative = function() {
		this.m_deactivateCumulative = true;
	};
	oFF.QueryModel.prototype.isCumulativeDeactive = function() {
		return this.m_deactivateCumulative;
	};
	oFF.QueryModel.prototype.setExportEachMeasure = function(exportEachMeasure) {
		if (this
				.supportsAnalyticCapability(oFF.InACapabilities.STATEFUL_SERVER)) {
			this.m_exportEachMeasure = exportEachMeasure;
		}
		return this.m_exportEachMeasure;
	};
	oFF.QueryModel.prototype.isExportingEachMeasure = function() {
		return this.m_exportEachMeasure;
	};
	oFF.QueryModel.prototype.supportsAsyncRemoteModelValidation = function() {
		return this.m_queryCapabilities.supportsAsyncRemoteModelValidation();
	};
	oFF.QueryModel.prototype.supportsExtendedKeyFigureProperties = function() {
		return this.m_queryCapabilities.supportsExtendedKeyFigureProperties();
	};
	oFF.QueryModel.prototype.supportsDetailedResponseExpansion = function() {
		return this.m_queryCapabilities.supportsDetailedResponseExpansion();
	};
	oFF.QueryModel.prototype.addQueryModelIdToMessages = function(messages) {
		var instanceId;
		var messageCount;
		var i;
		var message;
		if (oFF.XCollectionUtils.hasElements(messages)) {
			instanceId = oFF.XStringValue.create(this.getDataSource()
					.getInstanceId());
			messageCount = messages.size();
			for (i = 0; i < messageCount; i++) {
				message = messages.get(i);
				if (message.getExtendedInfo() === null) {
					message
							.setExtendendInfoType(oFF.ExtendedInfoType.QUERY_MODEL_ID);
					message.setExtendendInfo(instanceId);
				}
			}
		}
	};
	oFF.QueryModel.prototype.supportsDynamicVariableRefresh = function() {
		return this.m_queryCapabilities.supportsDynamicVariableRefresh();
	};
	oFF.QueryModel.prototype.supportsExpandQueryAxis = function() {
		return this.m_queryCapabilities.supportsExpandQueryAxis();
	};
	oFF.QueryModel.prototype.getCurrencyTranslationDetails = function() {
		return this.m_currencyTranslationDetails;
	};
	oFF.QueryModel.prototype.setCurrencyTranslationDetails = function(
			currencyTranslationDetails) {
		if (!this.supportsQueryCurrencyTranslation()) {
			throw oFF.XException
					.createIllegalArgumentException("Capability QueryCurrencyTranslation not supported.");
		}
		this.m_currencyTranslationDetails = currencyTranslationDetails;
	};
	oFF.QueryModel.prototype.supportsQueryCurrencyTranslation = function() {
		return this.m_queryCapabilities.supportsQueryCurrencyTranslation();
	};
	oFF.QueryModel.prototype.supportsDimensionDefaultMember = function() {
		return this.m_queryCapabilities.supportsDimensionDefaultMember();
	};
	oFF.QueryModel.prototype.supportsDimensionVisibility = function() {
		return this.m_queryCapabilities.supportsDimensionVisibility();
	};
	oFF.QueryModel.prototype.getCurrencyTranslationEnabledType = function() {
		return this.getMetadataProperties().getByKey(
				"CurrencyTranslationEnabled");
	};
	oFF.QueryModel.prototype.resetCurrencyTranslationDetails = function() {
		var currencyTranslationDetails = this.getCurrencyTranslationDetails();
		if (oFF.notNull(currencyTranslationDetails)) {
			currencyTranslationDetails.setCurrencyTranslationName("");
			currencyTranslationDetails.setCurrencyTranslationOperation(null);
			currencyTranslationDetails.setCurrencyTranslationTarget("");
			this.m_resetCurrencyTranslationDetails = true;
		}
	};
	oFF.QueryModel.prototype.getCurrencyTranslationDetailsReset = function() {
		return this.m_resetCurrencyTranslationDetails;
	};
	oFF.QueryModel.prototype.setCurrencyTranslationDetailsReset = function(
			resetCurrencyTranslationDetails) {
		this.m_resetCurrencyTranslationDetails = resetCurrencyTranslationDetails;
	};
	oFF.QueryModel.prototype.supportsHierarchyRestNode = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.HIERARCHY_REST_NODE);
	};
	oFF.QueryModel.prototype.supportsHierarchyVirtualRootNode = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.HIERARCHY_VIRTUAL_ROOT_NODE);
	};
	oFF.QueryModel.prototype.supportsSpatialChoropleth = function() {
		return this.getQueryManager().supportsAnalyticCapabilityActive(
				oFF.InACapabilities.SPATIAL_CHOROPLETH);
	};
	oFF.QueryModel.prototype.supportsExpandQueryAndDetailedResponse = function() {
		return this
				.supportsAnalyticCapabilityActive(oFF.InactiveCapabilities.EXPAND_QUERY_AXIS
						.getName())
				&& this
						.supportsAnalyticCapabilityActive(oFF.InactiveCapabilities.DETAILED_RESPONSE_EXPANSION
								.getName());
	};
	oFF.QResultStructureControllerGeneric = function() {
	};
	oFF.QResultStructureControllerGeneric.prototype = new oFF.QModelComponent();
	oFF.QResultStructureControllerGeneric.prototype.m_supportsTotals = null;
	oFF.QResultStructureControllerGeneric.prototype.m_isAlignmentDefault = false;
	oFF.QResultStructureControllerGeneric.prototype.m_isVisibilityDefault = false;
	oFF.QResultStructureControllerGeneric.prototype.m_isStructureDefault = false;
	oFF.QResultStructureControllerGeneric.prototype.m_modelLevel = null;
	oFF.QResultStructureControllerGeneric.prototype.setupGenericController = function(
			context, parentNode, location) {
		oFF.QModelComponent.prototype.setupModelComponent.call(this, context,
				parentNode);
		this.m_modelLevel = location;
		this.m_supportsTotals = oFF.TriStateBool._DEFAULT;
		this.m_isAlignmentDefault = true;
		this.m_isVisibilityDefault = true;
		this.m_isStructureDefault = true;
	};
	oFF.QResultStructureControllerGeneric.prototype.copyResultStructureControllerGeneric = function(
			origin) {
		oFF.QModelComponent.prototype.copyModelComponent.call(this, origin);
		this.m_supportsTotals = origin.m_supportsTotals;
		this.m_isAlignmentDefault = origin.m_isAlignmentDefault;
		this.m_isVisibilityDefault = origin.m_isVisibilityDefault;
		this.m_isStructureDefault = origin.m_isStructureDefault;
		this.m_modelLevel = origin.m_modelLevel;
	};
	oFF.QResultStructureControllerGeneric.prototype.releaseObject = function() {
		this.m_supportsTotals = null;
		this.m_modelLevel = null;
		oFF.QModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QResultStructureControllerGeneric.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.TOTALS;
	};
	oFF.QResultStructureControllerGeneric.prototype.getParentController = function() {
		var context = this.getResultStructureController();
		return context.getParentResultStructureController();
	};
	oFF.QResultStructureControllerGeneric.prototype.getResultStructureController = function() {
		return this.getParentComponent();
	};
	oFF.QResultStructureControllerGeneric.prototype.supportsResultAlignment = function() {
		var level;
		var supportedLevel;
		if (oFF.isNull(this.m_modelLevel)) {
			return false;
		}
		level = this.m_modelLevel.getLevel();
		supportedLevel = this.getSupportedResultAlignmentLevel().getLevel();
		return level <= supportedLevel;
	};
	oFF.QResultStructureControllerGeneric.prototype.supportsResultVisibility = function() {
		var level;
		var supportedLevel;
		if (oFF.isNull(this.m_modelLevel)) {
			return false;
		}
		level = this.m_modelLevel.getLevel();
		supportedLevel = this.getSupportedResultVisibilityLevel().getLevel();
		return level <= supportedLevel;
	};
	oFF.QResultStructureControllerGeneric.prototype.getModelLevel = function() {
		return this.m_modelLevel;
	};
	oFF.QResultStructureControllerGeneric.prototype.getSupportedResultAlignmentLevel = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return oFF.QModelLevel.NONE;
		}
		return queryModel.getSupportedResultAlignmentLevel();
	};
	oFF.QResultStructureControllerGeneric.prototype.getSupportedResultVisibilityLevel = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return oFF.QModelLevel.NONE;
		}
		return queryModel.getSupportedResultVisibilityLevel();
	};
	oFF.QResultStructureControllerGeneric.prototype.getSupportedResultAlignments = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return oFF.XList.create();
		}
		return queryModel.getSupportedResultAlignments();
	};
	oFF.QResultStructureControllerGeneric.prototype.supportsResultAlignmentType = function(
			resultAlignment) {
		return this.getSupportedResultAlignments().contains(resultAlignment);
	};
	oFF.QResultStructureControllerGeneric.prototype.getResultStructureReorderingCapability = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return oFF.ReorderingCapability.NONE;
		}
		return queryModel.getResultStructureReorderingCapability();
	};
	oFF.QResultStructureControllerGeneric.prototype.supportsConditionalResults = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return false;
		}
		return queryModel.supportsConditionalResults();
	};
	oFF.QResultStructureControllerGeneric.prototype.getSupportedConditionalResults = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return oFF.XList.create();
		}
		return queryModel.getSupportedConditionalResults();
	};
	oFF.QResultStructureControllerGeneric.prototype.supportsConditionalResultVisibility = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return false;
		}
		return queryModel.supportsConditionalResultVisibility();
	};
	oFF.QResultStructureControllerGeneric.prototype.supportsTotals = function() {
		var parentController;
		if (this.m_supportsTotals === oFF.TriStateBool._DEFAULT) {
			parentController = this.getParentController();
			if (oFF.notNull(parentController)) {
				return parentController.supportsTotals();
			}
		}
		return this.m_supportsTotals.getBoolean();
	};
	oFF.QResultStructureControllerGeneric.prototype.setSupportsTotals = function(
			supportsTotals) {
		this.m_supportsTotals = oFF.TriStateBool.lookup(supportsTotals);
	};
	oFF.QResultStructureControllerGeneric.prototype.setResultVisibility = function(
			visibility) {
		this.setResultVisibilityByElement(oFF.ResultStructureElement.TOTAL,
				visibility);
	};
	oFF.QResultStructureControllerGeneric.prototype.getResultVisibility = function() {
		return this
				.getResultVisibilityByElement(oFF.ResultStructureElement.TOTAL);
	};
	oFF.QResultStructureControllerGeneric.prototype.getResultVisibilityByElement = function(
			element) {
		return this.getResultVisibilityByElementAndAlignment(this
				.getResultAlignment(), element);
	};
	oFF.QResultStructureControllerGeneric.prototype.isTotalsAlignmentOnDefault = function() {
		return this.m_isAlignmentDefault;
	};
	oFF.QResultStructureControllerGeneric.prototype.isTotalsVisibilityOnDefault = function() {
		return this.m_isVisibilityDefault;
	};
	oFF.QResultStructureControllerGeneric.prototype.isTotalsStructureOnDefault = function() {
		return this.m_isStructureDefault;
	};
	oFF.QResultStructureControllerGeneric.prototype.supportsAdvancedResultStructure = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return false;
		}
		return queryModel.getResultStructureReorderingCapability() === oFF.ReorderingCapability.FULL;
	};
	oFF.QResultStructureControllerGeneric.prototype.restoreTotalsAlignment = function(
			restoreAction, recurseChildren) {
		var targetIsDefault;
		var isChanged;
		var resultStructureController;
		var children;
		var child;
		if (this.supportsResultAlignment()) {
			this.queueEventing();
			targetIsDefault = restoreAction === oFF.RestoreAction.DEFAULT_VALUE;
			isChanged = this.m_isAlignmentDefault !== targetIsDefault
					|| restoreAction === oFF.RestoreAction.COPY;
			if (isChanged) {
				this.m_isAlignmentDefault = true;
				this.internalSetTotalsAlignmentDefault(!targetIsDefault);
				this.m_isAlignmentDefault = targetIsDefault;
				this.notifyNodeChanged();
			}
			if (recurseChildren) {
				resultStructureController = this.getResultStructureController();
				children = resultStructureController
						.getResultStructureChildren();
				if (oFF.notNull(children)) {
					while (children.hasNext()) {
						child = children.next();
						child.restoreTotalsAlignment(
								oFF.RestoreAction.DEFAULT_VALUE, true);
					}
					oFF.XObjectExt.release(children);
				}
			}
			this.resumeEventing();
		}
	};
	oFF.QResultStructureControllerGeneric.prototype.restoreTotalsVisibility = function(
			restoreAction, recurseChildren) {
		var targetIsDefault;
		var isChanged;
		var resultStructureController;
		var children;
		var child;
		if (this.supportsResultVisibility()) {
			this.queueEventing();
			targetIsDefault = restoreAction === oFF.RestoreAction.DEFAULT_VALUE;
			isChanged = this.m_isVisibilityDefault !== targetIsDefault
					|| restoreAction === oFF.RestoreAction.COPY;
			if (isChanged) {
				this.m_isVisibilityDefault = true;
				this.internalSetTotalsVisibilityDefault(!targetIsDefault);
				this.m_isVisibilityDefault = targetIsDefault;
				this.notifyNodeChanged();
			}
			if (recurseChildren) {
				resultStructureController = this.getResultStructureController();
				children = resultStructureController
						.getResultStructureChildren();
				if (oFF.notNull(children)) {
					while (children.hasNext()) {
						child = children.next();
						child.restoreTotalsVisibility(
								oFF.RestoreAction.DEFAULT_VALUE, true);
					}
					oFF.XObjectExt.release(children);
				}
			}
			this.resumeEventing();
		}
	};
	oFF.QComplexAndDataCellSorting = function() {
	};
	oFF.QComplexAndDataCellSorting.prototype = new oFF.QGenericSorting();
	oFF.QComplexAndDataCellSorting.createPathUniqueName = function(elementPath) {
		var buffer = oFF.XStringBuffer.create();
		var i;
		var element;
		if (oFF.notNull(elementPath)) {
			for (i = 0; i < elementPath.size(); i++) {
				if (i > 0) {
					buffer.append("/");
				}
				element = elementPath.get(i);
				buffer.append("[").append(element.getDimension().getName())
						.append("]");
				buffer.append("{").append(element.getSelectHierarchyName())
						.append("} ");
				buffer.append("(").append(element.getSelectValue()).append(")");
			}
		}
		return buffer.toString();
	};
	oFF.QComplexAndDataCellSorting.prototype.m_elementPath = null;
	oFF.QComplexAndDataCellSorting.prototype.copyComplexAndDataCellSorting = function(
			origin) {
		var queryModel;
		var temp;
		var size;
		var i;
		var origElement;
		oFF.QGenericSorting.prototype.copyGenericSorting.call(this, origin);
		queryModel = this.getQueryModel();
		temp = oFF.XList.create();
		size = origin.m_elementPath.size();
		for (i = 0; i < size; i++) {
			origElement = origin.m_elementPath.get(i);
			temp.add(oFF.QFactory.newDimensionElement(queryModel
					.getFieldByName(origElement.getSelectField().getName()),
					origElement.getSelectHierarchyName(), origElement
							.getSelectValue()));
		}
		this.m_elementPath = temp;
	};
	oFF.QComplexAndDataCellSorting.prototype.setupSorting = function(
			parentNode, path) {
		oFF.QGenericSorting.prototype.setupGenericSorting
				.call(this, parentNode);
		this.m_elementPath = path;
	};
	oFF.QComplexAndDataCellSorting.prototype.releaseObject = function() {
		this.m_elementPath = null;
		oFF.QGenericSorting.prototype.releaseObject.call(this);
	};
	oFF.QComplexAndDataCellSorting.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.COMPLEX_SORTING;
	};
	oFF.QComplexAndDataCellSorting.prototype.getSortingType = function() {
		return oFF.SortType.COMPLEX;
	};
	oFF.QComplexAndDataCellSorting.prototype.getPathUniqueName = function() {
		return oFF.QComplexAndDataCellSorting
				.createPathUniqueName(this.m_elementPath);
	};
	oFF.QComplexAndDataCellSorting.prototype.getElementPath = function() {
		return this.m_elementPath;
	};
	oFF.QComplexAndDataCellSorting.prototype.getTargetDimension = function() {
		return null;
	};
	oFF.QComplexAndDataCellSorting.prototype.setTargetDimension = function(
			targetDimension) {
	};
	oFF.QDimensionSorting = function() {
	};
	oFF.QDimensionSorting.prototype = new oFF.QGenericSorting();
	oFF.QDimensionSorting.create = function(parentNode, dimension) {
		var sorting = new oFF.QDimensionSorting();
		sorting.setupSorting(parentNode, dimension);
		return sorting;
	};
	oFF.QDimensionSorting.prototype.m_dimension = null;
	oFF.QDimensionSorting.prototype.m_sortingType = null;
	oFF.QDimensionSorting.prototype.copyDimensionSorting = function(origin) {
		this.copyGenericSorting(origin);
		this.m_sortingType = origin.m_sortingType;
	};
	oFF.QDimensionSorting.prototype.setupSorting = function(parentNode,
			dimension) {
		oFF.QGenericSorting.prototype.setupGenericSorting
				.call(this, parentNode);
		this.setDimension(dimension);
		if (this.supportsSortType(oFF.SortType.MEMBER_KEY)) {
			this.m_sortingType = oFF.SortType.MEMBER_KEY;
		} else {
			this.m_sortingType = null;
		}
	};
	oFF.QDimensionSorting.prototype.releaseObject = function() {
		this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
		this.m_sortingType = null;
		oFF.QGenericSorting.prototype.releaseObject.call(this);
	};
	oFF.QDimensionSorting.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.DIMENSION_SORTING;
	};
	oFF.QDimensionSorting.prototype.getDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
	};
	oFF.QDimensionSorting.prototype.setDimension = function(dimension) {
		this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
	};
	oFF.QDimensionSorting.prototype.getSortingType = function() {
		return this.m_sortingType;
	};
	oFF.QDimensionSorting.prototype.setSortByHierarchy = function() {
		this.setSortType(oFF.SortType.HIERARCHY);
	};
	oFF.QDimensionSorting.prototype.setSortByFilter = function() {
		this.setSortType(oFF.SortType.FILTER);
	};
	oFF.QDimensionSorting.prototype.setSortingPresentationType = function(
			activePresentationType) {
		this.setSortByPresentation(activePresentationType);
	};
	oFF.QDimensionSorting.prototype.setSortByPresentation = function(
			presentationType) {
		if (presentationType.isTypeOf(oFF.PresentationType.KEY)) {
			this.setSortType(oFF.SortType.MEMBER_KEY);
		} else {
			if (presentationType.isTypeOf(oFF.PresentationType.TEXT)) {
				this.setSortType(oFF.SortType.MEMBER_TEXT);
			}
		}
	};
	oFF.QDimensionSorting.prototype.setSortType = function(sortType) {
		if (this.m_sortingType === sortType) {
			return false;
		}
		if (!sortType.isTypeOf(oFF.SortType.ABSTRACT_DIMENSION_SORT)) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate2(
									"Supports only subtype of dimension sorting: ",
									sortType.getName()));
		}
		if (!this.supportsSortType(sortType)) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate2("Sorting type not supported: ",
									sortType.getName()));
		}
		this.m_sortingType = sortType;
		this.notifyNodeChanged();
		return true;
	};
	oFF.QDimensionSorting.prototype.getSortingPresentationType = function() {
		var sortingType = this.getSortingType();
		if (sortingType === oFF.SortType.MEMBER_KEY) {
			return oFF.PresentationType.KEY;
		} else {
			if (sortingType === oFF.SortType.MEMBER_TEXT) {
				return oFF.PresentationType.TEXT;
			}
		}
		return null;
	};
	oFF.QDimensionSorting.prototype.supportsSortByHierarchy = function() {
		return this.supportsSortType(oFF.SortType.HIERARCHY);
	};
	oFF.QDimensionSorting.prototype.supportsSortByFilter = function() {
		return this.supportsSortType(oFF.SortType.FILTER);
	};
	oFF.QDimensionSorting.prototype.supportsSortByPresentation = function(
			presentationType) {
		if (presentationType.isTypeOf(oFF.PresentationType.KEY)) {
			return this.supportsSortType(oFF.SortType.MEMBER_KEY);
		} else {
			if (presentationType.isTypeOf(oFF.PresentationType.TEXT)) {
				return this.supportsSortType(oFF.SortType.MEMBER_TEXT);
			}
		}
		return false;
	};
	oFF.QDimensionSorting.prototype.supportsSortType = function(sortType) {
		return this.getSortingManager().supportsDimensionSorting(
				this.getDimension(), sortType);
	};
	oFF.QDimensionSorting.prototype.setSortByKey = function() {
		this.setSortByPresentation(oFF.PresentationType.KEY);
	};
	oFF.QDimensionSorting.prototype.setSortByText = function() {
		this.setSortByPresentation(oFF.PresentationType.TEXT);
	};
	oFF.QDimensionSorting.prototype.supportsDimension = function() {
		return true;
	};
	oFF.QDimensionSorting.prototype.toString = function() {
		var buffer = oFF.XStringBuffer.create();
		var dimension;
		buffer.append(this.getOlapComponentType().getName());
		buffer.append(" - Dim: ");
		dimension = this.getDimension();
		if (oFF.isNull(dimension)) {
			buffer.append("[no dimension defined]");
		} else {
			buffer.append(dimension.getName());
		}
		buffer.append(" - Type: ");
		buffer.append(this.m_sortingType.getName());
		buffer.append(" - Dir: ");
		buffer.append(this.getDirection().getName());
		return buffer.toString();
	};
	oFF.QFieldSorting = function() {
	};
	oFF.QFieldSorting.prototype = new oFF.QGenericSorting();
	oFF.QFieldSorting.create = function(parentNode, field) {
		var sorting = new oFF.QFieldSorting();
		sorting.setupSorting(parentNode, field);
		return sorting;
	};
	oFF.QFieldSorting.prototype.m_field = null;
	oFF.QFieldSorting.prototype.setupSorting = function(parentNode, field) {
		oFF.QGenericSorting.prototype.setupGenericSorting
				.call(this, parentNode);
		this.m_field = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFieldSorting.prototype.releaseObject = function() {
		this.m_field = oFF.XObjectExt.release(this.m_field);
		oFF.QGenericSorting.prototype.releaseObject.call(this);
	};
	oFF.QFieldSorting.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FIELD_SORTING;
	};
	oFF.QFieldSorting.prototype.getSortingType = function() {
		return oFF.SortType.FIELD;
	};
	oFF.QFieldSorting.prototype.getField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_field);
	};
	oFF.QMeasureSorting = function() {
	};
	oFF.QMeasureSorting.prototype = new oFF.QGenericSorting();
	oFF.QMeasureSorting.create = function(parentNode, structureMember) {
		var sorting = new oFF.QMeasureSorting();
		sorting.setupSorting(parentNode, structureMember);
		return sorting;
	};
	oFF.QMeasureSorting.prototype.m_measureMember = null;
	oFF.QMeasureSorting.prototype.m_measure = null;
	oFF.QMeasureSorting.prototype.m_structureMember = null;
	oFF.QMeasureSorting.prototype.copyMeasureSorting = function(origin) {
		var queryModel;
		var structureMember;
		this.copyGenericSorting(origin);
		queryModel = this.getQueryModel();
		if (oFF.notNull(origin.m_measure)) {
			this.setDimension(queryModel
					.getDimensionByNameFromExistingMetadata(origin
							.getDimension().getName()));
		}
		if (oFF.notNull(origin.m_structureMember)) {
			structureMember = queryModel.getNonMeasureDimension()
					.getStructureMember(origin.getStructure().getName());
			this.setStructure(structureMember);
		}
	};
	oFF.QMeasureSorting.prototype.setupSorting = function(parentNode,
			structureMember) {
		oFF.QGenericSorting.prototype.setupGenericSorting
				.call(this, parentNode);
		this.setStructureMember(structureMember);
	};
	oFF.QMeasureSorting.prototype.releaseObject = function() {
		this.m_measureMember = oFF.XObjectExt.release(this.m_measureMember);
		this.m_measure = oFF.XObjectExt.release(this.m_measure);
		this.m_structureMember = oFF.XObjectExt.release(this.m_structureMember);
		oFF.QGenericSorting.prototype.releaseObject.call(this);
	};
	oFF.QMeasureSorting.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.MEASURE_SORTING;
	};
	oFF.QMeasureSorting.prototype.getSortingType = function() {
		return oFF.SortType.MEASURE;
	};
	oFF.QMeasureSorting.prototype.getMeasure = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_measureMember);
	};
	oFF.QMeasureSorting.prototype.setStructureMember = function(member) {
		this.m_measureMember = oFF.XWeakReferenceUtil.getWeakRef(member);
	};
	oFF.QMeasureSorting.prototype.getDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_measure);
	};
	oFF.QMeasureSorting.prototype.setDimension = function(dimension) {
		this.m_measure = oFF.XWeakReferenceUtil.getWeakRef(dimension);
	};
	oFF.QMeasureSorting.prototype.supportsDimension = function() {
		return true;
	};
	oFF.QMeasureSorting.prototype.getStructure = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_structureMember);
	};
	oFF.QMeasureSorting.prototype.setStructure = function(structureMember) {
		this.m_structureMember = oFF.XWeakReferenceUtil
				.getWeakRef(structureMember);
		this.notifyNodeChanged();
	};
	oFF.QValueHelpNode2 = function() {
	};
	oFF.QValueHelpNode2.prototype = new oFF.RsAxisTupleElement();
	oFF.QValueHelpNode2.CHILD_FETCH_IDENTIFIER_PREFIX = "ChildId_";
	oFF.QValueHelpNode2.PARENT_FETCH_IDENTIFIER_PREFIX = "ParentId_";
	oFF.QValueHelpNode2.createValueHelpNode = function(name, member,
			drillState, displayLevel, childCount, absoluteLevel) {
		var node = new oFF.QValueHelpNode2();
		node.setupValueHelpNode(name, member, drillState, displayLevel,
				childCount, absoluteLevel);
		return node;
	};
	oFF.QValueHelpNode2.prototype.m_children = null;
	oFF.QValueHelpNode2.prototype.m_childSetState = null;
	oFF.QValueHelpNode2.prototype.m_listeners = null;
	oFF.QValueHelpNode2.prototype.m_customIdentifiers = null;
	oFF.QValueHelpNode2.prototype.valueHelpIdentifier = 0;
	oFF.QValueHelpNode2.prototype.setupValueHelpNode = function(name, member,
			drillState, displayLevel, childCount, absoluteLevel) {
		oFF.RsAxisTupleElement.prototype.setupExt
				.call(this, null, name, member, -1, drillState, displayLevel,
						childCount, absoluteLevel);
		if (drillState === oFF.DrillState.LEAF) {
			this.m_childSetState = oFF.ChildSetState.NONE;
		} else {
			this.m_childSetState = oFF.ChildSetState.INITIAL;
			this.m_children = oFF.XList.create();
		}
		this.m_listeners = oFF.XHashMapByString.create();
		this.m_customIdentifiers = oFF.XHashMapByString.create();
		this.valueHelpIdentifier = 0;
	};
	oFF.QValueHelpNode2.prototype.releaseObject = function() {
		oFF.RsAxisTupleElement.prototype.releaseObject.call(this);
		this.m_children = oFF.XObjectExt.release(this.m_children);
		this.m_childSetState = null;
		this.m_listeners = oFF.XObjectExt.release(this.m_listeners);
		this.m_customIdentifiers = oFF.XObjectExt
				.release(this.m_customIdentifiers);
	};
	oFF.QValueHelpNode2.prototype.addChildNode = function(childNode) {
		if (oFF.notNull(childNode) && oFF.notNull(this.m_children)) {
			this.m_children.add(childNode);
			childNode.setParentNode(this);
			this.m_childSetState = oFF.ChildSetState.INCOMPLETE;
		}
	};
	oFF.QValueHelpNode2.prototype.getChildren = function() {
		return this.m_children;
	};
	oFF.QValueHelpNode2.prototype.getChildSetState = function() {
		return this.m_childSetState;
	};
	oFF.QValueHelpNode2.prototype.hasChildren = function() {
		return oFF.notNull(this.m_children) && !this.m_children.isEmpty();
	};
	oFF.QValueHelpNode2.prototype.createIdentifier = function(listener,
			customIdentifier, identifierPrefix) {
		var identifier = oFF.XStringUtils.concatenate2(identifierPrefix,
				oFF.XInteger.convertToString(this.valueHelpIdentifier));
		this.valueHelpIdentifier++;
		this.m_listeners.put(identifier, listener);
		this.m_customIdentifiers.put(identifier, customIdentifier);
		return identifier;
	};
	oFF.QValueHelpNode2.prototype.processChildFetchInternal = function(
			syncType, listener, customIdentifier, variableName) {
		var identifier = oFF.XStringValue.create(this.createIdentifier(
				listener, customIdentifier,
				oFF.QValueHelpNode2.CHILD_FETCH_IDENTIFIER_PREFIX));
		var result;
		var dimension;
		var valueHelpResult;
		var errorResult;
		if (this.m_childSetState === oFF.ChildSetState.NONE
				|| this.m_childSetState === oFF.ChildSetState.COMPLETE) {
			result = oFF.ExtResult.create(this.m_children, null);
			this.onValuehelpExecuted(result, null, identifier);
			return result;
		}
		dimension = this.getDimension();
		if (dimension.isSelectorHierarchyActive()) {
			dimension.setSelectorHierarchyNode(this);
			dimension.setSelectorInitialDrillLevel(1);
			dimension.setSelectorPagingStart(1);
			if (oFF.notNull(variableName)) {
				valueHelpResult = dimension.processVarHelp(variableName,
						syncType, this, identifier);
			} else {
				valueHelpResult = dimension.processValueHelp(syncType, this,
						identifier);
			}
			dimension.setSelectorPagingStart(0);
			return valueHelpResult;
		}
		errorResult = oFF.ExtResult
				.createWithErrorMessage("No hierarchy active for value help");
		this.onValuehelpExecuted(errorResult, null, identifier);
		return errorResult;
	};
	oFF.QValueHelpNode2.prototype.processParentFetchInternal = function(
			syncType, listener, customIdentifier, variableName) {
		var identifier = this.createIdentifier(listener, customIdentifier,
				oFF.QValueHelpNode2.PARENT_FETCH_IDENTIFIER_PREFIX);
		var dimension;
		var valuehelpFilter;
		var dimFilter;
		var result;
		if (this.getParentNode() !== null) {
			this.callListenerForParentFetch(null, null, identifier);
			return oFF.ExtResult.create(this.getParentNode(), null);
		}
		dimension = this.getDimension();
		if (!dimension.isSelectorHierarchyActive()) {
			return oFF.ExtResult
					.createWithErrorMessage("No hierarchy active for value help");
		}
		dimension.setSelectorHierarchyNode(this);
		dimension.setSelectorInitialDrillLevel(0);
		dimension.setSelectorPagingStart(0);
		valuehelpFilter = dimension.getQueryModel().getFilter()
				.getValuehelpFilter();
		dimFilter = valuehelpFilter.getCartesianProduct().getCartesianList(
				dimension);
		dimFilter.setConvertToFlatFilter(true);
		if (oFF.notNull(variableName)) {
			result = dimension.processVarHelp(variableName, syncType, this,
					oFF.XStringValue.create(identifier));
		} else {
			result = dimension.processValueHelp(syncType, this,
					oFF.XStringValue.create(identifier));
		}
		return oFF.ExtResult.create(this.getParentNode(), result);
	};
	oFF.QValueHelpNode2.prototype.processValueHelpChildFetch = function(
			syncType, listener, customIdentifier) {
		return this.processChildFetchInternal(syncType, listener,
				customIdentifier, null);
	};
	oFF.QValueHelpNode2.prototype.processValueHelpParentFetch = function(
			syncType, listener, customIdentifier) {
		return this.processParentFetchInternal(syncType, listener,
				customIdentifier, null);
	};
	oFF.QValueHelpNode2.prototype.processVarHelpChildFetch = function(
			variableName, syncType, listener, customIdentifier) {
		return this.processChildFetchInternal(syncType, listener,
				customIdentifier, variableName);
	};
	oFF.QValueHelpNode2.prototype.processVarHelpParentFetch = function(
			variableName, syncType, listener, customIdentifier) {
		return this.processParentFetchInternal(syncType, listener,
				customIdentifier, variableName);
	};
	oFF.QValueHelpNode2.prototype.onValuehelpExecuted = function(extResult,
			resultSetContainer, customIdentifier) {
		var identifier;
		if (oFF.notNull(customIdentifier)) {
			identifier = customIdentifier.getString();
			if (oFF.XString.startsWith(identifier,
					oFF.QValueHelpNode2.CHILD_FETCH_IDENTIFIER_PREFIX)) {
				this.onChildFetchExecuted(extResult, resultSetContainer,
						identifier);
			} else {
				if (oFF.XString.startsWith(identifier,
						oFF.QValueHelpNode2.PARENT_FETCH_IDENTIFIER_PREFIX)) {
					this.onParentFetchExecuted(extResult, resultSetContainer,
							identifier);
				}
			}
			this.m_listeners.remove(identifier);
			this.m_customIdentifiers.remove(identifier);
		}
	};
	oFF.QValueHelpNode2.prototype.onChildFetchExecuted = function(extResult,
			resultSetContainer, identifier) {
		var size;
		var i;
		var customListener;
		if (extResult.hasErrors()) {
			this.m_childSetState = oFF.ChildSetState.INITIAL;
			this.m_children.clear();
		} else {
			this.m_children = extResult.getData();
			if (oFF.isNull(this.m_children) || this.m_children.isEmpty()) {
				this.m_childSetState = oFF.ChildSetState.NONE;
			} else {
				this.m_childSetState = oFF.ChildSetState.COMPLETE;
				size = this.m_children.size();
				for (i = 0; i < size; i++) {
					this.m_children.get(i).setParentNode(this);
				}
			}
		}
		customListener = this.m_listeners.getByKey(identifier);
		if (oFF.notNull(customListener)) {
			customListener.onValuehelpExecuted(extResult, resultSetContainer,
					this.m_customIdentifiers.getByKey(identifier));
		}
	};
	oFF.QValueHelpNode2.prototype.onParentFetchExecuted = function(extResult,
			resultSetContainer, identifier) {
		var nodes;
		var size;
		var i;
		var parent;
		if (extResult.isValid()) {
			nodes = extResult.getData();
			size = nodes.size();
			for (i = 1; i < size; i++) {
				if (oFF.XString.isEqual(nodes.get(i).getName(), this.getName())) {
					parent = nodes.get(i - 1);
					parent.m_children.clear();
					parent.addChildNode(this);
					this.setParentNode(parent);
					break;
				}
			}
		}
		this.callListenerForParentFetch(extResult, resultSetContainer,
				identifier);
	};
	oFF.QValueHelpNode2.prototype.callListenerForParentFetch = function(
			messages, resultSetContainer, identifier) {
		var customListener = this.m_listeners.getByKey(identifier);
		var data;
		if (oFF.notNull(customListener)) {
			data = oFF.XList.create();
			data.add(this.getParentNode());
			customListener.onValuehelpExecuted(oFF.ExtResult.create(data,
					messages), resultSetContainer, this.m_customIdentifiers
					.getByKey(identifier));
		}
	};
	oFF.QValueHelpSplitterNode = function() {
	};
	oFF.QValueHelpSplitterNode.prototype = new oFF.QValueHelpNode();
	oFF.QValueHelpSplitterNode.createSplitterNode = function(valueHelp,
			parentNode, displayLevel, startIndex, splittingSize, absoluteLevel) {
		var newObj = new oFF.QValueHelpSplitterNode();
		newObj.setupSplitterNode(valueHelp, parentNode, displayLevel,
				startIndex, splittingSize, absoluteLevel);
		return newObj;
	};
	oFF.QValueHelpSplitterNode.prototype.m_startIndex = 0;
	oFF.QValueHelpSplitterNode.prototype.setupSplitterNode = function(
			valueHelp, parentNode, displayLevel, startIndex, splittingSize,
			absoluteLevel) {
		oFF.QValueHelpNode.prototype.setupNode.call(this, valueHelp,
				parentNode, null, displayLevel, splittingSize, absoluteLevel);
		this.m_startIndex = startIndex;
	};
	oFF.QValueHelpSplitterNode.prototype.getMemberType = function() {
		return oFF.MemberType.VALUE_HELP_SPLITTER_NODE;
	};
	oFF.QValueHelpSplitterNode.prototype.getStartIndex = function() {
		return this.m_startIndex;
	};
	oFF.QValueHelpSplitterNode.prototype.processValueHelpFetch = function(
			syncType, listener, customIdentifier) {
		var parentNode = this.getParentNode();
		var type = parentNode.getMemberType();
		var processNode;
		oFF.XBooleanUtils.checkFalse(
				type === oFF.MemberType.VALUE_HELP_SPLITTER_NODE,
				"Cannot execute child fetch");
		processNode = parentNode;
		return processNode.processValueHelpFetch(syncType, listener,
				customIdentifier);
	};
	oFF.QValueHelpSplitterNode.prototype.getName = function() {
		var buffer = oFF.XStringBuffer.create();
		var startIndex;
		var endIndex;
		var firstText;
		var lastText;
		buffer.append("[#");
		startIndex = this.getStartIndex();
		buffer.appendInt(startIndex);
		if (this.m_childSetState !== oFF.ChildSetState.INITIAL) {
			endIndex = this.getEndIndex();
			if (endIndex !== startIndex) {
				buffer.append("...");
				buffer.append("#");
				buffer.appendInt(endIndex);
			}
		} else {
			buffer.append("...");
		}
		buffer.append("]");
		firstText = this.getFirstText();
		if (oFF.notNull(firstText)) {
			buffer.append(" ");
			buffer.append(firstText);
			lastText = this.getLastText();
			if (oFF.notNull(lastText)) {
				buffer.append(" ... ");
				buffer.append(lastText);
			}
		}
		return buffer.toString();
	};
	oFF.QValueHelpSplitterNode.prototype.getFirstText = function() {
		var size;
		var first;
		if (oFF.notNull(this.m_children)) {
			size = this.m_children.size();
			if (size > 0) {
				first = this.m_children.get(0);
				return first.getFirstText();
			}
		}
		return null;
	};
	oFF.QValueHelpSplitterNode.prototype.getLastText = function() {
		var size;
		var first;
		if (oFF.notNull(this.m_children)) {
			size = this.m_children.size();
			if (size > 1) {
				first = this.m_children.get(size - 1);
				return first.getLastText();
			}
		}
		return null;
	};
	oFF.QVariable = function() {
	};
	oFF.QVariable.prototype = new oFF.QVariableModelComponent();
	oFF.QVariable.prototype.m_variableContext = null;
	oFF.QVariable.prototype.m_valueType = null;
	oFF.QVariable.prototype.m_variableOrder = 0;
	oFF.QVariable.prototype.m_dependentVariablesNames = null;
	oFF.QVariable.prototype.m_dependentVariables = null;
	oFF.QVariable.prototype.m_affectedVariables = null;
	oFF.QVariable.prototype.m_isInputEnabled = false;
	oFF.QVariable.prototype.m_isMandatory = false;
	oFF.QVariable.prototype.m_isInitialValueAllowed = false;
	oFF.QVariable.prototype.m_isDynamic = false;
	oFF.QVariable.prototype.m_externalVariable = null;
	oFF.QVariable.prototype.m_nameExternal = null;
	oFF.QVariable.prototype.getNameExternal = function() {
		return this.m_nameExternal;
	};
	oFF.QVariable.prototype.setNameExternal = function(nameExternal) {
		this.m_nameExternal = nameExternal;
	};
	oFF.QVariable.prototype.setupVariable = function(context, variableContext,
			valueType, name, description) {
		oFF.QVariableModelComponent.prototype.setupModelComponentWithName.call(
				this, context, variableContext.getModelComponentBase(), name);
		this.setText(description);
		this.m_variableContext = variableContext;
		this.m_valueType = valueType;
		this.m_dependentVariables = oFF.XListOfNameObject.create();
		this.m_dependentVariablesNames = oFF.XListOfString.create();
	};
	oFF.QVariable.prototype.releaseObject = function() {
		this.m_variableContext = null;
		this.m_valueType = null;
		this.m_affectedVariables = oFF.XObjectExt
				.release(this.m_affectedVariables);
		this.m_externalVariable = oFF.XObjectExt
				.release(this.m_externalVariable);
		this.m_dependentVariables = oFF.XObjectExt
				.release(this.m_dependentVariables);
		this.m_dependentVariablesNames = oFF.XObjectExt
				.release(this.m_dependentVariablesNames);
		this.m_nameExternal = null;
		oFF.QVariableModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QVariable.prototype.copyVariableDependencies = function(origin) {
		var size = origin.m_dependentVariables.size();
		var i;
		for (i = 0; i < size; i++) {
			this.m_dependentVariables.add(this.m_variableContext
					.getVariableBaseByName(origin.m_dependentVariables.get(i)
							.getName()));
		}
	};
	oFF.QVariable.prototype.copyVariable = function(origin) {
		oFF.QVariableModelComponent.prototype.copyModelComponent.call(this,
				origin);
		this.m_dependentVariablesNames = origin.m_dependentVariablesNames
				.createListOfStringCopy();
		this.m_valueType = origin.m_valueType;
		this.m_variableOrder = origin.m_variableOrder;
		this.m_isInputEnabled = origin.m_isInputEnabled;
		this.m_isMandatory = origin.m_isMandatory;
		this.m_isInitialValueAllowed = origin.m_isInitialValueAllowed;
		this.m_nameExternal = origin.m_nameExternal;
		this.m_isDynamic = origin.m_isDynamic;
	};
	oFF.QVariable.prototype.getVariableContext = function() {
		return this.m_variableContext;
	};
	oFF.QVariable.prototype.setValueByString = function(value) {
		this.setValueByStringExt(value, false);
	};
	oFF.QVariable.prototype.getOlapComponentType = function() {
		return this.getVariableType();
	};
	oFF.QVariable.prototype.getValueType = function() {
		return this.m_valueType;
	};
	oFF.QVariable.prototype.setValueType = function(type) {
		this.m_valueType = type;
	};
	oFF.QVariable.prototype.isInputEnabled = function() {
		return this.m_isInputEnabled;
	};
	oFF.QVariable.prototype.setInputEnabled = function(inputEnabled) {
		this.m_isInputEnabled = inputEnabled;
	};
	oFF.QVariable.prototype.isMandatory = function() {
		return this.m_isMandatory;
	};
	oFF.QVariable.prototype.setMandatory = function(mandatory) {
		this.m_isMandatory = mandatory;
	};
	oFF.QVariable.prototype.isInitialValueAllowed = function() {
		return this.m_isInitialValueAllowed;
	};
	oFF.QVariable.prototype.setInitialValueAllowed = function(
			initialValueAllowed) {
		this.m_isInitialValueAllowed = initialValueAllowed;
	};
	oFF.QVariable.prototype.getVariableOrder = function() {
		return this.m_variableOrder;
	};
	oFF.QVariable.prototype.setVariableOrder = function(orderIndex) {
		this.m_variableOrder = orderIndex;
	};
	oFF.QVariable.prototype.getDependentVariables = function() {
		return this.m_dependentVariables;
	};
	oFF.QVariable.prototype.addDependentVariable = function(variable) {
		if (!this.m_dependentVariables.contains(variable)) {
			this.m_dependentVariables.add(variable);
		}
	};
	oFF.QVariable.prototype.getAffectedVariables = function() {
		if (oFF.isNull(this.m_affectedVariables)) {
			this.m_affectedVariables = this.resolveAffectedVariables();
		}
		return this.m_affectedVariables;
	};
	oFF.QVariable.prototype.resolveAffectedVariables = function() {
		var affectedVariabes = oFF.XListOfNameObject.create();
		var variables = this.getVariableContext().getVariables();
		var i;
		var dependentVariable;
		for (i = 0; i < this.getVariableContext().getVariables().size(); i++) {
			dependentVariable = variables.get(i);
			if (dependentVariable.getDependentVariables().containsKey(
					this.getName())) {
				affectedVariabes.add(dependentVariable);
			}
		}
		return affectedVariabes;
	};
	oFF.QVariable.prototype.getExternalRepresentation = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_externalVariable);
	};
	oFF.QVariable.prototype.clearAndDeregisterExternalVariable = function() {
		var externalVariable = this.getExternalRepresentation();
		if (oFF.notNull(externalVariable)) {
			externalVariable.removeSecondaryParent(this);
			this.m_externalVariable = null;
		}
	};
	oFF.QVariable.prototype.setExternalRepresentation = function(variable) {
		this.clearAndDeregisterExternalVariable();
		if (oFF.notNull(variable)) {
			this.m_externalVariable = oFF.XWeakReferenceUtil
					.getWeakRef(variable);
			variable.addSecondaryParent(this);
		}
		this.notifyNodeChanged();
	};
	oFF.QVariable.prototype.hasExternalRepresentation = function() {
		return this.getExternalRepresentation() !== null;
	};
	oFF.QVariable.prototype.addDependentVariableName = function(name) {
		this.m_dependentVariablesNames.add(name);
	};
	oFF.QVariable.prototype.getDependentVariablesNames = function() {
		return this.m_dependentVariablesNames;
	};
	oFF.QVariable.prototype.getVariableContainer = function() {
		return this.m_variableContext;
	};
	oFF.QVariable.prototype.setIsDynamicVariable = function(isDynamic) {
		this.m_isDynamic = isDynamic;
	};
	oFF.QVariable.prototype.isDynamicVariable = function() {
		return this.m_isDynamic;
	};
	oFF.QVariableProcessor = function() {
	};
	oFF.QVariableProcessor.prototype = new oFF.QVariableModelComponent();
	oFF.QVariableProcessor.createVariableProcessor = function(context,
			provider, requestor) {
		var variableProcessor = new oFF.QVariableProcessor();
		variableProcessor.setupVariableProcessor(context, provider, requestor);
		return variableProcessor;
	};
	oFF.QVariableProcessor.prototype.m_requestor = null;
	oFF.QVariableProcessor.prototype.m_provider = null;
	oFF.QVariableProcessor.prototype.m_variables = null;
	oFF.QVariableProcessor.prototype.m_isSubmitted = false;
	oFF.QVariableProcessor.prototype.m_directVariableTransfer = false;
	oFF.QVariableProcessor.prototype.m_variableProcessorState = null;
	oFF.QVariableProcessor.prototype.m_variableProcessorPreviousState = null;
	oFF.QVariableProcessor.prototype.setupVariableProcessor = function(context,
			provider, requestor) {
		oFF.QVariableModelComponent.prototype.setupModelComponent.call(this,
				context, null);
		this.m_requestor = requestor;
		this.m_provider = provider;
		this.m_variableProcessorState = oFF.VariableProcessorState.INITIAL;
		this.m_isSubmitted = false;
	};
	oFF.QVariableProcessor.prototype.releaseObject = function() {
		this.m_requestor = null;
		this.m_provider = null;
		this.m_variableProcessorState = null;
		this.m_variableProcessorPreviousState = null;
		this.m_variables = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_variables);
		oFF.QVariableModelComponent.prototype.releaseObject.call(this);
	};
	oFF.QVariableProcessor.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.VARIABLE_CONTAINER;
	};
	oFF.QVariableProcessor.prototype.getDimensionAccessor = function() {
		return this.m_requestor.getDimensionAccessor();
	};
	oFF.QVariableProcessor.prototype.hasVariables = function() {
		return oFF.XCollectionUtils.hasElements(this.getVariables());
	};
	oFF.QVariableProcessor.prototype.hasInputEnabledVariables = function() {
		return oFF.QVariableUtils.hasInputEnabledVariables(this.getVariables());
	};
	oFF.QVariableProcessor.prototype.clearExternalVariablesRepresentations = function() {
		this.queueEventing();
		oFF.QVariableUtils.clearExternalVariablesRepresentations(this
				.getVariables());
		this.resumeEventing();
	};
	oFF.QVariableProcessor.prototype.hasMandatoryVariables = function() {
		return oFF.QVariableUtils.hasMandatoryVariables(this.getVariables());
	};
	oFF.QVariableProcessor.prototype.getVariables = function() {
		if (this.m_requestor.hasVariables() && oFF.isNull(this.m_variables)) {
			this.addVariableRuntimeInformation();
		}
		return this.m_variables;
	};
	oFF.QVariableProcessor.prototype.getInputEnabledVariables = function() {
		return oFF.QVariableUtils.getInputEnabledVariables(this.getVariables());
	};
	oFF.QVariableProcessor.prototype.addVariableRuntimeInformation = function() {
		var extResult;
		this.m_variables = oFF.XListOfNameObject.create();
		if (this.m_provider.isVariableValuesRuntimeNeeded()) {
			extResult = this.m_provider
					.processRetrieveVariableRuntimeInformation(
							oFF.SyncType.BLOCKING, null, null);
			oFF.MessageUtil.checkNoError(extResult);
		} else {
			if (this.m_requestor.hasVariables()) {
				this.m_variables.addAll(this.m_requestor.getVariables());
			}
		}
	};
	oFF.QVariableProcessor.prototype.addVariable = function(variable) {
		this.m_variables.add(variable);
	};
	oFF.QVariableProcessor.prototype.getVariableBaseAt = function(index) {
		if (this.m_requestor.hasVariables() && oFF.isNull(this.m_variables)) {
			this.addVariableRuntimeInformation();
		}
		return this.m_variables.get(index);
	};
	oFF.QVariableProcessor.prototype.getVariableBaseByName = function(name) {
		if (this.m_requestor.hasVariables() && oFF.isNull(this.m_variables)) {
			this.addVariableRuntimeInformation();
		}
		return this.m_variables.getByKey(name);
	};
	oFF.QVariableProcessor.prototype.clearVariables = function() {
		if (oFF.notNull(this.m_variables)) {
			this.m_variables.clear();
		}
	};
	oFF.QVariableProcessor.prototype.removeVariable = function(name) {
		var variable;
		if (oFF.notNull(this.m_variables)) {
			variable = this.m_variables.getByKey(name);
			this.m_variables.removeElement(variable);
		}
	};
	oFF.QVariableProcessor.prototype.submitVariables = function(syncType,
			listener, customIdentifier) {
		return this.m_provider.processVariableSubmit(syncType, listener,
				customIdentifier);
	};
	oFF.QVariableProcessor.prototype.supportsReInitVariables = function() {
		return this.m_provider.supportsReInitVariables();
	};
	oFF.QVariableProcessor.prototype.reInitVariablesAfterSubmit = function(
			syncType, listener, customIdentifier) {
		return this.m_provider.processReInitVariableAfterSubmit(syncType,
				listener, customIdentifier);
	};
	oFF.QVariableProcessor.prototype.cancelReInitVariables = function(syncType,
			listener, customIdentifier) {
		return this.m_provider.processVariableCancel(syncType, listener,
				customIdentifier);
	};
	oFF.QVariableProcessor.prototype.isSubmitted = function() {
		return this.m_isSubmitted;
	};
	oFF.QVariableProcessor.prototype.transferVariables = function(syncType,
			listener, customIdentifier) {
		return this.m_provider.processSetGetVariableValues(syncType, listener,
				customIdentifier);
	};
	oFF.QVariableProcessor.prototype.transferVariablesByVariable = function(
			variable, syncType, listener, customIdentifier) {
		if (this.getVariables().contains(variable)) {
			return this.m_provider.processSetGetVariableValues(syncType,
					listener, customIdentifier);
		}
		return null;
	};
	oFF.QVariableProcessor.prototype.getModelComponentBase = function() {
		return this;
	};
	oFF.QVariableProcessor.prototype.supportsDirectVariableTransfer = function() {
		var queryModel = this.getQueryModelBase();
		var queryManager;
		if (oFF.isNull(queryModel)) {
			return false;
		}
		queryManager = queryModel.getQueryManagerBase();
		if (oFF.isNull(queryManager)) {
			return false;
		}
		return queryManager.supportsDirectVariableTransfer();
	};
	oFF.QVariableProcessor.prototype.setDirectVariableTransferEnabled = function(
			directVariableTransfer) {
		if (this.m_directVariableTransfer === directVariableTransfer) {
			return;
		}
		if (!this.supportsDirectVariableTransfer()) {
			return;
		}
		this.m_directVariableTransfer = directVariableTransfer;
		this.m_provider.setDirectVariableTransfer(directVariableTransfer);
		this.m_provider
				.setIsVariableSubmitNeeded(!this.m_directVariableTransfer);
		this.getModelComponentBase().notifyNodeChanged();
	};
	oFF.QVariableProcessor.prototype.isDirectVariableTransferEnabled = function() {
		return this.m_directVariableTransfer;
	};
	oFF.QVariableProcessor.prototype.supportsCheckVariables = function() {
		return this.isDirectVariableTransferEnabled();
	};
	oFF.QVariableProcessor.prototype.checkVariables = function(syncType,
			listener, customIdentifier) {
		return this.m_provider.processCheckVariables(syncType, listener,
				customIdentifier);
	};
	oFF.QVariableProcessor.prototype.getVariableContainer = function() {
		return this;
	};
	oFF.QVariableProcessor.prototype.getVariableContainerBase = function() {
		return this;
	};
	oFF.QVariableProcessor.prototype.getVariableMode = function() {
		if (this.m_directVariableTransfer) {
			return oFF.VariableMode.DIRECT_VALUE_TRANSFER;
		}
		return oFF.VariableMode.SUBMIT_AND_REINIT;
	};
	oFF.QVariableProcessor.prototype.getInputEnabledVariable = function(name) {
		return oFF.QVariableUtils.getInputEnabledVariable(this.getVariables(),
				name);
	};
	oFF.QVariableProcessor.prototype.getVariable = function(name) {
		return this.getVariableBaseByName(name);
	};
	oFF.QVariableProcessor.prototype.getHierarchyNodeVariable = function(name) {
		return oFF.QVariableUtils.getVariableByType(this.getVariables(), name,
				oFF.VariableType.HIERARCHY_NODE_VARIABLE);
	};
	oFF.QVariableProcessor.prototype.getHierarchyNameVariable = function(name) {
		return oFF.QVariableUtils.getVariableByType(this.getVariables(), name,
				oFF.VariableType.HIERARCHY_NAME_VARIABLE);
	};
	oFF.QVariableProcessor.prototype.getHierarchyNameVariables = function() {
		return oFF.QVariableUtils
				.getHierarchyNameVariables(this.getVariables());
	};
	oFF.QVariableProcessor.prototype.getDimensionMemberVariables = function() {
		return oFF.QVariableUtils.getDimensionMemberVariables(this
				.getVariables());
	};
	oFF.QVariableProcessor.prototype.getVariableProcessorState = function() {
		return this.m_variableProcessorState;
	};
	oFF.QVariableProcessor.prototype.setVariableProcessorState = function(
			variableProcessorState) {
		this.m_variableProcessorPreviousState = this.m_variableProcessorState;
		this.m_variableProcessorState = variableProcessorState;
		if (this.m_variableProcessorState === oFF.VariableProcessorState.SUBMITTED) {
			this.m_isSubmitted = true;
		}
	};
	oFF.QVariableProcessor.prototype.returnToPreviousProcessorState = function() {
		if (this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.CHANGEABLE_REINIT
				&& this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.CHANGEABLE_STARTUP
				&& this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.SUBMITTED) {
			oFF.XObjectExt.checkNotNull(this.m_variableProcessorPreviousState,
					"Not allowed to return to previous state: [null]");
			throw oFF.XException.createIllegalStateException(oFF.XStringUtils
					.concatenate2("Not allowed to return to previous state: ",
							this.m_variableProcessorPreviousState.getName()));
		}
		this.m_variableProcessorState = this.m_variableProcessorPreviousState;
		this.m_variableProcessorPreviousState = null;
		this.m_isSubmitted = false;
	};
	oFF.QVariableProcessor.prototype.registerVariableProcessorStateChangedListener = function(
			listener, customIdentifier) {
	};
	oFF.QVariableProcessor.prototype.unregisterVariableProcessorStateChangedListener = function(
			listener) {
	};
	oFF.QVariableProcessor.prototype.getSelectionTagging = function() {
		return null;
	};
	oFF.QVariableProcessor.prototype.isSubmitNeeded = function() {
		return this.getVariableProcessorState().isSubmitNeeded();
	};
	oFF.QVariableProcessor.prototype.isReinitNeeded = function() {
		return this.getVariableProcessorState().isReinitNeeded();
	};
	oFF.QVariableProcessor.prototype.isCancelNeeded = function() {
		return this.getVariableProcessorState().isCancelNeeded();
	};
	oFF.QVariableProcessor.prototype.activateVariableVariant = function(
			variableVariant, syncType, listener, customIdentifier) {
		return this.m_provider.processActivateVariableVariant(variableVariant,
				syncType, listener, customIdentifier);
	};
	oFF.QVariableProcessor.prototype.emptyVariableDefinition = function(
			syncType, listener, customIdentifier) {
		return this.m_provider.processSetGetVariableValues(syncType, listener,
				customIdentifier);
	};
	oFF.QVariableProcessor.prototype.updateDynamicVariables = function(
			syncType, listener, customIdentifier) {
		this.m_provider.processUpdateDynamicVariables(syncType, listener,
				customIdentifier);
	};
	oFF.QOptionListElement = function() {
	};
	oFF.QOptionListElement.prototype = new oFF.QVariableModelComponent();
	oFF.QOptionListElement.createOptionListElement = function(context,
			variable, name, text) {
		var element = new oFF.QOptionListElement();
		element.setupOptionListElement(context, variable, name, text);
		return element;
	};
	oFF.QOptionListElement.prototype.setupOptionListElement = function(context,
			variable, name, text) {
		oFF.QVariableModelComponent.prototype.setupModelComponentWithName.call(
				this, context, variable, name);
		this.setText(text);
	};
	oFF.QOptionListElement.prototype.toString = function() {
		return this.getName();
	};
	oFF.QModelComponentWithNameList = function() {
	};
	oFF.QModelComponentWithNameList.prototype = new oFF.QModelComponentList();
	oFF.QModelComponentWithNameList.createModelComponentWithNameList = function(
			context, parentNode, hasDynamicLinking, name) {
		var object = new oFF.QModelComponentWithNameList();
		object.setupOlapList(context, parentNode, hasDynamicLinking, name);
		return object;
	};
	oFF.QModelComponentWithNameList.prototype.createElementList = function() {
		return oFF.XLinkedMap.create();
	};
	oFF.QModelComponentWithNameList.prototype.addInternal = function(element) {
		if (oFF.notNull(element)) {
			oFF.QModelComponentList.prototype.addInternal.call(this, element);
		}
	};
	oFF.QModelComponentWithNameList.prototype.add = function(element) {
		if (oFF.notNull(element)) {
			this.queueEventing();
			oFF.QModelComponentList.prototype.add.call(this, element);
			this.resumeEventing();
		}
	};
	oFF.QModelComponentWithNameList.prototype.containsKey = function(key) {
		return this.m_list.containsKey(key);
	};
	oFF.QModelComponentWithNameList.prototype.getByKey = function(key) {
		return this.m_list.getByKey(key);
	};
	oFF.QModelComponentWithNameList.prototype.getKeysAsReadOnlyListOfString = function() {
		return this.m_list.getKeysAsReadOnlyListOfString();
	};
	oFF.QModelComponentWithNameList.prototype.getKeysAsIteratorOfString = function() {
		return this.m_list.getKeysAsIteratorOfString();
	};
	oFF.QModelComponentWithNameList.prototype.getValuesAsReadOnlyList = function() {
		return this.m_list;
	};
	oFF.QModelComponentWithNameList.prototype.getIterator = function() {
		return this.m_list.getIterator();
	};
	oFF.QConditionManager = function() {
	};
	oFF.QConditionManager.prototype = new oFF.QModelComponentList();
	oFF.QConditionManager.create = function(context, queryModel) {
		var newObj = new oFF.QConditionManager();
		newObj.setupOlapList(context, queryModel, true, "ConditionManager");
		return newObj;
	};
	oFF.QConditionManager.prototype.m_externalConditions = null;
	oFF.QConditionManager.prototype.m_tmpConditions = null;
	oFF.QConditionManager.prototype.m_effectiveConditions = null;
	oFF.QConditionManager.prototype.releaseObject = function() {
		if (oFF.notNull(this.m_externalConditions)) {
			this.setExternalConditions(null);
		}
		this.m_tmpConditions = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_tmpConditions);
		this.m_effectiveConditions = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_effectiveConditions);
		oFF.QModelComponentList.prototype.releaseObject.call(this);
	};
	oFF.QConditionManager.prototype.copyConditionManager = function(origin) {
		var size;
		var i;
		var originCondition;
		var cloneCondition;
		oFF.QModelComponentList.prototype.copyModelComponentList.call(this,
				origin);
		size = origin.size();
		for (i = 0; i < size; i++) {
			originCondition = origin.get(i);
			cloneCondition = this.addNewCondition(originCondition.getName());
			cloneCondition.copyCondition(originCondition);
		}
	};
	oFF.QConditionManager.prototype.getExternalConditions = function() {
		return this.m_externalConditions;
	};
	oFF.QConditionManager.prototype.setExternalConditions = function(
			externalConditions) {
		if (this.m_externalConditions === externalConditions) {
			return;
		}
		if (oFF.notNull(this.m_externalConditions)) {
			this.m_externalConditions.unregisterChangedListener(this);
			this.m_externalConditions.removeSecondaryParent(this);
			this.m_externalConditions = null;
		}
		if (oFF.notNull(externalConditions)) {
			this.m_externalConditions = externalConditions;
			this.m_externalConditions.addSecondaryParent(this);
			this.m_externalConditions.registerChangedListener(this, null);
		}
		this.updateEffectiveConditions();
		this.notifyNodeChanged();
	};
	oFF.QConditionManager.prototype.getTemporaryConditions = function() {
		return this.m_tmpConditions;
	};
	oFF.QConditionManager.prototype.hasTemporaryConditions = function() {
		if (oFF.isNull(this.m_tmpConditions)) {
			return false;
		}
		return this.m_tmpConditions.hasElements();
	};
	oFF.QConditionManager.prototype.getConditionsByState = function(conditions,
			active) {
		var returnedConditions;
		var conditionsSize;
		var i;
		var condition;
		if (oFF.notNull(conditions)) {
			returnedConditions = oFF.XList.create();
			conditionsSize = conditions.size();
			for (i = 0; i < conditionsSize; i++) {
				condition = conditions.get(i);
				if (condition.isActive() === active) {
					returnedConditions.add(condition);
				}
			}
			return returnedConditions;
		}
		return null;
	};
	oFF.QConditionManager.prototype.getActiveTemporaryConditions = function() {
		return this.getConditionsByState(this.m_tmpConditions, true);
	};
	oFF.QConditionManager.prototype.getInactiveTemporaryConditions = function() {
		return this.getConditionsByState(this.m_tmpConditions, false);
	};
	oFF.QConditionManager.prototype.getTemporaryConditionByName = function(
			tmpCondName) {
		if (oFF.isNull(this.m_tmpConditions)) {
			return null;
		}
		return this.m_tmpConditions.getByKey(tmpCondName);
	};
	oFF.QConditionManager.prototype.addTemporaryCondition = function(
			tmpCondName) {
		var newTmpCondition;
		if (oFF.isNull(this.m_tmpConditions)) {
			this.m_tmpConditions = oFF.XListOfNameObject.create();
		}
		if (oFF.notNull(tmpCondName)
				&& !this.m_tmpConditions.containsKey(tmpCondName)) {
			newTmpCondition = oFF.QCondition.create(this.getQueryModelBase(),
					this, tmpCondName, false);
			if (oFF.notNull(newTmpCondition)) {
				newTmpCondition.setParent(this);
				this.m_tmpConditions.add(newTmpCondition);
				this.updateEffectiveConditions();
				this.notifyNodeChanged();
				return newTmpCondition;
			}
		}
		return null;
	};
	oFF.QConditionManager.prototype.removeTemporaryConditionByName = function(
			tmpCondName) {
		var targetCondition;
		if (oFF.notNull(this.m_tmpConditions)) {
			targetCondition = this.getTemporaryConditionByName(tmpCondName);
			if (oFF.notNull(targetCondition)) {
				this.m_tmpConditions.removeElement(targetCondition);
				this.updateEffectiveConditions();
				this.notifyNodeChanged();
				oFF.XObjectExt.release(targetCondition);
			}
		}
	};
	oFF.QConditionManager.prototype.onModelComponentChanged = function(
			modelComponent, customIdentifier) {
		if (oFF.isNull(modelComponent)) {
			return;
		}
		if (modelComponent === this.m_externalConditions) {
			this.updateEffectiveConditions();
		}
	};
	oFF.QConditionManager.prototype.updateEffectiveConditions = function() {
		var idx;
		var size;
		var externalCondition;
		var tmpCondition;
		if (oFF.isNull(this.m_effectiveConditions)) {
			this.m_effectiveConditions = oFF.XListOfNameObject.create();
		} else {
			this.m_effectiveConditions.clear();
		}
		this.m_effectiveConditions.addAll(this);
		if (oFF.notNull(this.m_externalConditions)) {
			size = this.m_externalConditions.size();
			for (idx = 0; idx < size; idx++) {
				externalCondition = this.m_externalConditions.get(idx);
				if (!this.m_effectiveConditions.containsKey(externalCondition
						.getName())) {
					this.m_effectiveConditions.add(externalCondition);
				}
			}
		}
		if (oFF.notNull(this.m_tmpConditions)) {
			size = this.m_tmpConditions.size();
			for (idx = 0; idx < size; idx++) {
				tmpCondition = this.m_tmpConditions.get(idx);
				if (!this.m_effectiveConditions.containsKey(tmpCondition
						.getName())) {
					this.m_effectiveConditions.add(tmpCondition);
				}
			}
		}
	};
	oFF.QConditionManager.prototype.getConditionByName = function(technicalName) {
		return oFF.XCollectionUtils.getByName(this, technicalName);
	};
	oFF.QConditionManager.prototype.add = function(element) {
		oFF.QModelComponentList.prototype.add.call(this, element);
		this.updateEffectiveConditions();
	};
	oFF.QConditionManager.prototype.addNewCondition = function(technicalName) {
		var newCondition;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(technicalName)
				&& this.getConditionByName(technicalName) === null) {
			newCondition = oFF.QCondition.create(this.getContext(), this,
					technicalName, false);
			if (oFF.notNull(newCondition)) {
				this.add(newCondition);
				return newCondition;
			}
		}
		return null;
	};
	oFF.QConditionManager.prototype.hasConditions = function() {
		return this.hasElements();
	};
	oFF.QConditionManager.prototype.removeClientConditions = function() {
		var size;
		var i;
		var condition;
		this.queueEventing();
		size = this.size();
		for (i = size - 1; i >= 0; i--) {
			condition = this.get(i);
			if (condition.isChangeable()) {
				this.removeInternal(condition);
				oFF.XObjectExt.release(condition);
			}
		}
		this.resumeEventing();
	};
	oFF.QConditionManager.prototype.deactivateServerConditions = function() {
		var size;
		var i;
		var condition;
		this.queueEventing();
		size = this.size();
		for (i = 0; i < size; i++) {
			condition = this.get(i);
			if (!condition.isChangeable()) {
				condition.setActive(false);
			}
		}
		this.resumeEventing();
	};
	oFF.QConditionManager.prototype.getActiveConditions = function() {
		return this.getConditionsByState(this, true);
	};
	oFF.QConditionManager.prototype.getInactiveConditions = function() {
		return this.getConditionsByState(this, false);
	};
	oFF.QConditionManager.prototype.removeConditionByName = function(
			technicalName) {
		var targetCondition = this.getConditionByName(technicalName);
		if (oFF.notNull(targetCondition)) {
			this.removeElement(targetCondition);
			oFF.XObjectExt.release(targetCondition);
		}
	};
	oFF.QConditionManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.CONDITIONS_MANAGER;
	};
	oFF.QConditionManager.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherObj;
		if (oFF.isNull(other)) {
			return;
		}
		otherObj = other;
		this.clear();
		this.copyConditionManager(otherObj);
	};
	oFF.QConditionManager.prototype.getEffectiveConditions = function() {
		this.updateEffectiveConditions();
		return this.m_effectiveConditions;
	};
	oFF.QConditionManager.prototype.isMeasureUsedInActiveConditionThreshold = function(
			measureName) {
		var itCondition;
		var condition;
		var itThreshold;
		var threshold;
		var measureCoordinates;
		var itMeasure;
		if (oFF.XStringUtils.isNullOrEmpty(measureName)) {
			return false;
		}
		itCondition = this.getIterator();
		while (itCondition.hasNext()) {
			condition = itCondition.next();
			if (!condition.isActive()) {
				continue;
			}
			itThreshold = condition.getThresholds().getIterator();
			while (itThreshold.hasNext()) {
				threshold = itThreshold.next();
				measureCoordinates = threshold.getMeasureCoordinates();
				itMeasure = measureCoordinates.getIterator();
				while (itMeasure.hasNext()) {
					if (oFF.XString.isEqual(itMeasure.next().getName(),
							measureName)) {
						return true;
					}
				}
			}
		}
		return false;
	};
	oFF.QCalculatedDimension = function() {
	};
	oFF.QCalculatedDimension.prototype = new oFF.QDimension();
	oFF.QCalculatedDimension._createCalculatedDimension = function(context,
			parentNode, calculatedDimensionName) {
		var dim = new oFF.QCalculatedDimension();
		dim.setName(calculatedDimensionName);
		dim.setupDimension(context, parentNode);
		dim.setupCalculatedDimension();
		return dim;
	};
	oFF.QCalculatedDimension.prototype.m_preQueryName = null;
	oFF.QCalculatedDimension.prototype.m_joinType = null;
	oFF.QCalculatedDimension.prototype.m_joinFields = null;
	oFF.QCalculatedDimension.prototype.m_fieldMappings = null;
	oFF.QCalculatedDimension.prototype.m_supportedFieldLayoutType = null;
	oFF.QCalculatedDimension.prototype.m_supportedAxesTypes = null;
	oFF.QCalculatedDimension.prototype.supportsTotals = function() {
		return this.m_resultStructureController.supportsTotals();
	};
	oFF.QCalculatedDimension.prototype.getDimensionType = function() {
		return oFF.DimensionType.CALCULATED_DIMENSION;
	};
	oFF.QCalculatedDimension.prototype.copyCalculatedDimension = function(other) {
		var size;
		var idx;
		var otherJoinFields;
		var otherFieldMapping;
		oFF.QDimension.prototype.copyDimension.call(this, other);
		this.m_preQueryName = other.m_preQueryName;
		this.m_joinType = other.m_joinType;
		size = other.m_joinFields.size();
		for (idx = 0; idx < size; idx++) {
			otherJoinFields = other.m_joinFields.get(idx);
			this.m_joinFields.add(oFF.XFieldNamePair.create(otherJoinFields
					.getLocaleFieldName(), otherJoinFields
					.getReferencedFieldName()));
		}
		size = other.m_fieldMappings.size();
		for (idx = 0; idx < size; idx++) {
			otherFieldMapping = other.m_fieldMappings.get(idx);
			this.m_fieldMappings.add(oFF.XFieldNamePair.create(
					otherFieldMapping.getLocaleFieldName(), otherFieldMapping
							.getReferencedFieldName()));
		}
	};
	oFF.QCalculatedDimension.prototype.setupCalculatedDimension = function() {
		this.m_supportedFieldLayoutType = oFF.XHashSetOfString.create();
		this.m_supportedFieldLayoutType.add(oFF.FieldLayoutType.FIELD_BASED
				.getName());
		this.m_supportedAxesTypes = oFF.XSetOfNameObject.create();
		this.m_supportedAxesTypes.add(oFF.AxisType.ROWS);
		this.m_supportedAxesTypes.add(oFF.AxisType.COLUMNS);
		this.m_supportedAxesTypes.add(oFF.AxisType.FREE);
		this.m_supportedAxesTypes.add(oFF.AxisType.REPOSITORY);
		this.m_joinType = oFF.JoinType.LEFT_OUTER;
		this.m_joinFields = oFF.XList.create();
		this.m_fieldMappings = oFF.XList.create();
	};
	oFF.QCalculatedDimension.prototype.supportsHierarchyMetadata = function() {
		return false;
	};
	oFF.QCalculatedDimension.prototype.assertSupportsFieldLayout = function(
			type) {
		if (!this.m_supportedFieldLayoutType.contains(type.getName())) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate2(
									"Field layout type is not supported ", type
											.getName()));
		}
	};
	oFF.QCalculatedDimension.prototype.setFieldLayoutType = function(type) {
		if (oFF.notNull(type)) {
			this.assertSupportsFieldLayout(type);
			if (this.m_fieldLayoutType !== type) {
				this.m_fieldLayoutType = type;
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QCalculatedDimension.prototype.setSelectorFieldLayoutType = function(
			type) {
		if (oFF.notNull(this.m_selectorFieldLayoutType) && oFF.notNull(type)) {
			this.assertSupportsFieldLayout(type);
			if (this.m_selectorFieldLayoutType !== type) {
				this.m_selectorFieldLayoutType = type;
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QCalculatedDimension.prototype.supportsCustomMembers = function() {
		return false;
	};
	oFF.QCalculatedDimension.prototype.supportsHierarchyLevelMetadata = function() {
		return false;
	};
	oFF.QCalculatedDimension.prototype.supportsDimensionHierarchyLevels = function() {
		return false;
	};
	oFF.QCalculatedDimension.prototype.releaseObject = function() {
		this.m_preQueryName = null;
		this.m_joinType = null;
		this.m_supportedAxesTypes = oFF.XObjectExt
				.release(this.m_supportedAxesTypes);
		this.m_joinFields = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_joinFields);
		this.m_fieldMappings = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_fieldMappings);
		this.m_supportedFieldLayoutType = oFF.XObjectExt
				.release(this.m_supportedFieldLayoutType);
		oFF.QDimension.prototype.releaseObject.call(this);
	};
	oFF.QCalculatedDimension.prototype.supportsAxis = function(axisType) {
		return this.m_supportedAxesTypes.contains(axisType);
	};
	oFF.QCalculatedDimension.prototype.setPreQueryName = function(preQueryName) {
		this.m_preQueryName = preQueryName;
	};
	oFF.QCalculatedDimension.prototype.getPreQueryName = function() {
		return this.m_preQueryName;
	};
	oFF.QCalculatedDimension.prototype.setJoinType = function(joinType) {
		this.m_joinType = joinType;
	};
	oFF.QCalculatedDimension.prototype.getJoinType = function() {
		return this.m_joinType;
	};
	oFF.QCalculatedDimension.prototype.getJoinFields = function() {
		return this.m_joinFields;
	};
	oFF.QCalculatedDimension.prototype.addJoinFieldByString = function(
			localeFieldName, referencedFieldName) {
		this.addJoinField(oFF.XFieldNamePair.create(localeFieldName,
				referencedFieldName));
	};
	oFF.QCalculatedDimension.prototype.addJoinField = function(joinField) {
		this.m_joinFields.add(joinField);
	};
	oFF.QCalculatedDimension.prototype.clearJoinFields = function() {
		this.m_joinFields.clear();
	};
	oFF.QCalculatedDimension.prototype.removeJoinFieldAt = function(index) {
		this.m_joinFields.removeAt(index);
	};
	oFF.QCalculatedDimension.prototype.getFieldMappings = function() {
		return this.m_fieldMappings;
	};
	oFF.QCalculatedDimension.prototype.addFieldMappingByString = function(
			localeFieldName, referencedFieldName) {
		this.addFieldMapping(oFF.XFieldNamePair.create(localeFieldName,
				referencedFieldName));
	};
	oFF.QCalculatedDimension.prototype.addFieldMapping = function(fieldMapping) {
		var presentation;
		var newField;
		var parentComp;
		this.m_fieldMappings.add(fieldMapping);
		presentation = oFF.PresentationType.UNDEFINED;
		if (this.m_fieldMappings.size() === 1) {
			presentation = oFF.PresentationType.KEY;
		}
		newField = this.addNewField(presentation, fieldMapping
				.getLocaleFieldName(), null);
		this.addDefaultResultSetField(newField);
		this.getResultSetFields().add(newField);
		parentComp = this.getParentComponent();
		if (oFF.notNull(parentComp)) {
			parentComp.addField(newField, this);
		}
	};
	oFF.QCalculatedDimension.prototype.clearFieldMappings = function() {
		this.queueEventing();
		this.clearAllFields();
		this.m_fieldMappings.clear();
		this.resumeEventing();
	};
	oFF.QCalculatedDimension.prototype.removeFieldMappingAt = function(index) {
		var newKeyFieldPair;
		this.removeFieldByName(this.m_fieldMappings.get(index)
				.getLocaleFieldName());
		this.m_fieldMappings.removeAt(index);
		if (index === 0 && this.m_fieldMappings.size() > 0) {
			newKeyFieldPair = this.m_fieldMappings.get(0);
			this.removeFieldByName(newKeyFieldPair.getLocaleFieldName());
			this.m_fieldMappings.removeAt(0);
			this.addFieldMapping(newKeyFieldPair);
		}
	};
	oFF.QCalculatedDimension.prototype.isGroupingDimension = function() {
		return false;
	};
	oFF.QCalculatedDimension.prototype.isMeasureStructure = function() {
		return false;
	};
	oFF.QCalculatedDimension.prototype.supportsBasicStructureMembers = function() {
		return false;
	};
	oFF.QCalculatedDimension.prototype.isStructure = function() {
		return false;
	};
	oFF.QCalculatedDimension.prototype.getOlapComponentType = function() {
		return this.getDimensionType();
	};
	oFF.QCalculatedDimension.prototype.isSelectable = function() {
		return true;
	};
	oFF.QDimensionManager = function() {
	};
	oFF.QDimensionManager.prototype = new oFF.QModelComponentList();
	oFF.QDimensionManager.create = function(parentNode) {
		var newObj = new oFF.QDimensionManager();
		newObj.setupDimensionManager(parentNode);
		return newObj;
	};
	oFF.QDimensionManager.prototype.m_lazyLoadImporter = null;
	oFF.QDimensionManager.prototype.m_measureStructure = null;
	oFF.QDimensionManager.prototype.m_nonMeasureStructure1 = null;
	oFF.QDimensionManager.prototype.m_nonMeasureStructure2 = null;
	oFF.QDimensionManager.prototype.m_accountDimension = null;
	oFF.QDimensionManager.prototype.m_fields = null;
	oFF.QDimensionManager.prototype.m_names = null;
	oFF.QDimensionManager.prototype.m_references = null;
	oFF.QDimensionManager.prototype.m_referenceWithType = null;
	oFF.QDimensionManager.prototype.setupDimensionManager = function(parentNode) {
		this.setupOlapList(parentNode, parentNode, true, null);
		this.m_fields = oFF.XSetOfNameObject.create();
		this.m_names = oFF.XListOfString.create();
		this.m_references = oFF.XListOfString.create();
		this.m_referenceWithType = oFF.XHashMapByString.create();
	};
	oFF.QDimensionManager.prototype.copyDimensionManager = function(origin) {
		var context = this.getContext();
		var dimensionsToClone = this.getQueryManagerBase()
				.getDimensionsToClone();
		var dimNames = origin.getDimensionNames();
		var len = dimNames.size();
		var i;
		var origDimName;
		var origDim;
		var originType;
		var isCalcDim;
		var cloneDim;
		var cloneFields;
		var sizeFields;
		var idxFields;
		for (i = 0; i < len; i++) {
			origDimName = dimNames.get(i);
			origDim = origin.getDimensionByNameInternal(origDimName);
			if (oFF.XCollectionUtils.hasElements(dimensionsToClone)
					&& !dimensionsToClone.contains(origDimName)
					&& (oFF.isNull(origDim) || origDim.getAxisType() !== oFF.AxisType.VIRTUAL)) {
				continue;
			}
			this.m_names.add(origDimName);
			if (oFF.isNull(origDim)) {
				this.m_references.add(origDimName);
			} else {
				originType = origDim.getDimensionType();
				isCalcDim = originType === oFF.DimensionType.CALCULATED_DIMENSION;
				if (isCalcDim) {
					cloneDim = oFF.QCalculatedDimension
							._createCalculatedDimension(context, this,
									origDimName);
				} else {
					cloneDim = oFF.QDimension._create(this.getContext(), this);
				}
				this.addInternal(cloneDim);
				if (isCalcDim) {
					cloneDim.copyCalculatedDimension(origDim);
				} else {
					cloneDim.copyDimension(origDim);
				}
				this.setMeasureReferences(cloneDim);
				cloneFields = cloneDim.getFields();
				sizeFields = cloneFields.size();
				for (idxFields = 0; idxFields < sizeFields; idxFields++) {
					this.m_fields.add(cloneFields.get(idxFields));
				}
				this.finalizeDimensionMetadataSetup(cloneDim);
			}
		}
		oFF.QModelComponentList.prototype.copyModelComponentList.call(this,
				origin);
	};
	oFF.QDimensionManager.prototype.dimensionNotPresentInClonedQueryManager = function(
			dimension) {
		return oFF.isNull(dimension)
				&& oFF.XCollectionUtils.hasElements(this.getQueryManagerBase()
						.getDimensionsToClone());
	};
	oFF.QDimensionManager.prototype.copyDimensionManagerMember = function(
			origin) {
		if (oFF.notNull(origin.m_measureStructure)) {
			if (this.dimensionNotPresentInClonedQueryManager(this
					.getMeasureDimension())) {
				return;
			}
			this.getMeasureDimension().copyDimensionMember(
					origin.getMeasureDimension());
		}
		if (oFF.notNull(origin.m_nonMeasureStructure1)) {
			if (this.dimensionNotPresentInClonedQueryManager(this
					.getNonMeasureDimension())) {
				return;
			}
			this.getNonMeasureDimension().copyDimensionMember(
					origin.getNonMeasureDimension());
		}
		if (oFF.notNull(origin.m_nonMeasureStructure2)) {
			if (this.dimensionNotPresentInClonedQueryManager(this
					.getNonMeasureDimension2())) {
				return;
			}
			this.getNonMeasureDimension2().copyDimensionMember(
					origin.getNonMeasureDimension2());
		}
		if (oFF.notNull(origin.m_accountDimension)) {
			if (this.dimensionNotPresentInClonedQueryManager(this
					.getAccountDimension())) {
				return;
			}
			this.getAccountDimension().copyDimensionMember(
					origin.getAccountDimension());
		}
	};
	oFF.QDimensionManager.prototype.releaseObject = function() {
		this.m_lazyLoadImporter = oFF.XObjectExt
				.release(this.m_lazyLoadImporter);
		this.m_measureStructure = oFF.XObjectExt
				.release(this.m_measureStructure);
		this.m_nonMeasureStructure1 = oFF.XObjectExt
				.release(this.m_nonMeasureStructure1);
		this.m_nonMeasureStructure2 = oFF.XObjectExt
				.release(this.m_nonMeasureStructure2);
		this.m_accountDimension = oFF.XObjectExt
				.release(this.m_accountDimension);
		this.m_fields = oFF.XObjectExt.release(this.m_fields);
		this.m_names = oFF.XObjectExt.release(this.m_names);
		this.m_references = oFF.XObjectExt.release(this.m_references);
		this.m_referenceWithType = oFF.XObjectExt
				.release(this.m_referenceWithType);
		oFF.QModelComponentList.prototype.releaseObject.call(this);
	};
	oFF.QDimensionManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.DIMENSION_MANAGER;
	};
	oFF.QDimensionManager.prototype.finalizeDimensionMetadataSetup = function(
			dimension) {
		var fields = dimension.getFields();
		var len = fields.size();
		var i;
		var field;
		for (i = 0; i < len; i++) {
			field = fields.get(i);
			this.addField(field, dimension);
		}
	};
	oFF.QDimensionManager.prototype.convertToFieldLayoutType = function(type) {
		var len = this.m_list.size();
		var i;
		var dimension;
		for (i = 0; i < len; i++) {
			dimension = this.m_list.get(i);
			dimension.convertToFieldLayoutType(type);
		}
	};
	oFF.QDimensionManager.prototype.getDimensionNameByType = function(type) {
		var dimensionByType = this.getDimensionByType(type);
		return oFF.isNull(dimensionByType) ? null : dimensionByType.getName();
	};
	oFF.QDimensionManager.prototype.getDimensionByType = function(type) {
		var len = this.m_list.size();
		var i;
		var dimension;
		var inaDimMap;
		var j;
		var inaDim;
		var dimType;
		for (i = 0; i < len; i++) {
			dimension = this.m_list.get(i);
			if (dimension.getDimensionType().isTypeOf(type)) {
				return dimension;
			}
		}
		inaDimMap = this.getInaDimensionMap();
		len = this.m_references.size();
		for (j = 0; j < len; j++) {
			inaDim = inaDimMap.getByKey(this.m_references.get(j));
			if (oFF.isNull(inaDim) || !inaDim.containsKey("DimensionType")) {
				continue;
			}
			dimType = oFF.QInAConverter.lookupDimensionType(inaDim
					.getIntegerByKey("DimensionType"));
			if (dimType.isTypeOf(type)) {
				return this.lazyLoadDimensionByStructure(inaDim);
			}
		}
		return null;
	};
	oFF.QDimensionManager.prototype.getDimensionAt = function(index) {
		return this.getDimensionByName(this.m_names.get(index));
	};
	oFF.QDimensionManager.prototype.getByKey = function(key) {
		return this.getDimensionByName(key);
	};
	oFF.QDimensionManager.prototype.makeMetadataCallToGetCompleteDimensionDetails = function(
			name) {
		var queryManager = this.getQueryManager();
		var queryServiceConfig = queryManager.getQueryServiceConfig();
		var loadedAndCompleteDimensions = this
				.getAllLoadedAndCompleteDimensions();
		var requiredDimensions = oFF.XListOfString.create();
		var modelInitialization;
		requiredDimensions.addAll(loadedAndCompleteDimensions);
		requiredDimensions.add(name);
		queryServiceConfig.setRequiredDimensions(requiredDimensions);
		if (oFF.XCollectionUtils.hasElements(queryServiceConfig
				.getDimensionsOnAxes())) {
			queryServiceConfig.getDimensionsOnAxes().clear();
		}
		modelInitialization = queryManager.processModelInitialization(
				oFF.SyncType.BLOCKING, null, null);
		if (modelInitialization.hasErrors()) {
			throw oFF.XException
					.createRuntimeException("Update Metadata request failed");
		}
	};
	oFF.QDimensionManager.prototype.getDimensionByName = function(name) {
		var dimension = this.getDimensionByNameFromExistingMetadata(name);
		if (oFF.notNull(dimension)
				&& oFF.DimensionType.DIMENSION_INCOMPLETE === dimension
						.getDimensionType()
				|| oFF.isNull(dimension)
				&& oFF.DimensionType.DIMENSION_INCOMPLETE === this.m_referenceWithType
						.getByKey(name)) {
			this.makeMetadataCallToGetCompleteDimensionDetails(name);
		}
		return this.getDimensionByNameFromExistingMetadata(name);
	};
	oFF.QDimensionManager.prototype.getDimensionByNameFromExistingMetadata = function(
			name) {
		var dimension = this.getDimensionByNameInternal(name);
		var queryMetadata;
		var inaDims;
		var inaDim;
		if (oFF.isNull(dimension) && this.m_references.contains(name)) {
			queryMetadata = this.getQueryModel().getServerBaseSerialization();
			if (oFF.notNull(queryMetadata)) {
				inaDims = queryMetadata.getListByKey("Dimensions");
				inaDim = oFF.PrUtils.getStructureWithKeyValuePair(inaDims,
						"Name", name);
				dimension = this.lazyLoadDimensionByStructure(inaDim);
			}
		}
		if (oFF.notNull(dimension)
				&& this.getQueryModel().isCumulativeDeactive()
				&& dimension.supportsCumulative()) {
			dimension.setIsCumulative(false);
		}
		return dimension;
	};
	oFF.QDimensionManager.prototype.getAllLoadedAndCompleteDimensions = function() {
		var dimensionsOnAxes = this.getQueryManager().getQueryServiceConfig()
				.getDimensionsOnAxes();
		var references;
		var i;
		var alreadyLoadedAndCompleteDimensions;
		var j;
		var dimension;
		if (oFF.XCollectionUtils.hasElements(dimensionsOnAxes)) {
			references = this.getDimensionReferences();
			for (i = 0; i < references.size(); i++) {
				this.getDimensionByNameFromExistingMetadata(references.get(i));
			}
		}
		alreadyLoadedAndCompleteDimensions = oFF.XListOfString.create();
		for (j = 0; j < this.m_list.size(); j++) {
			dimension = this.m_list.get(j);
			if (dimension.getDimensionType() !== oFF.DimensionType.DIMENSION_INCOMPLETE) {
				alreadyLoadedAndCompleteDimensions.add(dimension.getName());
			}
		}
		return alreadyLoadedAndCompleteDimensions;
	};
	oFF.QDimensionManager.prototype.getDimensionByNameInternal = function(name) {
		return oFF.XCollectionUtils.getByName(this.m_list, name);
	};
	oFF.QDimensionManager.prototype.containsKey = function(key) {
		return this.m_names.contains(key);
	};
	oFF.QDimensionManager.prototype.getKeysAsReadOnlyListOfString = oFF.noSupport;
	oFF.QDimensionManager.prototype.getKeysAsIteratorOfString = oFF.noSupport;
	oFF.QDimensionManager.prototype.getDimensionCount = function() {
		return this.m_names.size();
	};
	oFF.QDimensionManager.prototype.getStructureCount = function() {
		var count = 0;
		if (oFF.notNull(this.m_nonMeasureStructure1)) {
			++count;
		}
		if (oFF.notNull(this.m_nonMeasureStructure2)) {
			++count;
		}
		if (oFF.notNull(this.m_measureStructure)) {
			++count;
		}
		return count;
	};
	oFF.QDimensionManager.prototype.getNonStructureCount = function() {
		var structureCount = this.getStructureCount();
		var allDimCount = this.getDimensionCount();
		return allDimCount - structureCount;
	};
	oFF.QDimensionManager.prototype.getNonMeasureDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_nonMeasureStructure1);
	};
	oFF.QDimensionManager.prototype.getNonMeasureDimension2 = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_nonMeasureStructure2);
	};
	oFF.QDimensionManager.prototype.getMeasureDimension = function() {
		if (oFF.isNull(this.m_measureStructure)) {
			return this.getDimensionByType(oFF.DimensionType.MEASURE_STRUCTURE);
		}
		return oFF.XWeakReferenceUtil.getHardRef(this.m_measureStructure);
	};
	oFF.QDimensionManager.prototype.getAccountDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_accountDimension);
	};
	oFF.QDimensionManager.prototype.getDimensions = function() {
		var inaDimMap = this.getInaDimensionMap();
		var dimRefs = oFF.XListOfString
				.createFromReadOnlyList(this.m_references);
		var len = dimRefs.size();
		var i;
		var inaDim;
		for (i = 0; i < len; i++) {
			inaDim = inaDimMap.getByKey(dimRefs.get(i));
			this.lazyLoadDimensionByStructure(inaDim);
		}
		return this;
	};
	oFF.QDimensionManager.prototype.setMeasureReferences = function(dimension) {
		var dimensionType = dimension.getDimensionType();
		if (dimensionType === oFF.DimensionType.MEASURE_STRUCTURE) {
			if (oFF.notNull(this.m_measureStructure)) {
				throw oFF.XException
						.createIllegalStateException("More than two measure structures");
			}
			this.m_measureStructure = oFF.XWeakReferenceUtil
					.getWeakRef(dimension);
		} else {
			if (dimensionType === oFF.DimensionType.SECONDARY_STRUCTURE) {
				if (oFF.isNull(this.m_nonMeasureStructure1)) {
					this.m_nonMeasureStructure1 = oFF.XWeakReferenceUtil
							.getWeakRef(dimension);
				} else {
					if (oFF.notNull(this.m_nonMeasureStructure2)) {
						throw oFF.XException
								.createIllegalStateException("More than two Non Measure Structures");
					}
					this.m_nonMeasureStructure2 = oFF.XWeakReferenceUtil
							.getWeakRef(dimension);
				}
			} else {
				if (dimensionType === oFF.DimensionType.ACCOUNT) {
					if (oFF.notNull(this.m_accountDimension)) {
						throw oFF.XException
								.createIllegalStateException("More than one account dimension");
					}
					this.m_accountDimension = oFF.XWeakReferenceUtil
							.getWeakRef(dimension);
				}
			}
		}
	};
	oFF.QDimensionManager.prototype.removeMeasureReferences = function(
			dimension) {
		var dimensionType = dimension.getDimensionType();
		if (dimensionType === oFF.DimensionType.MEASURE_STRUCTURE) {
			this.m_measureStructure = null;
		} else {
			if (dimensionType === oFF.DimensionType.SECONDARY_STRUCTURE) {
				if (oFF.notNull(this.m_nonMeasureStructure2)) {
					this.m_nonMeasureStructure2 = null;
				} else {
					if (oFF.notNull(this.m_nonMeasureStructure1)) {
						this.m_nonMeasureStructure1 = null;
					}
				}
			} else {
				if (dimensionType === oFF.DimensionType.ACCOUNT) {
					this.m_accountDimension = null;
				}
			}
		}
	};
	oFF.QDimensionManager.prototype.addDimension = function(dimension) {
		if (!this.contains(dimension)) {
			this.setMeasureReferences(dimension);
			if (!this.m_names.contains(dimension.getName())) {
				this.m_names.add(dimension.getName());
				this.addInternal(dimension);
				this.notifyNodeChanged();
			} else {
				this.insertDimension(dimension);
			}
		}
	};
	oFF.QDimensionManager.prototype.removeDimension = function(dimension) {
		var axis = dimension.getAxis();
		this.m_names.removeElement(dimension.getName());
		axis.removeElementInternal(dimension);
		this.removeMeasureReferences(dimension);
		oFF.QModelComponentList.prototype.removeElement.call(this, dimension);
	};
	oFF.QDimensionManager.prototype.getDimensionNames = function() {
		return this.m_names;
	};
	oFF.QDimensionManager.prototype.getLoadedDimensions = function() {
		return this;
	};
	oFF.QDimensionManager.prototype.addDimensionReference = function(name,
			dimensionType) {
		if (!this.m_names.contains(name)) {
			this.m_names.add(name);
			this.m_references.add(name);
			this.m_referenceWithType.put(name, dimensionType);
		}
	};
	oFF.QDimensionManager.prototype.getDimensionReferences = function() {
		return this.m_references;
	};
	oFF.QDimensionManager.prototype.getFieldByNameOrAlias = function(name) {
		var inaDimMap;
		var len;
		var i;
		var dimName;
		var dim;
		var inaDim;
		var inaAttributes;
		var size;
		var j;
		var aliasName;
		var fieldName;
		var field;
		if (this.m_fields.containsKey(name)) {
			return this.m_fields.getByKey(name);
		}
		inaDimMap = this.getInaDimensionMap();
		len = this.m_names.size();
		for (i = 0; i < len; i++) {
			dimName = this.m_names.get(i);
			dim = this.getDimensionByNameInternal(dimName);
			if (oFF.isNull(dim)) {
				inaDim = inaDimMap.getByKey(dimName);
				if (oFF.isNull(inaDim)) {
					continue;
				}
				inaAttributes = inaDim.getListByKey("Attributes");
				size = inaAttributes.size();
				for (j = 0; j < size; j++) {
					aliasName = inaAttributes.getStructureAt(j).getStringByKey(
							"AliasName");
					fieldName = inaAttributes.getStructureAt(j).getStringByKey(
							"Name");
					if (oFF.XString.isEqual(aliasName, name)
							|| oFF.XString.isEqual(fieldName, name)) {
						dim = this.lazyLoadDimensionByStructure(inaDim);
						return dim.getFieldByNameOrAlias(name);
					}
				}
			} else {
				field = dim.getFieldByNameOrAlias(name);
				if (oFF.notNull(field)) {
					return field;
				}
			}
		}
		return null;
	};
	oFF.QDimensionManager.prototype.getFieldByName = function(name) {
		var inaDimMap;
		var len;
		var i;
		var inaDim;
		var attList;
		var inaAtt;
		if (oFF.XString.isEqual(name, "Measures")
				|| oFF.XString.isEqual(name, "[Measures].[Measures]")) {
			return this.getMeasureDimension().getKeyField();
		}
		if (this.m_fields.containsKey(name)) {
			return this.m_fields.getByKey(name);
		}
		inaDimMap = this.getInaDimensionMap();
		len = this.m_references.size();
		for (i = 0; i < len; i++) {
			inaDim = inaDimMap.getByKey(this.m_references.get(i));
			if (oFF.isNull(inaDim)) {
				continue;
			}
			attList = inaDim.getListByKey("Attributes");
			inaAtt = oFF.PrUtils.getStructureWithKeyValuePair(attList, "Name",
					name);
			if (oFF.notNull(inaAtt)) {
				this.lazyLoadDimensionByStructure(inaDim);
				return this.m_fields.getByKey(name);
			}
		}
		return null;
	};
	oFF.QDimensionManager.prototype.addField = function(field, dimension) {
		var name = field.getName();
		var existingField = this.m_fields.getByKey(name);
		var existingFieldDim;
		if (oFF.isNull(existingField)) {
			this.m_fields.add(field);
		} else {
			existingFieldDim = existingField.getDimension();
			if (oFF.notNull(existingFieldDim)
					&& existingFieldDim.isGroupingDimension()
					&& !dimension.isGroupingDimension()) {
				existingField.setDimension(dimension);
			}
		}
	};
	oFF.QDimensionManager.prototype.getFields = oFF.noSupport;
	oFF.QDimensionManager.prototype.getFieldIterator = function() {
		var list = oFF.XList.create();
		var iterator = this.m_fields.getIterator();
		while (iterator.hasNext()) {
			list.add(iterator.next());
		}
		return list.getIterator();
	};
	oFF.QDimensionManager.prototype.getFirstFieldByType = oFF.noSupport;
	oFF.QDimensionManager.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherObj = other;
		var dimensions = otherObj.getDimensions();
		var size = dimensions.size();
		var i;
		var otherDimension;
		var otherName;
		var myDimension;
		var newlyAddedDimension;
		for (i = 0; i < size; i++) {
			otherDimension = dimensions.get(i);
			otherName = otherDimension.getName();
			myDimension = this
					.getDimensionByNameFromExistingMetadata(otherName);
			if (oFF.isNull(myDimension)) {
				newlyAddedDimension = this.createAndAddDimension(otherName,
						otherDimension.getText());
				newlyAddedDimension.copyDimension(otherDimension);
			} else {
				myDimension.mergeDeepRecursive(settings, otherDimension);
			}
		}
	};
	oFF.QDimensionManager.prototype.createAndAddDimension = function(name, text) {
		var dim;
		this.stopEventing();
		dim = oFF.QDimension._create(this.getContext(), this);
		dim.setName(name);
		dim.setText(text);
		this.addDimension(dim);
		this.resumeEventing();
		return dim;
	};
	oFF.QDimensionManager.prototype.addNewCalculatedDimensionWithName = function(
			calculatedDimensionName) {
		var calculatedDimension;
		if (this.getByKey(calculatedDimensionName) !== null) {
			return null;
		}
		calculatedDimension = oFF.QCalculatedDimension
				._createCalculatedDimension(this.getContext(), this,
						calculatedDimensionName);
		this.m_names.add(calculatedDimensionName);
		this.add(calculatedDimension);
		this.getQueryModel().getFreeAxis().add(calculatedDimension);
		return calculatedDimension;
	};
	oFF.QDimensionManager.prototype.clearAllCalculatedDimensions = function() {
		var size;
		var i;
		var dimension;
		this.queueEventing();
		size = this.size();
		for (i = size - 1; i >= 0; i--) {
			dimension = this.get(i);
			if (dimension.getDimensionType() === oFF.DimensionType.CALCULATED_DIMENSION) {
				this.removeElement(dimension);
				this.m_names.removeElement(dimension.getName());
			}
		}
		this.resumeEventing();
	};
	oFF.QDimensionManager.prototype.removeCalculatedDimensionByName = function(
			calculatedDimensionName) {
		var dimension = this.getByKey(calculatedDimensionName);
		if (oFF.notNull(dimension)
				&& dimension.getDimensionType() === oFF.DimensionType.CALCULATED_DIMENSION) {
			this.removeElement(dimension);
			this.m_names.removeElement(calculatedDimensionName);
		}
	};
	oFF.QDimensionManager.prototype.removeAt = function(index) {
		var dimName = this.m_names.removeAt(index);
		var dimension = this.getDimensionByNameInternal(dimName);
		var axis;
		if (oFF.isNull(dimension)) {
			this.m_references.removeElement(dimName);
			return null;
		}
		axis = dimension.getAxis();
		axis.removeElementInternal(dimension);
		this.removeMeasureReferences(dimension);
		oFF.QModelComponentList.prototype.removeElement.call(this, dimension);
		return dimension;
	};
	oFF.QDimensionManager.prototype.removeElement = function(element) {
		this.removeDimension(element);
		return element;
	};
	oFF.QDimensionManager.prototype.lazyLoadDimensionByStructure = function(
			inaDim) {
		var queryModel;
		var dim;
		var defaultAxis;
		if (oFF.isNull(inaDim)) {
			return null;
		}
		this.stopEventing();
		if (oFF.isNull(this.m_lazyLoadImporter)) {
			this.m_lazyLoadImporter = oFF.QInAImportFactory
					.createWithQueryManagerCapabilities(this.getApplication(),
							oFF.QModelFormat.INA_METADATA, this
									.getQueryManager());
		}
		queryModel = this.getQueryModelBase();
		dim = this.m_lazyLoadImporter.importDimension(inaDim, queryModel);
		this.m_references.removeElement(dim.getName());
		this.m_referenceWithType.remove(dim.getName());
		this.setMeasureReferences(dim);
		this.insertDimension(dim);
		defaultAxis = queryModel.getAxis(dim.getDefaultAxisType());
		this.insertDimensionOnAxis(defaultAxis, dim);
		this.finalizeDimensionMetadataSetup(dim);
		this.resumeEventing();
		return dim;
	};
	oFF.QDimensionManager.prototype.insertDimension = function(dimension) {
		var predecessorIndex = this.m_names.getIndex(dimension.getName()) - 1;
		var predecessorName = null;
		var current;
		var insertIndex;
		var len;
		var i;
		while (predecessorIndex >= 0) {
			current = this.m_names.get(predecessorIndex);
			if (!this.m_references.contains(current)) {
				predecessorName = current;
				break;
			}
			--predecessorIndex;
		}
		insertIndex = 0;
		if (oFF.notNull(predecessorName)) {
			len = this.m_list.size();
			for (i = 0; i < len; i++) {
				if (oFF.XString.isEqual(predecessorName, this.m_list.get(i)
						.getName())) {
					insertIndex = i + 1;
					break;
				}
			}
		}
		this.insertInternal(insertIndex, dimension);
	};
	oFF.QDimensionManager.prototype.insertDimensionOnAxis = function(axis,
			dimension) {
		var insertIndex = 0;
		var axisDimNames = axis.getDimensionNames();
		var nameIndex = this.m_names.getIndex(dimension.getName()) - 1;
		var result;
		while (nameIndex >= 0) {
			result = axisDimNames.getIndex(this.m_names.get(nameIndex));
			if (result !== -1) {
				insertIndex = result + 1;
				break;
			}
			--nameIndex;
		}
		axis.insert(insertIndex, dimension);
	};
	oFF.QDimensionManager.prototype.getInaDimensionMap = function() {
		var result = oFF.XHashMapByString.create();
		var queryMetadata = this.getQueryModel().getServerBaseSerialization();
		var inaDims;
		var len;
		var i;
		var inaDim;
		var dimName;
		if (oFF.notNull(queryMetadata)) {
			inaDims = queryMetadata.getListByKey("Dimensions");
			len = inaDims.size();
			for (i = 0; i < len; i++) {
				inaDim = inaDims.getStructureAt(i);
				dimName = inaDim.getStringByKey("Name");
				if (this.m_references.contains(dimName)) {
					result.put(dimName, inaDim);
				}
			}
		}
		return result;
	};
	oFF.QDimensionMember = function() {
	};
	oFF.QDimensionMember.prototype = new oFF.QAbstractDimensionMember();
	oFF.QDimensionMember.createDimensionMember = function(context, dimension) {
		var member = new oFF.QDimensionMember();
		member.setupDimensionMember(context, dimension);
		return member;
	};
	oFF.QDimensionMember.prototype.m_attributeMemberMap = null;
	oFF.QDimensionMember.prototype.m_nameValueException = null;
	oFF.QDimensionMember.prototype.m_resultVisibility = null;
	oFF.QDimensionMember.prototype.copyDimensionMember = function(origin) {
		var context;
		var it;
		var key;
		var cloneFieldValue;
		oFF.QAbstractDimensionMember.prototype.copyAbstractDimensionMember
				.call(this, origin);
		context = this.getContext();
		it = origin.m_attributeMemberMap.getKeysAsIteratorOfString();
		while (it.hasNext()) {
			key = it.next();
			cloneFieldValue = origin.m_attributeMemberMap.getByKey(key)
					.cloneOlapComponent(context, this);
			this.m_attributeMemberMap.put(key, cloneFieldValue);
		}
		this.m_nameValueException = origin.m_nameValueException;
		this.m_resultVisibility = origin.m_resultVisibility;
	};
	oFF.QDimensionMember.prototype.setupDimensionMember = function(context,
			dimension) {
		this.setupAbstractDimensionMember(context, dimension);
		this.setType(oFF.MemberType.MEMBER);
		this.m_attributeMemberMap = oFF.XHashMapByString.create();
	};
	oFF.QDimensionMember.prototype.releaseObject = function() {
		this.m_attributeMemberMap = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_attributeMemberMap);
		this.m_nameValueException = null;
		this.m_resultVisibility = null;
		oFF.QAbstractDimensionMember.prototype.releaseObject.call(this);
	};
	oFF.QDimensionMember.prototype.isEqualTo = function(other) {
		var otherMember;
		if (oFF.isNull(other)) {
			return false;
		}
		if (this === other) {
			return true;
		}
		otherMember = other;
		return oFF.XString.isEqual(this.getName(), otherMember.getName())
				&& oFF.XString.isEqual(this.getText(), otherMember.getText());
	};
	oFF.QDimensionMember.prototype.compareTo = function(objectToCompare) {
		var otherMember;
		var compare;
		if (oFF.isNull(objectToCompare)) {
			return -1;
		}
		if (objectToCompare === this) {
			return 0;
		}
		otherMember = objectToCompare;
		compare = oFF.XString.compare(this.getName(), otherMember.getName());
		if (compare === 0) {
			compare = oFF.XString
					.compare(this.getText(), otherMember.getText());
		}
		return compare;
	};
	oFF.QDimensionMember.prototype.getFormattedValue = function() {
		var dimension = this.getDimension();
		var attributeByType;
		var attributeMember;
		if (oFF.notNull(dimension)) {
			attributeByType = dimension
					.getFirstFieldByType(oFF.PresentationType.KEY);
			if (oFF.notNull(attributeByType)) {
				attributeMember = this.m_attributeMemberMap
						.getByKey(attributeByType.getName());
				if (oFF.notNull(attributeMember)) {
					return attributeMember.getFormattedValue();
				}
			}
		}
		return null;
	};
	oFF.QDimensionMember.prototype.getValue = function() {
		var keyField = this.getDimension().getKeyField();
		var fieldValue;
		var value;
		var name;
		var valueType;
		if (oFF.notNull(keyField)) {
			fieldValue = this.getFieldValue(keyField);
			if (oFF.notNull(fieldValue)) {
				value = fieldValue.getValue();
				if (oFF.notNull(value)) {
					return value;
				}
			}
		}
		name = this.getName();
		if (oFF.isNull(name)) {
			return null;
		}
		if (oFF.notNull(keyField)) {
			valueType = keyField.getValueType();
			if (valueType === oFF.XValueType.INTEGER) {
				return oFF.XIntegerValue.create(oFF.XInteger
						.convertFromString(name));
			} else {
				if (valueType === oFF.XValueType.DATE) {
					return oFF.XDate.createDateFromIsoFormat(name);
				} else {
					if (valueType === oFF.XValueType.DATE_TIME) {
						return oFF.XDateTime.createDateTimeFromIsoFormat(name);
					} else {
						if (valueType === oFF.XValueType.TIME) {
							return oFF.XTime.createTimeFromIsoFormat(name);
						}
					}
				}
			}
		}
		return oFF.XStringValue.create(name);
	};
	oFF.QDimensionMember.prototype.getFieldValue = function(field) {
		return oFF.isNull(field) ? null : this.m_attributeMemberMap
				.getByKey(field.getName());
	};
	oFF.QDimensionMember.prototype.getAllFieldValues = function() {
		return this.m_attributeMemberMap;
	};
	oFF.QDimensionMember.prototype.getResultSetFieldValues = function() {
		var rsAttributeMembers = oFF.XList.create();
		var resultSetAttributes = this.getDimension().getResultSetFields();
		var i;
		var field;
		var fieldValue;
		for (i = 0; i < resultSetAttributes.size(); i++) {
			field = resultSetAttributes.getFieldAt(i);
			fieldValue = this.getFieldValue(field);
			rsAttributeMembers.add(fieldValue);
		}
		return rsAttributeMembers;
	};
	oFF.QDimensionMember.prototype.addFieldValue = function(fieldValue) {
		this.addFieldValueInternal(fieldValue);
	};
	oFF.QDimensionMember.prototype.createAndAddField = function(field) {
		var newMember = oFF.QFieldValue.create(field.getContext(), field, this);
		this.addFieldValueInternal(newMember);
		return newMember;
	};
	oFF.QDimensionMember.prototype.createAndAddFieldWithXvalue = function(
			field, value) {
		var newMember = oFF.QFieldValue.create(field.getContext(), field, this);
		newMember.setValue(value);
		this.addFieldValueInternal(newMember);
		return newMember;
	};
	oFF.QDimensionMember.prototype.createAndAddFieldWithValue = function(field,
			value) {
		var valueType;
		if (oFF.isNull(value)) {
			return null;
		}
		valueType = value.getValueType();
		if (valueType === oFF.XValueType.STRING) {
			return this.createAndAddFieldValueWithString(field, value
					.getString());
		} else {
			if (valueType === oFF.XValueType.AMOUNT) {
				return this.createAndAddFieldValueWithAmount(field, value
						.getAmount());
			} else {
				if (valueType === oFF.XValueType.INTEGER) {
					return this.createAndAddFieldValueWithInteger(field, value
							.getInteger());
				} else {
					if (valueType === oFF.XValueType.LONG) {
						return this.createAndAddFieldValueWithLong(field, value
								.getLong());
					} else {
						if (valueType === oFF.XValueType.DOUBLE) {
							return this.createAndAddFieldValueWithDouble(field,
									value.getDouble());
						} else {
							if (valueType === oFF.XValueType.BOOLEAN) {
								return this.createAndAddFieldValueWithBoolean(
										field, value.getBoolean());
							} else {
								if (valueType === oFF.XValueType.DATE) {
									return this.createAndAddFieldValueWithDate(
											field, value);
								} else {
									if (valueType === oFF.XValueType.DATE_TIME) {
										return this
												.createAndAddFieldValueWithDateTime(
														field, value);
									} else {
										if (valueType === oFF.XValueType.TIME) {
											return this
													.createAndAddFieldValueWithTime(
															field, value);
										} else {
											if (valueType.isSpatial()) {
												return this
														.createAndAddFieldWithXvalue(
																field, value);
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		return null;
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithString = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, oFF.XStringValue
				.create(value));
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithAmount = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, oFF.XAmountValue
				.create(value));
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithInteger = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, oFF.XIntegerValue
				.create(value));
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithLong = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, oFF.XLongValue
				.create(value));
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithDouble = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, oFF.XDoubleValue
				.create(value));
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithDate = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, value);
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithDateTime = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, value);
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithTime = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, value);
	};
	oFF.QDimensionMember.prototype.createAndAddFieldValueWithBoolean = function(
			field, value) {
		return this.createAndAddFieldWithXvalue(field, oFF.XBooleanValue
				.create(value));
	};
	oFF.QDimensionMember.prototype.getText = function() {
		var dimension = this.getDimension();
		var textField;
		var textFieldName;
		var name;
		var hierarchyAssignedAndActive;
		var altFieldValue;
		if (oFF.notNull(dimension)
				&& dimension.hasAlternativeFieldValuesDefined()) {
			textField = dimension.getTextField();
			if (oFF.notNull(textField)) {
				textFieldName = textField.getName();
				name = this.getName();
				hierarchyAssignedAndActive = dimension
						.isHierarchyAssignedAndActive();
				altFieldValue = dimension
						.getAlternativeFieldValueLanguageOption(
								hierarchyAssignedAndActive, name, textFieldName);
				if (oFF.notNull(altFieldValue)) {
					return altFieldValue.getStringRepresentation();
				}
				altFieldValue = dimension.getAlternativeFieldValue(
						hierarchyAssignedAndActive, name, textFieldName, null);
				if (oFF.notNull(altFieldValue)) {
					return altFieldValue.getStringRepresentation();
				}
			}
		}
		return oFF.QAbstractDimensionMember.prototype.getText.call(this);
	};
	oFF.QDimensionMember.prototype.addFieldValueInternal = function(newValue) {
		var fieldName = newValue.getField().getName();
		var dimension = this.getDimension();
		var altFieldValue;
		if (oFF.notNull(dimension)
				&& dimension.hasAlternativeFieldValuesDefined()) {
			altFieldValue = dimension.getAlternativeFieldValueLanguageOption(
					dimension.isHierarchyAssignedAndActive(), this.getName(),
					fieldName);
			if (oFF.notNull(altFieldValue)) {
				newValue.setValue(altFieldValue);
				newValue.setFormattedValue(altFieldValue
						.getStringRepresentation());
			}
		}
		this.m_attributeMemberMap.put(fieldName, newValue);
	};
	oFF.QDimensionMember.prototype.createFilterOperation = function() {
		return oFF.QFactory.newFilterOperation(this.getContext(), this
				.getDimension().getKeyField());
	};
	oFF.QDimensionMember.prototype.getValueAsString = function() {
		var value = this.getValue();
		var valueType = value.getValueType();
		var stringValue;
		var dateValue;
		var timeValue;
		var dateTimeValue;
		var integerValue;
		var longValue;
		var doubleValue;
		if (valueType === oFF.XValueType.STRING) {
			stringValue = value;
			return stringValue.getString();
		}
		if (valueType === oFF.XValueType.DATE) {
			dateValue = value;
			return dateValue.toIsoFormat();
		}
		if (valueType === oFF.XValueType.TIME) {
			timeValue = value;
			return timeValue.toIsoFormat();
		}
		if (valueType === oFF.XValueType.DATE_TIME) {
			dateTimeValue = value;
			return dateTimeValue.toIsoFormat();
		}
		if (valueType === oFF.XValueType.INTEGER) {
			integerValue = value;
			return oFF.XInteger.convertToString(integerValue.getInteger());
		}
		if (valueType === oFF.XValueType.LONG) {
			longValue = value;
			return oFF.XLong.convertToString(longValue.getLong());
		}
		if (valueType === oFF.XValueType.DOUBLE
				|| valueType === oFF.XValueType.DECIMAL_FLOAT) {
			doubleValue = value;
			return oFF.XDouble.convertToString(doubleValue.getDouble());
		}
		throw oFF.XException
				.createIllegalStateException(oFF.XStringUtils.concatenate2(
						"Value type not supported: ", valueType.getName()));
	};
	oFF.QDimensionMember.prototype._assertPresentationTypeSelf = function(
			presentation) {
		if (presentation !== oFF.PresentationType.SELF) {
			oFF.noSupport();
		}
	};
	oFF.QDimensionMember.prototype.getIntByPresentation = function(presentation) {
		this._assertPresentationTypeSelf(presentation);
		return this.getInteger();
	};
	oFF.QDimensionMember.prototype.getDoubleByPresentation = function(
			presentation) {
		this._assertPresentationTypeSelf(presentation);
		return this.getDouble();
	};
	oFF.QDimensionMember.prototype.getDateByPresentation = function(
			presentation) {
		this._assertPresentationTypeSelf(presentation);
		return this.getDate();
	};
	oFF.QDimensionMember.prototype.getStringByPresentation = function(
			presentation) {
		this._assertPresentationTypeSelf(presentation);
		return this.getString();
	};
	oFF.QDimensionMember.prototype.getTimeSpanByPresentation = function(
			presentation) {
		this._assertPresentationTypeSelf(presentation);
		return this.getTimeSpan();
	};
	oFF.QDimensionMember.prototype.getPolygonByPresentation = function(
			presentation) {
		this._assertPresentationTypeSelf(presentation);
		return this.getPolygon();
	};
	oFF.QDimensionMember.prototype.getKeyFieldValue = function() {
		var keyField = this.getDimension().getKeyField();
		return this.getFieldValue(keyField);
	};
	oFF.QDimensionMember.prototype.getBoolean = function() {
		return false;
	};
	oFF.QDimensionMember.prototype.getSelectValue = function() {
		var fieldValue = this.getFieldValue(this.getSelectField());
		return fieldValue.getSelectValue();
	};
	oFF.QDimensionMember.prototype.getSelectField = function() {
		return this.getDimension().getFlatKeyField();
	};
	oFF.QDimensionMember.prototype.getSelectHierarchyName = function() {
		return null;
	};
	oFF.QDimensionMember.prototype.setResultVisibility = function(
			memberVisibility) {
		if (!this.getQueryModel().supportsMemberVisibility()) {
			oFF.noSupport();
		}
		this.m_resultVisibility = memberVisibility;
		this.notifyNodeChanged();
	};
	oFF.QDimensionMember.prototype.getResultVisibility = function() {
		return this.m_resultVisibility;
	};
	oFF.QDimensionMember.prototype.getDimensionMemberNameValueException = function() {
		return this.m_nameValueException;
	};
	oFF.QDimensionMember.prototype.setDimensionMemberNameValueException = function(
			valueException) {
		this.m_nameValueException = valueException;
	};
	oFF.QDimensionMember.prototype.hasValue = function() {
		return this.getKeyFieldValue() !== null;
	};
	oFF.QDimensionMember.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherMember = other;
		var keys = otherMember.m_attributeMemberMap.getKeysAsIteratorOfString();
		var key;
		var otherValue;
		var myValue;
		while (keys.hasNext()) {
			key = keys.next();
			otherValue = otherMember.m_attributeMemberMap.getByKey(key);
			myValue = this.m_attributeMemberMap.getByKey(key);
			if (oFF.notNull(myValue)) {
				myValue.mergeDeepRecursive(settings, otherValue);
			}
		}
		this.setText(otherMember.getText());
	};
	oFF.QDimensionMember.prototype.loadBLOBForField = function(syncType,
			listener, customIdentifier, field) {
		var rsContainer;
		var fieldValue;
		if (field.getPresentationType() !== oFF.PresentationType.BLOB) {
			rsContainer = oFF.BLOBContainer.createBLOBContainer(this
					.getQueryManager(), null);
			rsContainer.addError(oFF.ErrorCodes.INVALID_FIELD,
					"Field does not support BLOB objects.");
			if (oFF.notNull(listener)) {
				listener.onBLOBAvailable(rsContainer, rsContainer,
						customIdentifier);
			}
			return rsContainer;
		}
		fieldValue = this.getFieldValue(field);
		return this.getQueryManager().processBLOB(syncType, listener,
				customIdentifier, fieldValue.getFormattedValue());
	};
	oFF.QDimensionMember.prototype.getInternalResourceURL = function(field) {
		var systemDescription;
		var connection;
		var sb;
		var webServicePathForBLOBs;
		if (field.getPresentationType() !== oFF.PresentationType.BLOB) {
			return null;
		}
		systemDescription = this.getQueryManager().getSystemDescription();
		connection = this.getQueryManager().getApplication().getConnection(
				systemDescription.getSystemName());
		sb = oFF.XStringBuffer.create();
		webServicePathForBLOBs = connection.getWebServicePathForBLOBs();
		sb.append(systemDescription.getUriStringWithoutAuthentication());
		sb.append(webServicePathForBLOBs.toString()).append(
				this.getFieldValue(field).getFormattedValue());
		return sb.toString();
	};
	oFF.QDimensionMemberResult = function() {
	};
	oFF.QDimensionMemberResult.prototype = new oFF.QAbstractDimensionMember();
	oFF.QDimensionMemberResult.createQDimensionMember = function(context,
			dimension, resultMemberType) {
		var member = new oFF.QDimensionMemberResult();
		member.setupQDimensionMember(context, dimension, resultMemberType);
		return member;
	};
	oFF.QDimensionMemberResult.prototype.m_resultStructureElement = null;
	oFF.QDimensionMemberResult.prototype.m_value = null;
	oFF.QDimensionMemberResult.prototype.m_fieldValues = null;
	oFF.QDimensionMemberResult.prototype.setupQDimensionMember = function(
			context, dimension, resultMemberType) {
		var literalFieldValue;
		this.setupAbstractDimensionMember(context, dimension);
		this.setType(resultMemberType);
		literalFieldValue = oFF.QFieldValue.createLiteral(this.getContext(),
				dimension.getKeyField());
		literalFieldValue.setValue(this.m_value);
		this.m_fieldValues = oFF.XHashMapByString.create();
		this.m_fieldValues.put(dimension.getKeyField().getName(),
				literalFieldValue);
	};
	oFF.QDimensionMemberResult.prototype.releaseObject = function() {
		this.m_resultStructureElement = null;
		this.m_value = oFF.XObjectExt.release(this.m_value);
		this.m_fieldValues = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_fieldValues);
		oFF.QAbstractDimensionMember.prototype.releaseObject.call(this);
	};
	oFF.QDimensionMemberResult.prototype.setType = function(type) {
		if (!type.isTypeOf(oFF.MemberType.RESULT)) {
			throw oFF.XException
					.createIllegalStateException("Invalid member type for result member!");
		}
		if (type === oFF.MemberType.RESULT) {
			this.m_value = oFF.XStringValue.create("Total");
		} else {
			if (type === oFF.MemberType.CONDITION_RESULT) {
				this.m_value = oFF.XStringValue.create("Total Including");
			} else {
				this.m_value = oFF.XStringValue.create("Total Remaining");
			}
		}
		this.m_memberType = type;
		this.m_resultStructureElement = oFF.ResultStructureElement
				.getStructureElementByMemberType(type);
	};
	oFF.QDimensionMemberResult.prototype.getFormattedValue = function() {
		return this.m_value.getString();
	};
	oFF.QDimensionMemberResult.prototype.getIntByPresentation = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getDoubleByPresentation = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getDateByPresentation = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getStringByPresentation = function(
			presentation) {
		return this.m_value.getString();
	};
	oFF.QDimensionMemberResult.prototype.getPolygonByPresentation = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getTimeSpanByPresentation = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getFieldValue = function(field) {
		return this.m_fieldValues.getValuesAsReadOnlyList().get(0);
	};
	oFF.QDimensionMemberResult.prototype.getKeyFieldValue = function() {
		return this.m_fieldValues.getValuesAsReadOnlyList().get(0);
	};
	oFF.QDimensionMemberResult.prototype.getPropertiesValue = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getStructureValue = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getStructureListValue = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getErrorValue = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getValueType = function() {
		return oFF.XValueType.STRING;
	};
	oFF.QDimensionMemberResult.prototype.getValue = function() {
		return this.m_value;
	};
	oFF.QDimensionMemberResult.prototype.getDate = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getTime = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getGeometry = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getPolygon = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getPoint = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getTimeSpan = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getString = function() {
		return this.m_value.getString();
	};
	oFF.QDimensionMemberResult.prototype.getDouble = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getInteger = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getLong = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddField = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldWithValue = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithString = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithAmount = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithBoolean = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithInteger = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithLong = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithDouble = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithDate = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithDateTime = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithTime = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.createFilterOperation = function() {
		return null;
	};
	oFF.QDimensionMemberResult.prototype.getAllFieldValues = function() {
		return this.m_fieldValues;
	};
	oFF.QDimensionMemberResult.prototype.getResultSetFieldValues = function() {
		return this.m_fieldValues.getValuesAsReadOnlyList();
	};
	oFF.QDimensionMemberResult.prototype.addFieldValue = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getValueAsString = function() {
		return this.m_value.getString();
	};
	oFF.QDimensionMemberResult.prototype.getBoolean = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getSelectValue = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getSelectField = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getSelectHierarchyName = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getDateTime = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getMultiPolygon = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getLineString = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getMultiLineString = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getNull = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.setResultVisibility = function(
			memberVisibility) {
		this.getDimension().setResultVisibilityByElement(
				this.m_resultStructureElement, memberVisibility);
	};
	oFF.QDimensionMemberResult.prototype.getResultVisibility = function() {
		return this.getDimension().getResultVisibilityByElement(
				this.m_resultStructureElement);
	};
	oFF.QDimensionMemberResult.prototype.getDimensionMemberNameValueException = function() {
		return oFF.ValueException.NORMAL;
	};
	oFF.QDimensionMemberResult.prototype.setDimensionMemberNameValueException = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getMultiPoint = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.hasValue = function() {
		return oFF.notNull(this.m_value);
	};
	oFF.QDimensionMemberResult.prototype.loadBLOBForField = oFF.noSupport;
	oFF.QDimensionMemberResult.prototype.getInternalResourceURL = oFF.noSupport;
	oFF.QExceptionManager = function() {
	};
	oFF.QExceptionManager.prototype = new oFF.QModelComponentList();
	oFF.QExceptionManager.createExceptionManager = function(queryModel) {
		var newObject = new oFF.QExceptionManager();
		newObject.setupOlapList(queryModel, queryModel, true, "Exceptions");
		return newObject;
	};
	oFF.QExceptionManager.prototype.copyExceptionManager = function(origin) {
		var size;
		var i;
		var origException;
		var cloneException;
		oFF.QModelComponentList.prototype.copyModelComponentList.call(this,
				origin);
		size = origin.size();
		for (i = 0; i < size; i++) {
			origException = origin.get(i);
			cloneException = this.addNewException(origException.getName(),
					origException.getText());
			cloneException.copyException(origException);
		}
	};
	oFF.QExceptionManager.prototype.removeClientExceptions = function() {
		var size;
		var i;
		var exception;
		this.queueEventing();
		size = this.size();
		for (i = size - 1; i >= 0; i--) {
			exception = this.get(i);
			if (exception.isChangeable()) {
				this.removeInternal(exception);
				oFF.XObjectExt.release(exception);
			}
		}
		this.resumeEventing();
	};
	oFF.QExceptionManager.prototype.deactivateServerExceptions = function() {
		var size = this.size();
		var i;
		var exception;
		for (i = 0; i < size; i++) {
			exception = this.get(i);
			if (!exception.isChangeable()) {
				exception.setActive(false);
			}
		}
	};
	oFF.QExceptionManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.EXCEPTION_MANAGER;
	};
	oFF.QExceptionManager.prototype.addNewException = function(name, text) {
		var exception = this.newException(name, text);
		this.add(exception);
		return exception;
	};
	oFF.QExceptionManager.prototype.newException = function(name, text) {
		return oFF.QException.createException(this.getContext(), this
				.getQueryModelBase(), name, text);
	};
	oFF.QExceptionManager.prototype.containsKey = function(key) {
		return this.getByKey(key) !== null;
	};
	oFF.QExceptionManager.prototype.add = function(element) {
		var byKey = this.getByKey(element.getName());
		if (oFF.notNull(byKey) && byKey.getMeasure() === element.getMeasure()
				&& byKey.getStructure() === element.getStructure()) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate3("The exception name '", element
									.getName(), "' is not unique!"));
		}
		oFF.QModelComponentList.prototype.add.call(this, element);
	};
	oFF.QExceptionManager.prototype.getByKey = function(key) {
		return oFF.XCollectionUtils.getByName(this.m_list, key);
	};
	oFF.QExceptionManager.prototype.getKeysAsReadOnlyListOfString = oFF.noSupport;
	oFF.QExceptionManager.prototype.getKeysAsIteratorOfString = oFF.noSupport;
	oFF.QExceptionManager.prototype.getAllExceptionsOfMeasure = function(
			measure) {
		var exceptions = oFF.XList.create();
		var exceptionSize = this.size();
		var idx;
		var exception;
		var exMeasure;
		var exStructure;
		var exceptionContainsMeasure;
		var exceptionContainsStructure;
		for (idx = 0; idx < exceptionSize; idx++) {
			exception = this.get(idx);
			exMeasure = exception.getMeasure();
			exStructure = exception.getStructure();
			exceptionContainsMeasure = oFF.notNull(exMeasure)
					&& oFF.XString.isEqual(exMeasure.getName(), measure
							.getName());
			exceptionContainsStructure = oFF.notNull(exStructure)
					&& oFF.XString.isEqual(exStructure.getName(), measure
							.getName());
			if (exceptionContainsMeasure || exceptionContainsStructure) {
				exceptions.add(exception);
			}
		}
		return exceptions;
	};
	oFF.QExceptionManager.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherObj = other;
		this.clear();
		this.copyExceptionManager(otherObj);
	};
	oFF.QExceptionManager.prototype.removeAllExceptionsOfMeasure = function(
			measure) {
		var idx;
		var exception;
		if (this.isEmpty()) {
			return;
		}
		idx = 0;
		this.queueEventing();
		while (idx < this.size()) {
			exception = this.get(idx);
			if (oFF.XString.isEqual(exception.getMeasure().getName(), measure
					.getName())) {
				this.removeAt(idx);
			} else {
				idx++;
			}
		}
		this.resumeEventing();
	};
	oFF.QThreshold = function() {
	};
	oFF.QThreshold.prototype = new oFF.QModelComponentList();
	oFF.QThreshold.createThreshold = function(context, lowValue, alertLevel,
			exception) {
		var threshold;
		if (oFF.isNull(exception)) {
			return null;
		}
		threshold = new oFF.QThreshold();
		threshold.setupThreshold(context, oFF.XValueType.DOUBLE,
				oFF.XDoubleValue.create(lowValue), alertLevel, exception);
		return threshold;
	};
	oFF.QThreshold.createThresholdWithString = function(context, low,
			alertLevel, exception) {
		var threshold;
		if (oFF.isNull(exception)) {
			return null;
		}
		threshold = new oFF.QThreshold();
		threshold.setupThreshold(context, oFF.XValueType.STRING,
				oFF.XStringValue.create(low), alertLevel, exception);
		return threshold;
	};
	oFF.QThreshold.prototype.m_alertLevel = null;
	oFF.QThreshold.prototype.m_valueType = null;
	oFF.QThreshold.prototype.m_lowValue = null;
	oFF.QThreshold.prototype.m_highValue = null;
	oFF.QThreshold.prototype.m_operator = null;
	oFF.QThreshold.prototype.copyThreshold = function(origin) {
		var size;
		var i;
		var originSetting;
		var cloneSetting;
		var exSetting;
		oFF.QModelComponentList.prototype.copyModelComponentList.call(this,
				origin);
		this.m_alertLevel = origin.m_alertLevel;
		this.m_valueType = origin.m_valueType;
		this.m_lowValue = oFF.XObjectExt.cloneIfNotNull(origin.m_lowValue);
		this.m_highValue = oFF.XObjectExt.cloneIfNotNull(origin.m_highValue);
		size = origin.size();
		for (i = 0; i < size; i++) {
			originSetting = origin.get(i);
			cloneSetting = this.addNewSetting(originSetting.getName(),
					originSetting.getPriority());
			cloneSetting.setValue(originSetting.getValue());
			exSetting = originSetting.getSetting();
			if (oFF.notNull(exSetting)) {
				cloneSetting.setSetting(exSetting);
			}
		}
		this.m_operator = origin.m_operator;
	};
	oFF.QThreshold.prototype.setupThreshold = function(context, valueType,
			lowValue, alertLevel, exception) {
		this.setupOlapList(context, exception, true, "Settings");
		this.m_valueType = valueType;
		this.m_operator = oFF.ComparisonOperator.EQUAL;
		this.setXLow(lowValue);
		this.m_highValue = null;
		this.m_alertLevel = alertLevel;
	};
	oFF.QThreshold.prototype.releaseObject = function() {
		this.m_alertLevel = null;
		this.m_operator = null;
		this.m_lowValue = oFF.XObjectExt.release(this.m_lowValue);
		this.m_highValue = oFF.XObjectExt.release(this.m_highValue);
		this.m_valueType = null;
		oFF.QModelComponentList.prototype.releaseObject.call(this);
	};
	oFF.QThreshold.prototype.getException = function() {
		return this.getParentComponent();
	};
	oFF.QThreshold.prototype.setAlertLevel = function(alertLevel) {
		this.m_alertLevel = alertLevel;
		this.notifyNodeChanged();
	};
	oFF.QThreshold.prototype.getAlertLevel = function() {
		return this.m_alertLevel;
	};
	oFF.QThreshold.prototype.setOperator = function(comparisonOperator) {
		this.m_operator = comparisonOperator;
		this.notifyNodeChanged();
	};
	oFF.QThreshold.prototype.getOperator = function() {
		return this.m_operator;
	};
	oFF.QThreshold.prototype.setXLow = function(lowValue) {
		if (oFF.notNull(lowValue)) {
			this.assertValueType(lowValue, this.m_valueType);
		}
		this.m_lowValue = lowValue;
		this.notifyNodeChanged();
	};
	oFF.QThreshold.prototype.setLowValue = function(lowValue) {
		this.setXLow(oFF.XDoubleValue.create(lowValue));
	};
	oFF.QThreshold.prototype.setLow = function(lowValue) {
		this.setXLow(oFF.XStringValue.create(lowValue));
	};
	oFF.QThreshold.prototype.getLowXValue = function() {
		return this.m_lowValue;
	};
	oFF.QThreshold.prototype.getLowValue = function() {
		this.assertValueType(this.getLowXValue(), oFF.XValueType.DOUBLE);
		return this.m_lowValue.getDouble();
	};
	oFF.QThreshold.prototype.getLow = function() {
		this.assertValueType(this.getLowXValue(), oFF.XValueType.STRING);
		return this.m_lowValue.getString();
	};
	oFF.QThreshold.prototype.setXHigh = function(highValue) {
		if (oFF.notNull(highValue)) {
			this.assertValueType(highValue, this.m_valueType);
		}
		this.m_highValue = highValue;
		this.notifyNodeChanged();
	};
	oFF.QThreshold.prototype.setHighValue = function(highValue) {
		this.setXHigh(oFF.XDoubleValue.create(highValue));
	};
	oFF.QThreshold.prototype.setHigh = function(highValue) {
		this.setXHigh(oFF.XStringValue.create(highValue));
	};
	oFF.QThreshold.prototype.getHighXValue = function() {
		return this.m_highValue;
	};
	oFF.QThreshold.prototype.getHighValue = function() {
		this.assertValueType(this.getHighXValue(), oFF.XValueType.DOUBLE);
		if (oFF.isNull(this.m_highValue)) {
			throw oFF.XException
					.createIllegalStateException("Illegal high value");
		}
		return this.m_highValue.getDouble();
	};
	oFF.QThreshold.prototype.getHigh = function() {
		this.assertValueType(this.getHighXValue(), oFF.XValueType.STRING);
		if (oFF.isNull(this.m_highValue)) {
			throw oFF.XException
					.createIllegalStateException("Illegal high value");
		}
		return this.m_highValue.getString();
	};
	oFF.QThreshold.prototype.setIntervall = function(lowValue, highValue) {
		this.queueEventing();
		this.setLowValue(lowValue);
		this.setHighValue(highValue);
		this.resumeEventing();
	};
	oFF.QThreshold.prototype.addNewSetting = function(name, priority) {
		var setting = this.newSetting(name, priority);
		this.add(setting);
		return setting;
	};
	oFF.QThreshold.prototype.addNewSettingWithConstant = function(
			exceptionSetting, priority) {
		var setting = this.newSettingWithConstant(exceptionSetting, priority);
		this.add(setting);
		return setting;
	};
	oFF.QThreshold.prototype.newSetting = function(name, priority) {
		return oFF.QSettings.createSetting(this.getContext(), name, priority,
				this);
	};
	oFF.QThreshold.prototype.newSettingWithConstant = function(
			exceptionSetting, priority) {
		return oFF.QSettings.createSettingWithConstant(this.getContext(),
				exceptionSetting, priority, this);
	};
	oFF.QThreshold.prototype.setIntervallByString = function(lowValue,
			highValue) {
		this.setLow(lowValue);
		this.setHigh(highValue);
	};
	oFF.QThreshold.prototype.getValueType = function() {
		return this.m_valueType;
	};
	oFF.QThreshold.prototype.getByKey = function(key) {
		return oFF.XCollectionUtils.getByName(this, key);
	};
	oFF.QThreshold.prototype.containsKey = function(key) {
		return this.getByKey(key) !== null;
	};
	oFF.QThreshold.prototype.getKeysAsReadOnlyListOfString = function() {
		var keys = oFF.XListOfString.create();
		var iterator = this.getIterator();
		while (iterator.hasNext()) {
			keys.add(iterator.next().getName());
		}
		oFF.XObjectExt.release(iterator);
		return keys;
	};
	oFF.QThreshold.prototype.getKeysAsIteratorOfString = function() {
		return this.getKeysAsReadOnlyListOfString().getIterator();
	};
	oFF.AbstractFilterList = function() {
	};
	oFF.AbstractFilterList.prototype = new oFF.QModelComponentList();
	oFF.AbstractFilterList.prototype.m_filterContainer = null;
	oFF.AbstractFilterList.prototype.m_uniqueId = null;
	oFF.AbstractFilterList.prototype.setupFilterList = function(context,
			parentNode, name) {
		this.setupOlapList(context, parentNode, true, name);
		if (oFF.notNull(parentNode)
				&& parentNode.getComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION) {
			this.m_filterContainer = oFF.XWeakReferenceUtil
					.getWeakRef(parentNode);
		} else {
			if (oFF.notNull(context)
					&& context.getComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION) {
				this.m_filterContainer = oFF.XWeakReferenceUtil
						.getWeakRef(context);
			}
		}
		this.m_uniqueId = oFF.XGuid.getGuid();
	};
	oFF.AbstractFilterList.prototype.releaseObject = function() {
		this.m_filterContainer = oFF.XObjectExt.release(this.m_filterContainer);
		this.m_uniqueId = null;
		oFF.QModelComponentList.prototype.releaseObject.call(this);
	};
	oFF.AbstractFilterList.prototype.getFilterExpression = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_filterContainer);
	};
	oFF.AbstractFilterList.prototype.getUniqueId = function() {
		return this.m_uniqueId;
	};
	oFF.AbstractFilterList.prototype.setUniqueId = function(uniqueId) {
		this.m_uniqueId = uniqueId;
	};
	oFF.AbstractFilterList.prototype.copyFilterList = function(origin) {
		oFF.QModelComponentList.prototype.copyModelComponentList.call(this,
				origin);
		this.m_uniqueId = origin.m_uniqueId;
	};
	oFF.QFormulaItemFunction = function() {
	};
	oFF.QFormulaItemFunction.prototype = new oFF.QModelComponentList();
	oFF.QFormulaItemFunction._createFunction = function(context, parentNode) {
		var formula = new oFF.QFormulaItemFunction();
		formula.setupOlapList(context, parentNode, false, null);
		return formula;
	};
	oFF.QFormulaItemFunction.prototype.m_functionName = null;
	oFF.QFormulaItemFunction.prototype.m_solveOrder = 0;
	oFF.QFormulaItemFunction.prototype.copyFormulaItemFunction = function(
			origin) {
		var size;
		var i;
		var originItem;
		var cloneItem;
		var originType;
		this.copyModelComponentList(origin);
		size = origin.size();
		for (i = 0; i < size; i++) {
			originItem = origin.get(i);
			originType = originItem.getOlapComponentType();
			if (originType === oFF.OlapComponentType.FORMULA_ITEM_ATTRIBUTE) {
				cloneItem = oFF.QFormulaItemAttribute._createMember(this, this);
				cloneItem.copyFormulaItemAttribute(originItem);
			} else {
				if (originType === oFF.OlapComponentType.FORMULA_CONSTANT) {
					cloneItem = oFF.QFormulaItemConstant._createConstant(this,
							this);
					cloneItem.copyFormulaItemConstant(originItem);
				} else {
					if (originType === oFF.OlapComponentType.FORMULA_ITEM_MEMBER) {
						cloneItem = oFF.QFormulaItemMember._createMember(this,
								this);
						cloneItem.copyFormulaItemMember(originItem);
					} else {
						if (originType === oFF.OlapComponentType.FORMULA_OPERATION) {
							cloneItem = oFF.QFormulaItemOperation
									._createOperation(this, this);
							cloneItem.copyFormulaItemOperation(originItem);
						} else {
							if (originType === oFF.OlapComponentType.FORMULA_FUNCTION) {
								cloneItem = oFF.QFactory
										.newFormulaFunction(this);
								cloneItem.copyFormulaItemFunction(originItem);
							} else {
								throw oFF.XException
										.createRuntimeException(oFF.XStringUtils
												.concatenate3(
														"Unexpected component type '",
														originType.getName(),
														"' in formula function!"));
							}
						}
					}
				}
			}
			this.add(cloneItem);
		}
		this.m_solveOrder = origin.m_solveOrder;
		this.m_functionName = origin.m_functionName;
	};
	oFF.QFormulaItemFunction.prototype.releaseObject = function() {
		this.m_functionName = null;
		oFF.QModelComponentList.prototype.releaseObject.call(this);
	};
	oFF.QFormulaItemFunction.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FORMULA_FUNCTION;
	};
	oFF.QFormulaItemFunction.prototype.getFunctionName = function() {
		return this.m_functionName;
	};
	oFF.QFormulaItemFunction.prototype.setFunctionName = function(name) {
		this.m_functionName = name;
	};
	oFF.QFormulaItemFunction.prototype.setSolveOrder = function(solveOrder) {
		this.m_solveOrder = solveOrder;
		this.notifyNodeChanged();
	};
	oFF.QFormulaItemFunction.prototype.getSolveOrder = function() {
		return this.m_solveOrder;
	};
	oFF.QResultStructure = function() {
	};
	oFF.QResultStructure.prototype = new oFF.QModelComponentList();
	oFF.QResultStructure.createResultStructure = function(context, parentNode) {
		var resultStructure = new oFF.QResultStructure();
		resultStructure.setupOlapList(context, parentNode, true,
				"Result Structure");
		return resultStructure;
	};
	oFF.QResultStructure.prototype.copyResultStructure = function(origin) {
		var size;
		var context;
		var i;
		var originItem;
		oFF.QModelComponentList.prototype.copyModelComponentList.call(this,
				origin);
		size = origin.size();
		context = this.getContext();
		for (i = 0; i < size; i++) {
			originItem = origin.get(i);
			this.add(oFF.QResultStructureItem.createResultStructureItem(
					context, this, originItem.getResultStructureElement(),
					originItem.getResultVisibility()));
		}
	};
	oFF.QResultStructure.prototype.getController = function() {
		return this.getParentComponent();
	};
	oFF.QResultStructure.prototype.setResultVisibility = function(index,
			visibility) {
		this.get(index).setResultVisibility(visibility);
	};
	oFF.QResultStructure.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.RESULT_STRUCTURE;
	};
	oFF.QResultStructure.prototype.addWithVisibilityAt = function(index,
			element, visibility) {
		this.insert(index, oFF.QResultStructureItem.createResultStructureItem(
				this.getContext(), this, element, visibility));
	};
	oFF.QResultStructure.prototype.addWithVisibility = function(element,
			visibility) {
		this.add(oFF.QResultStructureItem.createResultStructureItem(this
				.getContext(), this, element, visibility));
	};
	oFF.QResultStructure.prototype.remove = function(element) {
		var iterator = this.getIterator();
		var item;
		while (iterator.hasNext()) {
			item = iterator.next();
			if (item.getResultStructureElement() === element) {
				this.removeElement(item);
				break;
			}
		}
		oFF.XObjectExt.release(iterator);
	};
	oFF.QResultStructure.prototype.resultStructureContains = function(element) {
		var iterator = this.getIterator();
		var next;
		while (iterator.hasNext()) {
			next = iterator.next();
			if (next.getResultStructureElement().isEqualTo(element)) {
				oFF.XObjectExt.release(iterator);
				return true;
			}
		}
		oFF.XObjectExt.release(iterator);
		return false;
	};
	oFF.QResultStructure.prototype.addResultStructureTopSection = function(
			items) {
		var size;
		var i;
		this.queueEventing();
		if (oFF.XCollectionUtils.hasElements(items)) {
			size = items.size();
			for (i = size - 1; i >= 0; i--) {
				this.insert(0, items.get(i));
			}
		} else {
			this.addDefault(true);
		}
		this.resumeEventing();
	};
	oFF.QResultStructure.prototype.addResultStructureBottomSection = function(
			items) {
		this.queueEventing();
		if (oFF.XCollectionUtils.hasElements(items)) {
			this.addAll(items);
		} else {
			this.addDefault(false);
		}
		this.resumeEventing();
	};
	oFF.QResultStructure.prototype.addDefault = function(atBeginning) {
		var controller = this.getController();
		if (controller.supportsConditionalResults()) {
			this.addHiddenIfSupported(atBeginning,
					oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS);
			this.addHiddenIfSupported(atBeginning,
					oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS);
		}
		if (!this.resultStructureContains(oFF.ResultStructureElement.TOTAL)) {
			if (atBeginning) {
				this.addWithVisibilityAt(0, oFF.ResultStructureElement.TOTAL,
						oFF.ResultVisibility.HIDDEN);
			} else {
				this.addWithVisibility(oFF.ResultStructureElement.TOTAL,
						oFF.ResultVisibility.HIDDEN);
			}
		}
	};
	oFF.QResultStructure.prototype.addHiddenIfSupported = function(atBeginning,
			element) {
		if (this.getController().getSupportedConditionalResults().contains(
				element)) {
			if (atBeginning) {
				this.addWithVisibilityAt(0, element,
						oFF.ResultVisibility.HIDDEN);
			} else {
				this.addWithVisibility(element, oFF.ResultVisibility.HIDDEN);
			}
		}
	};
	oFF.QResultStructure.prototype.applyInitialDefaultResultStructure = function(
			resultAlignment) {
		this.queueEventing();
		if (resultAlignment === oFF.ResultAlignment.TOP) {
			this.addWithVisibility(oFF.ResultStructureElement.TOTAL,
					oFF.ResultVisibility.VISIBLE);
			this.addWithVisibility(oFF.ResultStructureElement.MEMBERS,
					oFF.ResultVisibility.VISIBLE);
			this.addResultStructureTopSection(null);
		} else {
			if (resultAlignment === oFF.ResultAlignment.BOTTOM) {
				this.addWithVisibility(oFF.ResultStructureElement.MEMBERS,
						oFF.ResultVisibility.VISIBLE);
				this.addWithVisibility(oFF.ResultStructureElement.TOTAL,
						oFF.ResultVisibility.VISIBLE);
				this.addResultStructureBottomSection(null);
			} else {
				if (resultAlignment === oFF.ResultAlignment.TOPBOTTOM) {
					this.addWithVisibility(oFF.ResultStructureElement.TOTAL,
							oFF.ResultVisibility.VISIBLE);
					this.addWithVisibility(oFF.ResultStructureElement.MEMBERS,
							oFF.ResultVisibility.VISIBLE);
					this.addWithVisibility(oFF.ResultStructureElement.TOTAL,
							oFF.ResultVisibility.VISIBLE);
					this.addResultStructureTopSection(null);
					this.addResultStructureBottomSection(null);
				}
			}
		}
		this.resumeEventing();
	};
	oFF.QResultStructure.prototype.setResultVisibilityByElement = function(
			element, visibility) {
		var iterator = this.getIterator();
		var count = 0;
		var item;
		var controller;
		while (iterator.hasNext()) {
			item = iterator.next();
			if (item.getResultStructureElement() === element) {
				item.setResultVisibility(visibility);
				count++;
			}
		}
		oFF.XObjectExt.release(iterator);
		if (count === 0) {
			controller = this.getController();
			if (controller.getResultStructureReorderingCapability() === oFF.ReorderingCapability.FULL) {
				this.addWithVisibility(element, visibility);
			}
		}
	};
	oFF.QResultStructureController = function() {
	};
	oFF.QResultStructureController.prototype = new oFF.QResultStructureControllerGeneric();
	oFF.QResultStructureController._create = function(context, parentNode,
			location) {
		var controller = new oFF.QResultStructureController();
		controller.setupController(context, parentNode, location);
		return controller;
	};
	oFF.QResultStructureController.prototype.m_alignment = null;
	oFF.QResultStructureController.prototype.m_structure = null;
	oFF.QResultStructureController.prototype.m_visibility = null;
	oFF.QResultStructureController.prototype.setupController = function(
			context, parentNode, location) {
		oFF.QResultStructureControllerGeneric.prototype.setupGenericController
				.call(this, context, parentNode, location);
		this.m_alignment = null;
		this.m_visibility = oFF.XSetOfNameObject.create();
	};
	oFF.QResultStructureController.prototype.copyResultStructureController = function(
			origin) {
		oFF.QResultStructureControllerGeneric.prototype.copyResultStructureControllerGeneric
				.call(this, origin);
		this.m_alignment = origin.m_alignment;
		if (oFF.notNull(origin.m_structure)) {
			this.m_structure = oFF.QResultStructure.createResultStructure(this
					.getContext(), this);
			this.m_structure.copyResultStructure(origin.m_structure);
		}
		this.m_visibility = origin.m_visibility.clone();
	};
	oFF.QResultStructureController.prototype.releaseObject = function() {
		this.m_structure = oFF.XObjectExt.release(this.m_structure);
		this.m_visibility = oFF.XCollectionUtils
				.releaseEntriesAndCollectionIfNotNull(this.m_visibility);
		this.m_alignment = null;
		oFF.QResultStructureControllerGeneric.prototype.releaseObject
				.call(this);
	};
	oFF.QResultStructureController.prototype.internalSetTotalsAlignmentDefault = function(
			copy) {
		if (copy) {
			this.m_alignment = this.getResultAlignment();
		} else {
			this.m_alignment = null;
		}
	};
	oFF.QResultStructureController.prototype.setResultAlignment = function(
			alignment) {
		this.setResultAlignmentBase(alignment, true);
	};
	oFF.QResultStructureController.prototype.setResultAlignmentBase = function(
			alignment, recurseChildren) {
		if (oFF.isNull(alignment)) {
			return false;
		}
		if (!this.supportsResultAlignment()) {
			return false;
		}
		this.restoreTotalsAlignment(oFF.RestoreAction.CONDITIONAL_COPY,
				recurseChildren);
		if (this.m_alignment === alignment) {
			return false;
		}
		this.m_alignment = alignment;
		if (this.m_alignment === oFF.ResultAlignment.STRUCTURE) {
			this.getAdvancedResultStructure();
		}
		this.notifyNodeChanged();
		return true;
	};
	oFF.QResultStructureController.prototype.getResultAlignment = function() {
		var parentController;
		if (this.isTotalsAlignmentOnDefault()) {
			parentController = this.getParentController();
			if (oFF.notNull(parentController)) {
				return parentController.getResultAlignment();
			}
		}
		if (!this.supportsResultAlignment()) {
			return null;
		}
		this.initAlignment();
		return this.m_alignment;
	};
	oFF.QResultStructureController.prototype.initAlignment = function() {
		var lDefaultAlignment;
		var ltSupportedResultAlignments;
		if (oFF.isNull(this.m_alignment)) {
			lDefaultAlignment = oFF.ResultAlignment.BOTTOM;
			ltSupportedResultAlignments = this.getSupportedResultAlignments();
			if (ltSupportedResultAlignments.contains(lDefaultAlignment)) {
				this.m_alignment = lDefaultAlignment;
			} else {
				if (ltSupportedResultAlignments.hasElements()) {
					this.m_alignment = ltSupportedResultAlignments.get(0);
				} else {
					this.m_alignment = oFF.ResultAlignment.NONE;
				}
			}
		}
	};
	oFF.QResultStructureController.prototype.putOrChangeVisbility = function(
			alignment, element, visibility) {
		var key = oFF.QVisibilityTriplet.getVisibilityKey(alignment, element);
		var triplet = this.m_visibility.getByKey(key);
		if (oFF.isNull(triplet)) {
			this.m_visibility.add(oFF.QVisibilityTriplet.create(alignment,
					element, visibility));
			this.notifyNodeChanged();
		} else {
			if (triplet.getVisibility() !== visibility) {
				triplet.setVisibility(visibility);
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QResultStructureController.prototype.internalSetTotalsVisibilityDefault = function(
			copy) {
		this.queueEventing();
		if (copy) {
			this.putOrChangeVisbility(oFF.ResultAlignment.TOP,
					oFF.ResultStructureElement.TOTAL, this
							.getResultVisibilityByElementAndAlignment(
									oFF.ResultAlignment.TOP,
									oFF.ResultStructureElement.TOTAL));
			this.putOrChangeVisbility(oFF.ResultAlignment.TOP,
					oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS,
					this.getResultVisibilityByElementAndAlignment(
							oFF.ResultAlignment.TOP,
							oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS));
			this
					.putOrChangeVisbility(
							oFF.ResultAlignment.TOP,
							oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS,
							this
									.getResultVisibilityByElementAndAlignment(
											oFF.ResultAlignment.TOP,
											oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS));
			this.putOrChangeVisbility(oFF.ResultAlignment.BOTTOM,
					oFF.ResultStructureElement.TOTAL, this
							.getResultVisibilityByElementAndAlignment(
									oFF.ResultAlignment.TOP,
									oFF.ResultStructureElement.TOTAL));
			this.putOrChangeVisbility(oFF.ResultAlignment.BOTTOM,
					oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS,
					this.getResultVisibilityByElementAndAlignment(
							oFF.ResultAlignment.TOP,
							oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS));
			this
					.putOrChangeVisbility(
							oFF.ResultAlignment.BOTTOM,
							oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS,
							this
									.getResultVisibilityByElementAndAlignment(
											oFF.ResultAlignment.TOP,
											oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS));
		} else {
			this.m_visibility.clear();
		}
		this.resumeEventing();
	};
	oFF.QResultStructureController.prototype.setResultVisibilityByElement = function(
			element, visibility) {
		if (this.getResultAlignment() === oFF.ResultAlignment.STRUCTURE) {
			this.setResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.STRUCTURE, element, visibility);
		} else {
			this.setResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.TOP, element, visibility);
			this.setResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.BOTTOM, element, visibility);
		}
	};
	oFF.QResultStructureController.prototype.setResultVisibilityByElementAndAlignment = function(
			alignment, element, visibility) {
		var advancedResultStructure;
		var size;
		var i;
		var item;
		if (alignment === oFF.ResultAlignment.STRUCTURE) {
			this.restoreTotalsVisibility(oFF.RestoreAction.CONDITIONAL_COPY,
					true);
			advancedResultStructure = this.getAdvancedResultStructure();
			size = advancedResultStructure.size();
			for (i = 0; i < size; i++) {
				item = advancedResultStructure.get(i);
				if (element === item.getResultStructureElement()) {
					item.setResultVisibility(visibility);
				}
			}
		} else {
			if (alignment === oFF.ResultAlignment.TOPBOTTOM) {
				this.setResultVisibilityByElementAndAlignment(
						oFF.ResultAlignment.TOP, element, visibility);
				this.setResultVisibilityByElementAndAlignment(
						oFF.ResultAlignment.BOTTOM, element, visibility);
			} else {
				this.restoreTotalsVisibility(
						oFF.RestoreAction.CONDITIONAL_COPY, true);
				this.putOrChangeVisbility(alignment, element, visibility);
			}
		}
	};
	oFF.QResultStructureController.prototype.getResultVisibilityByElementAndAlignment = function(
			alignment, element) {
		var lParentController;
		var result;
		var topTriplet;
		var bottomTriplet;
		var key;
		var triplet;
		if (this.isTotalsVisibilityOnDefault() || this.m_visibility.isEmpty()) {
			lParentController = this.getParentController();
			if (oFF.notNull(lParentController)) {
				return lParentController.getResultVisibilityByElement(element);
			}
		}
		if (!this.supportsResultVisibility() || this.m_visibility.isEmpty()) {
			return oFF.ResultVisibility.HIDDEN;
		}
		result = null;
		if (alignment === oFF.ResultAlignment.TOPBOTTOM) {
			topTriplet = this.m_visibility.getByKey(oFF.QVisibilityTriplet
					.getVisibilityKey(oFF.ResultAlignment.TOP, element));
			bottomTriplet = this.m_visibility.getByKey(oFF.QVisibilityTriplet
					.getVisibilityKey(oFF.ResultAlignment.BOTTOM, element));
			if (oFF.notNull(topTriplet)
					&& oFF.notNull(bottomTriplet)
					&& topTriplet.getVisibility() === bottomTriplet
							.getVisibility()) {
				result = topTriplet.getVisibility();
			}
		} else {
			key = oFF.QVisibilityTriplet.getVisibilityKey(alignment, element);
			triplet = this.m_visibility.getByKey(key);
			if (oFF.notNull(triplet)) {
				result = triplet.getVisibility();
			}
		}
		if (oFF.isNull(result)) {
			return oFF.ResultVisibility.HIDDEN;
		}
		return result;
	};
	oFF.QResultStructureController.prototype.getResultVisibilitySettings = function() {
		if (this.m_visibility.isEmpty()) {
			return null;
		}
		return oFF.XIteratorWrapper.create(this.m_visibility.getIterator());
	};
	oFF.QResultStructureController.prototype.clearResultVisibilitySettings = function() {
		if (this.m_visibility.hasElements()) {
			this.m_visibility.clear();
			this.notifyNodeChanged();
		}
	};
	oFF.QResultStructureController.prototype.getTotalsStructure = function() {
		var resultAlignment = this.getResultAlignment();
		var list;
		var topVisibility;
		var bottomVisibility;
		if (resultAlignment === oFF.ResultAlignment.STRUCTURE) {
			oFF.XObjectExt.checkNotNull(this.m_structure,
					"Structure must be available at this point in time");
			return this.m_structure;
		}
		list = oFF.XList.create();
		if (resultAlignment === oFF.ResultAlignment.TOP
				|| resultAlignment === oFF.ResultAlignment.TOPBOTTOM) {
			topVisibility = this.getResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL);
			list.add(oFF.QResultStructureItem.createResultStructureItem(this
					.getContext(), this, oFF.ResultStructureElement.TOTAL,
					topVisibility));
			topVisibility = this.getResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.TOP,
					oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS);
			list.add(oFF.QResultStructureItem.createResultStructureItem(this
					.getContext(), this,
					oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS,
					topVisibility));
			topVisibility = this.getResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.TOP,
					oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS);
			list.add(oFF.QResultStructureItem.createResultStructureItem(this
					.getContext(), this,
					oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS,
					topVisibility));
		}
		list.add(oFF.QResultStructureItem.createResultStructureItem(this
				.getContext(), this, oFF.ResultStructureElement.MEMBERS,
				oFF.ResultVisibility.VISIBLE));
		if (resultAlignment === oFF.ResultAlignment.BOTTOM
				|| resultAlignment === oFF.ResultAlignment.TOPBOTTOM) {
			bottomVisibility = this.getResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.BOTTOM,
					oFF.ResultStructureElement.TOTAL);
			list.add(oFF.QResultStructureItem.createResultStructureItem(this
					.getContext(), this, oFF.ResultStructureElement.TOTAL,
					bottomVisibility));
			bottomVisibility = this.getResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.BOTTOM,
					oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS);
			list.add(oFF.QResultStructureItem.createResultStructureItem(this
					.getContext(), this,
					oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS,
					bottomVisibility));
			bottomVisibility = this.getResultVisibilityByElementAndAlignment(
					oFF.ResultAlignment.BOTTOM,
					oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS);
			list.add(oFF.QResultStructureItem.createResultStructureItem(this
					.getContext(), this,
					oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS,
					bottomVisibility));
		}
		return list;
	};
	oFF.QResultStructureController.prototype.getAdvancedResultStructure = function() {
		var lResultAlignment;
		if (!this.supportsAdvancedResultStructure()) {
			oFF.noSupport();
		}
		if (oFF.isNull(this.m_structure)) {
			this.m_structure = oFF.QResultStructure.createResultStructure(this
					.getContext(), this);
			lResultAlignment = this.getResultAlignment();
			this.m_structure
					.applyInitialDefaultResultStructure(lResultAlignment);
		}
		return this.m_structure;
	};
	oFF.QComplexSorting = function() {
	};
	oFF.QComplexSorting.prototype = new oFF.QComplexAndDataCellSorting();
	oFF.QComplexSorting.create = function(parentNode, path) {
		var sorting = new oFF.QComplexSorting();
		sorting.setupSorting(parentNode, path);
		return sorting;
	};
	oFF.QComplexSorting.prototype.copyComplexSorting = function(origin) {
		oFF.QComplexAndDataCellSorting.prototype.copyComplexAndDataCellSorting
				.call(this, origin);
	};
	oFF.QComplexSorting.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.COMPLEX_SORTING;
	};
	oFF.QComplexSorting.prototype.getSortingType = function() {
		return oFF.SortType.COMPLEX;
	};
	oFF.QDataCellSorting = function() {
	};
	oFF.QDataCellSorting.prototype = new oFF.QComplexAndDataCellSorting();
	oFF.QDataCellSorting.create = function(parentNode, path) {
		var sorting = new oFF.QDataCellSorting();
		sorting.setupSorting(parentNode, path);
		return sorting;
	};
	oFF.QDataCellSorting.prototype.m_dimension = null;
	oFF.QDataCellSorting.prototype.copyDataCellSorting = function(origin) {
		var queryModel;
		oFF.QComplexAndDataCellSorting.prototype.copyComplexAndDataCellSorting
				.call(this, origin);
		queryModel = this.getQueryModel();
		if (oFF.notNull(origin.m_dimension)) {
			this.setDimension(queryModel
					.getDimensionByNameFromExistingMetadata(origin
							.getDimension().getName()));
		}
	};
	oFF.QDataCellSorting.prototype.releaseObject = function() {
		this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
		oFF.QComplexAndDataCellSorting.prototype.releaseObject.call(this);
	};
	oFF.QDataCellSorting.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.DATA_CELL_SORTING;
	};
	oFF.QDataCellSorting.prototype.getSortingType = function() {
		return oFF.SortType.DATA_CELL_VALUE;
	};
	oFF.QDataCellSorting.prototype.supportsDimension = function() {
		return true;
	};
	oFF.QDataCellSorting.prototype.getDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
	};
	oFF.QDataCellSorting.prototype.setDimension = function(dimension) {
		this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
	};
	oFF.QFormulaMeasureLink = function() {
	};
	oFF.QFormulaMeasureLink.prototype = new oFF.XObjectExt();
	oFF.QFormulaMeasureLink.prototype.m_origin = null;
	oFF.QFormulaMeasureLink.prototype.getFormula = function() {
		return this.m_origin.getFormula();
	};
	oFF.QFormulaMeasureLink.prototype.isCalculatedBeforeAggregation = function() {
		return this.m_origin.isCalculatedBeforeAggregation();
	};
	oFF.QFormulaMeasureLink.prototype.setFormula = function(element) {
		this.m_origin.setFormula(element);
	};
	oFF.QFormulaMeasureLink.prototype.setIsCalculatedBeforeAggregation = function(
			calculateBeforeAggregation) {
		this.m_origin
				.setIsCalculatedBeforeAggregation(calculateBeforeAggregation);
	};
	oFF.QFormulaMeasureLink.prototype.getDefaultSelectedDimensionNames = function() {
		return this.m_origin.getDefaultSelectedDimensionNames();
	};
	oFF.QFormulaMeasureLink.prototype.addExceptionAggregationDimension = function(
			dimension) {
		this.m_origin.addExceptionAggregationDimension(dimension);
	};
	oFF.QFormulaMeasureLink.prototype.addExceptionAggregationDimensionName = function(
			dimensionName) {
		this.m_origin.addExceptionAggregationDimensionName(dimensionName);
	};
	oFF.QFormulaMeasureLink.prototype.acceptsMoreExceptionAggregationDimensions = function() {
		return this.m_origin.acceptsMoreExceptionAggregationDimensions();
	};
	oFF.QFormulaMeasureLink.prototype.getSupportedExceptionAggregationTypes = function() {
		return this.m_origin.getSupportedExceptionAggregationTypes();
	};
	oFF.QFormulaMeasureLink.prototype.supportsExceptionAggregationType = function(
			aggrType) {
		return this.m_origin.supportsExceptionAggregationType(aggrType);
	};
	oFF.QFormulaMeasureLink.prototype.supportsDimensionForExceptionAggregation = function(
			dimName, aggrType) {
		return this.m_origin.supportsDimensionForExceptionAggregation(dimName,
				aggrType);
	};
	oFF.QFormulaMeasureLink.prototype.getSupportedDimensionsForExceptionAggregation = function(
			aggrType) {
		return this.m_origin
				.getSupportedDimensionsForExceptionAggregation(aggrType);
	};
	oFF.QFormulaMeasureLink.prototype.getMaxNumberOfDimensionsForExceptionAggregation = function(
			aggrType) {
		return this.m_origin
				.getMaxNumberOfDimensionsForExceptionAggregation(aggrType);
	};
	oFF.QFormulaMeasureLink.prototype.getExceptionAggregationDimensions = function() {
		return this.m_origin.getExceptionAggregationDimensions();
	};
	oFF.QFormulaMeasureLink.prototype.getExceptionAggregationType = function() {
		return this.m_origin.getExceptionAggregationType();
	};
	oFF.QFormulaMeasureLink.prototype.clearExceptionAggregationDimensions = function() {
		this.m_origin.clearExceptionAggregationDimensions();
	};
	oFF.QFormulaMeasureLink.prototype.removeExceptionAggregationDimension = function(
			dimensionName) {
		this.m_origin.removeExceptionAggregationDimension(dimensionName);
	};
	oFF.QFormulaMeasureLink.prototype.setExceptionAggregationType = function(
			aggregationType) {
		this.m_origin.setExceptionAggregationType(aggregationType);
	};
	oFF.QFormulaMeasureLink.prototype.addExternalDimensionToIgnore = function(
			externalDimensionName) {
		this.m_origin.addExternalDimensionToIgnore(externalDimensionName);
	};
	oFF.QFormulaMeasureLink.prototype.addPostAggregationDimension = function(
			dimension) {
		this.m_origin.addPostAggregationDimension(dimension);
	};
	oFF.QFormulaMeasureLink.prototype.addPostAggregationDimensionName = function(
			dimensionName) {
		this.m_origin.addPostAggregationDimensionName(dimensionName);
	};
	oFF.QFormulaMeasureLink.prototype.clearIgnoredExternalDimensions = function() {
		this.m_origin.clearIgnoredExternalDimensions();
	};
	oFF.QFormulaMeasureLink.prototype.clearPostAggregationDimensions = function() {
		this.m_origin.clearPostAggregationDimensions();
	};
	oFF.QFormulaMeasureLink.prototype.getAggregationType = function() {
		return this.m_origin.getAggregationType();
	};
	oFF.QFormulaMeasureLink.prototype.getExceptions = function() {
		return this.m_origin.getExceptions();
	};
	oFF.QFormulaMeasureLink.prototype.getIgnoredExternalDimensions = function() {
		return this.m_origin.getIgnoredExternalDimensions();
	};
	oFF.QFormulaMeasureLink.prototype.getNumericPrecision = function() {
		return this.m_origin.getNumericPrecision();
	};
	oFF.QFormulaMeasureLink.prototype.getNumericScale = function() {
		return this.m_origin.getNumericScale();
	};
	oFF.QFormulaMeasureLink.prototype.getNumericShift = function() {
		return this.m_origin.getNumericShift();
	};
	oFF.QFormulaMeasureLink.prototype.getDataType = function() {
		return this.m_origin.getDataType();
	};
	oFF.QFormulaMeasureLink.prototype.getPostAggregationDimensions = function() {
		return this.m_origin.getPostAggregationDimensions();
	};
	oFF.QFormulaMeasureLink.prototype.getPostAggregationType = function() {
		return this.m_origin.getPostAggregationType();
	};
	oFF.QFormulaMeasureLink.prototype.getPresentationSignReversal = function() {
		return this.m_origin.getPresentationSignReversal();
	};
	oFF.QFormulaMeasureLink.prototype.getQueryDataCells = function() {
		return this.m_origin.getQueryDataCells();
	};
	oFF.QFormulaMeasureLink.prototype.getResultCalculation = function() {
		return this.m_origin.getResultCalculation();
	};
	oFF.QFormulaMeasureLink.prototype.getSingleValueCalculation = function() {
		return this.m_origin.getSingleValueCalculation();
	};
	oFF.QFormulaMeasureLink.prototype.isIgnoringAllExternalDimensions = function() {
		return this.m_origin.isIgnoringAllExternalDimensions();
	};
	oFF.QFormulaMeasureLink.prototype.isPostAggregationIgnoringHierarchy = function() {
		return this.m_origin.isPostAggregationIgnoringHierarchy();
	};
	oFF.QFormulaMeasureLink.prototype.isSelectionCandidate = function() {
		return this.m_origin.isSelectionCandidate();
	};
	oFF.QFormulaMeasureLink.prototype.removeExternalDimensionToIgnore = function(
			externalDimensionName) {
		this.m_origin.removeExternalDimensionToIgnore(externalDimensionName);
	};
	oFF.QFormulaMeasureLink.prototype.removePostAggregationDimensions = function(
			postAggregationDimensionName) {
		this.m_origin
				.removePostAggregationDimensions(postAggregationDimensionName);
	};
	oFF.QFormulaMeasureLink.prototype.setAggregationType = function(
			aggregationType) {
		this.m_origin.setAggregationType(aggregationType);
	};
	oFF.QFormulaMeasureLink.prototype.setIgnoreAllExternalDimensions = function(
			isIgnoringAllExternalDimensions) {
		this.m_origin
				.setIgnoreAllExternalDimensions(isIgnoringAllExternalDimensions);
	};
	oFF.QFormulaMeasureLink.prototype.setNumericPrecision = function(precision) {
		this.m_origin.setNumericPrecision(precision);
	};
	oFF.QFormulaMeasureLink.prototype.setNumericScale = function(scale) {
		this.m_origin.setNumericScale(scale);
	};
	oFF.QFormulaMeasureLink.prototype.setNumericShift = function(shift) {
		this.m_origin.setNumericShift(shift);
	};
	oFF.QFormulaMeasureLink.prototype.setPostAggregationIgnoreHierarchy = function(
			ignoreHierarchy) {
		this.m_origin.setPostAggregationIgnoreHierarchy(ignoreHierarchy);
	};
	oFF.QFormulaMeasureLink.prototype.setPostAggregationType = function(
			postAggregationType) {
		this.m_origin.setPostAggregationType(postAggregationType);
	};
	oFF.QFormulaMeasureLink.prototype.setPresentationSignReversal = function(
			isSignReversed) {
		this.m_origin.setPresentationSignReversal(isSignReversed);
	};
	oFF.QFormulaMeasureLink.prototype.supportsCalculatedBeforeAggregation = function() {
		return this.m_origin.supportsCalculatedBeforeAggregation();
	};
	oFF.QFormulaMeasureLink.prototype.setUnitType = function(unitType) {
		this.m_origin.setUnitType(unitType);
	};
	oFF.QFormulaMeasureLink.prototype.getUnitType = function() {
		return this.m_origin.getUnitType();
	};
	oFF.QFormulaMeasureLink.prototype.setUnitFixed = function(unitFixed) {
		this.m_origin.setUnitFixed(unitFixed);
	};
	oFF.QFormulaMeasureLink.prototype.getUnitFixed = function() {
		return this.m_origin.getUnitFixed();
	};
	oFF.QFormulaMeasureLink.prototype.getDimensionMemberNameValueException = function() {
		return this.m_origin.getDimensionMemberNameValueException();
	};
	oFF.QFormulaMeasureLink.prototype.createFilterOperation = function() {
		return this.m_origin.createFilterOperation();
	};
	oFF.QFormulaMeasureLink.prototype.getIntByPresentation = function(
			presentation) {
		return this.m_origin.getIntByPresentation(presentation);
	};
	oFF.QFormulaMeasureLink.prototype.getDoubleByPresentation = function(
			presentation) {
		return this.m_origin.getDoubleByPresentation(presentation);
	};
	oFF.QFormulaMeasureLink.prototype.getDateByPresentation = function(
			presentation) {
		return this.m_origin.getDateByPresentation(presentation);
	};
	oFF.QFormulaMeasureLink.prototype.getStringByPresentation = function(
			presentation) {
		return this.m_origin.getStringByPresentation(presentation);
	};
	oFF.QFormulaMeasureLink.prototype.getPolygonByPresentation = function(
			presentation) {
		return this.m_origin.getPolygonByPresentation(presentation);
	};
	oFF.QFormulaMeasureLink.prototype.getTimeSpanByPresentation = function(
			presentation) {
		return this.m_origin.getTimeSpanByPresentation(presentation);
	};
	oFF.QFormulaMeasureLink.prototype.getValueAsString = function() {
		return this.m_origin.getValueAsString();
	};
	oFF.QFormulaMeasureLink.prototype.getFieldValue = function(field) {
		return this.m_origin.getFieldValue(field);
	};
	oFF.QFormulaMeasureLink.prototype.getKeyFieldValue = function() {
		return this.m_origin.getKeyFieldValue();
	};
	oFF.QFormulaMeasureLink.prototype.getAllFieldValues = function() {
		return this.m_origin.getAllFieldValues();
	};
	oFF.QFormulaMeasureLink.prototype.getResultSetFieldValues = function() {
		return this.m_origin.getResultSetFieldValues();
	};
	oFF.QFormulaMeasureLink.prototype.setResultVisibility = function(
			memberVisibility) {
		this.m_origin.setResultVisibility(memberVisibility);
	};
	oFF.QFormulaMeasureLink.prototype.getResultVisibility = function() {
		return this.m_origin.getResultVisibility();
	};
	oFF.QFormulaMeasureLink.prototype.loadBLOBForField = function(syncType,
			listener, customIdentifier, field) {
		return this.m_origin.loadBLOBForField(syncType, listener,
				customIdentifier, field);
	};
	oFF.QFormulaMeasureLink.prototype.getInternalResourceURL = function(field) {
		return this.m_origin.getInternalResourceURL(field);
	};
	oFF.QFormulaMeasureLink.prototype.getPropertiesValue = function() {
		return this.m_origin.getPropertiesValue();
	};
	oFF.QFormulaMeasureLink.prototype.getStructureValue = function() {
		return this.m_origin.getStructureValue();
	};
	oFF.QFormulaMeasureLink.prototype.getStructureListValue = function() {
		return this.m_origin.getStructureListValue();
	};
	oFF.QFormulaMeasureLink.prototype.getErrorValue = function() {
		return this.m_origin.getErrorValue();
	};
	oFF.QFormulaMeasureLink.prototype.getValue = function() {
		return this.m_origin.getValue();
	};
	oFF.QFormulaMeasureLink.prototype.hasValue = function() {
		return this.m_origin.hasValue();
	};
	oFF.QFormulaMeasureLink.prototype.getFormattedValue = function() {
		return this.m_origin.getFormattedValue();
	};
	oFF.QFormulaMeasureLink.prototype.getValueType = function() {
		return this.m_origin.getValueType();
	};
	oFF.QFormulaMeasureLink.prototype.getGeometry = function() {
		return this.m_origin.getGeometry();
	};
	oFF.QFormulaMeasureLink.prototype.getPolygon = function() {
		return this.m_origin.getPolygon();
	};
	oFF.QFormulaMeasureLink.prototype.getPoint = function() {
		return this.m_origin.getPoint();
	};
	oFF.QFormulaMeasureLink.prototype.getMultiPoint = function() {
		return this.m_origin.getMultiPoint();
	};
	oFF.QFormulaMeasureLink.prototype.getMultiPolygon = function() {
		return this.m_origin.getMultiPolygon();
	};
	oFF.QFormulaMeasureLink.prototype.getLineString = function() {
		return this.m_origin.getLineString();
	};
	oFF.QFormulaMeasureLink.prototype.getMultiLineString = function() {
		return this.m_origin.getMultiLineString();
	};
	oFF.QFormulaMeasureLink.prototype.getString = function() {
		return this.m_origin.getString();
	};
	oFF.QFormulaMeasureLink.prototype.getDouble = function() {
		return this.m_origin.getDouble();
	};
	oFF.QFormulaMeasureLink.prototype.getInteger = function() {
		return this.m_origin.getInteger();
	};
	oFF.QFormulaMeasureLink.prototype.getBoolean = function() {
		return this.m_origin.getBoolean();
	};
	oFF.QFormulaMeasureLink.prototype.getLong = function() {
		return this.m_origin.getLong();
	};
	oFF.QFormulaMeasureLink.prototype.getDate = function() {
		return this.m_origin.getDate();
	};
	oFF.QFormulaMeasureLink.prototype.getTime = function() {
		return this.m_origin.getTime();
	};
	oFF.QFormulaMeasureLink.prototype.getDateTime = function() {
		return this.m_origin.getDateTime();
	};
	oFF.QFormulaMeasureLink.prototype.getTimeSpan = function() {
		return this.m_origin.getTimeSpan();
	};
	oFF.QFormulaMeasureLink.prototype.getNull = function() {
		return this.m_origin.getNull();
	};
	oFF.QFormulaMeasureLink.prototype.getDimensionMember = function() {
		return this.m_origin.getDimensionMember();
	};
	oFF.QFormulaMeasureLink.prototype.getParent = function() {
		return this.m_origin.getParent();
	};
	oFF.QFormulaMeasureLink.prototype.registerDeserializeListener = function(
			listener, customIdentifier) {
		this.m_origin.registerDeserializeListener(listener, customIdentifier);
	};
	oFF.QFormulaMeasureLink.prototype.unregisterDeserializeListener = function(
			listener) {
		this.m_origin.unregisterDeserializeListener(listener);
	};
	oFF.QFormulaMeasureLink.prototype.isComponentNode = function() {
		return this.m_origin.isComponentNode();
	};
	oFF.QFormulaMeasureLink.prototype.getChildrenIterator = function() {
		return this.m_origin.getChildrenIterator();
	};
	oFF.QFormulaMeasureLink.prototype.getChildren = function() {
		return this.m_origin.getChildren();
	};
	oFF.QFormulaMeasureLink.prototype.getNamedChildren = function() {
		return this.m_origin.getNamedChildren();
	};
	oFF.QFormulaMeasureLink.prototype.getIndexedChildren = function() {
		return this.m_origin.getIndexedChildren();
	};
	oFF.QFormulaMeasureLink.prototype.serialize = function(modelFormat,
			capabilities) {
		return this.m_origin.serialize(modelFormat, capabilities);
	};
	oFF.QFormulaMeasureLink.prototype.serializeToFormat = function(modelFormat) {
		return this.m_origin.serializeToFormat(modelFormat);
	};
	oFF.QFormulaMeasureLink.prototype.serializeToElement = function(
			modelFormat, capabilities) {
		return this.m_origin.serializeToElement(modelFormat, capabilities);
	};
	oFF.QFormulaMeasureLink.prototype.deserializeExt = function(modelFormat,
			expression) {
		return this.m_origin.deserializeExt(modelFormat, expression);
	};
	oFF.QFormulaMeasureLink.prototype.deserializeFromElementExt = function(
			modelFormat, element) {
		return this.m_origin.deserializeFromElementExt(modelFormat, element);
	};
	oFF.QFormulaMeasureLink.prototype.deserializeNewComponentExt = function(
			componentType, modelFormat, expression) {
		return this.m_origin.deserializeNewComponentExt(componentType,
				modelFormat, expression);
	};
	oFF.QFormulaMeasureLink.prototype.deserializeNewComponentFromElementExt = function(
			componentType, modelFormat, element) {
		return this.m_origin.deserializeNewComponentFromElementExt(
				componentType, modelFormat, element);
	};
	oFF.QFormulaMeasureLink.prototype.setProtocolExtension = function(element,
			replace) {
		this.m_origin.setProtocolExtension(element, replace);
	};
	oFF.QFormulaMeasureLink.prototype.getProtocolExtension = function() {
		return this.m_origin.getProtocolExtension();
	};
	oFF.QFormulaMeasureLink.prototype.isProtocolExtensionReplacing = function() {
		return this.m_origin.isProtocolExtensionReplacing();
	};
	oFF.QFormulaMeasureLink.prototype.cloneOlapComponent = function(context,
			parent) {
		return this.m_origin.cloneOlapComponent(context, parent);
	};
	oFF.QFormulaMeasureLink.prototype.getOlapComponentType = function() {
		return this.m_origin.getOlapComponentType();
	};
	oFF.QFormulaMeasureLink.prototype.registerChangedListener = function(
			listener, customIdentifier) {
		return this.m_origin
				.registerChangedListener(listener, customIdentifier);
	};
	oFF.QFormulaMeasureLink.prototype.unregisterChangedListener = function(
			listener) {
		return this.m_origin.unregisterChangedListener(listener);
	};
	oFF.QFormulaMeasureLink.prototype.getComponentType = function() {
		return this.m_origin.getComponentType();
	};
	oFF.QFormulaMeasureLink.prototype.queueEventing = function() {
		this.m_origin.queueEventing();
	};
	oFF.QFormulaMeasureLink.prototype.stopEventing = function() {
		this.m_origin.stopEventing();
	};
	oFF.QFormulaMeasureLink.prototype.isEventingStopped = function() {
		return this.m_origin.isEventingStopped();
	};
	oFF.QFormulaMeasureLink.prototype.resumeEventing = function() {
		this.m_origin.resumeEventing();
	};
	oFF.QFormulaMeasureLink.prototype.getApplication = function() {
		return this.m_origin.getApplication();
	};
	oFF.QFormulaMeasureLink.prototype.getSession = function() {
		return this.m_origin.getSession();
	};
	oFF.QFormulaMeasureLink.prototype.getContext = function() {
		return this.m_origin.getContext();
	};
	oFF.QFormulaMeasureLink.prototype.getOlapEnv = function() {
		return this.m_origin.getOlapEnv();
	};
	oFF.QFormulaMeasureLink.prototype.getFieldAccessorSingle = function() {
		return this.m_origin.getFieldAccessorSingle();
	};
	oFF.QFormulaMeasureLink.prototype.getModelCapabilities = function() {
		return this.m_origin.getModelCapabilities();
	};
	oFF.QFormulaMeasureLink.prototype.getDrillManager = function() {
		return this.m_origin.getDrillManager();
	};
	oFF.QFormulaMeasureLink.prototype.getQueryModel = function() {
		return this.m_origin.getQueryModel();
	};
	oFF.QFormulaMeasureLink.prototype.getVariableContainer = function() {
		return this.m_origin.getVariableContainer();
	};
	oFF.QFormulaMeasureLink.prototype.getDimensionAccessor = function() {
		return this.m_origin.getDimensionAccessor();
	};
	oFF.QFormulaMeasureLink.prototype.getQueryManager = function() {
		return this.m_origin.getQueryManager();
	};
	oFF.QFormulaMeasureLink.prototype.getDataSource = function() {
		return this.m_origin.getDataSource();
	};
	oFF.QFormulaMeasureLink.prototype.getTagging = function() {
		return this.m_origin.getTagging();
	};
	oFF.QFormulaMeasureLink.prototype.getTagValue = function(tagName) {
		return this.m_origin.getTagValue(tagName);
	};
	oFF.QFormulaMeasureLink.prototype.getContentElement = function() {
		return this.m_origin.getContentElement();
	};
	oFF.QFormulaMeasureLink.prototype.getContentConstant = function() {
		return this.m_origin.getContentConstant();
	};
	oFF.QFormulaMeasureLink.prototype.getName = function() {
		return this.m_origin.getName();
	};
	oFF.QFormulaMeasureLink.prototype.getText = function() {
		return this.m_origin.getText();
	};
	oFF.QFormulaMeasureLink.prototype.isNode = function() {
		return this.m_origin.isNode();
	};
	oFF.QFormulaMeasureLink.prototype.isLeaf = function() {
		return this.m_origin.isLeaf();
	};
	oFF.QFormulaMeasureLink.prototype.getConvenienceCommands = function() {
		return this.m_origin.getConvenienceCommands();
	};
	oFF.QFormulaMeasureLink.prototype.getSelectValue = function() {
		return this.m_origin.getSelectValue();
	};
	oFF.QFormulaMeasureLink.prototype.getSelectField = function() {
		return this.m_origin.getSelectField();
	};
	oFF.QFormulaMeasureLink.prototype.getSelectHierarchyName = function() {
		return this.m_origin.getSelectHierarchyName();
	};
	oFF.QFormulaMeasureLink.prototype.getMemberType = function() {
		return this.m_origin.getMemberType();
	};
	oFF.QFormulaMeasureLink.prototype.getType = function() {
		return this.m_origin.getType();
	};
	oFF.QFormulaMeasureLink.prototype.getSelectableElement = function() {
		return this.m_origin.getSelectableElement();
	};
	oFF.QFormulaMeasureLink.prototype.getDimension = function() {
		return this.m_origin.getDimension();
	};
	oFF.QFormulaMeasureLink.prototype.addDefaultSelectionDimensionByName = function(
			dimensionName) {
		this.m_origin.addDefaultSelectionDimensionByName(dimensionName);
	};
	oFF.QFormulaMeasureLink.prototype.initializeFieldValues = function() {
		this.m_origin.initializeFieldValues();
	};
	oFF.QFormulaMeasureLink.prototype.setIsSelectionCandidate = function(
			isSelectionCandidate) {
		this.m_origin.setIsSelectionCandidate(isSelectionCandidate);
	};
	oFF.QFormulaMeasureLink.prototype.setResultCalculation = function(
			resultCalculation) {
		this.m_origin.setResultCalculation(resultCalculation);
	};
	oFF.QFormulaMeasureLink.prototype.setSingleValueCalculation = function(
			singleValueCalculation) {
		this.m_origin.setSingleValueCalculation(singleValueCalculation);
	};
	oFF.QFormulaMeasureLink.prototype.setDataType = function(dataType) {
		this.m_origin.setDataType(dataType);
	};
	oFF.QFormulaMeasureLink.prototype.setUnitName = function(unitName) {
		this.m_origin.setUnitName(unitName);
	};
	oFF.QFormulaMeasureLink.prototype.getUnitName = function() {
		return this.m_origin.getUnitName();
	};
	oFF.QFormulaMeasureLink.prototype.setUnitTextName = function(unitTextName) {
		this.m_origin.setUnitTextName(unitTextName);
	};
	oFF.QFormulaMeasureLink.prototype.getUnitTextName = function() {
		return this.m_origin.getUnitTextName();
	};
	oFF.QFormulaMeasureLink.prototype.setType = function(type) {
		this.m_origin.setType(type);
	};
	oFF.QFormulaMeasureLink.prototype.setDimensionMemberNameValueException = function(
			valueException) {
		this.m_origin.setDimensionMemberNameValueException(valueException);
	};
	oFF.QFormulaMeasureLink.prototype.addFieldValue = function(fieldValue) {
		this.m_origin.addFieldValue(fieldValue);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddField = function(field) {
		return this.m_origin.createAndAddField(field);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithString = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithString(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithAmount = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithAmount(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldWithValue = function(
			field, value) {
		return this.m_origin.createAndAddFieldWithValue(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithInteger = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithInteger(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithLong = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithLong(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithDouble = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithDouble(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithDate = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithDate(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithDateTime = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithDateTime(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithTime = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithTime(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.createAndAddFieldValueWithBoolean = function(
			field, value) {
		return this.m_origin.createAndAddFieldValueWithBoolean(field, value);
	};
	oFF.QFormulaMeasureLink.prototype.setDimension = function(dimension) {
		this.m_origin.setDimension(dimension);
	};
	oFF.QFormulaMeasureLink.prototype.getChangedListeners = function() {
		return this.m_origin.getChangedListeners();
	};
	oFF.QFormulaMeasureLink.prototype.getPropertyStringValue = function(type) {
		return this.m_origin.getPropertyStringValue(type);
	};
	oFF.QFormulaMeasureLink.prototype.getPropertyConstantValue = function(type) {
		return this.m_origin.getPropertyConstantValue(type);
	};
	oFF.QFormulaMeasureLink.prototype.getParentComponent = function() {
		return this.m_origin.getParentComponent();
	};
	oFF.QFormulaMeasureLink.prototype.setParent = function(parent) {
		this.m_origin.setParent(parent);
	};
	oFF.QFormulaMeasureLink.prototype.addSecondaryParent = function(parent) {
		this.m_origin.addSecondaryParent(parent);
	};
	oFF.QFormulaMeasureLink.prototype.removeSecondaryParent = function(parent) {
		this.m_origin.removeSecondaryParent(parent);
	};
	oFF.QFormulaMeasureLink.prototype.resetChangeState = function() {
		this.m_origin.resetChangeState();
	};
	oFF.QFormulaMeasureLink.prototype.notifyChildChanged = function(
			changedNodes) {
		this.m_origin.notifyChildChanged(changedNodes);
	};
	oFF.QFormulaMeasureLink.prototype.notifyNodeChanged = function() {
		this.m_origin.notifyNodeChanged();
	};
	oFF.QFormulaMeasureLink.prototype.setDeltaPhase = function(phase) {
		this.m_origin.setDeltaPhase(phase);
	};
	oFF.QFormulaMeasureLink.prototype.getModCounter = function() {
		return this.m_origin.getModCounter();
	};
	oFF.QFormulaMeasureLink.prototype.isRoot = function() {
		return this.m_origin.isRoot();
	};
	oFF.QFormulaMeasureLink.prototype.setTagging = function(tagging) {
		this.m_origin.setTagging(tagging);
	};
	oFF.QFormulaMeasureLink.prototype.getNotificationListener = function() {
		return this.m_origin.getNotificationListener();
	};
	oFF.QFormulaMeasureLink.prototype.setNotificationListener = function(owner) {
		this.m_origin.setNotificationListener(owner);
	};
	oFF.QFormulaMeasureLink.prototype.mergeDeepRecursive = function(settings,
			other) {
		this.m_origin.mergeDeepRecursive(settings, other);
	};
	oFF.QFormulaMeasureLink.prototype.setName = function(name) {
		this.m_origin.setName(name);
	};
	oFF.QFormulaMeasureLink.prototype.setText = function(text) {
		this.m_origin.setText(text);
	};
	oFF.QFormulaMeasureLink.prototype.setContext = function(context) {
		this.m_origin.setContext(context);
	};
	oFF.QAttributeList = function() {
	};
	oFF.QAttributeList.prototype = new oFF.QModelComponentWithNameList();
	oFF.QAttributeList.createAttributeList = function(parentNode, name) {
		var list = new oFF.QAttributeList();
		list.setupOlapList(parentNode, parentNode, false, name);
		return list;
	};
	oFF.QAttributeList.prototype.copyAttributeList = function(origin) {
		oFF.QModelComponentWithNameList.prototype.copyModelComponentList.call(
				this, origin);
	};
	oFF.QAttributeList.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.ATTRIBUTE_LIST;
	};
	oFF.QAttributeList.prototype.removeAttributeAt = function(index) {
		this.removeAt(index);
	};
	oFF.QAttributeList.prototype.getAttributeAt = function(index) {
		return this.get(index);
	};
	oFF.QAttributeList.prototype.getAttributeByName = function(name) {
		return this.getByKey(name);
	};
	oFF.QDataCellList = function() {
	};
	oFF.QDataCellList.prototype = new oFF.QModelComponentWithNameList();
	oFF.QDataCellList.createQueryDataCellList = function(queryModel) {
		var queryDataCellList = new oFF.QDataCellList();
		queryDataCellList.setupOlapList(queryModel, queryModel, true,
				"Data Cells");
		return queryDataCellList;
	};
	oFF.QDataCellList.prototype.createElementList = function() {
		return oFF.XListOfNameObject.create();
	};
	oFF.QDataCellList.prototype.newQueryDataCell = function(name) {
		var dataCell = oFF.QDataCell._create(this, name);
		this.add(dataCell);
		return dataCell;
	};
	oFF.QDataCellList.prototype.getQueryDataCellAt = function(index) {
		return this.get(index);
	};
	oFF.QDataCellList.prototype.addInternal = function(element) {
		if (this.containsKey(element.getName())) {
			this.removeInternal(element);
		}
		oFF.QModelComponentWithNameList.prototype.addInternal.call(this,
				element);
	};
	oFF.QDataCellList.prototype.add = function(element) {
		if (this.containsKey(element.getName())) {
			this.removeElement(element);
		}
		oFF.QModelComponentWithNameList.prototype.add.call(this, element);
	};
	oFF.QDimensionList = function() {
	};
	oFF.QDimensionList.prototype = new oFF.QModelComponentWithNameList();
	oFF.QDimensionList.createDimensionList = function(context, parentNode, name) {
		var dimensionList = new oFF.QDimensionList();
		dimensionList.setupOlapList(context, parentNode, false, name);
		return dimensionList;
	};
	oFF.QDimensionList.prototype.getDimensionCount = function() {
		return this.size();
	};
	oFF.QDimensionList.prototype.getDimensionAt = function(index) {
		return this.get(index);
	};
	oFF.QDimensionList.prototype.getDimensionByName = function(name) {
		return this.getByKey(name);
	};
	oFF.QDimensionList.prototype.getDimensionByNameFromExistingMetadata = function(
			name) {
		return this.getByKey(name);
	};
	oFF.QDimensionList.prototype.getDimensionBase = function(index) {
		return this.get(index);
	};
	oFF.QDimensionList.prototype.removeDimensionAt = function(index) {
		this.removeAt(index);
	};
	oFF.QDimensionList.prototype.getNonMeasureDimension = function() {
		return this.getDimensionByType(oFF.DimensionType.SECONDARY_STRUCTURE);
	};
	oFF.QDimensionList.prototype.getAccountDimension = function() {
		return this.getDimensionByType(oFF.DimensionType.ACCOUNT);
	};
	oFF.QDimensionList.prototype.getNonMeasureDimension2 = function() {
		var firstNonMeasure;
		var iterator;
		var dimension;
		if (this.getNonStructureCount() < 2) {
			return null;
		}
		firstNonMeasure = this.getNonMeasureDimension();
		iterator = this.m_list.getIterator();
		while (iterator.hasNext()) {
			dimension = iterator.next();
			if (dimension.getDimensionType() === oFF.DimensionType.SECONDARY_STRUCTURE
					&& dimension !== firstNonMeasure) {
				oFF.XObjectExt.release(iterator);
				return dimension;
			}
		}
		oFF.XObjectExt.release(iterator);
		return null;
	};
	oFF.QDimensionList.prototype.getMeasureDimension = function() {
		return this.getDimensionByType(oFF.DimensionType.MEASURE_STRUCTURE);
	};
	oFF.QDimensionList.prototype.getStructureCount = function() {
		return this.countDimensions(true);
	};
	oFF.QDimensionList.prototype.getNonStructureCount = function() {
		return this.countDimensions(false);
	};
	oFF.QDimensionList.prototype.countDimensions = function(countStructures) {
		var len = this.size();
		var dimensionCount = 0;
		var i;
		for (i = 0; i < len; i++) {
			if (this.get(i).isStructure() === countStructures) {
				dimensionCount++;
			}
		}
		return dimensionCount;
	};
	oFF.QDimensionList.prototype.getDimensionNameByType = function(type) {
		var dimension = this.getDimensionByType(type);
		return oFF.isNull(dimension) ? null : dimension.getName();
	};
	oFF.QDimensionList.prototype.getDimensionByType = function(type) {
		var len = this.size();
		var i;
		var dimension;
		for (i = 0; i < len; i++) {
			dimension = this.getDimensionAt(i);
			if (dimension.getDimensionType() === type) {
				return dimension;
			}
		}
		return null;
	};
	oFF.QDimensionList.prototype.getDimensions = function() {
		return this;
	};
	oFF.QDimensionList.prototype.getDimensionNames = function() {
		var nameList = oFF.XListOfString.create();
		var dimIterator = this.getIterator();
		var dimName;
		while (dimIterator.hasNext()) {
			dimName = dimIterator.next().getName();
			nameList.add(dimName);
		}
		return nameList;
	};
	oFF.QDimensionList.prototype.getOrderedDimensionNames = function() {
		return this.getDimensionCount() === 0 ? null : this
				.getKeysAsReadOnlyListOfString();
	};
	oFF.QDimensionList.prototype.reOrderDimensions = function(
			orderedDimensionNames) {
		var orderOk;
		var size;
		var dimensionNameIndex;
		var dimensionName;
		var dimension;
		var newIndex;
		var orderedDimensionName;
		var currentIndex;
		if (this.getDimensionCount() === 0 || oFF.isNull(orderedDimensionNames)
				|| this.getDimensionCount() !== orderedDimensionNames.size()) {
			return;
		}
		orderOk = true;
		size = orderedDimensionNames.size();
		for (dimensionNameIndex = 0; dimensionNameIndex < size; dimensionNameIndex++) {
			dimensionName = orderedDimensionNames.get(dimensionNameIndex);
			dimension = this.getDimensionAt(dimensionNameIndex);
			if (!oFF.XString.isEqual(dimensionName, dimension.getName())) {
				if (this.getDimensionByName(dimensionName) === null) {
					return;
				}
				orderOk = false;
			}
		}
		if (!orderOk) {
			for (newIndex = 0; newIndex < size; newIndex++) {
				orderedDimensionName = orderedDimensionNames.get(newIndex);
				currentIndex = this.getDimensionIndex(orderedDimensionName);
				if (currentIndex < newIndex) {
					throw oFF.XException
							.createIllegalStateException("illegal sorting state");
				}
				if (currentIndex !== newIndex) {
					this.moveElement(currentIndex, newIndex);
				}
			}
		}
	};
	oFF.QDimensionList.prototype.getDimensionIndex = function(dimensionName) {
		var dimensionCount = this.getDimensionCount();
		var i;
		var dimension;
		for (i = 0; i < dimensionCount; i++) {
			dimension = this.getDimensionAt(i);
			if (oFF.XString.isEqual(dimensionName, dimension.getName())) {
				return i;
			}
		}
		return -1;
	};
	oFF.QFieldList = function() {
	};
	oFF.QFieldList.prototype = new oFF.QModelComponentWithNameList();
	oFF.QFieldList.createFieldList = function(parentNode, name) {
		var list = new oFF.QFieldList();
		list.setupOlapList(parentNode, parentNode, false, name);
		list.m_isFixed = false;
		return list;
	};
	oFF.QFieldList.prototype.m_isFixed = false;
	oFF.QFieldList.prototype.add = function(element) {
		if (!this.m_isFixed) {
			oFF.QModelComponentWithNameList.prototype.add.call(this, element);
		}
	};
	oFF.QFieldList.prototype.addAll = function(elements) {
		if (!this.m_isFixed) {
			oFF.QModelComponentWithNameList.prototype.addAll.call(this,
					elements);
		}
	};
	oFF.QFieldList.prototype.set = function(index, element) {
		if (!this.m_isFixed) {
			oFF.QModelComponentWithNameList.prototype.set.call(this, index,
					element);
		}
	};
	oFF.QFieldList.prototype.insert = function(index, element) {
		if (!this.m_isFixed) {
			oFF.QModelComponentWithNameList.prototype.insert.call(this, index,
					element);
		}
	};
	oFF.QFieldList.prototype.removeAt = function(index) {
		return this.m_isFixed ? null
				: oFF.QModelComponentWithNameList.prototype.removeAt.call(this,
						index);
	};
	oFF.QFieldList.prototype.removeElement = function(element) {
		if (!this.m_isFixed) {
			oFF.QModelComponentWithNameList.prototype.removeElement.call(this,
					element);
		}
		return element;
	};
	oFF.QFieldList.prototype.moveElement = function(fromIndex, toIndex) {
		if (!this.m_isFixed) {
			oFF.QModelComponentWithNameList.prototype.moveElement.call(this,
					fromIndex, toIndex);
		}
	};
	oFF.QFieldList.prototype.sortByComparator = function(comparator) {
		if (!this.m_isFixed) {
			oFF.QModelComponentWithNameList.prototype.sortByComparator.call(
					this, comparator);
		}
	};
	oFF.QFieldList.prototype.sortByDirection = function(sortDirection) {
		if (!this.m_isFixed) {
			oFF.QModelComponentWithNameList.prototype.sortByDirection.call(
					this, sortDirection);
		}
	};
	oFF.QFieldList.prototype.setIsFixed = function(isFixed) {
		this.m_isFixed = isFixed;
	};
	oFF.QFieldList.prototype.isFixed = function() {
		return this.m_isFixed;
	};
	oFF.QFieldList.prototype.copyFieldList = function(origin) {
		oFF.QModelComponentWithNameList.prototype.copyModelComponentList.call(
				this, origin);
		this.m_isFixed = origin.m_isFixed;
	};
	oFF.QFieldList.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.FIELD_LIST;
	};
	oFF.QFieldList.prototype.removeFieldAt = function(index) {
		this.removeAt(index);
	};
	oFF.QFieldList.prototype.getFieldAt = function(index) {
		return this.get(index);
	};
	oFF.QFieldList.prototype.getFieldByName = function(name) {
		return this.getByKey(name);
	};
	oFF.QFieldList.prototype.getFieldByNameOrAlias = function(name) {
		var field = this.getByKey(name);
		var size;
		var i;
		var tempField;
		if (oFF.notNull(field)) {
			return field;
		}
		size = this.size();
		for (i = 0; i < size; i++) {
			tempField = this.get(i);
			if (oFF.XString.isEqual(tempField.getAliasName(), name)) {
				if (oFF.isNull(field)
						|| tempField.getPresentationType().getPriority() < field
								.getPresentationType().getPriority()) {
					field = tempField;
				}
			}
		}
		return field;
	};
	oFF.QFieldList.prototype.getFirstFieldByType = function(type) {
		var len = this.size();
		var i;
		var field;
		for (i = 0; i < len; i++) {
			field = this.get(i);
			if (field.getPresentationType().isTypeOf(type)) {
				return field;
			}
		}
		return null;
	};
	oFF.QFieldList.prototype.getFieldBase = function(index) {
		return this.get(index);
	};
	oFF.QFilterAlgebraOperation = function() {
	};
	oFF.QFilterAlgebraOperation.prototype = new oFF.AbstractFilterList();
	oFF.QFilterAlgebraOperation.prototype.setupFilterAlgebraOperation = function(
			context, selectionContainer) {
		oFF.AbstractFilterList.prototype.setupFilterList.call(this, context,
				selectionContainer, "Selection Logical Container");
	};
	oFF.QFilterAlgebraOperation.prototype.copyFilterAlgebra = function(origin) {
		var filterExpression;
		var fieldAccessor;
		var size;
		var i;
		var originElement;
		var originType;
		var cloneProduct;
		var originList;
		var originField;
		var fieldByName;
		var cloneList;
		var cloneOperation;
		var cloneOperand;
		var cloneElement;
		var cloneAlgebra;
		oFF.AbstractFilterList.prototype.copyFilterList.call(this, origin);
		filterExpression = this.getFilterExpression();
		fieldAccessor = this.getFieldAccessorSingle();
		size = origin.size();
		for (i = 0; i < size; i++) {
			originElement = origin.get(i);
			originType = originElement.getOlapComponentType();
			if (originType === oFF.FilterComponentType.CARTESIAN_PRODUCT) {
				cloneProduct = oFF.QFilterCartesianProduct._create(this,
						filterExpression);
				this.addInternal(cloneProduct);
				cloneProduct.copyCartesianProduct(originElement);
			} else {
				if (originType === oFF.FilterComponentType.CARTESIAN_LIST) {
					originList = originElement;
					originField = originList.getField();
					fieldByName = oFF.isNull(originField) ? null
							: fieldAccessor.getFieldByName(originField
									.getName());
					cloneList = oFF.QFilterCartesianList._create(this,
							filterExpression, fieldByName, originList
									.getHierarchyName());
					this.addInternal(cloneList);
					cloneList.copyCartesianList(originList);
				} else {
					if (originType === oFF.FilterComponentType.OPERATION) {
						cloneOperation = oFF.QFilterOperation._create(this,
								filterExpression, this);
						cloneOperation.copyFilterOperation(originElement);
						this.addInternal(cloneOperation);
					} else {
						if (originType === oFF.OlapComponentType.FILTER_CELL_VALUE_OPERAND) {
							cloneOperand = oFF.QFilterCellValueOperand
									.createWithExpression(this,
											filterExpression, this);
							cloneOperand.copyCellValueOperand(originElement);
							this.addInternal(cloneOperand);
						} else {
							if (originType === oFF.FilterComponentType.TUPLE) {
								cloneElement = oFF.QFactory
										.newFilterTuple(this);
								cloneElement.copyTupleOperand(originElement);
								this.addInternal(cloneElement);
							} else {
								if (originType
										.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA)) {
									if (originType === oFF.FilterComponentType.AND) {
										cloneAlgebra = oFF.QFactory
												.newFilterAnd(this);
									} else {
										if (originType === oFF.FilterComponentType.OR) {
											cloneAlgebra = oFF.QFactory
													.newFilterOr(this);
										} else {
											if (originType === oFF.FilterComponentType.NOT) {
												cloneAlgebra = oFF.QFactory
														.newFilterNot(this);
											} else {
												throw oFF.XException
														.createRuntimeException(originType
																.getName());
											}
										}
									}
									cloneAlgebra
											.copyFilterAlgebra(originElement);
									this.addInternal(cloneAlgebra);
								}
							}
						}
					}
				}
			}
		}
	};
	oFF.QFilterCartesianList = function() {
	};
	oFF.QFilterCartesianList.prototype = new oFF.AbstractFilterList();
	oFF.QFilterCartesianList._create = function(context, parentNode, field,
			hierarchyName) {
		var object = new oFF.QFilterCartesianList();
		object.setupCartesianList(context, parentNode, field, hierarchyName);
		return object;
	};
	oFF.QFilterCartesianList.prototype.m_field = null;
	oFF.QFilterCartesianList.prototype.m_supplementFields = null;
	oFF.QFilterCartesianList.prototype.m_hierarchyName = null;
	oFF.QFilterCartesianList.prototype.m_convertToFlatFilter = false;
	oFF.QFilterCartesianList.prototype.cloneOlapComponent = function(context,
			parent) {
		var clone = oFF.QFilterCartesianList._create(context, null, null, null);
		clone.copyCartesianList(this);
		return clone;
	};
	oFF.QFilterCartesianList.prototype.setupCartesianList = function(context,
			parentNode, field, hierarchyName) {
		this.setupFilterList(context, parentNode, "Member Selection List");
		this.setField(field);
		this.m_hierarchyName = hierarchyName;
		this.m_supplementFields = oFF.XListWeakRef.create();
	};
	oFF.QFilterCartesianList.prototype.copyCartesianList = function(origin) {
		var sizeSupplements;
		var fieldAccessor;
		var i;
		var name;
		var originField;
		var field;
		var sizeList;
		var filterExpression;
		var idxList;
		var cloneElement;
		oFF.AbstractFilterList.prototype.copyFilterList.call(this, origin);
		this.m_hierarchyName = origin.m_hierarchyName;
		this.m_convertToFlatFilter = origin.m_convertToFlatFilter;
		sizeSupplements = origin.m_supplementFields.size();
		fieldAccessor = this.getFieldAccessorSingle();
		if (sizeSupplements > 0) {
			this.m_supplementFields.clear();
			for (i = 0; i < sizeSupplements; i++) {
				name = origin.m_supplementFields.get(i).getName();
				this.m_supplementFields.add(fieldAccessor.getFieldByName(name));
			}
		}
		originField = origin.getField();
		field = oFF.isNull(originField) ? null : fieldAccessor
				.getFieldByName(originField.getName());
		this.setField(field);
		sizeList = origin.size();
		if (sizeList > 0) {
			this.clear();
			filterExpression = this.getFilterExpression();
			for (idxList = 0; idxList < sizeList; idxList++) {
				cloneElement = oFF.QFilterOperation._create(this,
						filterExpression, null);
				cloneElement.copyFilterOperation(origin.getOp(idxList));
				this.addInternal(cloneElement);
			}
		}
	};
	oFF.QFilterCartesianList.prototype.releaseObject = function() {
		this.m_field = oFF.XObjectExt.release(this.m_field);
		this.m_supplementFields = oFF.XObjectExt
				.release(this.m_supplementFields);
		this.m_hierarchyName = null;
		oFF.AbstractFilterList.prototype.releaseObject.call(this);
	};
	oFF.QFilterCartesianList.prototype.getOlapComponentType = function() {
		return oFF.FilterComponentType.CARTESIAN_LIST;
	};
	oFF.QFilterCartesianList.prototype.add = function(element) {
		if (oFF.notNull(element)) {
			element.setContext(this.getContext());
		}
		oFF.AbstractFilterList.prototype.add.call(this, element);
	};
	oFF.QFilterCartesianList.prototype.getDimension = function() {
		var field = this.getField();
		return oFF.isNull(field) ? null : field.getDimension();
	};
	oFF.QFilterCartesianList.prototype.getField = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_field);
	};
	oFF.QFilterCartesianList.prototype.setField = function(field) {
		this.m_field = oFF.XWeakReferenceUtil.getWeakRef(field);
	};
	oFF.QFilterCartesianList.prototype.addNewCartesianElement = function() {
		var element = oFF.QFactory.newFilterCartesianElement(this
				.getFilterExpression());
		element.setField(this.getField());
		this.add(element);
		return element;
	};
	oFF.QFilterCartesianList.prototype.getHierarchyName = function() {
		return this.m_hierarchyName;
	};
	oFF.QFilterCartesianList.prototype.setHierarchyName = function(name) {
		if (!oFF.XString.isEqual(name, this.m_hierarchyName)) {
			this.m_hierarchyName = name;
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterCartesianList.prototype.getOp = function(index) {
		return this.getCartesianElement(index);
	};
	oFF.QFilterCartesianList.prototype.getCartesianElement = function(index) {
		return this.get(index);
	};
	oFF.QFilterCartesianList.prototype.addSupplementField = function(
			supplementField) {
		var isExists;
		var len;
		var i;
		var field;
		if (oFF.isNull(supplementField)) {
			return;
		}
		isExists = false;
		len = this.m_supplementFields.size();
		for (i = 0; i < len; i++) {
			field = this.m_supplementFields.get(i);
			if (oFF.XString.containsString(field.getName(), supplementField
					.getName())) {
				isExists = true;
			}
		}
		if (!isExists) {
			this.m_supplementFields.add(supplementField);
		}
	};
	oFF.QFilterCartesianList.prototype.getSupplementFields = function() {
		return this.m_supplementFields.getValuesAsReadOnlyList();
	};
	oFF.QFilterCartesianList.prototype.isConvertToFlatFilter = function() {
		return this.m_convertToFlatFilter;
	};
	oFF.QFilterCartesianList.prototype.setConvertToFlatFilter = function(
			convertToFlatFilter) {
		if (this.m_convertToFlatFilter !== convertToFlatFilter) {
			this.notifyNodeChanged();
		}
		this.m_convertToFlatFilter = convertToFlatFilter;
	};
	oFF.QFilterCartesianList.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherList = other;
		this.copyCartesianList(otherList);
	};
	oFF.QFilterCartesianProduct = function() {
	};
	oFF.QFilterCartesianProduct.prototype = new oFF.AbstractFilterList();
	oFF.QFilterCartesianProduct._create = function(context, filterContainer) {
		var object = new oFF.QFilterCartesianProduct();
		object.setupFilterList(context, filterContainer,
				"Selection Cartesian Product");
		return object;
	};
	oFF.QFilterCartesianProduct.prototype.cloneOlapComponent = function(
			context, parent) {
		var clone = oFF.QFilterCartesianProduct._create(context, null);
		clone.copyCartesianProduct(this);
		return clone;
	};
	oFF.QFilterCartesianProduct.prototype.copyCartesianProduct = function(
			origin) {
		var filterExpression;
		var fieldAccessor;
		var sizeProduct;
		var idxProduct;
		var originList;
		var originField;
		var field;
		var hierarchyName;
		var cloneList;
		oFF.AbstractFilterList.prototype.copyFilterList.call(this, origin);
		filterExpression = this.getFilterExpression();
		fieldAccessor = this.getFieldAccessorSingle();
		sizeProduct = origin.size();
		for (idxProduct = 0; idxProduct < sizeProduct; idxProduct++) {
			originList = origin.getCartesianChild(idxProduct);
			originField = originList.getField();
			field = oFF.isNull(originField) ? null : fieldAccessor
					.getFieldByName(originField.getName());
			hierarchyName = originList.getHierarchyName();
			cloneList = oFF.QFilterCartesianList._create(this,
					filterExpression, field, hierarchyName);
			oFF.AbstractFilterList.prototype.addInternal.call(this, cloneList);
			cloneList.copyCartesianList(originList);
		}
	};
	oFF.QFilterCartesianProduct.prototype.getOlapComponentType = function() {
		return oFF.FilterComponentType.CARTESIAN_PRODUCT;
	};
	oFF.QFilterCartesianProduct.prototype.getIndexOfCartesianListOfDimension = function(
			dimensionName) {
		var count = this.size();
		var i;
		var filterList;
		for (i = 0; i < count; i++) {
			filterList = this.getCartesianChild(i);
			if (oFF.XString.isEqual(filterList.getDimension().getName(),
					dimensionName)) {
				return i;
			}
		}
		return -1;
	};
	oFF.QFilterCartesianProduct.prototype.removeByDimensionName = function(
			dimensionName) {
		var position = this.getIndexOfCartesianListOfDimension(dimensionName);
		var filterList;
		if (position === -1) {
			return null;
		}
		filterList = this.getCartesianChild(position);
		this.removeAt(position);
		return filterList;
	};
	oFF.QFilterCartesianProduct.prototype.getCartesianListByDimensionName = function(
			dimensionName) {
		var position = this.getIndexOfCartesianListOfDimension(dimensionName);
		return position === -1 ? null : this.getCartesianChild(position);
	};
	oFF.QFilterCartesianProduct.prototype.getCartesianList = function(dimension) {
		var count = this.size();
		var i;
		var filterList;
		for (i = 0; i < count; i++) {
			filterList = this.getCartesianChild(i);
			if (filterList.getDimension() === dimension) {
				return filterList;
			}
			if (oFF.notNull(dimension)
					&& oFF.XString.isEqual(filterList.getDimension().getName(),
							dimension.getName())) {
				return filterList;
			}
		}
		return null;
	};
	oFF.QFilterCartesianProduct.prototype.getCartesianListWithDefault = function(
			dimension) {
		var filterList = this.getCartesianList(dimension);
		if (oFF.isNull(filterList)) {
			filterList = oFF.QFilterCartesianList._create(this.getContext(),
					null, dimension.getKeyField(), null);
			if (!dimension.isUniversalDisplayHierarchyDimension()) {
				oFF.AbstractFilterList.prototype.add.call(this, filterList);
			}
		} else {
			filterList.setHierarchyName(dimension.getHierarchyName());
		}
		return filterList;
	};
	oFF.QFilterCartesianProduct.prototype.getCartesianListByField = function(
			field) {
		var filterList = this.getCartesianList(field.getDimension());
		if (oFF.isNull(filterList)) {
			filterList = oFF.QFilterCartesianList._create(this.getContext(),
					null, field, null);
			oFF.AbstractFilterList.prototype.add.call(this, filterList);
		}
		return filterList.getField() === field ? filterList : null;
	};
	oFF.QFilterCartesianProduct.prototype.getCartesianChild = function(index) {
		return this.get(index);
	};
	oFF.QFilterCartesianProduct.prototype.assertElementType = function(element) {
		if (oFF.notNull(element)
				&& element.getComponentType() !== oFF.FilterComponentType.CARTESIAN_LIST) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate4("Type is not allowed. Expected ",
									oFF.FilterComponentType.CARTESIAN_LIST
											.getName(), " but got ", element
											.getComponentType().getName()));
		}
	};
	oFF.QFilterCartesianProduct.prototype.addAll = function(elements) {
		var theList;
		var i;
		var element;
		if (oFF.notNull(elements) && elements !== this) {
			theList = elements.getValuesAsReadOnlyList();
			for (i = 0; i < theList.size(); i++) {
				element = theList.get(i);
				this.assertElementType(element);
				this._setAsParent(element, this);
				this.m_list.add(element);
			}
			this.notifyNodeChanged();
		}
	};
	oFF.QFilterCartesianProduct.prototype.add = function(element) {
		this.assertElementType(element);
		oFF.AbstractFilterList.prototype.add.call(this, element);
	};
	oFF.QFilterCartesianProduct.prototype.set = function(index, element) {
		this.assertElementType(element);
		oFF.AbstractFilterList.prototype.set.call(this, index, element);
	};
	oFF.QFilterCartesianProduct.prototype.insert = function(index, element) {
		this.assertElementType(element);
		oFF.AbstractFilterList.prototype.insert.call(this, index, element);
	};
	oFF.QStructureMember = function() {
	};
	oFF.QStructureMember.prototype = new oFF.QDimensionMember();
	oFF.QStructureMember.createStructureMember = function(context, structure,
			memberType) {
		var member = new oFF.QStructureMember();
		member.setupStructureMember(context, structure, memberType);
		return member;
	};
	oFF.QStructureMember.prototype.m_supportsResultSetSorting = false;
	oFF.QStructureMember.prototype.m_aggregationType = null;
	oFF.QStructureMember.prototype.m_postAggregationType = null;
	oFF.QStructureMember.prototype.m_postAggregationDimensionNames = null;
	oFF.QStructureMember.prototype.m_postAggregationIgnoreHierarchy = false;
	oFF.QStructureMember.prototype.m_exceptionAggregation = null;
	oFF.QStructureMember.prototype.m_resultCalculation = null;
	oFF.QStructureMember.prototype.m_singleValueCalculation = null;
	oFF.QStructureMember.prototype.m_numericScale = null;
	oFF.QStructureMember.prototype.m_numericPrecision = null;
	oFF.QStructureMember.prototype.m_numericShift = null;
	oFF.QStructureMember.prototype.m_externalDimensionIgnoreList = null;
	oFF.QStructureMember.prototype.m_isIgnoringAllExternalDimensions = false;
	oFF.QStructureMember.prototype.m_isSelectionCandidate = false;
	oFF.QStructureMember.prototype.m_presentationSignReversal = null;
	oFF.QStructureMember.prototype.m_unitType = null;
	oFF.QStructureMember.prototype.m_unitFixed = null;
	oFF.QStructureMember.prototype.m_unitName = null;
	oFF.QStructureMember.prototype.m_unitTextName = null;
	oFF.QStructureMember.prototype.m_dataType = null;
	oFF.QStructureMember.prototype.m_defaultSelectionDimensionNames = null;
	oFF.QStructureMember.prototype.setupStructureMember = function(context,
			structure, memberType) {
		oFF.QDimensionMember.prototype.setupDimensionMember.call(this, context,
				structure);
		this.m_supportsResultSetSorting = false;
		this.setType(memberType);
		this.setDimensionMemberNameValueException(oFF.ValueException.NORMAL);
		this.m_aggregationType = null;
		this.m_isIgnoringAllExternalDimensions = false;
		this.m_isSelectionCandidate = true;
	};
	oFF.QStructureMember.prototype.copyStructureMember = function(origin) {
		oFF.QDimensionMember.prototype.copyDimensionMember.call(this, origin);
		this.m_supportsResultSetSorting = origin.m_supportsResultSetSorting;
		this.m_aggregationType = origin.m_aggregationType;
		this.m_postAggregationType = origin.m_postAggregationType;
		if (oFF.notNull(origin.m_postAggregationDimensionNames)) {
			this.m_postAggregationDimensionNames = origin.m_postAggregationDimensionNames
					.createListOfStringCopy();
		}
		this.m_postAggregationIgnoreHierarchy = origin.m_postAggregationIgnoreHierarchy;
		if (oFF.notNull(origin.m_exceptionAggregation)
				&& this._isExceptionAggregationLoaded()) {
			this.m_exceptionAggregation
					._copyExceptionAggregation(origin.m_exceptionAggregation);
		}
		this.m_resultCalculation = origin.m_resultCalculation;
		this.m_singleValueCalculation = origin.m_singleValueCalculation;
		if (oFF.notNull(origin.m_numericScale)) {
			this.setNumericScale(origin.m_numericScale.getInteger());
		}
		if (oFF.notNull(origin.m_numericPrecision)) {
			this.setNumericPrecision(origin.m_numericPrecision.getInteger());
		}
		if (oFF.notNull(origin.m_numericShift)) {
			this.setNumericShift(origin.m_numericShift.getInteger());
		}
		if (oFF.notNull(origin.m_externalDimensionIgnoreList)) {
			this.m_externalDimensionIgnoreList = origin.m_externalDimensionIgnoreList
					.createListOfStringCopy();
		}
		this.m_isIgnoringAllExternalDimensions = origin.m_isIgnoringAllExternalDimensions;
		this.m_isSelectionCandidate = origin.m_isSelectionCandidate;
		if (oFF.notNull(origin.m_presentationSignReversal)) {
			this.setPresentationSignReversal(origin.m_presentationSignReversal
					.getBoolean());
		}
		if (oFF.notNull(origin.m_defaultSelectionDimensionNames)) {
			this.m_defaultSelectionDimensionNames = oFF.XListOfString.create();
			this.m_defaultSelectionDimensionNames
					.addAll(origin.m_defaultSelectionDimensionNames);
		}
		if (oFF.notNull(origin.m_unitType)) {
			this.setUnitType(origin.m_unitType);
		}
		this.setUnitFixed(origin.m_unitFixed);
		this.setUnitName(origin.m_unitName);
		this.setUnitTextName(origin.m_unitTextName);
		this.setDataType(origin.m_dataType);
	};
	oFF.QStructureMember.prototype.releaseObject = function() {
		this.m_aggregationType = null;
		this.m_postAggregationType = null;
		this.m_postAggregationDimensionNames = oFF.XObjectExt
				.release(this.m_postAggregationDimensionNames);
		this.m_exceptionAggregation = oFF.XObjectExt
				.release(this.m_exceptionAggregation);
		this.m_resultCalculation = null;
		this.m_singleValueCalculation = null;
		this.m_externalDimensionIgnoreList = oFF.XObjectExt
				.release(this.m_externalDimensionIgnoreList);
		this.m_presentationSignReversal = oFF.XObjectExt
				.release(this.m_presentationSignReversal);
		this.m_numericScale = oFF.XObjectExt.release(this.m_numericScale);
		this.m_numericPrecision = oFF.XObjectExt
				.release(this.m_numericPrecision);
		this.m_numericShift = oFF.XObjectExt.release(this.m_numericShift);
		this.m_defaultSelectionDimensionNames = oFF.XObjectExt
				.release(this.m_defaultSelectionDimensionNames);
		this.m_unitType = null;
		this.m_unitFixed = null;
		this.m_unitName = null;
		this.m_unitTextName = null;
		this.m_dataType = null;
		oFF.QDimensionMember.prototype.releaseObject.call(this);
	};
	oFF.QStructureMember.prototype.getDataType = function() {
		return this.m_dataType;
	};
	oFF.QStructureMember.prototype.setDataType = function(dataType) {
		this.m_dataType = dataType;
	};
	oFF.QStructureMember.prototype.getExceptions = function() {
		var queryModel = this.getQueryModel();
		var exceptionManager;
		if (oFF.notNull(queryModel)) {
			exceptionManager = queryModel.getExceptionManager();
			if (oFF.notNull(exceptionManager)) {
				return exceptionManager.getAllExceptionsOfMeasure(this);
			}
		}
		return null;
	};
	oFF.QStructureMember.prototype.getQueryDataCells = function() {
		var allDataCells = this.getDimension().getQueryModel()
				.getQueryDataCells();
		var myList = oFF.XListOfNameObject.create();
		var size = allDataCells.size();
		var k;
		var dataCell;
		for (k = 0; k < size; k++) {
			dataCell = allDataCells.get(k);
			if (dataCell.hasMemberReference(this)) {
				myList.add(dataCell);
			}
		}
		return myList;
	};
	oFF.QStructureMember.prototype.assertStandardAggregationType = function(
			aggregationType) {
		if (oFF.notNull(aggregationType)
				&& this.getQueryModel()
						.supportsExceptionAggregationDimsFormulas()) {
			if (aggregationType !== oFF.AggregationType.SUM
					&& aggregationType !== oFF.AggregationType.MIN
					&& aggregationType !== oFF.AggregationType.MAX
					&& aggregationType !== oFF.AggregationType.NOP_NULL
					&& aggregationType !== oFF.AggregationType.NOP_NULL_ZERO) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate3("The aggregation type '",
										aggregationType.getName(),
										"' is not valid as standard aggregation. Use it as Exception Aggregation!"));
			}
		}
	};
	oFF.QStructureMember.prototype.assertSupportsAggregation = function(
			aggregationType) {
		var componentType;
		var queryModel;
		var invalid;
		var isAvgNull;
		var isCountNull;
		var isStatisticalAggregation;
		var validAvgNullForRM;
		var validCountNullForRM;
		if (oFF.isNull(aggregationType)) {
			return;
		}
		componentType = this.getOlapComponentType();
		queryModel = this.getQueryModel();
		invalid = false;
		isAvgNull = aggregationType === oFF.AggregationType.AVERAGE_NULL
				|| aggregationType === oFF.AggregationType.AVERAGE_NULL_ZERO;
		isCountNull = aggregationType === oFF.AggregationType.COUNT_NULL
				|| aggregationType === oFF.AggregationType.COUNT_NULL_ZERO;
		isStatisticalAggregation = aggregationType === oFF.AggregationType.MEDIAN
				|| aggregationType === oFF.AggregationType.MEDIAN_NULL
				|| aggregationType === oFF.AggregationType.MEDIAN_NULL_ZERO
				|| aggregationType === oFF.AggregationType.FIRST_QUARTILE
				|| aggregationType === oFF.AggregationType.FIRST_QUARTILE_NULL
				|| aggregationType === oFF.AggregationType.FIRST_QUARTILE_NULL_ZERO
				|| aggregationType === oFF.AggregationType.THIRD_QUARTILE
				|| aggregationType === oFF.AggregationType.THIRD_QUARTILE_NULL
				|| aggregationType === oFF.AggregationType.THIRD_QUARTILE_NULL_ZERO
				|| aggregationType === oFF.AggregationType.OUTLIERS
				|| aggregationType === oFF.AggregationType.OUTLIERS_NULL
				|| aggregationType === oFF.AggregationType.OUTLIERS_NULL_ZERO;
		if (isStatisticalAggregation
				&& !queryModel.supportsStatisticalAggregations()) {
			invalid = true;
		}
		if (isAvgNull) {
			validAvgNullForRM = componentType === oFF.MemberType.RESTRICTED_MEASURE
					&& queryModel
							.supportsExceptionAggregationAvgNullSelectionMember();
			if (componentType !== oFF.MemberType.FORMULA && !validAvgNullForRM) {
				invalid = true;
			}
		}
		if (isCountNull) {
			validCountNullForRM = componentType === oFF.MemberType.RESTRICTED_MEASURE
					&& queryModel
							.supportsExceptionAggregationCountNullSelectionMember();
			if (componentType !== oFF.MemberType.FORMULA
					&& !validCountNullForRM) {
				invalid = true;
			}
		}
		if (invalid) {
			throw oFF.XException
					.createIllegalArgumentException(oFF.XStringUtils
							.concatenate3("The aggregation type '",
									aggregationType.getName(),
									"' is not applicable!"));
		}
	};
	oFF.QStructureMember.prototype.setAggregationType = function(
			aggregationType) {
		if (this.m_aggregationType === aggregationType) {
			return;
		}
		this.assertStandardAggregationType(aggregationType);
		this.assertSupportsAggregation(aggregationType);
		this.m_aggregationType = aggregationType;
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.getAggregationType = function() {
		return this.m_aggregationType;
	};
	oFF.QStructureMember.prototype.getNumericShift = function() {
		var dataCells;
		var prevShiftFactor;
		var c;
		var dataCell;
		var currShiftFactor;
		if (this.getQueryModel().supportsDataCells()
				&& this.getQueryModel().supportsUnifiedDataCells()) {
			dataCells = this.getQueryDataCells();
			if (dataCells.hasElements()) {
				prevShiftFactor = dataCells.get(0).getScalingFactor();
				for (c = 0; c < dataCells.size(); c++) {
					dataCell = dataCells.get(c);
					currShiftFactor = dataCell.getScalingFactor();
					if (prevShiftFactor !== currShiftFactor) {
						return null;
					}
				}
				prevShiftFactor = -1 * prevShiftFactor;
				return oFF.XIntegerValue.create(prevShiftFactor);
			}
			return null;
		}
		return this.m_numericShift;
	};
	oFF.QStructureMember.prototype.setNumericShift = function(shift) {
		var dataCells;
		var c;
		var dataCell;
		if (this.getQueryModel().supportsDataCells()
				&& this.getQueryModel().supportsUnifiedDataCells()) {
			dataCells = this.getQueryDataCells();
			if (dataCells.hasElements()) {
				if (shift > 0) {
					throw oFF.XException
							.createIllegalArgumentException("positive shift not supported by backend");
				}
				for (c = 0; c < dataCells.size(); c++) {
					dataCell = dataCells.get(c);
					dataCell.setScalingFactor(-shift);
				}
			}
		} else {
			this.m_numericShift = oFF.XIntegerValue.create(shift);
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.getNumericScale = function() {
		var dataCells;
		var prevScaleFactor;
		var c;
		var dataCell;
		var currScaleFactor;
		if (this.getQueryModel().supportsDataCells()
				&& this.getQueryModel().supportsUnifiedDataCells()) {
			dataCells = this.getQueryDataCells();
			if (dataCells.hasElements()) {
				prevScaleFactor = dataCells.get(0).getDecimalPlaces();
				for (c = 0; c < dataCells.size(); c++) {
					dataCell = dataCells.get(c);
					currScaleFactor = dataCell.getDecimalPlaces();
					if (prevScaleFactor !== currScaleFactor) {
						return null;
					}
				}
				return oFF.XIntegerValue.create(prevScaleFactor);
			}
			return null;
		}
		return this.m_numericScale;
	};
	oFF.QStructureMember.prototype.getNumericPrecision = function() {
		return this.m_numericPrecision;
	};
	oFF.QStructureMember.prototype.setNumericScale = function(scale) {
		var dataCells;
		var c;
		var dataCell;
		if (this.getQueryModel().supportsDataCells()
				&& this.getQueryModel().supportsUnifiedDataCells()) {
			dataCells = this.getQueryDataCells();
			if (dataCells.hasElements()) {
				for (c = 0; c < dataCells.size(); c++) {
					dataCell = dataCells.get(c);
					dataCell.setDecimalPlaces(scale);
				}
			}
		} else {
			this.m_numericScale = oFF.XIntegerValue.create(scale);
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.setNumericPrecision = function(precision) {
		this.m_numericPrecision = oFF.XIntegerValue.create(precision);
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.getIgnoredExternalDimensions = function() {
		if (oFF.isNull(this.m_externalDimensionIgnoreList)) {
			return oFF.XListOfString.create();
		}
		return this.m_externalDimensionIgnoreList;
	};
	oFF.QStructureMember.prototype.removeExternalDimensionToIgnore = function(
			externalDimensionName) {
		if (oFF.notNull(this.m_externalDimensionIgnoreList)) {
			this.m_externalDimensionIgnoreList
					.removeElement(externalDimensionName);
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.addExternalDimensionToIgnore = function(
			externalDimensionName) {
		if (oFF.XString.isEqual(externalDimensionName, "All")) {
			if (oFF.notNull(this.m_externalDimensionIgnoreList)) {
				this.m_externalDimensionIgnoreList.clear();
			}
			this.setIgnoreAllExternalDimensions(true);
		} else {
			if (oFF.isNull(this.m_externalDimensionIgnoreList)) {
				this.m_externalDimensionIgnoreList = oFF.XListOfString.create();
			}
			if (!this.m_externalDimensionIgnoreList
					.contains(externalDimensionName)) {
				this.m_externalDimensionIgnoreList.add(externalDimensionName);
			}
			this.setIgnoreAllExternalDimensions(false);
		}
	};
	oFF.QStructureMember.prototype.clearIgnoredExternalDimensions = function() {
		if (oFF.notNull(this.m_externalDimensionIgnoreList)) {
			this.m_externalDimensionIgnoreList.clear();
		}
		this.setIgnoreAllExternalDimensions(false);
	};
	oFF.QStructureMember.prototype.setIgnoreAllExternalDimensions = function(
			isIgnoringAllExternalDimensions) {
		this.m_isIgnoringAllExternalDimensions = isIgnoringAllExternalDimensions;
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.isIgnoringAllExternalDimensions = function() {
		return this.m_isIgnoringAllExternalDimensions;
	};
	oFF.QStructureMember.prototype.isSelectionCandidate = function() {
		return this.m_isSelectionCandidate;
	};
	oFF.QStructureMember.prototype.setIsSelectionCandidate = function(
			isSelectionCandidate) {
		this.m_isSelectionCandidate = isSelectionCandidate;
	};
	oFF.QStructureMember.prototype.setPostAggregationType = function(
			postAggregationType) {
		this.assertSupportsAggregation(postAggregationType);
		this.m_postAggregationType = postAggregationType;
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.addPostAggregationDimension = function(
			dimension) {
		this.addPostAggregationDimensionName(dimension.getName());
	};
	oFF.QStructureMember.prototype.addPostAggregationDimensionName = function(
			dimensionName) {
		if (oFF.isNull(this.m_postAggregationDimensionNames)) {
			this.m_postAggregationDimensionNames = oFF.XListOfString.create();
		}
		if (!this.m_postAggregationDimensionNames.contains(dimensionName)) {
			this.m_postAggregationDimensionNames.add(dimensionName);
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.getPostAggregationType = function() {
		return this.m_postAggregationType;
	};
	oFF.QStructureMember.prototype.getPostAggregationDimensions = function() {
		if (oFF.isNull(this.m_postAggregationDimensionNames)) {
			return oFF.XListOfString.create();
		}
		return this.m_postAggregationDimensionNames;
	};
	oFF.QStructureMember.prototype.removePostAggregationDimensions = function(
			postAggregationDimensionName) {
		if (oFF.notNull(this.m_postAggregationDimensionNames)) {
			this.m_postAggregationDimensionNames
					.removeElement(postAggregationDimensionName);
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.clearPostAggregationDimensions = function() {
		if (oFF.notNull(this.m_postAggregationDimensionNames)) {
			this.m_postAggregationDimensionNames.clear();
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.supportsCalculatedBeforeAggregation = function() {
		var dimension = this.getDimension();
		return oFF.isNull(dimension) ? false : dimension
				.supportsCalculatedBeforeAggregation();
	};
	oFF.QStructureMember.prototype._isExceptionAggregationLoaded = function() {
		var qm;
		if (oFF.isNull(this.m_exceptionAggregation)) {
			qm = this.getQueryModel();
			if (oFF.notNull(qm)) {
				this.m_exceptionAggregation = oFF.QExceptionAggregation
						._create(qm._getExceptionAggregationManagerBase());
			}
		}
		return oFF.notNull(this.m_exceptionAggregation);
	};
	oFF.QStructureMember.prototype.setExceptionAggregationType = function(
			aggregationType) {
		if (this._isExceptionAggregationLoaded()) {
			this.m_exceptionAggregation._setAggregationType(this
					.getOlapComponentType(), aggregationType);
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.addExceptionAggregationDimension = function(
			dimension) {
		this.addExceptionAggregationDimensionName(dimension.getName());
	};
	oFF.QStructureMember.prototype.addExceptionAggregationDimensionName = function(
			dimensionName) {
		if (this._isExceptionAggregationLoaded()
				&& !this.m_exceptionAggregation._getUsedDimensionNames()
						.contains(dimensionName)) {
			this.m_exceptionAggregation._addDimension(dimensionName);
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.acceptsMoreExceptionAggregationDimensions = function() {
		var dimMaxSize;
		if (!this._isExceptionAggregationLoaded()) {
			return false;
		}
		dimMaxSize = this.m_exceptionAggregation.getParent()
				._getMaxNumberOfAllowedDimensions(this.getOlapComponentType(),
						this.m_exceptionAggregation._getAggregationType());
		return dimMaxSize === -1
				|| this.getExceptionAggregationDimensions().size() < dimMaxSize;
	};
	oFF.QStructureMember.prototype.getSupportedExceptionAggregationTypes = function() {
		return !this._isExceptionAggregationLoaded() ? oFF.XListOfString
				.create() : this.m_exceptionAggregation.getParent()
				._getSupportedAggregationTypesForMember(
						this.getOlapComponentType());
	};
	oFF.QStructureMember.prototype.supportsExceptionAggregationType = function(
			aggrType) {
		return oFF.notNull(aggrType)
				&& this.getSupportedExceptionAggregationTypes().contains(
						aggrType.getName());
	};
	oFF.QStructureMember.prototype.supportsDimensionForExceptionAggregation = function(
			dimName, aggrType) {
		return this._isExceptionAggregationLoaded()
				&& this.getSupportedDimensionsForExceptionAggregation(aggrType)
						.contains(dimName);
	};
	oFF.QStructureMember.prototype.getSupportedDimensionsForExceptionAggregation = function(
			aggrType) {
		return !this._isExceptionAggregationLoaded() ? oFF.XListOfString
				.create() : this.m_exceptionAggregation.getParent()
				._getSupportedDimensionsForMemberAndAggregation(
						this.getOlapComponentType(), aggrType);
	};
	oFF.QStructureMember.prototype.getMaxNumberOfDimensionsForExceptionAggregation = function(
			aggrType) {
		return !this._isExceptionAggregationLoaded() ? 0
				: this.m_exceptionAggregation.getParent()
						._getMaxNumberOfAllowedDimensions(
								this.getOlapComponentType(), aggrType);
	};
	oFF.QStructureMember.prototype.removeExceptionAggregationDimension = function(
			dimensionName) {
		if (this._isExceptionAggregationLoaded()) {
			this.m_exceptionAggregation._removeDimension(dimensionName);
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.clearExceptionAggregationDimensions = function() {
		if (this._isExceptionAggregationLoaded()) {
			this.m_exceptionAggregation._clearUsedDimensions();
			this.notifyNodeChanged();
		}
	};
	oFF.QStructureMember.prototype.getExceptionAggregationDimensions = function() {
		return !this._isExceptionAggregationLoaded() ? oFF.XListOfString
				.create() : this.m_exceptionAggregation
				._getUsedDimensionNames();
	};
	oFF.QStructureMember.prototype.getExceptionAggregationType = function() {
		return !this._isExceptionAggregationLoaded() ? null
				: this.m_exceptionAggregation._getAggregationType();
	};
	oFF.QStructureMember.prototype.setPostAggregationIgnoreHierarchy = function(
			ignoreHierarchy) {
		this.m_postAggregationIgnoreHierarchy = ignoreHierarchy;
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.isPostAggregationIgnoringHierarchy = function() {
		return this.m_postAggregationIgnoreHierarchy;
	};
	oFF.QStructureMember.prototype.getPresentationSignReversal = function() {
		return this.m_presentationSignReversal;
	};
	oFF.QStructureMember.prototype.setPresentationSignReversal = function(
			isSignReversed) {
		oFF.XBooleanUtils
				.checkTrue(
						this.getDimension().getDimensionType() === oFF.DimensionType.ACCOUNT,
						"PresentationSignReversal is only supported for Account dimensions!");
		this.m_presentationSignReversal = oFF.XBooleanValue
				.create(isSignReversed);
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.initializeFieldValues = function() {
		var dimension = this.getDimension();
		var newMemberKeyField = dimension.getKeyField();
		var newMemberTextField;
		this
				.createAndAddFieldValueWithString(newMemberKeyField, this
						.getName());
		newMemberTextField = dimension.getTextField();
		if (oFF.notNull(newMemberTextField)) {
			this.createAndAddFieldValueWithString(newMemberTextField, this
					.getText());
		}
	};
	oFF.QStructureMember.prototype.getResultCalculation = function() {
		return this.m_resultCalculation;
	};
	oFF.QStructureMember.prototype.setResultCalculation = function(
			resultCalculation) {
		this.m_resultCalculation = resultCalculation;
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.getSingleValueCalculation = function() {
		return this.m_singleValueCalculation;
	};
	oFF.QStructureMember.prototype.setSingleValueCalculation = function(
			singleValueCalculation) {
		this.m_singleValueCalculation = singleValueCalculation;
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.getDefaultSelectedDimensionNames = function() {
		return this.m_defaultSelectionDimensionNames;
	};
	oFF.QStructureMember.prototype.addDefaultSelectionDimensionByName = function(
			dimensionName) {
		if (oFF.isNull(this.m_defaultSelectionDimensionNames)) {
			this.m_defaultSelectionDimensionNames = oFF.XListOfString.create();
		}
		this.m_defaultSelectionDimensionNames.add(dimensionName);
	};
	oFF.QStructureMember.prototype.setUnitType = function(unitType) {
		this.m_unitType = unitType;
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.getUnitType = function() {
		return this.m_unitType;
	};
	oFF.QStructureMember.prototype.setUnitFixed = function(unitFixed) {
		this.m_unitFixed = unitFixed;
		this.notifyNodeChanged();
	};
	oFF.QStructureMember.prototype.getUnitFixed = function() {
		return this.m_unitFixed;
	};
	oFF.QStructureMember.prototype.setUnitName = function(unitName) {
		this.m_unitName = unitName;
	};
	oFF.QStructureMember.prototype.getUnitName = function() {
		return this.m_unitName;
	};
	oFF.QStructureMember.prototype.setUnitTextName = function(unitTextName) {
		this.m_unitTextName = unitTextName;
	};
	oFF.QStructureMember.prototype.getUnitTextName = function() {
		return this.m_unitTextName;
	};
	oFF.QVariableManager = function() {
	};
	oFF.QVariableManager.prototype = new oFF.QModelComponentWithNameList();
	oFF.QVariableManager.create = function(queryModel) {
		var object = new oFF.QVariableManager();
		object.setupOlapList(queryModel, queryModel, true, "Query Variables");
		return object;
	};
	oFF.QVariableManager.prototype.copyVariableManager = function(origin) {
		var i;
		var size;
		var context;
		var cloneVar;
		var originVariable;
		var originType;
		oFF.QModelComponentWithNameList.prototype.copyModelComponentList.call(
				this, origin);
		size = origin.size();
		context = this.getContext();
		for (i = 0; i < size; i++) {
			originVariable = origin.get(i);
			originType = originVariable.getVariableType();
			if (originType === oFF.VariableType.DIMENSION_MEMBER_VARIABLE) {
				cloneVar = oFF.QDimensionMemberVariable
						.createDimensionMemberVariable(context, this,
								originVariable.getName(), originVariable
										.getText());
				cloneVar.copyDimensionMemberVariable(originVariable);
			} else {
				if (originType === oFF.VariableType.HIERARCHY_NAME_VARIABLE) {
					cloneVar = oFF.QHierarchyNameVariable
							.createDimensionHierarchyVariable(context, this,
									originVariable.getName(), originVariable
											.getText());
					cloneVar.copyHierarchyNameVariable(originVariable);
				} else {
					if (originType === oFF.VariableType.HIERARCHY_NODE_VARIABLE) {
						cloneVar = oFF.QHierarchyNodeVariable
								.createHierarchyNodeVariable(context, this,
										originVariable.getName(),
										originVariable.getText());
						cloneVar.copyDimensionMemberVariable(originVariable);
					} else {
						if (originType
								.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE)) {
							if (originType === oFF.VariableType.SIMPLE_TYPE_VARIABLE) {
								cloneVar = oFF.QSimpleTypeVariable
										.createSimpleTypeVariable(
												context,
												this,
												originVariable.getValueType(),
												originVariable.getName(),
												originVariable.getText(),
												originVariable
														.supportsMultipleValues());
							} else {
								if (originType === oFF.VariableType.TEXT_VARIABLE) {
									cloneVar = oFF.QSimpleTypeVariable
											.createTextVariable(
													context,
													this,
													originVariable.getName(),
													originVariable.getText(),
													originVariable
															.supportsMultipleValues());
								} else {
									if (originType === oFF.VariableType.FORMULA_VARIABLE) {
										cloneVar = oFF.QSimpleTypeVariable
												.createFormulaVariable(
														context,
														this,
														originVariable
																.getName(),
														originVariable
																.getText(),
														originVariable
																.supportsMultipleValues());
									} else {
										throw oFF.XException
												.createRuntimeException(oFF.XStringUtils
														.concatenate3(
																"Unexpected variable type '",
																originType
																		.getName(),
																"'!"));
									}
								}
							}
							cloneVar.copySimpleTypeVariable(originVariable);
						} else {
							if (originType === oFF.VariableType.OPTION_LIST_VARIABLE) {
								cloneVar = oFF.QSimpleTypeVariable
										.createOptionListVariable(
												context,
												this,
												originVariable.getName(),
												originVariable.getText(),
												originVariable
														.supportsMultipleValues());
								cloneVar.copySimpleTypeVariable(originVariable);
							} else {
								if (originType === oFF.VariableType.HIERARCHY_VARIABLE) {
									cloneVar = oFF.QSimpleTypeVariable
											.createHierarchyVariable(
													context,
													this,
													originVariable.getName(),
													originVariable.getText(),
													originVariable
															.supportsMultipleValues());
									cloneVar
											.copySimpleTypeVariable(originVariable);
								} else {
									throw oFF.XException
											.createRuntimeException(oFF.XStringUtils
													.concatenate3(
															"Unexpected variable type '",
															originType
																	.getName(),
															"'!"));
								}
							}
						}
					}
				}
			}
			this.addInternal(cloneVar);
		}
		for (i = 0; i < size; i++) {
			this.get(i).copyVariableDependencies(origin.get(i));
		}
	};
	oFF.QVariableManager.prototype.getOlapComponentType = function() {
		return oFF.OlapComponentType.VARIABLE_MANAGER;
	};
	oFF.QVariableManager.prototype.hasVariables = function() {
		return !this.isEmpty();
	};
	oFF.QVariableManager.prototype.hasInputEnabledVariables = function() {
		return oFF.QVariableUtils.hasInputEnabledVariables(this);
	};
	oFF.QVariableManager.prototype.clearExternalVariablesRepresentations = function() {
		this.queueEventing();
		oFF.QVariableUtils.clearExternalVariablesRepresentations(this);
		this.resumeEventing();
	};
	oFF.QVariableManager.prototype.hasMandatoryVariables = function() {
		return oFF.QVariableUtils.hasMandatoryVariables(this);
	};
	oFF.QVariableManager.prototype.getVariables = function() {
		return this;
	};
	oFF.QVariableManager.prototype.getInputEnabledVariables = function() {
		return oFF.QVariableUtils.getInputEnabledVariables(this);
	};
	oFF.QVariableManager.prototype.addVariable = function(variable) {
		this.add(variable);
	};
	oFF.QVariableManager.prototype.clearVariables = function() {
		this.clear();
	};
	oFF.QVariableManager.prototype.removeVariable = function(name) {
		var variable = this.getByKey(name);
		if (oFF.notNull(variable)) {
			this.removeElement(variable);
		}
	};
	oFF.QVariableManager.prototype.getVariableBaseAt = function(index) {
		return this.get(index);
	};
	oFF.QVariableManager.prototype.getVariableBaseByName = function(name) {
		return this.getByKey(name);
	};
	oFF.QVariableManager.prototype.getDimensionAccessor = function() {
		return this.getQueryModel();
	};
	oFF.QVariableManager.prototype.getModelComponentBase = function() {
		return this;
	};
	oFF.QVariableManager.prototype.getVariableMode = function() {
		return this.getQueryModel().getVariableMode();
	};
	oFF.QVariableManager.prototype.getInputEnabledVariable = function(name) {
		return oFF.QVariableUtils.getInputEnabledVariable(this, name);
	};
	oFF.QVariableManager.prototype.getVariable = function(name) {
		return this.getVariableBaseByName(name);
	};
	oFF.QVariableManager.prototype.getHierarchyNodeVariable = function(name) {
		return oFF.QVariableUtils.getVariableByType(this, name,
				oFF.VariableType.HIERARCHY_NODE_VARIABLE);
	};
	oFF.QVariableManager.prototype.getHierarchyNameVariable = function(name) {
		return oFF.QVariableUtils.getVariableByType(this, name,
				oFF.VariableType.HIERARCHY_NAME_VARIABLE);
	};
	oFF.QVariableManager.prototype.getHierarchyNameVariables = function() {
		return oFF.QVariableUtils.getHierarchyNameVariables(this);
	};
	oFF.QVariableManager.prototype.getDimensionMemberVariables = function() {
		return oFF.QVariableUtils.getDimensionMemberVariables(this);
	};
	oFF.QVariableManager.prototype.getVariableProcessor = function() {
		return this.getQueryModel().getQueryManager();
	};
	oFF.QVariableManager.prototype.mergeDeepRecursive = function(settings,
			other) {
		var otherObj = other;
		var variables = otherObj.getVariables();
		var i;
		var otherVariable;
		var otherName;
		var myVariable;
		for (i = 0; i < variables.size(); i++) {
			otherVariable = variables.get(i);
			otherName = otherVariable.getName();
			myVariable = this.getVariableBaseByName(otherName);
			myVariable.mergeDeepRecursive(settings, otherVariable);
		}
	};
	oFF.QVariableManager.prototype.hasDimensionMemberVariableAffectingDynamicFilter = function() {
		var size = this.size();
		var idx;
		var variable;
		for (idx = 0; idx < size; idx++) {
			variable = this.get(idx);
			if (variable.getVariableType() === oFF.VariableType.DIMENSION_MEMBER_VARIABLE
					&& variable.isUsedInDynamicFilter()) {
				return true;
			}
		}
		return false;
	};
	oFF.QVariableManager.prototype.getVariablesAffectingDynamicFilter = function() {
		var variables = oFF.XListWeakRef.create();
		var size = this.size();
		var idx;
		var variable;
		for (idx = 0; idx < size; idx++) {
			variable = this.get(idx);
			if (variable.getVariableType() === oFF.VariableType.DIMENSION_MEMBER_VARIABLE
					&& variable.isUsedInDynamicFilter()) {
				variables.add(variable);
			}
		}
		return variables;
	};
	oFF.QDimensionMemberVariable = function() {
	};
	oFF.QDimensionMemberVariable.prototype = new oFF.QVariable();
	oFF.QDimensionMemberVariable.createDimensionMemberVariable = function(
			context, parent, name, description) {
		var variable = new oFF.QDimensionMemberVariable();
		variable.setupDimensionMemberVariable(context, parent, name,
				description);
		variable.m_manualInputResultMembers = oFF.XListOfNameObject.create();
		return variable;
	};
	oFF.QDimensionMemberVariable.valueToXString = function(value) {
		return oFF.isNull(value) ? null : oFF.XStringValue.create(value
				.toString());
	};
	oFF.QDimensionMemberVariable.prototype.m_dimension = null;
	oFF.QDimensionMemberVariable.prototype.m_defaultMemberFilter = null;
	oFF.QDimensionMemberVariable.prototype.m_memberFilter = null;
	oFF.QDimensionMemberVariable.prototype.m_externalMemberFilter = null;
	oFF.QDimensionMemberVariable.prototype.m_filterCapability = null;
	oFF.QDimensionMemberVariable.prototype.m_filterCapabilities = null;
	oFF.QDimensionMemberVariable.prototype.m_hierarchyName = null;
	oFF.QDimensionMemberVariable.prototype.m_hierarchyVersion = null;
	oFF.QDimensionMemberVariable.prototype.m_hierarchyKeyDate = null;
	oFF.QDimensionMemberVariable.prototype.m_hierarchyBaseDimension = null;
	oFF.QDimensionMemberVariable.prototype.m_manualInputResultMembers = null;
	oFF.QDimensionMemberVariable.prototype.m_supportsValuehelp = false;
	oFF.QDimensionMemberVariable.prototype.m_uniqueId = null;
	oFF.QDimensionMemberVariable.prototype.m_isInputEnabledAndExit = null;
	oFF.QDimensionMemberVariable.prototype.m_isUsedInFixedFilter = false;
	oFF.QDimensionMemberVariable.prototype.m_isUsedInDynamicFilter = false;
	oFF.QDimensionMemberVariable.prototype.setupDimensionMemberVariable = function(
			context, parent, name, description) {
		oFF.QVariable.prototype.setupVariable.call(this, context, parent, null,
				name, description);
		this.m_supportsValuehelp = true;
		this.m_uniqueId = oFF.XGuid.getGuid();
		this.m_isInputEnabledAndExit = oFF.TriStateBool._DEFAULT;
	};
	oFF.QDimensionMemberVariable.prototype.getVariableType = function() {
		return oFF.VariableType.DIMENSION_MEMBER_VARIABLE;
	};
	oFF.QDimensionMemberVariable.prototype.releaseObject = function() {
		this.m_dimension = null;
		this.m_hierarchyName = null;
		this.m_hierarchyVersion = null;
		this.m_hierarchyKeyDate = null;
		this.m_hierarchyBaseDimension = null;
		this.m_filterCapability = null;
		this.m_filterCapabilities = null;
		this.m_defaultMemberFilter = null;
		this.m_memberFilter = null;
		this.m_externalMemberFilter = null;
		this.m_uniqueId = null;
		this.m_isInputEnabledAndExit = null;
		this.m_manualInputResultMembers = oFF.XObjectExt
				.release(this.m_manualInputResultMembers);
		oFF.QVariable.prototype.releaseObject.call(this);
	};
	oFF.QDimensionMemberVariable.prototype.copyDimensionMemberVariable = function(
			origin) {
		var queryModel;
		var context;
		var cloneDimension;
		var size;
		var i;
		var originMember;
		var cloneMemberDimension;
		var cloneMember;
		var cloneSelection;
		var cloneProduct;
		var cloneList;
		var cloneDefaultSelection;
		var cloneDefaultProduct;
		var cloneDefaultList;
		var cloneExternSelection;
		var cloneExternProduct;
		var cloneExternList;
		var cloneField;
		var origFieldName;
		oFF.QVariable.prototype.copyVariable.call(this, origin);
		queryModel = this.getQueryModel();
		context = this.getContext();
		cloneDimension = null;
		if (origin.getDimension() !== null) {
			cloneDimension = queryModel
					.getDimensionByNameFromExistingMetadata(origin
							.getDimension().getName());
			this.setDimension(cloneDimension);
		}
		if (oFF.notNull(origin.m_manualInputResultMembers)) {
			this.m_manualInputResultMembers = oFF.XListOfNameObject.create();
			size = origin.m_manualInputResultMembers.size();
			for (i = 0; i < size; i++) {
				originMember = origin.m_manualInputResultMembers.get(i);
				cloneMemberDimension = queryModel
						.getDimensionByNameFromExistingMetadata(originMember
								.getDimension().getName());
				cloneMember = cloneMemberDimension
						.getDimensionMember(originMember.getName());
				cloneMember.copyDimensionMember(originMember);
				this.m_manualInputResultMembers.add(cloneMember);
			}
		}
		if (oFF.notNull(origin.m_memberFilter)) {
			cloneSelection = oFF.QFilterExpression._createByApplication(
					context, this);
			cloneProduct = oFF.QFilterCartesianProduct._create(context,
					cloneSelection);
			cloneSelection.setCartesianProduct(cloneProduct);
			cloneList = cloneProduct
					.getCartesianListWithDefault(this.m_dimension);
			cloneList.copyCartesianList(origin.m_memberFilter);
			this.setFilter(cloneSelection);
		}
		if (oFF.notNull(origin.m_defaultMemberFilter)) {
			cloneDefaultSelection = oFF.QFilterExpression._createByApplication(
					context, this);
			cloneDefaultProduct = oFF.QFilterCartesianProduct._create(context,
					cloneDefaultSelection);
			cloneDefaultSelection.setCartesianProduct(cloneDefaultProduct);
			cloneDefaultList = cloneDefaultProduct
					.getCartesianListWithDefault(this.m_dimension);
			cloneDefaultList.copyCartesianList(origin.m_defaultMemberFilter);
			this.setDefaultMemberFilter(cloneDefaultList);
		}
		if (oFF.notNull(origin.m_externalMemberFilter)) {
			cloneExternSelection = oFF.QFilterExpression._createByApplication(
					context, this);
			cloneExternProduct = oFF.QFilterCartesianProduct._create(context,
					cloneExternSelection);
			cloneExternList = cloneExternProduct
					.getCartesianListWithDefault(this.m_dimension);
			cloneExternList.copyCartesianList(origin.m_externalMemberFilter);
			this.setExternalMemberFilter(cloneExternSelection);
		}
		if (oFF.notNull(origin.m_filterCapability)) {
			origFieldName = origin.m_filterCapability.getFieldName();
			if (oFF.notNull(origFieldName)) {
				cloneField = queryModel.getFieldByName(origFieldName);
			} else {
				cloneField = null;
			}
			if (origin.m_filterCapability.getOlapComponentType() === oFF.OlapComponentType.FILTER_CAPABILITY) {
				this.m_filterCapability = oFF.QFilterCapability
						._createFilterCapability(context, this, cloneField);
				this.m_filterCapability
						.copyFilterCapability(origin.m_filterCapability);
			} else {
				this.m_filterCapability = oFF.QFilterCapabilityGroup
						._createFilterCapabilityGroup(context, this, cloneField);
				this.m_filterCapability
						.copyFilterCapabilityGroup(origin.m_filterCapability);
			}
		}
		if (oFF.notNull(origin.m_filterCapabilities)) {
			this.m_filterCapabilities = oFF.QFilterCapabilityList
					.createFilterCapabilitiesForVariable(context, this);
			this.m_filterCapabilities
					.copyFilterCapabilityList(origin.m_filterCapabilities);
		}
		this.m_hierarchyName = origin.m_hierarchyName;
		this.m_hierarchyVersion = origin.m_hierarchyVersion;
		this.m_hierarchyKeyDate = origin.m_hierarchyKeyDate;
		this.m_hierarchyBaseDimension = origin.m_hierarchyBaseDimension;
		this.m_supportsValuehelp = origin.m_supportsValuehelp;
		this.m_uniqueId = origin.m_uniqueId;
		this.m_isUsedInFixedFilter = origin.m_isUsedInFixedFilter;
		this.m_isUsedInDynamicFilter = origin.m_isUsedInDynamicFilter;
		this.m_isInputEnabledAndExit = origin.m_isInputEnabledAndExit;
	};
	oFF.QDimensionMemberVariable.prototype.getUniqueId = function() {
		return this.m_uniqueId;
	};
	oFF.QDimensionMemberVariable.prototype.setUniqueId = function(uniqueId) {
		this.m_uniqueId = uniqueId;
	};
	oFF.QDimensionMemberVariable.prototype.setMemberFilter = function(
			memberFilter) {
		this.m_memberFilter = memberFilter;
		if (oFF.notNull(this.m_memberFilter)) {
			this.m_memberFilter.setParent(this);
		}
	};
	oFF.QDimensionMemberVariable.prototype.hasMemberFilter = function() {
		return oFF.notNull(this.m_memberFilter)
				&& this.m_memberFilter.hasElements();
	};
	oFF.QDimensionMemberVariable.prototype.getMemberFilter = function() {
		var dimension;
		var keyField;
		if (oFF.isNull(this.m_memberFilter)) {
			dimension = this.getDimension();
			if (oFF.notNull(dimension)) {
				keyField = dimension.getKeyField();
				this.m_memberFilter = oFF.QFilterCartesianList._create(this
						.getContext(), this, keyField, null);
			}
		}
		return this.m_memberFilter;
	};
	oFF.QDimensionMemberVariable.prototype.setDefaultMemberFilter = function(
			memberFilter) {
		this.m_defaultMemberFilter = memberFilter;
		if (oFF.notNull(this.m_defaultMemberFilter)) {
			this.m_defaultMemberFilter.setParent(this);
		}
	};
	oFF.QDimensionMemberVariable.prototype.getDefaultMemberFilter = function() {
		return this.m_defaultMemberFilter;
	};
	oFF.QDimensionMemberVariable.prototype.hasDefaultMemberFilter = function() {
		return oFF.notNull(this.m_defaultMemberFilter);
	};
	oFF.QDimensionMemberVariable.prototype.setFilter = function(filter) {
		var selectionList;
		var complexFilterRoot;
		if (oFF.notNull(filter)) {
			if (filter.isCartesianProduct()) {
				if (filter.getCartesianProduct() !== null) {
					selectionList = filter.getCartesianProduct()
							.getCartesianList(this.getDimension());
					if (oFF.notNull(selectionList)) {
						this.setMemberFilter(selectionList);
					}
				}
			} else {
				complexFilterRoot = filter.getComplexRoot();
				if (oFF.notNull(complexFilterRoot)) {
					oFF.XBooleanUtils
							.checkTrue(
									complexFilterRoot.getComponentType() === oFF.FilterComponentType.CARTESIAN_LIST,
									"Dimension Member Variable: Selection Container not valid!");
					this.setMemberFilter(filter.getComplexRoot());
				}
			}
		}
	};
	oFF.QDimensionMemberVariable.prototype.getDimension = function() {
		return this.m_dimension;
	};
	oFF.QDimensionMemberVariable.prototype.getExternalMemberFilter = function() {
		return this.m_externalMemberFilter;
	};
	oFF.QDimensionMemberVariable.prototype.setExternalMemberFilter = function(
			externalMemberFilter) {
		if (oFF.notNull(externalMemberFilter)) {
			externalMemberFilter.addSecondaryParent(this);
		}
		if (oFF.notNull(this.m_externalMemberFilter)) {
			this.m_externalMemberFilter.removeSecondaryParent(this);
		}
		this.m_externalMemberFilter = externalMemberFilter;
		this.notifyNodeChanged();
	};
	oFF.QDimensionMemberVariable.prototype.setDimensionMember = function(value) {
		var memberSelection = this.getMemberFilter();
		var singleElement = memberSelection.addNewCartesianElement();
		singleElement.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
		singleElement.getLow().setDimensionMember(value);
	};
	oFF.QDimensionMemberVariable.prototype.getNewDimensionMember = function(
			name) {
		var dimension;
		if (oFF.isNull(name)) {
			return null;
		}
		dimension = this.getDimension();
		if (oFF.isNull(dimension)) {
			return null;
		}
		return dimension.getDimensionMember(name.getString());
	};
	oFF.QDimensionMemberVariable.prototype.getDimensionMember = function() {
		var memberSelection = this.getMemberFilter();
		var firstElement;
		var firstValue;
		var dimensionMember;
		if (memberSelection.size() === 1) {
			firstElement = memberSelection.getOp(0);
			if (firstElement.getComparisonOperator() === oFF.ComparisonOperator.EQUAL) {
				firstValue = firstElement.getLow();
				if (oFF.notNull(firstValue)) {
					dimensionMember = firstValue.getDimensionMember();
					if (oFF.isNull(dimensionMember)) {
						return this
								.getNewDimensionMember(oFF.QDimensionMemberVariable
										.valueToXString(firstValue.getValue()));
					}
					return dimensionMember;
				}
			}
		}
		return null;
	};
	oFF.QDimensionMemberVariable.prototype.setDimension = function(dimension) {
		this.m_dimension = dimension;
		if (dimension.getKeyField() !== null) {
			this.setValueType(dimension.getKeyField().getValueType());
		}
		this.setMemberFilter(null);
	};
	oFF.QDimensionMemberVariable.prototype.getFilterCapability = function() {
		return this.m_filterCapability;
	};
	oFF.QDimensionMemberVariable.prototype.setFilterCapability = function(
			capability) {
		this.m_filterCapability = capability;
	};
	oFF.QDimensionMemberVariable.prototype.getFilterCapabilities = function() {
		return this.m_filterCapabilities;
	};
	oFF.QDimensionMemberVariable.prototype.setFilterCapabilities = function(
			filterCapabilities) {
		this.m_filterCapabilities = filterCapabilities;
	};
	oFF.QDimensionMemberVariable.prototype.hasUniqueHierarchy = function() {
		return oFF.notNull(this.m_hierarchyName);
	};
	oFF.QDimensionMemberVariable.prototype.getHierarchyName = function() {
		return this.m_hierarchyName;
	};
	oFF.QDimensionMemberVariable.prototype.getHierarchyVersion = function() {
		return this.m_hierarchyVersion;
	};
	oFF.QDimensionMemberVariable.prototype.getHierarchyKeyDate = function() {
		return this.m_hierarchyKeyDate;
	};
	oFF.QDimensionMemberVariable.prototype.getHierarchyDueDate = oFF.noSupport;
	oFF.QDimensionMemberVariable.prototype.setHierarchyDueDate = oFF.noSupport;
	oFF.QDimensionMemberVariable.prototype.setHierarchyName = function(name) {
		this.m_hierarchyName = name;
	};
	oFF.QDimensionMemberVariable.prototype.setHierarchyVersion = function(
			version) {
		this.m_hierarchyVersion = version;
	};
	oFF.QDimensionMemberVariable.prototype.setHierarchyKeyDate = function(
			keyDate) {
		this.m_hierarchyKeyDate = keyDate;
	};
	oFF.QDimensionMemberVariable.prototype.getHierarchyBaseDimension = function() {
		return this.m_hierarchyBaseDimension;
	};
	oFF.QDimensionMemberVariable.prototype.setHierarchyBaseDimension = function(
			name) {
		this.m_hierarchyBaseDimension = name;
	};
	oFF.QDimensionMemberVariable.prototype.setValueByStringExt = function(
			value, isManualInput) {
		var memberSelection;
		var dimension;
		var keyField;
		var filterOperation;
		var low;
		this.queueEventing();
		memberSelection = this.getMemberFilter();
		memberSelection.clear();
		dimension = this.getDimension();
		keyField = dimension.getKeyField();
		memberSelection.setField(keyField);
		filterOperation = oFF.QFactory.newFilterOperation(memberSelection
				.getFilterExpression(), keyField);
		low = filterOperation.getLow();
		if (isManualInput) {
			low.setString(value);
			low.setIsManualInput(true);
		} else {
			low.setDimensionMember(dimension.getDimensionMember(value));
		}
		memberSelection.add(filterOperation);
		this.resumeEventing();
		this.notifyNodeChanged();
	};
	oFF.QDimensionMemberVariable.prototype.getValueByString = function() {
		var memberSelection = this.getMemberFilter();
		var filterElement;
		oFF.XBooleanUtils.checkFalse(memberSelection.size() < 1,
				"Cartesian product does not contain any selections.");
		oFF.XBooleanUtils.checkFalse(memberSelection.size() > 1,
				"Cartesian product contain more than one selection.");
		filterElement = memberSelection.get(0);
		return filterElement.getLow().getValue().toString();
	};
	oFF.QDimensionMemberVariable.prototype.getManualInputResultValues = function() {
		this.initCollections();
		return this.m_manualInputResultMembers.getValuesAsReadOnlyList();
	};
	oFF.QDimensionMemberVariable.prototype.addManualInputResultValue = function(
			dimensionMember) {
		this.initCollections();
		if (oFF.notNull(dimensionMember)) {
			this.m_manualInputResultMembers.add(dimensionMember);
		}
	};
	oFF.QDimensionMemberVariable.prototype.clearManualInputResultValue = function() {
		this.initCollections();
		this.m_manualInputResultMembers.clear();
	};
	oFF.QDimensionMemberVariable.prototype.initCollections = function() {
		if (oFF.isNull(this.m_manualInputResultMembers)) {
			this.m_manualInputResultMembers = oFF.XListOfNameObject.create();
		}
	};
	oFF.QDimensionMemberVariable.prototype.newVariableValue = function() {
		return oFF.QVariableValue.create(this);
	};
	oFF.QDimensionMemberVariable.prototype.getFieldAccessorSingle = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return this;
		}
		return queryModel;
	};
	oFF.QDimensionMemberVariable.prototype.getFieldByName = function(name) {
		return this.getDimension().getFieldByName(name);
	};
	oFF.QDimensionMemberVariable.prototype.getFieldByNameOrAlias = function(
			name) {
		return this.getDimension().getFieldByNameOrAlias(name);
	};
	oFF.QDimensionMemberVariable.prototype.supportsComplexFilter = function() {
		return true;
	};
	oFF.QDimensionMemberVariable.prototype.supportsCellValueOperand = function() {
		return false;
	};
	oFF.QDimensionMemberVariable.prototype.getFilterExpression = function() {
		return null;
	};
	oFF.QDimensionMemberVariable.prototype.supportsValueHelp = function() {
		return this.m_supportsValuehelp;
	};
	oFF.QDimensionMemberVariable.prototype.setSupportsValueHelp = function(
			isSupported) {
		this.m_supportsValuehelp = isSupported;
	};
	oFF.QDimensionMemberVariable.prototype.processVariableHelp = function(
			syncType, listener, customIdentifier) {
		return this.getDimension().processVariableHelp(this.getName(),
				syncType, listener, customIdentifier);
	};
	oFF.QDimensionMemberVariable.prototype.processVarHelp = function(syncType,
			listener, customIdentifier) {
		return this.getDimension().processVarHelp(this.getName(), syncType,
				listener, customIdentifier);
	};
	oFF.QDimensionMemberVariable.prototype.getValues = function() {
		var valueHelp;
		var result;
		var data;
		var extResult;
		if (this.getApplication().getVersion() >= oFF.XVersion.V999_NEW_VAR_VALUE_HELP) {
			valueHelp = this.newValueHelpMembers();
			result = valueHelp.process(oFF.SyncType.BLOCKING, null, null);
			if (result.hasErrors()) {
				return null;
			}
			data = result.getData();
			return data.getMembers();
		}
		extResult = this.getDimension().processVarHelp(this.getName(),
				oFF.SyncType.BLOCKING, null, null);
		oFF.MessageUtil.checkNoError(extResult);
		return this.convertNodeListToMemberList(extResult.getData());
	};
	oFF.QDimensionMemberVariable.prototype.convertNodeListToMemberList = function(
			nodeList) {
		var memberList;
		var nodeIterator;
		if (oFF.isNull(nodeList)) {
			return null;
		}
		memberList = oFF.XList.create();
		nodeIterator = nodeList.getIterator();
		while (nodeIterator.hasNext()) {
			memberList.add(nodeIterator.next().getDimensionMember());
		}
		oFF.XObjectExt.release(nodeIterator);
		return memberList;
	};
	oFF.QDimensionMemberVariable.prototype.newValueHelpMembers = function() {
		return oFF.QValueHelpVarDimMember.create(this.getContext(), this);
	};
	oFF.QDimensionMemberVariable.prototype.supportsIntersectLayers = function() {
		return false;
	};
	oFF.QDimensionMemberVariable.prototype.supportsVisibilityFilter = function() {
		return false;
	};
	oFF.QDimensionMemberVariable.prototype.mergeDeepRecursive = function(
			settings, other) {
		var otherVar;
		var memberSelection;
		oFF.QVariable.prototype.mergeDeepRecursive.call(this, settings, other);
		otherVar = other;
		if (otherVar.hasMemberFilter() && this.getMemberFilter() !== null) {
			memberSelection = otherVar.getMemberFilter();
			this.m_memberFilter.mergeDeepRecursive(settings, memberSelection);
		}
	};
	oFF.QDimensionMemberVariable.prototype.isEnforcedDynamicValue = function() {
		if (this.m_isInputEnabledAndExit === oFF.TriStateBool._DEFAULT) {
			return oFF.isNull(this.m_dimension) ? false : this.m_dimension
					.isEnforcedDynamicValue();
		}
		return this.m_isInputEnabledAndExit.getBoolean();
	};
	oFF.QDimensionMemberVariable.prototype.isUsedInFixedFilter = function() {
		return this.m_isUsedInFixedFilter;
	};
	oFF.QDimensionMemberVariable.prototype.isUsedInDynamicFilter = function() {
		return this.m_isUsedInDynamicFilter;
	};
	oFF.QDimensionMemberVariable.prototype.setIsUsedInFixedFilter = function(
			isUsedInFixedFilter) {
		this.m_isUsedInFixedFilter = isUsedInFixedFilter;
	};
	oFF.QDimensionMemberVariable.prototype.setIsUsedInDynamicFilter = function(
			isUsedInDynamicFilter) {
		this.m_isUsedInDynamicFilter = isUsedInDynamicFilter;
	};
	oFF.QDimensionMemberVariable.prototype.setIsInputEnabledAndExit = function(
			isInputEnabledAndExit) {
		this.m_isInputEnabledAndExit = oFF.TriStateBool
				.lookup(isInputEnabledAndExit);
	};
	oFF.QDimensionMemberVariable.prototype.isInputEnabledAndExitProvidedInMd = function() {
		return this.m_isInputEnabledAndExit !== oFF.TriStateBool._DEFAULT;
	};
	oFF.QDimensionMemberVariable.prototype.supportsMultipleValues = function() {
		return this.m_filterCapabilities.supportsMultipleValues();
	};
	oFF.QDimensionMemberVariable.prototype.clear = function() {
		this.getMemberFilter().clear();
	};
	oFF.QAxisDimensionList = function() {
	};
	oFF.QAxisDimensionList.prototype = new oFF.QDimensionList();
	oFF.QAxisDimensionList.checkCapability = function(dimension, targetAxisType) {
		return oFF.isNull(dimension) ? false : dimension
				.supportsAxis(targetAxisType);
	};
	oFF.QAxisDimensionList.prototype.add = function(element) {
		var axis = this.getAxisBase();
		var axisType = axis.getType();
		if (oFF.QAxisDimensionList.checkCapability(element, axisType)) {
			this.queueEventing();
			this._removeFromOldAxis(element, axisType);
			oFF.QDimensionList.prototype.add.call(this, element);
			element.setAxis(axis);
			this.resumeEventing();
		}
	};
	oFF.QAxisDimensionList.prototype._removeFromOldAxis = function(dimension,
			axisType) {
		var oldAxis = dimension.getAxisBase();
		if (oFF.notNull(oldAxis) && oldAxis.getType() !== axisType) {
			oldAxis.removeElementInternal(dimension);
		}
	};
	oFF.QAxisDimensionList.prototype.addAll = function(elements) {
		if (oFF.notNull(elements) && !elements.isEmpty()) {
			this.queueEventing();
			oFF.XListUtils.addAllObjects(elements, this);
			this.resumeEventing();
		}
	};
	oFF.QAxisDimensionList.prototype.insert = function(index, element) {
		var axis;
		var axisType;
		if (index < 0 || index > this.size()) {
			return;
		}
		axis = this.getAxisBase();
		axisType = axis.getType();
		if (oFF.QAxisDimensionList.checkCapability(element, axisType)) {
			if (axisType === oFF.AxisType.FREE) {
				this.stopEventing();
			} else {
				this.queueEventing();
			}
			this._removeFromOldAxis(element, axisType);
			oFF.QDimensionList.prototype.insert.call(this, index, element);
			element.setAxis(axis);
			this.resumeEventing();
		}
	};
	oFF.QAxisDimensionList.prototype.removeElementInternal = function(dimension) {
		this.queueEventing();
		oFF.QDimensionList.prototype.removeElement.call(this, dimension);
		dimension.setAxis(null);
		this.resumeEventing();
	};
	oFF.QAxisDimensionList.prototype.clear = function() {
		var fallbackAxis = this.getAxis().getType().getFallbackAxis();
		var leftOverIndex;
		var dimensionByIndex;
		oFF.XObjectExt.checkNotNull(fallbackAxis,
				"Cannot remove dimensions from free axis");
		this.queueEventing();
		leftOverIndex = 0;
		while (this.size() > leftOverIndex) {
			dimensionByIndex = this.getDimensionAt(leftOverIndex);
			if (dimensionByIndex.supportsAxis(fallbackAxis)) {
				this.removeAt(leftOverIndex);
			} else {
				leftOverIndex++;
			}
		}
		this.resumeEventing();
	};
	oFF.QAxisDimensionList.prototype.removeElement = function(element) {
		var index = this.getIndex(element);
		if (index !== -1) {
			this.removeAt(index);
		}
		return element;
	};
	oFF.QAxisDimensionList.prototype.removeAt = function(index) {
		var dimension = oFF.QDimensionList.prototype.get.call(this, index);
		var fallbackAxis;
		var removedObj;
		if (this.checkCapabilityAxisRemoveDimension(dimension)) {
			fallbackAxis = this.getAxis().getType().getFallbackAxis();
			this.queueEventing();
			removedObj = oFF.QDimensionList.prototype.removeAt
					.call(this, index);
			this.getQueryModel().getAxis(fallbackAxis).add(dimension);
			this.resumeEventing();
			return removedObj;
		}
		return null;
	};
	oFF.QAxisDimensionList.prototype.checkCapabilityAxisRemoveDimension = function(
			dimension) {
		var fallbackAxis = this.getAxis().getType().getFallbackAxis();
		return oFF.notNull(fallbackAxis)
				&& oFF.QAxisDimensionList.checkCapability(dimension,
						fallbackAxis);
	};
	oFF.QFilterAnd = function() {
	};
	oFF.QFilterAnd.prototype = new oFF.QFilterAlgebraOperation();
	oFF.QFilterAnd._create = function(context, selectionContainer) {
		var object = new oFF.QFilterAnd();
		object.setupFilterAlgebraOperation(context, selectionContainer);
		return object;
	};
	oFF.QFilterAnd.prototype.getOlapComponentType = function() {
		return oFF.FilterComponentType.AND;
	};
	oFF.QFilterNot = function() {
	};
	oFF.QFilterNot.prototype = new oFF.QFilterAlgebraOperation();
	oFF.QFilterNot.MAX_SIZE = 1;
	oFF.QFilterNot._create = function(context, selection) {
		var object = new oFF.QFilterNot();
		object.setupFilterAlgebraOperation(context, selection);
		return object;
	};
	oFF.QFilterNot.prototype.addAll = function(elements) {
		if (oFF.notNull(elements) && elements !== this) {
			if (elements.size() + this.size() > oFF.QFilterNot.MAX_SIZE) {
				throw oFF.XException
						.createIllegalArgumentException("List has reached it's maximum capacity");
			}
			oFF.QFilterAlgebraOperation.prototype.addAll.call(this, elements);
		}
	};
	oFF.QFilterNot.prototype.assertListCapacity = function() {
		if (this.m_list.size() === oFF.QFilterNot.MAX_SIZE) {
			throw oFF.XException
					.createIllegalArgumentException("List has reached it's maximum capacity");
		}
	};
	oFF.QFilterNot.prototype.add = function(element) {
		this.assertListCapacity();
		oFF.QFilterAlgebraOperation.prototype.add.call(this, element);
	};
	oFF.QFilterNot.prototype.insert = function(index, element) {
		this.assertListCapacity();
		oFF.QFilterAlgebraOperation.prototype.insert.call(this, index, element);
	};
	oFF.QFilterNot.prototype.getOlapComponentType = function() {
		return oFF.FilterComponentType.NOT;
	};
	oFF.QFilterNot.prototype.getChild = function() {
		return this.isEmpty() ? null : this.get(0);
	};
	oFF.QFilterNot.prototype.setChild = function(child) {
		if (this.isEmpty()) {
			this.add(child);
		} else {
			this.set(0, child);
		}
	};
	oFF.QFilterOr = function() {
	};
	oFF.QFilterOr.prototype = new oFF.QFilterAlgebraOperation();
	oFF.QFilterOr._create = function(context, selectionContainer) {
		var object = new oFF.QFilterOr();
		object.setupFilterAlgebraOperation(context, selectionContainer);
		return object;
	};
	oFF.QFilterOr.prototype.getOlapComponentType = function() {
		return oFF.FilterComponentType.OR;
	};
	oFF.QBasicMeasure = function() {
	};
	oFF.QBasicMeasure.prototype = new oFF.QStructureMember();
	oFF.QBasicMeasure._createBasicMeasure = function(context, dimension) {
		var member = new oFF.QBasicMeasure();
		member.setupBasicMeasure(context, dimension);
		return member;
	};
	oFF.QBasicMeasure.prototype.m_aggregationDimensionName = null;
	oFF.QBasicMeasure.prototype.copyBasicMeasure = function(origin) {
		this.copyStructureMember(origin);
		this.m_aggregationDimensionName = origin.m_aggregationDimensionName;
	};
	oFF.QBasicMeasure.prototype.setupBasicMeasure = function(context, structure) {
		oFF.QStructureMember.prototype.setupStructureMember.call(this, context,
				structure, oFF.MemberType.BASIC_MEASURE);
	};
	oFF.QBasicMeasure.prototype.releaseObject = function() {
		this.m_aggregationDimensionName = null;
		oFF.QStructureMember.prototype.releaseObject.call(this);
	};
	oFF.QBasicMeasure.prototype.getAggregationDimensionName = function() {
		return this.m_aggregationDimensionName;
	};
	oFF.QBasicMeasure.prototype.setAggregationDimension = function(dimension) {
		this.m_aggregationDimensionName = dimension.getName();
		this.notifyNodeChanged();
	};
	oFF.QBasicMeasure.prototype.setAggregationDimensionName = function(
			dimensionName) {
		this.m_aggregationDimensionName = dimensionName;
		this.notifyNodeChanged();
	};
	oFF.QBasicMeasure.prototype.assertStandardAggregationTypeBasic = function(
			aggregationType) {
		if (oFF.isNull(aggregationType)) {
			return;
		}
		if (this.getQueryModel().supportsExceptionAggregationDimsFormulas()) {
			if (oFF.XStringUtils.isNullOrEmpty(this.m_aggregationDimensionName)
					&& (aggregationType === oFF.AggregationType.AVERAGE || aggregationType === oFF.AggregationType.COUNT)) {
				return;
			}
			if (aggregationType !== oFF.AggregationType.SUM
					&& aggregationType !== oFF.AggregationType.MIN
					&& aggregationType !== oFF.AggregationType.MAX
					&& aggregationType !== oFF.AggregationType.NOP_NULL
					&& aggregationType !== oFF.AggregationType.NOP_NULL_ZERO) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate3("The aggregation type '",
										aggregationType.getName(),
										"' is not valid as standard aggregation. Use it as Exception Aggregation!"));
			}
		}
	};
	oFF.QBasicMeasure.prototype.setAggregationType = function(aggregationType) {
		if (this.m_aggregationType === aggregationType) {
			return;
		}
		this.assertStandardAggregationTypeBasic(aggregationType);
		this.m_aggregationType = aggregationType;
		this.notifyNodeChanged();
	};
	oFF.QFormulaMeasure = function() {
	};
	oFF.QFormulaMeasure.prototype = new oFF.QStructureMember();
	oFF.QFormulaMeasure._createFormulaMeasure = function(context, structure) {
		var queryModel = context.getQueryModel();
		var member;
		if (!queryModel.supportsFormulaMeasures()) {
			oFF.noSupport();
		}
		member = new oFF.QFormulaMeasure();
		member.setupFormulaMeasure(context, structure);
		return member;
	};
	oFF.QFormulaMeasure.prototype.m_formula = null;
	oFF.QFormulaMeasure.prototype.m_isCalculatedBeforeAggregation = false;
	oFF.QFormulaMeasure.prototype.copyFormulaMeasure = function(origin) {
		var originType;
		oFF.QStructureMember.prototype.copyStructureMember.call(this, origin);
		this.m_isCalculatedBeforeAggregation = origin.m_isCalculatedBeforeAggregation;
		if (oFF.notNull(origin.m_formula)) {
			originType = origin.m_formula.getOlapComponentType();
			if (originType === oFF.OlapComponentType.FORMULA_ITEM_ATTRIBUTE) {
				this.m_formula = oFF.QFormulaItemAttribute._createMember(this,
						this);
				this.m_formula.copyFormulaItemAttribute(origin.m_formula);
			} else {
				if (originType === oFF.OlapComponentType.FORMULA_CONSTANT) {
					this.m_formula = oFF.QFormulaItemConstant._createConstant(
							this, this);
					this.m_formula.copyFormulaItemConstant(origin.m_formula);
				} else {
					if (originType === oFF.OlapComponentType.FORMULA_ITEM_MEMBER) {
						this.m_formula = oFF.QFormulaItemMember._createMember(
								this, this);
						this.m_formula.copyFormulaItemMember(origin.m_formula);
					} else {
						if (originType === oFF.OlapComponentType.FORMULA_OPERATION) {
							this.m_formula = oFF.QFormulaItemOperation
									._createOperation(this, this);
							this.m_formula
									.copyFormulaItemOperation(origin.m_formula);
						} else {
							if (originType === oFF.OlapComponentType.FORMULA_FUNCTION) {
								this.m_formula = oFF.QFactory
										.newFormulaFunction(this);
								this.m_formula
										.copyFormulaItemFunction(origin.m_formula);
							}
						}
					}
				}
			}
		}
	};
	oFF.QFormulaMeasure.prototype.setIsCalculatedBeforeAggregation = function(
			calculateBeforeAggregation) {
		this.m_isCalculatedBeforeAggregation = calculateBeforeAggregation;
		this.notifyNodeChanged();
	};
	oFF.QFormulaMeasure.prototype.isCalculatedBeforeAggregation = function() {
		return this.m_isCalculatedBeforeAggregation;
	};
	oFF.QFormulaMeasure.prototype.setupFormulaMeasure = function(context,
			structure) {
		oFF.QStructureMember.prototype.setupStructureMember.call(this, context,
				structure, oFF.MemberType.FORMULA);
	};
	oFF.QFormulaMeasure.prototype.releaseObject = function() {
		this.m_formula = oFF.XObjectExt.release(this.m_formula);
		oFF.QStructureMember.prototype.releaseObject.call(this);
	};
	oFF.QFormulaMeasure.prototype.getFormula = function() {
		return this.m_formula;
	};
	oFF.QFormulaMeasure.prototype.setFormula = function(element) {
		var elementBase = element;
		if (oFF.notNull(elementBase)) {
			elementBase.setParent(this);
		}
		this.m_formula = element;
		this.notifyNodeChanged();
	};
	oFF.QRestrictedMeasure = function() {
	};
	oFF.QRestrictedMeasure.prototype = new oFF.QStructureMember();
	oFF.QRestrictedMeasure._createRestrictedMeasure = function(context,
			structure) {
		var queryModel = context.getQueryModel();
		var member;
		if (!queryModel.supportsRestrictedMeasures()) {
			oFF.noSupport();
		}
		if (queryModel.isBlendingModel()) {
			oFF.noSupport();
		}
		member = new oFF.QRestrictedMeasure();
		member.setupRestrictedMeasure(context, structure);
		return member;
	};
	oFF.QRestrictedMeasure.prototype.m_filter = null;
	oFF.QRestrictedMeasure.prototype.m_aggregationDimensionName = null;
	oFF.QRestrictedMeasure.prototype.copyRestrictedMeasure = function(origin) {
		this.copyStructureMember(origin);
		this.m_aggregationDimensionName = origin.m_aggregationDimensionName;
		this.m_filter.copyFilterExpression(origin.m_filter);
	};
	oFF.QRestrictedMeasure.prototype.setupRestrictedMeasure = function(context,
			structure) {
		oFF.QStructureMember.prototype.setupStructureMember.call(this, context,
				structure, oFF.MemberType.RESTRICTED_MEASURE);
		this.m_filter = oFF.QFilterExpression._createByApplication(context,
				this);
	};
	oFF.QRestrictedMeasure.prototype.releaseObject = function() {
		this.m_aggregationDimensionName = null;
		this.m_filter = oFF.XObjectExt.release(this.m_filter);
		oFF.QStructureMember.prototype.releaseObject.call(this);
	};
	oFF.QRestrictedMeasure.prototype.getFilter = function() {
		return this.m_filter;
	};
	oFF.QRestrictedMeasure.prototype.getAggregationDimensionName = function() {
		return this.m_aggregationDimensionName;
	};
	oFF.QRestrictedMeasure.prototype.setAggregationDimension = function(
			dimension) {
		this.setAggregationDimensionName(dimension.getName());
	};
	oFF.QRestrictedMeasure.prototype.setAggregationDimensionName = function(
			dimensionName) {
		this.m_aggregationDimensionName = dimensionName;
		this.notifyNodeChanged();
	};
	oFF.QRestrictedMeasure.prototype.assertStandardAggregationTypeRestricted = function(
			aggregationType) {
		if (oFF.isNull(aggregationType)) {
			return;
		}
		if (this.getQueryModel().supportsExceptionAggregationDimsFormulas()) {
			if (oFF.XStringUtils.isNullOrEmpty(this.m_aggregationDimensionName)
					&& (aggregationType === oFF.AggregationType.AVERAGE || aggregationType === oFF.AggregationType.COUNT)) {
				return;
			}
			if (aggregationType !== oFF.AggregationType.SUM
					&& aggregationType !== oFF.AggregationType.MIN
					&& aggregationType !== oFF.AggregationType.MAX
					&& aggregationType !== oFF.AggregationType.NOP_NULL
					&& aggregationType !== oFF.AggregationType.NOP_NULL_ZERO) {
				throw oFF.XException
						.createIllegalArgumentException(oFF.XStringUtils
								.concatenate3("The aggregation type '",
										aggregationType.getName(),
										"' is not valid as standard aggregation. Use it as Exception Aggregation!"));
			}
		}
	};
	oFF.QRestrictedMeasure.prototype.setAggregationType = function(
			aggregationType) {
		if (this.m_aggregationType === aggregationType) {
			return;
		}
		this.assertStandardAggregationTypeRestricted(aggregationType);
		this.m_aggregationType = aggregationType;
		this.notifyNodeChanged();
	};
	oFF.QRestrictedMeasure.prototype.supportsComplexFilter = function() {
		return true;
	};
	oFF.QRestrictedMeasure.prototype.supportsCellValueOperand = function() {
		return true;
	};
	oFF.QRestrictedMeasure.prototype.supportsExceptionAggregationDimsFormulas = function() {
		var queryModel = this.getQueryModel();
		if (oFF.isNull(queryModel)) {
			return false;
		}
		return queryModel.supportsExceptionAggregationDimsFormulas();
	};
	oFF.QRestrictedMeasure.prototype.supportsIntersectLayers = function() {
		return false;
	};
	oFF.QRestrictedMeasure.prototype.supportsVisibilityFilter = function() {
		return false;
	};
	oFF.QHierarchyNameVariable = function() {
	};
	oFF.QHierarchyNameVariable.prototype = new oFF.QDimensionMemberVariable();
	oFF.QHierarchyNameVariable.createDimensionHierarchyVariable = function(
			context, parent, name, description) {
		var variable = new oFF.QHierarchyNameVariable();
		variable.setupDimensionMemberVariable(context, parent, name,
				description);
		return variable;
	};
	oFF.QHierarchyNameVariable.prototype.m_hierarchyDimension = null;
	oFF.QHierarchyNameVariable.prototype.releaseObject = function() {
		this.m_hierarchyDimension = oFF.XObjectExt
				.release(this.m_hierarchyDimension);
		oFF.QDimensionMemberVariable.prototype.releaseObject.call(this);
	};
	oFF.QHierarchyNameVariable.prototype.copyHierarchyNameVariable = function(
			origin) {
		oFF.QDimensionMemberVariable.prototype.copyDimensionMemberVariable
				.call(this, origin);
		this.setHierarchyNameDimension(this.getQueryModel()
				.getDimensionByNameFromExistingMetadata(
						origin.getHierarchyNameDimension().getName()));
	};
	oFF.QHierarchyNameVariable.prototype.getVariableType = function() {
		return oFF.VariableType.HIERARCHY_NAME_VARIABLE;
	};
	oFF.QHierarchyNameVariable.prototype.getHierarchyNameDimension = function() {
		return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyDimension);
	};
	oFF.QHierarchyNameVariable.prototype.setHierarchyNameDimension = function(
			dimension) {
		this.m_hierarchyDimension = oFF.XWeakReferenceUtil
				.getWeakRef(dimension);
	};
	oFF.QHierarchyNodeVariable = function() {
	};
	oFF.QHierarchyNodeVariable.prototype = new oFF.QDimensionMemberVariable();
	oFF.QHierarchyNodeVariable.createHierarchyNodeVariable = function(context,
			parent, name, description) {
		var variable = new oFF.QHierarchyNodeVariable();
		variable.setupDimensionMemberVariable(context, parent, name,
				description);
		return variable;
	};
	oFF.QHierarchyNodeVariable.prototype.getVariableType = function() {
		return oFF.VariableType.HIERARCHY_NODE_VARIABLE;
	};
	oFF.QAxis = function() {
	};
	oFF.QAxis.prototype = new oFF.QAxisDimensionList();
	oFF.QAxis.createAxis = function(context, parent, axisType) {
		var axis = new oFF.QAxis();
		axis.setupQAxis(context, parent, axisType);
		return axis;
	};
	oFF.QAxis.prototype.m_axisType = null;
	oFF.QAxis.prototype.m_isHierarchyActive = false;
	oFF.QAxis.prototype.m_zeroSuppressionType = null;
	oFF.QAxis.prototype.m_defaultZeroSuppressionType = null;
	oFF.QAxis.prototype.m_supportsZeroSuppression = false;
	oFF.QAxis.prototype.m_resultStructureController = null;
	oFF.QAxis.prototype.copyAxis = function(origin) {
		var size;
		var i;
		var dimensionName;
		var dimension;
		oFF.QAxisDimensionList.prototype.copyModelComponentList.call(this,
				origin);
		size = origin.size();
		for (i = 0; i < size; i++) {
			dimensionName = origin.get(i).getName();
			dimension = this.getQueryModelBase().getDimensionByNameInternal(
					dimensionName);
			if (oFF.notNull(dimension)) {
				oFF.QAxisDimensionList.prototype.addInternal.call(this,
						dimension);
				dimension.setAxis(this);
			}
		}
		this.m_isHierarchyActive = origin.m_isHierarchyActive;
		this.m_zeroSuppressionType = origin.m_zeroSuppressionType;
		this.m_defaultZeroSuppressionType = origin.m_defaultZeroSuppressionType;
		this.m_supportsZeroSuppression = origin.m_supportsZeroSuppression;
		this.m_resultStructureController
				.copyResultStructureController(origin.m_resultStructureController);
	};
	oFF.QAxis.prototype.setupQAxis = function(context, parent, axisType) {
		oFF.QAxisDimensionList.prototype.setupOlapList.call(this, context,
				parent, false, axisType.getName());
		this.m_axisType = axisType;
		this.m_zeroSuppressionType = oFF.ZeroSuppressionType.NONE;
		this.m_supportsZeroSuppression = false;
		this.m_resultStructureController = oFF.QResultStructureController
				._create(context, this, oFF.QModelLevel.AXES);
	};
	oFF.QAxis.prototype.releaseObject = function() {
		this.m_axisType = null;
		this.m_zeroSuppressionType = null;
		this.m_defaultZeroSuppressionType = null;
		this.m_resultStructureController = oFF.XObjectExt
				.release(this.m_resultStructureController);
		oFF.QAxisDimensionList.prototype.releaseObject.call(this);
	};
	oFF.QAxis.prototype.isTotalsVisible = function() {
		var size = this.size();
		var i;
		var visibility;
		for (i = 0; i < size; i++) {
			visibility = this.get(i).getResultVisibility();
			if (visibility === oFF.ResultVisibility.VISIBLE
					|| visibility === oFF.ResultVisibility.CONDITIONAL) {
				return true;
			}
		}
		return false;
	};
	oFF.QAxis.prototype.getOlapComponentType = function() {
		return this.getType();
	};
	oFF.QAxis.prototype.getType = function() {
		return this.m_axisType;
	};
	oFF.QAxis.prototype.getZeroSuppressionType = function() {
		return this.m_zeroSuppressionType;
	};
	oFF.QAxis.prototype.supportsZeroSuppression = function() {
		return this.m_supportsZeroSuppression;
	};
	oFF.QAxis.prototype.setSupportsZeroSuppression = function(
			supportsZeroSuppression) {
		this.m_supportsZeroSuppression = supportsZeroSuppression;
	};
	oFF.QAxis.prototype.setZeroSuppressionType = function(suppressionType) {
		oFF.XBooleanUtils.checkTrue(this.m_supportsZeroSuppression,
				"Zero suppression not supported");
		if ((this.m_axisType === oFF.AxisType.COLUMNS || this.m_axisType === oFF.AxisType.ROWS)
				&& this.m_zeroSuppressionType !== suppressionType) {
			this.m_zeroSuppressionType = suppressionType;
			this.notifyNodeChanged();
		}
	};
	oFF.QAxis.prototype.getAxis = function() {
		return this;
	};
	oFF.QAxis.prototype.getAxisBase = function() {
		return this;
	};
	oFF.QAxis.prototype.isHierarchyActive = function() {
		return this.m_isHierarchyActive;
	};
	oFF.QAxis.prototype.setIsHierarchyActive = function(isActive) {
		this.m_isHierarchyActive = isActive;
	};
	oFF.QAxis.prototype.getEffectiveFields = function() {
		var effective = oFF.XList.create();
		var size = this.size();
		var i;
		for (i = 0; i < size; i++) {
			effective.addAll(this.getDimensionAt(i).getResultSetFields());
		}
		return effective;
	};
	oFF.QAxis.prototype.supportsResultVisibility = function() {
		return this.m_resultStructureController.supportsResultVisibility();
	};
	oFF.QAxis.prototype.getResultVisibility = function() {
		return this.m_resultStructureController.getResultVisibility();
	};
	oFF.QAxis.prototype.getResultVisibilitySettings = function() {
		return this.m_resultStructureController.getResultVisibilitySettings();
	};
	oFF.QAxis.prototype.clearResultVisibilitySettings = function() {
		this.m_resultStructureController.clearResultVisibilitySettings();
	};
	oFF.QAxis.prototype.getResultVisibilityByElement = function(element) {
		return this.m_resultStructureController
				.getResultVisibilityByElement(element);
	};
	oFF.QAxis.prototype.getResultVisibilityByElementAndAlignment = function(
			alignment, element) {
		return this.m_resultStructureController
				.getResultVisibilityByElementAndAlignment(alignment, element);
	};
	oFF.QAxis.prototype.setResultVisibility = function(visibility) {
		this.m_resultStructureController.setResultVisibility(visibility);
	};
	oFF.QAxis.prototype.setResultVisibilityByElement = function(element,
			visibility) {
		this.m_resultStructureController.setResultVisibilityByElement(element,
				visibility);
	};
	oFF.QAxis.prototype.setResultVisibilityByElementAndAlignment = function(
			alignment, element, visibility) {
		this.m_resultStructureController
				.setResultVisibilityByElementAndAlignment(alignment, element,
						visibility);
	};
	oFF.QAxis.prototype.supportsResultAlignment = function() {
		return this.m_resultStructureController.supportsResultAlignment();
	};
	oFF.QAxis.prototype.setResultAlignment = function(alignment) {
		this.m_resultStructureController.setResultAlignment(alignment);
	};
	oFF.QAxis.prototype.getResultAlignment = function() {
		return this.m_resultStructureController.getResultAlignment();
	};
	oFF.QAxis.prototype.getSupportedResultAlignmentLevel = function() {
		return this.m_resultStructureController
				.getSupportedResultAlignmentLevel();
	};
	oFF.QAxis.prototype.getSupportedResultVisibilityLevel = function() {
		return this.m_resultStructureController
				.getSupportedResultVisibilityLevel();
	};
	oFF.QAxis.prototype.getSupportedResultAlignments = function() {
		return this.m_resultStructureController.getSupportedResultAlignments();
	};
	oFF.QAxis.prototype.supportsResultAlignmentType = function(resultAlignment) {
		return this.m_resultStructureController
				.supportsResultAlignmentType(resultAlignment);
	};
	oFF.QAxis.prototype.supportsConditionalResultVisibility = function() {
		return this.m_resultStructureController
				.supportsConditionalResultVisibility();
	};
	oFF.QAxis.prototype.supportsConditionalResults = function() {
		return this.m_resultStructureController.supportsConditionalResults();
	};
	oFF.QAxis.prototype.getSupportedConditionalResults = function() {
		return this.m_resultStructureController
				.getSupportedConditionalResults();
	};
	oFF.QAxis.prototype.getResultStructureReorderingCapability = function() {
		return this.m_resultStructureController
				.getResultStructureReorderingCapability();
	};
	oFF.QAxis.prototype.getParentResultStructureController = function() {
		return this.getQueryModel().getResultStructureController();
	};
	oFF.QAxis.prototype.getResultStructureController = function() {
		return this.m_resultStructureController;
	};
	oFF.QAxis.prototype.getResultStructureControllerBase = function() {
		return this.m_resultStructureController;
	};
	oFF.QAxis.prototype.getResultStructureChildren = function() {
		var list = oFF.XList.create();
		var i;
		var dimension;
		for (i = 0; i < this.size(); i++) {
			dimension = this.get(i);
			list.add(dimension.getResultStructureControllerBase());
		}
		return list.getIterator();
	};
	oFF.QAxis.prototype.supportsTotals = function() {
		var size = this.size();
		var i;
		for (i = 0; i < size; i++) {
			if (!this.get(i).supportsTotals()) {
				return false;
			}
		}
		return this.m_resultStructureController.supportsTotals();
	};
	oFF.QAxis.prototype.isTotalsAlignmentOnDefault = function() {
		return this.m_resultStructureController.isTotalsAlignmentOnDefault();
	};
	oFF.QAxis.prototype.isTotalsVisibilityOnDefault = function() {
		return this.m_resultStructureController.isTotalsVisibilityOnDefault();
	};
	oFF.QAxis.prototype.isTotalsStructureOnDefault = function() {
		return this.m_resultStructureController.isTotalsStructureOnDefault();
	};
	oFF.QAxis.prototype.restoreTotalsAlignment = function(restoreAction,
			recurseChildren) {
		this.m_resultStructureController.restoreTotalsAlignment(restoreAction,
				recurseChildren);
	};
	oFF.QAxis.prototype.restoreTotalsVisibility = function(restoreAction,
			recurseChildren) {
		this.m_resultStructureController.restoreTotalsVisibility(restoreAction,
				recurseChildren);
	};
	oFF.QAxis.prototype.getModelLevel = function() {
		return this.m_resultStructureController.getModelLevel();
	};
	oFF.QAxis.prototype.getDefaultZeroSuppressionType = function() {
		return this.m_defaultZeroSuppressionType;
	};
	oFF.QAxis.prototype.setDefaultZeroSuppression = function(
			defaultZeroSuppression) {
		this.m_defaultZeroSuppressionType = defaultZeroSuppression;
	};
	oFF.QSimpleTypeVariable = function() {
	};
	oFF.QSimpleTypeVariable.prototype = new oFF.QVariable();
	oFF.QSimpleTypeVariable.createSimpleTypeVariable = function(context,
			parent, valueType, name, description, hasMultipleValues) {
		var variable = new oFF.QSimpleTypeVariable();
		variable.setupSimpleTypeVariable(context, parent,
				oFF.VariableType.SIMPLE_TYPE_VARIABLE, valueType, name,
				description, hasMultipleValues);
		return variable;
	};
	oFF.QSimpleTypeVariable.createTextVariable = function(context, parent,
			name, description, hasMultipleValues) {
		var variable = new oFF.QSimpleTypeVariable();
		variable.setupSimpleTypeVariable(context, parent,
				oFF.VariableType.TEXT_VARIABLE, oFF.XValueType.STRING, name,
				description, hasMultipleValues);
		return variable;
	};
	oFF.QSimpleTypeVariable.createFormulaVariable = function(context, parent,
			name, description, hasMultipleValues) {
		var variable = new oFF.QSimpleTypeVariable();
		variable.setupSimpleTypeVariable(context, parent,
				oFF.VariableType.FORMULA_VARIABLE, oFF.XValueType.DOUBLE, name,
				description, hasMultipleValues);
		return variable;
	};
	oFF.QSimpleTypeVariable.createOptionListVariable = function(context,
			parent, name, description, hasMultipleValues) {
		var variable = new oFF.QSimpleTypeVariable();
		variable.setupSimpleTypeVariable(context, parent,
				oFF.VariableType.OPTION_LIST_VARIABLE, oFF.XValueType.STRING,
				name, description, hasMultipleValues);
		return variable;
	};
	oFF.QSimpleTypeVariable.createHierarchyVariable = function(context, parent,
			name, description, hasMultipleValues) {
		var variable = new oFF.QSimpleTypeVariable();
		variable.setupSimpleTypeVariable(context, parent,
				oFF.VariableType.HIERARCHY_VARIABLE, oFF.XValueType.STRING,
				name, description, hasMultipleValues);
		return variable;
	};
	oFF.QSimpleTypeVariable.prototype.m_variableType = null;
	oFF.QSimpleTypeVariable.prototype.m_value = null;
	oFF.QSimpleTypeVariable.prototype.m_valuesList = null;
	oFF.QSimpleTypeVariable.prototype.m_isUsingMultipleValues = false;
	oFF.QSimpleTypeVariable.prototype.m_scale = 0;
	oFF.QSimpleTypeVariable.prototype.m_length = 0;
	oFF.QSimpleTypeVariable.prototype.m_options = null;
	oFF.QSimpleTypeVariable.prototype.setupSimpleTypeVariable = function(
			context, parent, variableType, valueType, name, description,
			hasMultipleValues) {
		this.setupVariable(context, parent, valueType, name, description);
		this.m_valuesList = oFF.XList.create();
		this.m_options = oFF.XListOfNameObject.create();
		this.m_variableType = variableType;
		this.m_isUsingMultipleValues = hasMultipleValues;
	};
	oFF.QSimpleTypeVariable.prototype.releaseObject = function() {
		this.m_value = oFF.XObjectExt.release(this.m_value);
		this.m_valuesList = oFF.XObjectExt.release(this.m_valuesList);
		this.m_options = oFF.XObjectExt.release(this.m_options);
		this.m_variableType = null;
		oFF.QVariable.prototype.releaseObject.call(this);
	};
	oFF.QSimpleTypeVariable.prototype.copySimpleTypeVariable = function(origin) {
		var size;
		var i;
		var context;
		var option;
		oFF.QVariable.prototype.copyVariable.call(this, origin);
		this.m_value = oFF.XObjectExt.cloneIfNotNull(origin.m_value);
		size = origin.m_valuesList.size();
		for (i = 0; i < size; i++) {
			this.m_valuesList.add(origin.m_valuesList.get(i).clone());
		}
		size = origin.m_options.size();
		context = this.getContext();
		for (i = 0; i < size; i++) {
			option = origin.m_options.get(i);
			this.m_options.add(oFF.QOptionListElement.createOptionListElement(
					context, this, option.getName(), option.getText()));
		}
		this.m_scale = origin.m_scale;
		this.m_length = origin.m_length;
		this.m_isUsingMultipleValues = origin.m_isUsingMultipleValues;
	};
	oFF.QSimpleTypeVariable.prototype.getVariableType = function() {
		return this.m_variableType;
	};
	oFF.QSimpleTypeVariable.prototype.setValue = function(value) {
		var changed = false;
		if (oFF.isNull(value)) {
			if (oFF.notNull(this.m_value)) {
				this.m_value = oFF.XObjectExt.release(this.m_value);
				changed = true;
			}
		} else {
			if (oFF.isNull(this.m_value)) {
				this.m_value = value;
				changed = true;
			} else {
				if (!value.isEqualTo(this.m_value)) {
					this.m_value = value;
					changed = true;
				}
			}
		}
		if (changed) {
			this.notifyNodeChanged();
		}
	};
	oFF.QSimpleTypeVariable.prototype.hasValue = function() {
		return oFF.notNull(this.m_value) || this.m_valuesList.hasElements();
	};
	oFF.QSimpleTypeVariable.prototype.getValueScale = function() {
		return this.m_scale;
	};
	oFF.QSimpleTypeVariable.prototype.setValueScale = function(scale) {
		this.m_scale = scale;
	};
	oFF.QSimpleTypeVariable.prototype.getValueLength = function() {
		return this.m_length;
	};
	oFF.QSimpleTypeVariable.prototype.setValueLength = function(length) {
		this.m_length = length;
	};
	oFF.QSimpleTypeVariable.prototype.setString = function(value) {
		var xValue;
		var stringContainer;
		var oldValue;
		if (this.getValueType() !== oFF.XValueType.STRING
				&& this.getValueType() !== oFF.XValueType.KEY_VALUE) {
			oFF.noSupport();
		}
		xValue = this.getValue();
		if (oFF.isNull(xValue)) {
			this.setValue(oFF.XStringValue.create(value));
		} else {
			stringContainer = xValue;
			oldValue = stringContainer.getString();
			if (!oFF.XString.isEqual(oldValue, value)) {
				stringContainer.setString(value);
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QSimpleTypeVariable.prototype.setInteger = function(value) {
		var xValue = this.getValue();
		var intContainer;
		if (oFF.isNull(xValue)) {
			this.setValue(oFF.XIntegerValue.create(value));
		} else {
			this.assertValueType(xValue, oFF.XValueType.INTEGER);
			intContainer = xValue;
			if (intContainer.getInteger() !== value) {
				intContainer.setInteger(value);
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QSimpleTypeVariable.prototype.setLong = function(value) {
		var xValue = this.getValue();
		var longContainer;
		if (oFF.isNull(xValue)) {
			this.setValue(oFF.XLongValue.create(value));
		} else {
			this.assertValueType(xValue, oFF.XValueType.LONG);
			longContainer = xValue;
			if (longContainer.getLong() !== value) {
				longContainer.setLong(value);
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QSimpleTypeVariable.prototype.setDouble = function(value) {
		var xValue;
		var doubleContainer;
		if (this.getValueType() !== oFF.XValueType.DOUBLE
				&& this.getValueType() !== oFF.XValueType.DECIMAL_FLOAT) {
			oFF.noSupport();
		}
		xValue = this.getValue();
		if (oFF.isNull(xValue)) {
			this.setValue(oFF.XDoubleValue.create(value));
		} else {
			doubleContainer = xValue;
			if (doubleContainer.getDouble() !== value) {
				doubleContainer.setDouble(value);
				this.notifyNodeChanged();
			}
		}
	};
	oFF.QSimpleTypeVariable.prototype.setDate = function(value) {
		this.assertValueType(value, oFF.XValueType.DATE);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setInternal = function(newValue) {
		var oldValue;
		if (oFF.isNull(newValue)) {
			this.setValue(null);
			this.notifyNodeChanged();
			return;
		}
		oldValue = this.m_value;
		if (newValue.isEqualTo(oldValue)) {
			return;
		}
		this.setValue(newValue.clone());
		this.notifyNodeChanged();
	};
	oFF.QSimpleTypeVariable.prototype.getString = function() {
		var value = this.getValue();
		var valueType;
		if (oFF.isNull(value)) {
			return null;
		}
		valueType = this.getValueType();
		if (valueType === oFF.XValueType.STRING) {
			return value.getString();
		}
		if (valueType === oFF.XValueType.DATE) {
			return value.toIsoFormat();
		}
		if (valueType === oFF.XValueType.DATE_TIME) {
			return value.toIsoFormat();
		}
		if (valueType === oFF.XValueType.TIME) {
			return value.toIsoFormat();
		}
		if (valueType.isSpatial()) {
			return value.toWKT();
		}
		oFF.noSupport();
	};
	oFF.QSimpleTypeVariable.prototype.getInteger = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return 0;
		}
		this.assertValueType(value, oFF.XValueType.INTEGER);
		return value.getInteger();
	};
	oFF.QSimpleTypeVariable.prototype.getLong = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return 0;
		}
		this.assertValueType(value, oFF.XValueType.LONG);
		return value.getLong();
	};
	oFF.QSimpleTypeVariable.prototype.getDouble = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return 0;
		}
		if (this.getValueType() !== oFF.XValueType.DOUBLE
				&& this.getValueType() !== oFF.XValueType.DECIMAL_FLOAT) {
			oFF.noSupport();
		}
		return value.getDouble();
	};
	oFF.QSimpleTypeVariable.prototype.getDate = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.DATE);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.setValueByStringExt = function(value,
			isManualInput) {
		var valueType = this.getValueType();
		var xValue;
		if (oFF.XStringUtils.isNullOrEmpty(value)
				&& valueType !== oFF.XValueType.STRING) {
			this
					.setValue(oFF.XValueAccess.createWithType(valueType)
							.getValue());
			return;
		}
		xValue = this.getXValue(value);
		this.setValue(xValue);
	};
	oFF.QSimpleTypeVariable.prototype.addValueByString = function(value) {
		var xValue = this.getXValue(value);
		if (oFF.notNull(xValue)) {
			this.addInternal(xValue);
		}
	};
	oFF.QSimpleTypeVariable.prototype.getXValue = function(value) {
		var valueType;
		if (oFF.isNull(value)) {
			return null;
		}
		valueType = this.getValueType();
		if (valueType === oFF.XValueType.STRING) {
			return oFF.XStringValue.create(value);
		}
		if (valueType === oFF.XValueType.DOUBLE
				|| valueType === oFF.XValueType.DECIMAL_FLOAT) {
			return oFF.XDoubleValue
					.create(oFF.XDouble.convertFromString(value));
		}
		if (valueType === oFF.XValueType.LONG) {
			return oFF.XLongValue.create(oFF.XLong.convertFromString(value));
		}
		if (valueType === oFF.XValueType.INTEGER) {
			return oFF.XIntegerValue.create(oFF.XInteger
					.convertFromStringWithRadix(value, 10));
		}
		if (valueType === oFF.XValueType.DATE) {
			return oFF.XDate.createDateFromIsoFormat(value);
		}
		if (valueType === oFF.XValueType.TIME) {
			return oFF.XTime.createTimeFromIsoFormat(value);
		}
		if (valueType === oFF.XValueType.DATE_TIME) {
			return oFF.XDateTime.createDateTimeFromIsoFormat(value);
		}
		if (valueType === oFF.XValueType.BOOLEAN) {
			return oFF.XBooleanValue.create(oFF.XBoolean
					.convertFromString(value));
		}
		if (valueType.isSpatial()) {
			return oFF.XGeometryValue.createGeometryValueWithWkt(value);
		}
		oFF.noSupport();
	};
	oFF.QSimpleTypeVariable.prototype.getValueByString = function() {
		var buffer;
		var i;
		var currentValue;
		if (this.m_isUsingMultipleValues) {
			buffer = oFF.XStringBuffer.create();
			if (oFF.isNull(this.m_valuesList)) {
				buffer.append("null");
			} else {
				for (i = 0; i < this.m_valuesList.size(); i++) {
					if (i > 0) {
						buffer.append(",");
					}
					currentValue = this.m_valuesList.get(i);
					buffer.append(oFF.isNull(currentValue) ? "null"
							: currentValue.getStringRepresentation());
				}
			}
			return buffer.toString();
		}
		return oFF.isNull(this.m_value) ? "null" : this.m_value
				.getStringRepresentation();
	};
	oFF.QSimpleTypeVariable.prototype.addDouble = function(value) {
		if (this.getValueType() !== oFF.XValueType.DOUBLE
				&& this.getValueType() !== oFF.XValueType.DECIMAL_FLOAT) {
			oFF.noSupport();
		}
		this.addInternal(oFF.XDoubleValue.create(value));
	};
	oFF.QSimpleTypeVariable.prototype.addInternal = function(value) {
		if (oFF.isNull(value)) {
			return;
		}
		if (!this.m_valuesList.contains(value)) {
			this.m_valuesList.add(value);
		}
	};
	oFF.QSimpleTypeVariable.prototype.addString = function(value) {
		this.addInternal(oFF.XStringValue.create(value));
	};
	oFF.QSimpleTypeVariable.prototype.addInteger = function(value) {
		this.addInternal(oFF.XIntegerValue.create(value));
	};
	oFF.QSimpleTypeVariable.prototype.addLong = function(value) {
		this.addInternal(oFF.XLongValue.create(value));
	};
	oFF.QSimpleTypeVariable.prototype.addDate = function(value) {
		this.assertValueType(value, oFF.XValueType.DATE);
		this.addInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.addBoolean = function(value) {
		this.addInternal(oFF.XBooleanValue.create(value));
	};
	oFF.QSimpleTypeVariable.prototype.clear = function() {
		if (oFF.notNull(this.m_valuesList)) {
			this.m_valuesList.clear();
		}
		this.setValue(null);
	};
	oFF.QSimpleTypeVariable.prototype.getValues = function() {
		return this.m_valuesList.getValuesAsReadOnlyList();
	};
	oFF.QSimpleTypeVariable.prototype.useMultipleValues = function(use) {
		this.m_isUsingMultipleValues = use;
	};
	oFF.QSimpleTypeVariable.prototype.supportsMultipleValues = function() {
		return this.m_isUsingMultipleValues;
	};
	oFF.QSimpleTypeVariable.prototype.setDateTime = function(value) {
		this.assertValueType(value, oFF.XValueType.DATE_TIME);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.getValue = function() {
		if (oFF.notNull(this.m_value)) {
			return this.m_value;
		}
		if (!this.m_isUsingMultipleValues && oFF.notNull(this.m_valuesList)
				&& !this.m_valuesList.isEmpty()) {
			return this.m_valuesList.get(0);
		}
		return null;
	};
	oFF.QSimpleTypeVariable.prototype.getDateTime = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.DATE_TIME);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.addDateTime = function(value) {
		this.addInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.newVariableValue = function() {
		return oFF.QVariableValue.create(this);
	};
	oFF.QSimpleTypeVariable.prototype.getGeometry = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		if (!value.getValueType().isSpatial()) {
			oFF.noSupport();
		}
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getPolygon = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.POLYGON);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getPoint = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.POINT);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getMultiPoint = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.MULTI_POINT);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getMultiPolygon = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.MULTI_POLYGON);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getLineString = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.LINE_STRING);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getMultiLineString = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.MULTI_LINE_STRING);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getBoolean = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return false;
		}
		this.assertValueType(value, oFF.XValueType.BOOLEAN);
		return value.getBoolean();
	};
	oFF.QSimpleTypeVariable.prototype.getTime = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.TIME);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getTimeSpan = function() {
		var value = this.getValue();
		if (oFF.isNull(value)) {
			return null;
		}
		this.assertValueType(value, oFF.XValueType.TIMESPAN);
		return value.clone();
	};
	oFF.QSimpleTypeVariable.prototype.getNull = function() {
		return null;
	};
	oFF.QSimpleTypeVariable.prototype.setTextValue = function(text) {
		this.setString(text);
	};
	oFF.QSimpleTypeVariable.prototype.getTextValue = function() {
		return this.getString();
	};
	oFF.QSimpleTypeVariable.prototype.setFormulaValue = function(value) {
		this.setDouble(value);
	};
	oFF.QSimpleTypeVariable.prototype.getFormulaValue = function() {
		return this.getDouble();
	};
	oFF.QSimpleTypeVariable.prototype.getOptions = function() {
		return this.m_options;
	};
	oFF.QSimpleTypeVariable.prototype.setOptionByName = function(name) {
		var option = this.m_options.getByKey(name);
		if (oFF.notNull(option)) {
			this.setString(name);
		}
	};
	oFF.QSimpleTypeVariable.prototype.addOptionByName = function(name) {
		var option = this.m_options.getByKey(name);
		if (oFF.notNull(option)) {
			this.addString(name);
		}
	};
	oFF.QSimpleTypeVariable.prototype.addOption = function(option) {
		if (!this.m_options.contains(option)) {
			this.m_options.add(option);
		}
	};
	oFF.QSimpleTypeVariable.prototype.createAndAddOption = function(name, text) {
		this.addOption(oFF.QOptionListElement.createOptionListElement(this
				.getContext(), this, name, text));
	};
	oFF.QSimpleTypeVariable.prototype.getCurrentOption = function() {
		return this.m_options.getByKey(this.getString());
	};
	oFF.QSimpleTypeVariable.prototype.clearOptions = function() {
		this.m_options.clear();
	};
	oFF.QSimpleTypeVariable.prototype.copyFrom = function(source) {
		this.m_value = source.getValue();
	};
	oFF.QSimpleTypeVariable.prototype.parseString = function(value) {
		return null;
	};
	oFF.QSimpleTypeVariable.prototype.setPolygon = function(value) {
		this.assertValueType(value, oFF.XValueType.POLYGON);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setPoint = function(value) {
		this.assertValueType(value, oFF.XValueType.POINT);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setMultiPoint = function(value) {
		this.assertValueType(value, oFF.XValueType.MULTI_POINT);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setMultiPolygon = function(value) {
		this.assertValueType(value, oFF.XValueType.MULTI_POLYGON);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setLineString = function(value) {
		this.assertValueType(value, oFF.XValueType.LINE_STRING);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setMultiLineString = function(value) {
		this.assertValueType(value, oFF.XValueType.MULTI_LINE_STRING);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setBoolean = function(value) {
		var xBoolean = oFF.XBooleanValue.create(value);
		var original = this.m_value;
		if (xBoolean.isEqualTo(original)) {
			return;
		}
		this.setValue(xBoolean.clone());
		this.notifyNodeChanged();
	};
	oFF.QSimpleTypeVariable.prototype.setTimeSpan = function(value) {
		this.assertValueType(value, oFF.XValueType.TIMESPAN);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setNullByType = function(nullValueType) {
		this.m_value = oFF.XValueAccess.createWithType(nullValueType)
				.getValue();
	};
	oFF.QSimpleTypeVariable.prototype.setXValue = function(value) {
		this.copyFrom(oFF.XValueAccess.createWithValue(value));
	};
	oFF.QSimpleTypeVariable.prototype.addTime = function(value) {
		this.assertValueType(value, oFF.XValueType.TIME);
		this.addInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.setTime = function(value) {
		this.assertValueType(value, oFF.XValueType.TIME);
		this.setInternal(value);
	};
	oFF.QSimpleTypeVariable.prototype.getFormattedValue = function() {
		return this.getString();
	};
	oFF.OlapImplModule = function() {
	};
	oFF.OlapImplModule.prototype = new oFF.DfModule();
	oFF.OlapImplModule.s_module = null;
	oFF.OlapImplModule.getInstance = function() {
		return oFF.OlapImplModule.initVersion(oFF.XVersion.API_DEFAULT);
	};
	oFF.OlapImplModule.initVersion = function(version) {
		var timestamp;
		var registrationService;
		if (oFF.isNull(oFF.OlapImplModule.s_module)) {
			oFF.DfModule.checkInitialized(oFF.CommonsModule
					.initVersion(version));
			oFF.DfModule.checkInitialized(oFF.OlapApiModule
					.initVersion(version));
			oFF.DfModule.checkInitialized(oFF.OlapExtModule
					.initVersion(version));
			timestamp = oFF.DfModule.start("OlapImplModule...");
			oFF.OlapImplModule.s_module = new oFF.OlapImplModule();
			registrationService = oFF.RegistrationService.getInstance();
			oFF.QInAConverter.staticSetup();
			oFF.QDeltaOperationPhase.staticSetup();
			oFF.QDeltaBroadcastPhase.staticSetup();
			oFF.QDeltaChangeState.staticSetup();
			oFF.QInAImportFactory.staticSetup();
			oFF.QInAExportFactory.staticSetup();
			oFF.QUqmPreparator.staticSetupUqm();
			oFF.QFactory.setInstance(oFF.QFactoryImpl.create());
			oFF.HierarchyCatalogServiceConfig.staticSetup();
			registrationService.addServiceConfig(
					oFF.OlapApiModule.XS_HIERARCHY_CATALOG,
					oFF.HierarchyCatalogServiceConfig.CLAZZ);
			oFF.HierarchyCatalogService.staticSetup();
			registrationService.addService(
					oFF.OlapApiModule.XS_HIERARCHY_CATALOG,
					oFF.HierarchyCatalogService.CLAZZ);
			oFF.OlapEnvironmentFactoryImpl.staticSetupImpl();
			oFF.PlanningFactory
					.setInstance(new oFF.PlanningManagerFactoryDummyImpl());
			oFF.DfModule.stop(timestamp);
		}
		return oFF.OlapImplModule.s_module;
	};
	oFF.OlapImplModule.getInstance();
})(sap.firefly);