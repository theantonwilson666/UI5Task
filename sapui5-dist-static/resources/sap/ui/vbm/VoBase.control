<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>VoBase</name>
    <derived/>
    <documentation>Abstract aggregation element for VO aggregations. This element implements the common part for all specific VO elements. It must not be
       used directly, but is the base for further extension.&lt;br&gt;
       As a common feature it provides the Label, which may be attached to any visual object. There are two modes for using labels:
       &lt;ul&gt;
       &lt;li&gt;A controlled mode by providing a label type. In this mode most parameters for the label are automatically set by programmed
       defaults according to the Fiori guidelines.&lt;/li&gt;
       &lt;li&gt;A freestyle mode, providing the full control on colors and layout.&lt;/li&gt;
       &lt;/ul&gt;
       Further all visual objects have common edit capabilities and it is possible to drop content on visual objects.</documentation>
    <baseType>sap.ui.core/Element</baseType>
    <properties>
        <property name="key" type="sap.ui.core/string" group="Misc">
            <documentation>Unique identifier for the object. This is optional. If not provided the default identifier sId is used. However, sId is generated
if template binding is used and thus it is not stable. Provide the key if the object really needs to have a unique and stable
identifier.</documentation>
        </property>
        <property name="hotScale" type="sap.ui.core/string" defaultValue="1.0;1.0;1.0" group="Misc">
            <documentation>Scaling factor applied when visual object is hovered. This is only supported on selected VOs, which do not present a defined geo
area.</documentation>
        </property>
        <property name="hotDeltaColor" type="sap.ui.core/string" defaultValue="RHLSA(0;1.3;1.0;1.0)" group="Misc">
            <documentation>Color change applied when visual object is hovered. The format is
RHLSA(&amp;lt;hue&amp;gt;;&amp;lt;lightness&amp;gt;;&amp;lt;saturation&amp;gt;;&amp;lt;opacity&amp;gt;). The hue shift is given in degree (0 to 360). The other
parameters are given as multipliers, where 1 means the component remains unchanged.&lt;br&gt;
Beside the delta color approach it is also possible to specify an absolute color in the usual CSS color formats (except named
colors).</documentation>
        </property>
        <property name="selectColor" type="sap.ui.core/string" defaultValue="RHLSA(0.0;1.0;1.0;1.0)" group="Misc">
            <documentation>Color change applied when visual object is selected. This can be explicit or a relative one. See above.</documentation>
        </property>
        <property name="fxsize" type="sap.ui.core/string" defaultValue="true" group="Misc">
            <documentation>The visual object should keep its size when the map is zoomed. Default value is 'true'. Only meaningful for some VOs.</documentation>
        </property>
        <property name="fxdir" type="sap.ui.core/string" defaultValue="true" group="Misc">
            <documentation>The visual object is not rotated when the map is rotated. The property is only required when the PlugIn is used and only meaningful
for some VOs.</documentation>
        </property>
        <property name="entity" type="sap.ui.core/string" group="Misc">
            <documentation>The visual object builds an entity/group with other VO elements when it is hovered. The property is not supported when the PlugIn
is used.</documentation>
        </property>
        <property name="labelText" type="sap.ui.core/string" group="Misc">
            <documentation>The visual objects label text. Providing a label text required, but also sufficient the get a label displayed.</documentation>
        </property>
        <property name="labelType" type="sap.ui.vbm/SemanticType" defaultValue="None" group="Behavior">
            <documentation>Type for semantic labels. A given semantic type will overrule color settings and add an icon.</documentation>
        </property>
        <property name="labelBgColor" type="sap.ui.core/string" defaultValue="RGB(255;255;255)" group="Misc">
            <documentation>The visual objects label background color. The default value is white.</documentation>
        </property>
        <property name="labelBorderColor" type="sap.ui.core/string" group="Misc">
            <documentation>The visual objects label border color. The default is no border.</documentation>
        </property>
        <property name="labelArrow" type="sap.ui.core/boolean" defaultValue="false" group="Misc">
            <documentation>The visual objects label arrow. For left/right/top/bottom aligned labels an additional arrow points to the label's object.</documentation>
        </property>
        <property name="labelPos" type="sap.ui.core/string" group="Misc">
            <documentation>The visual objects label position. This property determines the positioning of the label relative to the VO it belongs to.
Possible values are:
&lt;ul&gt;
&lt;li&gt;0: centered&lt;/li&gt;
&lt;li&gt;1: top&lt;/li&gt;
&lt;li&gt;2: top right&lt;/li&gt;
&lt;li&gt;3: right&lt;/li&gt;
&lt;li&gt;4: bottom right&lt;/li&gt;
&lt;li&gt;5: bottom&lt;/li&gt;
&lt;li&gt;6: bottom left&lt;/li&gt;
&lt;li&gt;7: left&lt;/li&gt;
&lt;li&gt;8: top left&lt;/li&gt;
&lt;/ul&gt;
The default alignment is VO specific. &lt;br&gt;
For multiple position based VOs, like Route, or Area the label is dynamically positioned. If the current display of a VO consists
of multiple disconnected parts, each part gets an own label.</documentation>
        </property>
        <property name="changeable" type="sap.ui.core/boolean" defaultValue="false" group="Misc">
            <documentation>Set to true if VO is changeable. Which properties are actually changeable can be controlled on the related VO aggregation.</documentation>
        </property>
        <property name="dragData" type="sap.ui.core/string" group="Misc">
            <documentation>Data to be dragged. This property allows you to provide an arbitrary data string, which is transfered to the target in a drag'n
drop operation</documentation>
        </property>
        <property name="select" type="sap.ui.core/boolean" defaultValue="false" group="Misc">
            <documentation>Set to true if the element is selected</documentation>
        </property>
    </properties>
    <events>
        <event name="click" allowPreventDefault="false">
            <documentation>The event is raised when there is a click action on a visual object.</documentation>
        </event>
        <event name="contextMenu" allowPreventDefault="false">
            <documentation>The event is raised when there is a right click or a tap and hold action on a visual object.</documentation>
            <parameters>
                <parameter name="menu" type="sap.ui.unified/Menu">
                    <documentation>Menu to open</documentation>
                </parameter>
            </parameters>
        </event>
        <event name="handleMoved" allowPreventDefault="false">
            <documentation>This event is raised when the design handle is moved.</documentation>
            <parameters>
                <parameter name="handle" type="sap.ui.core/int">
                    <documentation>The number of the handle where the click occured. Handles are numbered zero based.</documentation>
                </parameter>
            </parameters>
        </event>
        <event name="handleContextMenu" allowPreventDefault="false">
            <documentation>This event is raised when the design handle is right clicked.</documentation>
            <parameters>
                <parameter name="handle" type="sap.ui.core/int">
                    <documentation>The number of the handle where the click occured. Handles are numbered zero based.</documentation>
                </parameter>
                <parameter name="menu" type="sap.ui.unified/Menu">
                    <documentation>Menu to open</documentation>
                </parameter>
            </parameters>
        </event>
        <event name="handleClick" allowPreventDefault="false">
            <documentation>This event is raised when the design handle is clicked.</documentation>
            <parameters>
                <parameter name="handle" type="sap.ui.core/int">
                    <documentation>The number of the handle where the click occured. Handles are numbered zero based.</documentation>
                </parameter>
            </parameters>
        </event>
        <event name="drop" allowPreventDefault="false">
            <documentation>The event is raised when something is dropped on the object.</documentation>
            <parameters>
                <parameter name="dragSource" type="sap.ui.vbm/VoBase">
                    <documentation>Dragged instance</documentation>
                </parameter>
            </parameters>
        </event>
    </events>
    <methods>
        <method name="openDetailWindow" type="sap.ui.core/void">
            <documentation>Open a Detail Window for the visual object at click position. The method relies on the state saved before firing event &lt;i&gt;click&lt;/i&gt;.</documentation>
            <parameters>
                <parameter name="caption" type="sap.ui.core/string">
                    <documentation>Caption of detail window</documentation>
                </parameter>
                <parameter name="offsetX" type="sap.ui.core/string">
                    <documentation>Position offset in x-direction from the anchor point</documentation>
                </parameter>
                <parameter name="offsetY" type="sap.ui.core/string">
                    <documentation>Position offset in y-direction from the anchor point</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="openContextMenu" type="sap.ui.core/void">
            <documentation>Open the context menu. The method relies on the state saved before firing event &lt;i&gt;contextMenu&lt;/i&gt;. Further the object oMenu is expected to be
the one given as parameter &lt;i&gt;menu&lt;/i&gt; of event &lt;i&gt;contextMenu&lt;/i&gt;.</documentation>
            <parameters>
                <parameter name="menu" type="sap.ui.core/object">
                    <documentation>The context menu to be opened. The object is expected the have an attribute</documentation>
                </parameter>
            </parameters>
        </method>
    </methods>
</control>
